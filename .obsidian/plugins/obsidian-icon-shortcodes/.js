/
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
/

var rp=Object.create;var zt=Object.defineProperty,op=Object.defineProperties,sp=Object.getOwnPropertyDescriptor,cp=Object.getOwnPropertyDescriptors,lp=Object.getOwnPropertyNames,sn=Object.getOwnPropertySymbols,pp=Object.getPrototypeOf,ea=Object.prototype.hasOwnProperty,Yi=Object.prototype.propertyIsEnumerable;var Ki=(e,t,n)=>t in e?zt(e,t,{enumerable:!,configurable:!,writable:!,value:n}):e[t]=n,Me=(e,t)=>{for(var n in t||(t={}))ea.call(t,n)&&Ki(e,n,t[n]);if(sn)for(var n of sn(t))Yi.call(t,n)&&Ki(e,n,t[n]);return e},et=(e,t)=>op(e,cp(t));var cn=(e,t)=>{var n={};for(var a in e)ea.call(e,a)&&t.indexOf(a)<&&(n[a]=e[a]);if(e!=null&&sn)for(var a of sn(e))t.indexOf(a)<&&Yi.call(e,a)&&(n[a]=e[a]);return n};var K=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Xi=(e,t)=>{for(var n in t)zt(e,n,{get:t[n],enumerable:!})},Ji=(e,t,n,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of lp(t))!ea.call(e,i)&&i!==n&&zt(e,i,{get:()=>t[i],enumerable:!(a=sp(t,i))||a.enumerable});return e};var be=(e,t,n)=>(n=e!=null?rp(pp(e)):{},Ji(t||!e||!e.__esModule?zt(n,"default",{value:e,enumerable:!}):n,e)),up=e=>Ji(zt({},"__esModule",{value:!}),e);var $=(e,t,n)=>new Promise((a,i)=>{var r=p=>{try{s(n.next(p))}catch(l){i(l)}},o=p=>{try{s(n.throw(p))}catch(l){i(l)}},s=p=>p.done?a(p.value):Promise.resolve(p.value).then(r,o);s((n=n.apply(e,t)).next())});var or=K((h,gp)=>{gp.exports={"application/d-interleaved-parityfec":{source:"iana"},"application/gpdash-qoe-report+xml":{source:"iana",charset:"UTF-",compressible:!},"application/gpp-ims+xml":{source:"iana",compressible:!},"application/gpphal+json":{source:"iana",compressible:!},"application/gpphalforms+json":{source:"iana",compressible:!},"application/al":{source:"iana"},"application/ace+cbor":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:!},"application/alto-costmap+json":{source:"iana",compressible:!},"application/alto-costmapfilter+json":{source:"iana",compressible:!},"application/alto-directory+json":{source:"iana",compressible:!},"application/alto-endpointcost+json":{source:"iana",compressible:!},"application/alto-endpointcostparams+json":{source:"iana",compressible:!},"application/alto-endpointprop+json":{source:"iana",compressible:!},"application/alto-endpointpropparams+json":{source:"iana",compressible:!},"application/alto-error+json":{source:"iana",compressible:!},"application/alto-networkmap+json":{source:"iana",compressible:!},"application/alto-networkmapfilter+json":{source:"iana",compressible:!},"application/alto-updatestreamcontrol+json":{source:"iana",compressible:!},"application/alto-updatestreamparams+json":{source:"iana",compressible:!},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/at+jwt":{source:"iana"},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:!,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:!,extensions:["atomdeleted"]},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:!,extensions:["atomsvc"]},"application/atsc-dwd+xml":{source:"iana",compressible:!,extensions:["dwd"]},"application/atsc-dynamic-event-message":{source:"iana"},"application/atsc-held+xml":{source:"iana",compressible:!,extensions:["held"]},"application/atsc-rdt+json":{source:"iana",compressible:!},"application/atsc-rsat+xml":{source:"iana",compressible:!,extensions:["rsat"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:!},"application/bacnet-xdd+zip":{source:"iana",compressible:!},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!,extensions:["bdoc"]},"application/beep+xml":{source:"iana",charset:"UTF-",compressible:!},"application/calendar+json":{source:"iana",compressible:!},"application/calendar+xml":{source:"iana",compressible:!,extensions:["xcs"]},"application/call-completion":{source:"iana"},"application/cals-":{source:"iana"},"application/captive+json":{source:"iana",compressible:!},"application/cbor":{source:"iana"},"application/cbor-seq":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:!},"application/ccxml+xml":{source:"iana",compressible:!,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:!,extensions:["cdfx"]},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-+xml":{source:"iana",compressible:!},"application/cellml+xml":{source:"iana",compressible:!},"application/cfw":{source:"iana"},"application/city+json":{source:"iana",compressible:!},"application/clr":{source:"iana"},"application/clue+xml":{source:"iana",compressible:!},"application/clue_info+xml":{source:"iana",compressible:!},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:!},"application/coap-group+json":{source:"iana",compressible:!},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:!},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:!,extensions:["cpl"]},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:!},"application/cstadata+xml":{source:"iana",compressible:!},"application/csvm+json":{source:"iana",compressible:!},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:!},"application/dash+xml":{source:"iana",compressible:!,extensions:["mpd"]},"application/dash-patch+xml":{source:"iana",compressible:!,extensions:["mpp"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:!,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:!},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!},"application/dicom+xml":{source:"iana",compressible:!},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:!},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:!,extensions:["dbk"]},"application/dots+cbor":{source:"iana"},"application/dskpp+xml":{source:"iana",compressible:!},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:!,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!,extensions:["es","ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x":{source:"iana",compressible:!},"application/edifact":{source:"iana",compressible:!},"application/efi":{source:"iana"},"application/elm+json":{source:"iana",charset:"UTF-",compressible:!},"application/elm+xml":{source:"iana",compressible:!},"application/emergencycalldata.cap+xml":{source:"iana",charset:"UTF-",compressible:!},"application/emergencycalldata.comment+xml":{source:"iana",compressible:!},"application/emergencycalldata.control+xml":{source:"iana",compressible:!},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:!},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:!},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:!},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:!},"application/emergencycalldata.veds+xml":{source:"iana",compressible:!},"application/emma+xml":{source:"iana",compressible:!,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:!,extensions:["emotionml"]},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:!},"application/epub+zip":{source:"iana",compressible:!,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/expect-ct-report+json":{source:"iana",compressible:!},"application/express":{source:"iana",extensions:["exp"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:!,extensions:["fdt"]},"application/fhir+json":{source:"iana",charset:"UTF-",compressible:!},"application/fhir+xml":{source:"iana",charset:"UTF-",compressible:!},"application/fido.trusted-apps+json":{compressible:!},"application/fits":{source:"iana"},"application/flexfec":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!},"application/framework-attributes+xml":{source:"iana",compressible:!},"application/geo+json":{source:"iana",compressible:!,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:!},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:!,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:!,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!,extensions:["gz"]},"application/h":{source:"iana"},"application/held+xml":{source:"iana",compressible:!},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:!},"application/ibe-pkg-reply+xml":{source:"iana",compressible:!},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",charset:"UTF-",compressible:!},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:!,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:!,extensions:["its"]},"application/java-archive":{source:"apache",compressible:!,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-",compressible:!,extensions:["js","mjs"]},"application/jffeed+json":{source:"iana",compressible:!},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!},"application/jrd+json":{source:"iana",compressible:!},"application/jscalendar+json":{source:"iana",compressible:!},"application/json":{source:"iana",charset:"UTF-",compressible:!,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!},"application/json-seq":{source:"iana"},"application/json":{extensions:["json"]},"application/jsonml+json":{source:"apache",compressible:!,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!},"application/jwk-set+json":{source:"iana",compressible:!},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:!},"application/kpml-response+xml":{source:"iana",compressible:!},"application/ld+json":{source:"iana",compressible:!,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:!,extensions:["lgr"]},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:!},"application/lost+xml":{source:"iana",compressible:!,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:!},"application/lpf+zip":{source:"iana",compressible:!},"application/lxf":{source:"iana"},"application/mac-binhex":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:!,extensions:["mads"]},"application/manifest+json":{source:"iana",charset:"UTF-",compressible:!,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:!,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:!,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:!},"application/mathml-presentation+xml":{source:"iana",compressible:!},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:!},"application/mbms-deregister+xml":{source:"iana",compressible:!},"application/mbms-envelope+xml":{source:"iana",compressible:!},"application/mbms-msk+xml":{source:"iana",compressible:!},"application/mbms-msk-response+xml":{source:"iana",compressible:!},"application/mbms-protection-description+xml":{source:"iana",compressible:!},"application/mbms-reception-report+xml":{source:"iana",compressible:!},"application/mbms-register+xml":{source:"iana",compressible:!},"application/mbms-register-response+xml":{source:"iana",compressible:!},"application/mbms-schedule+xml":{source:"iana",compressible:!},"application/mbms-user-service-description+xml":{source:"iana",compressible:!},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:!,extensions:["mpf"]},"application/media_control+xml":{source:"iana",compressible:!},"application/mediaservercontrol+xml":{source:"iana",compressible:!,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!},"application/metalink+xml":{source:"apache",compressible:!,extensions:["metalink"]},"application/metalink+xml":{source:"iana",compressible:!,extensions:["meta"]},"application/mets+xml":{source:"iana",compressible:!,extensions:["mets"]},"application/mf":{source:"iana"},"application/mikey":{source:"iana"},"application/mipc":{source:"iana"},"application/missing-blocks+cbor-seq":{source:"iana"},"application/mmt-aei+xml":{source:"iana",compressible:!,extensions:["maei"]},"application/mmt-usd+xml":{source:"iana",compressible:!,extensions:["musd"]},"application/mods+xml":{source:"iana",compressible:!,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp":{source:"iana",extensions:["m","mp"]},"application/mp":{source:"iana",extensions:["mps","mp"]},"application/mpeg-generic":{source:"iana"},"application/mpeg-iod":{source:"iana"},"application/mpeg-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:!},"application/mrb-publish+xml":{source:"iana",compressible:!},"application/msc-ivr+xml":{source:"iana",charset:"UTF-",compressible:!},"application/msc-mixer+xml":{source:"iana",charset:"UTF-",compressible:!},"application/msword":{source:"iana",compressible:!,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!},"application/multipart-core":{source:"iana"},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana",extensions:["nq"]},"application/n-triples":{source:"iana",extensions:["nt"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana",charset:"US-ASCII"},"application/news-groupinfo":{source:"iana",charset:"US-ASCII"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:!},"application/node":{source:"iana",extensions:["cjs"]},"application/nss":{source:"iana"},"application/oauth-authz-req+jwt":{source:"iana"},"application/oblivious-dns-message":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odm+xml":{source:"iana",compressible:!},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:!,extensions:["opf"]},"application/ogg":{source:"iana",compressible:!,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:!,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc","onetmp","onepkg"]},"application/opc-nodeset+xml":{source:"iana",compressible:!},"application/oscore":{source:"iana"},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p":{source:"iana"},"application/p+zip":{source:"iana",compressible:!},"application/pp-overlay+xml":{source:"iana",compressible:!,extensions:["relo"]},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:!,extensions:["xer"]},"application/pdf":{source:"iana",compressible:!,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pem-certificate-chain":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!,extensions:["pgp"]},"application/pgp-keys":{source:"iana",extensions:["asc"]},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",charset:"UTF-",compressible:!},"application/pidf-diff+xml":{source:"iana",charset:"UTF-",compressible:!},"application/pkcs":{source:"iana",extensions:["p"]},"application/pkcs":{source:"iana"},"application/pkcs-mime":{source:"iana",extensions:["pm","pc"]},"application/pkcs-signature":{source:"iana",extensions:["ps"]},"application/pkcs":{source:"iana",extensions:["p"]},"application/pkcs-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:!,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",charset:"UTF-",compressible:!},"application/postscript":{source:"iana",compressible:!,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!},"application/problem+json":{source:"iana",compressible:!},"application/problem+xml":{source:"iana",compressible:!},"application/provenance+xml":{source:"iana",compressible:!,extensions:["provx"]},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.cyn":{source:"iana",charset:"-BIT"},"application/prs.hpub+zip":{source:"iana",compressible:!},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:!},"application/pskc+xml":{source:"iana",compressible:!,extensions:["pskcxml"]},"application/pvd+json":{source:"iana",compressible:!},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!},"application/rdf+xml":{source:"iana",compressible:!,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:!,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!},"application/resource-lists+xml":{source:"iana",compressible:!,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:!,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:!},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:!},"application/rls-services+xml":{source:"iana",compressible:!,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:!,extensions:["rapd"]},"application/route-s-tsid+xml":{source:"iana",compressible:!,extensions:["sls"]},"application/route-usd+xml":{source:"iana",compressible:!,extensions:["rusd"]},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:!,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:!},"application/samlmetadata+xml":{source:"iana",compressible:!},"application/sarif+json":{source:"iana",compressible:!},"application/sarif-external-properties+json":{source:"iana",compressible:!},"application/sbe":{source:"iana"},"application/sbml+xml":{source:"iana",compressible:!,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:!},"application/scim+json":{source:"iana",compressible:!},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:!},"application/senml+xml":{source:"iana",compressible:!,extensions:["senmlx"]},"application/senml-etch+cbor":{source:"iana"},"application/senml-etch+json":{source:"iana",compressible:!},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:!},"application/sensml+xml":{source:"iana",compressible:!,extensions:["sensmlx"]},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:!},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:!,extensions:["shf"]},"application/sieve":{source:"iana",extensions:["siv","sieve"]},"application/simple-filter+xml":{source:"iana",compressible:!},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/sipc":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:!,extensions:["smi","smil"]},"application/smptem":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:!,extensions:["srx"]},"application/spdx+json":{source:"iana",compressible:!},"application/spirits-event+xml":{source:"iana",compressible:!},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:!,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:!,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:!,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:!,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:!},"application/swid+xml":{source:"iana",compressible:!,extensions:["swidtag"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!},"application/taxii+json":{source:"iana",compressible:!},"application/td+json":{source:"iana",compressible:!},"application/tei+xml":{source:"iana",compressible:!,extensions:["tei","teicorpus"]},"application/tetra_isi":{source:"iana"},"application/thraud+xml":{source:"iana",compressible:!,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:!},"application/tnauthlist":{source:"iana"},"application/token-introspection+jwt":{source:"iana"},"application/toml":{compressible:!,extensions:["toml"]},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana",extensions:["trig"]},"application/ttml+xml":{source:"iana",compressible:!,extensions:["ttml"]},"application/tve-trigger":{source:"iana"},"application/tzif":{source:"iana"},"application/tzif-leap":{source:"iana"},"application/ubjson":{compressible:!,extensions:["ubj"]},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:!},"application/urc-ressheet+xml":{source:"iana",compressible:!,extensions:["rsheet"]},"application/urc-targetdesc+xml":{source:"iana",compressible:!,extensions:["td"]},"application/urc-uisocketdesc+xml":{source:"iana",compressible:!},"application/vcard+json":{source:"iana",compressible:!},"application/vcard+xml":{source:"iana",compressible:!},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.minds.decision-model+xml":{source:"iana",compressible:!,extensions:["km"]},"application/vnd.gpp-prose+xml":{source:"iana",compressible:!},"application/vnd.gpp-prose-pcch+xml":{source:"iana",compressible:!},"application/vnd.gpp-vx-local-service-information":{source:"iana"},"application/vnd.gpp.gnas":{source:"iana"},"application/vnd.gpp.access-transfer-events+xml":{source:"iana",compressible:!},"application/vnd.gpp.bsf+xml":{source:"iana",compressible:!},"application/vnd.gpp.gmop+xml":{source:"iana",compressible:!},"application/vnd.gpp.gtpc":{source:"iana"},"application/vnd.gpp.interworking-data":{source:"iana"},"application/vnd.gpp.lpp":{source:"iana"},"application/vnd.gpp.mc-signalling-ear":{source:"iana"},"application/vnd.gpp.mcdata-affiliation-command+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcdata-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcdata-payload":{source:"iana"},"application/vnd.gpp.mcdata-service-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcdata-signalling":{source:"iana"},"application/vnd.gpp.mcdata-ue-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcdata-user-profile+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-floor-request+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-location-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-service-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-signed+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-ue-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-ue-init-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcptt-user-profile+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-affiliation-command+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-affiliation-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-location-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-mbms-usage-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-service-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-transmission-request+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-ue-config+xml":{source:"iana",compressible:!},"application/vnd.gpp.mcvideo-user-profile+xml":{source:"iana",compressible:!},"application/vnd.gpp.mid-call+xml":{source:"iana",compressible:!},"application/vnd.gpp.ngap":{source:"iana"},"application/vnd.gpp.pfcp":{source:"iana"},"application/vnd.gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.gpp.sap":{source:"iana"},"application/vnd.gpp.sms":{source:"iana"},"application/vnd.gpp.sms+xml":{source:"iana",compressible:!},"application/vnd.gpp.srvcc-ext+xml":{source:"iana",compressible:!},"application/vnd.gpp.srvcc-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.state-and-event-info+xml":{source:"iana",compressible:!},"application/vnd.gpp.ussd+xml":{source:"iana",compressible:!},"application/vnd.gpp.bcmcsinfo+xml":{source:"iana",compressible:!},"application/vnd.gpp.sms":{source:"iana"},"application/vnd.gpp.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.lightssoftware.imagescal":{source:"iana"},"application/vnd.m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:!,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:!,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.afplinedata-pagedef":{source:"iana"},"application/vnd.afpc.cmoca-cmresource":{source:"iana"},"application/vnd.afpc.foca-charset":{source:"iana"},"application/vnd.afpc.foca-codedfont":{source:"iana"},"application/vnd.afpc.foca-codepage":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.afpc.modca-cmtable":{source:"iana"},"application/vnd.afpc.modca-formdef":{source:"iana"},"application/vnd.afpc.modca-mediummap":{source:"iana"},"application/vnd.afpc.modca-objectcontainer":{source:"iana"},"application/vnd.afpc.modca-overlay":{source:"iana"},"application/vnd.afpc.modca-pagesegment":{source:"iana"},"application/vnd.age":{source:"iana",extensions:["age"]},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:!},"application/vnd.android.ota":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:!,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.arrow.file":{source:"iana"},"application/vnd.apache.arrow.stream":{source:"iana"},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!},"application/vnd.aplextor.warrp+json":{source:"iana",compressible:!},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!},"application/vnd.apple.installer+xml":{source:"iana",compressible:!,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["key"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["mu"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:!,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:!},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!},"application/vnd.avistar+xml":{source:"iana",compressible:!},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:!,extensions:["bmml"]},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.error":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:!},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.bpf":{source:"iana"},"application/vnd.bpf":{source:"iana"},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:!},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:!,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.ciedi":{source:"iana"},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:!,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp":{source:"iana",extensions:["rp"]},"application/vnd.clonk.cgroup":{source:"iana",extensions:["cg","cd","cf","cp","cu"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["camc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["camz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!},"application/vnd.collection.doc+json":{source:"iana",compressible:!},"application/vnd.collection.next+json":{source:"iana",compressible:!},"application/vnd.comicbook+zip":{source:"iana",compressible:!},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:!,extensions:["wbs"]},"application/vnd.cryptii.pipe+json":{source:"iana",compressible:!},"application/vnd.crypto-shade-file":{source:"iana"},"application/vnd.cryptomator.encrypted":{source:"iana"},"application/vnd.cryptomator.vault":{source:"iana"},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:!},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:!},"application/vnd.cybank":{source:"iana"},"application/vnd.cyclonedx+json":{source:"iana",compressible:!},"application/vnd.cyclonedx+xml":{source:"iana",compressible:!},"application/vnd.dl.coursepackagep+zip":{source:"iana",compressible:!},"application/vnd.dm-dataset":{source:"iana"},"application/vnd.dm-problem":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:!,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!},"application/vnd.dataresource+json":{source:"iana",compressible:!},"application/vnd.dbf":{source:"iana",extensions:["dbf"]},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:!,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:!},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.":{source:"iana"},"application/vnd.dolby.mobile.":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbisl+xml":{source:"iana",compressible:!},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:!},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:!},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.eclipse.ditto+json":{source:"iana",compressible:!},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:!},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:!},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:!},"application/vnd.eszigno+xml":{source:"iana",compressible:!,extensions:["es","et"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:!},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:!},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:!},"application/vnd.etsi.cug+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:!},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:!},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:!},"application/vnd.etsi.mheg":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:!},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:!},"application/vnd.etsi.sci+xml":{source:"iana",compressible:!},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:!},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:!},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eu.kasparian.car+json":{source:"iana",compressible:!},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:!},"application/vnd.exstream-package":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.familysearch.gedcom+zip":{source:"iana",compressible:!},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.ficlab.flb+zip":{source:"iana",compressible:!},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujifilm.fb.docuworks":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.container":{source:"iana"},"application/vnd.fujifilm.fb.jfi+xml":{source:"iana",compressible:!},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oa"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oa"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:!},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.gentics.grd+json":{source:"iana",compressible:!},"application/vnd.geo+json":{source:"iana",compressible:!},"application/vnd.geocube+xml":{source:"iana",compressible:!},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.slides":{source:"iana"},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["gw"]},"application/vnd.geospace":{source:"iana",extensions:["gw"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:!},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:!},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:!},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!},"application/vnd.hal+xml":{source:"iana",compressible:!,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:!,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hlcda+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.hlv+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:!},"application/vnd.hyper-item+json":{source:"iana",compressible:!},"application/vnd.hyperdrive+json":{source:"iana",compressible:!},"application/vnd.hzn-d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:!},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:!},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccvp":{source:"iana"},"application/vnd.ims.imsccvp":{source:"iana"},"application/vnd.ims.imsccvp":{source:"iana"},"application/vnd.ims.lis.v.result+json":{source:"iana",compressible:!},"application/vnd.ims.lti.v.toolconsumerprofile+json":{source:"iana",compressible:!},"application/vnd.ims.lti.v.toolproxy+json":{source:"iana",compressible:!},"application/vnd.ims.lti.v.toolproxy.id+json":{source:"iana",compressible:!},"application/vnd.ims.lti.v.toolsettings+json":{source:"iana",compressible:!},"application/vnd.ims.lti.v.toolsettings.simple+json":{source:"iana",compressible:!},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:!},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:!},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["ig"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g.catalogitem+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.conceptitem+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.knowledgeitem+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.newsitem+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.newsmessage+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.packageitem+xml":{source:"iana",compressible:!},"application/vnd.iptc.g.planningitem+xml":{source:"iana",compressible:!},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:!,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.iso-+zip":{source:"iana",compressible:!},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las":{source:"iana"},"application/vnd.las.las+json":{source:"iana",compressible:!},"application/vnd.las.las+xml":{source:"iana",compressible:!,extensions:["lasxml"]},"application/vnd.laszip":{source:"iana"},"application/vnd.leap+json":{source:"iana",compressible:!},"application/vnd.liberty-request+xml":{source:"iana",compressible:!},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:!,extensions:["lbe"]},"application/vnd.logipipe.circuit+zip":{source:"iana",compressible:!},"application/vnd.loom":{source:"iana"},"application/vnd.lotus---":{source:"iana",extensions:[""]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana",extensions:["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:!},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:!},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:!},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!},"application/vnd.maxar.archive.tz+zip":{source:"iana",compressible:!},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!,extensions:["xul"]},"application/vnd.ms-mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:!},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!},"application/vnd.ms-outlook":{compressible:!,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:!},"application/vnd.ms-powerpoint":{source:"iana",compressible:!,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:!},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:!},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:!},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.nacamar.ybrid+json":{source:"iana",compressible:!},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!},"application/vnd.nebumind.line":{source:"iana"},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:!},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:!},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:!},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:!},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:!,extensions:["ac"]},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:!},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oci.image.manifest.v+json":{source:"iana",compressible:!},"application/vnd.oftn.ln+json":{source:"iana",compressible:!},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:!},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:!},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:!},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:!},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:!},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:!},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:!},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:!},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:!},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:!},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:!},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:!},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:!},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:!},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:!},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd+xml":{source:"iana",compressible:!,extensions:["dd"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:!},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:!},"application/vnd.oma.lwmm+cbor":{source:"iana"},"application/vnd.oma.lwmm+json":{source:"iana",compressible:!},"application/vnd.oma.lwmm+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:!},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:!},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:!},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:!},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:!},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:!},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:!},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:!},"application/vnd.omads-email+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.omads-file+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.omads-folder+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:!,extensions:["obgx"]},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:!,extensions:["osm"]},"application/vnd.opentimestamps.ots":{source:"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:!},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:!},"application/vnd.oracle.resource+json":{source:"iana",compressible:!},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:!},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.patientecommsdoc":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:!},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder-s":{source:"iana"},"application/vnd.powerbuilder":{source:"iana"},"application/vnd.powerbuilder-s":{source:"iana"},"application/vnd.powerbuilder":{source:"iana"},"application/vnd.powerbuilder-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:!},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:!},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:!},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana",extensions:["rar"]},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:!,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.resilient.logic":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route.link+xml":{source:"iana",compressible:!,extensions:["link"]},"application/vnd.rs-x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.ssms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sar":{source:"iana"},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.seis+json":{source:"iana",compressible:!},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shade-save-file":{source:"iana"},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:!},"application/vnd.shopkick+json":{source:"iana",compressible:!},"application/vnd.shp":{source:"iana"},"application/vnd.shx":{source:"iana"},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.snesdev-page-table":{source:"iana"},"application/vnd.software.filler.form+xml":{source:"iana",compressible:!,extensions:["fo"]},"application/vnd.software.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:!,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.sycle+xml":{source:"iana",compressible:!},"application/vnd.syft+json":{source:"iana",compressible:!},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",charset:"UTF-",compressible:!,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",charset:"UTF-",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",charset:"UTF-",compressible:!,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",charset:"UTF-",compressible:!,extensions:["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",charset:"UTF-",compressible:!},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:!},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:!},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:!,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.veritone.aion+json":{source:"iana",compressible:!},"application/vnd.veryant.thin":{source:"iana"},"application/vnd.ves.encrypted":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",charset:"UTF-",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.dpp":{source:"iana"},"application/vnd.wfa.pp":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:!},"application/vnd.wv.ssp+xml":{source:"iana",compressible:!},"application/vnd.xacml+json":{source:"iana",compressible:!},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:!},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:!,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:!,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:!,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{source:"iana",compressible:!,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:!,extensions:["wif"]},"application/webpush-options+json":{source:"iana",compressible:!},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect.":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:!,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:!,extensions:["wspolicy"]},"application/x-z-compressed":{source:"apache",compressible:!,extensions:["z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x","u","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!,extensions:["bz"]},"application/x-bzip":{source:"apache",compressible:!,extensions:["bz","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","wd","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:!,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:!,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:!,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso-image":{source:"apache",extensions:["iso"]},"application/x-iwork-keynote-sffkey":{extensions:["key"]},"application/x-iwork-numbers-sffnumbers":{extensions:["numbers"]},"application/x-iwork-pages-sffpages":{extensions:["pages"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!,extensions:["jnlp"]},"application/x-javascript":{compressible:!},"application/x-keepass":{extensions:["kdbx"]},"application/x-latex":{source:"apache",compressible:!,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m","m"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs":{source:"apache",compressible:!,extensions:["p","pfx"]},"application/x-pkcs-certificates":{source:"apache",extensions:["pb","spc"]},"application/x-pkcs-certreqresp":{source:"apache",extensions:["pr"]},"application/x-pki-message":{source:"iana"},"application/x-rar-compressed":{source:"apache",compressible:!,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-svcpio":{source:"apache",extensions:["svcpio"]},"application/x-svcrc":{source:"apache",extensions:["svcrc"]},"application/x-tvm-image":{source:"apache",extensions:["t"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!},"application/x-x-ca-cert":{source:"iana",extensions:["der","crt","pem"]},"application/x-x-ca-ra-cert":{source:"iana"},"application/x-x-next-ca-cert":{source:"iana"},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:!,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z","z","z","z","z","z","z","z"]},"application/x-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:!},"application/xaml+xml":{source:"apache",compressible:!,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:!,extensions:["xav"]},"application/xcap-caps+xml":{source:"iana",compressible:!,extensions:["xca"]},"application/xcap-diff+xml":{source:"iana",compressible:!,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:!,extensions:["xel"]},"application/xcap-error+xml":{source:"iana",compressible:!},"application/xcap-ns+xml":{source:"iana",compressible:!,extensions:["xns"]},"application/xcon-conference-info+xml":{source:"iana",compressible:!},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:!},"application/xenc+xml":{source:"iana",compressible:!,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:!},"application/xliff+xml":{source:"iana",compressible:!,extensions:["xlf"]},"application/xml":{source:"iana",compressible:!,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:!},"application/xmpp+xml":{source:"iana",compressible:!},"application/xop+xml":{source:"iana",compressible:!,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:!,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:!,extensions:["xsl","xslt"]},"application/xspf+xml":{source:"apache",compressible:!,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:!,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!},"application/yang-data+xml":{source:"iana",compressible:!},"application/yang-patch+json":{source:"iana",compressible:!},"application/yang-patch+xml":{source:"iana",compressible:!},"application/yin+xml":{source:"iana",compressible:!,extensions:["yin"]},"application/zip":{source:"iana",compressible:!,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/d-interleaved-parityfec":{source:"iana"},"audio/kadpcm":{source:"iana"},"audio/gpp":{source:"iana",compressible:!,extensions:["gpp"]},"audio/gpp":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana",extensions:["amr"]},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac":{source:"iana"},"audio/basic":{source:"iana",compressible:!,extensions:["au","snd"]},"audio/bv":{source:"iana"},"audio/bv":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es":{source:"iana"},"audio/dsr-es":{source:"iana"},"audio/dsr-es":{source:"iana"},"audio/dsr-es":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi":{source:"iana"},"audio/eac":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evs":{source:"iana"},"audio/flexfec":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g-":{source:"iana"},"audio/g":{source:"iana"},"audio/g":{source:"iana"},"audio/g":{source:"iana"},"audio/g":{source:"iana"},"audio/g-":{source:"iana"},"audio/g-":{source:"iana"},"audio/g-":{source:"iana"},"audio/g-":{source:"iana"},"audio/g":{source:"iana"},"audio/g":{source:"iana"},"audio/g":{source:"iana"},"audio/gd":{source:"iana"},"audio/ge":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v.":{source:"iana"},"audio/isac":{source:"apache"},"audio/l":{source:"iana"},"audio/l":{source:"iana"},"audio/l":{source:"iana",compressible:!},"audio/l":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp":{source:"iana"},"audio/mhas":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana",extensions:["mxmf"]},"audio/mp":{compressible:!,extensions:["mp"]},"audio/mp":{source:"iana",compressible:!,extensions:["ma","mpa"]},"audio/mpa-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!,extensions:["mpga","mp","mpa","mp","ma","ma"]},"audio/mpeg-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!,extensions:["oga","ogg","spx","opus"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/sm":{source:"apache",extensions:["sm"]},"audio/scip":{source:"iana"},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv":{source:"iana"},"audio/sofa":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/tc":{source:"iana"},"audio/t":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tetra_acelp":{source:"iana"},"audio/tetra_acelp_bb":{source:"iana"},"audio/tone":{source:"iana"},"audio/tsvcis":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.gpp.iufp":{source:"iana"},"audio/vnd.sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp":{source:"iana"},"audio/vnd.cns.inf":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.":{source:"iana"},"audio/vnd.dolby.heaac.":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl":{source:"iana"},"audio/vnd.dolby.plx":{source:"iana"},"audio/vnd.dolby.plz":{source:"iana"},"audio/vnd.dolby.pulse.":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dts.uhd":{source:"iana"},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp":{source:"iana",extensions:["ecelp"]},"audio/vnd.nuera.ecelp":{source:"iana",extensions:["ecelp"]},"audio/vnd.nuera.ecelp":{source:"iana",extensions:["ecelp"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!},"audio/vorbis":{source:"iana",compressible:!},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!,extensions:["wav"]},"audio/wave":{compressible:!,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-ma":{source:"nginx",extensions:["ma"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["mu"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",compressible:!,extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff":{source:"iana",extensions:["woff"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:!,extensions:["apng"]},"image/avci":{source:"iana",extensions:["avci"]},"image/avcs":{source:"iana",extensions:["avcs"]},"image/avif":{source:"iana",compressible:!,extensions:["avif"]},"image/bmp":{source:"iana",compressible:!,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/gfax":{source:"iana",extensions:["g"]},"image/gif":{source:"iana",compressible:!,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/hejk":{source:"iana",extensions:["hej"]},"image/hsj":{source:"iana",extensions:["hsj"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp":{source:"iana",compressible:!,extensions:["jp","jpg"]},"image/jpeg":{source:"iana",compressible:!,extensions:["jpeg","jpg","jpe"]},"image/jph":{source:"iana",extensions:["jph"]},"image/jphc":{source:"iana",extensions:["jhc"]},"image/jpm":{source:"iana",compressible:!,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!,extensions:["jpx","jpf"]},"image/jxr":{source:"iana",extensions:["jxr"]},"image/jxra":{source:"iana",extensions:["jxra"]},"image/jxrs":{source:"iana",extensions:["jxrs"]},"image/jxs":{source:"iana",extensions:["jxs"]},"image/jxsc":{source:"iana",extensions:["jxsc"]},"image/jxsi":{source:"iana",extensions:["jxsi"]},"image/jxss":{source:"iana",extensions:["jxss"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!},"image/png":{source:"iana",compressible:!,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!,extensions:["svg","svgz"]},"image/t":{source:"iana",extensions:["t"]},"image/tiff":{source:"iana",compressible:!,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:!,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",compressible:!,extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-dds":{compressible:!,extensions:["dds"]},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.pco.b":{source:"iana",extensions:["b"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-ds":{source:"apache",extensions:["ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh","fh","fh"]},"image/x-icon":{source:"apache",compressible:!,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["umsg"]},"message/global-delivery-status":{source:"iana",extensions:["udsn"]},"message/global-disposition-notification":{source:"iana",extensions:["umdn"]},"message/global-headers":{source:"iana",extensions:["uhdr"]},"message/http":{source:"iana",compressible:!},"message/imdn+xml":{source:"iana",compressible:!},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!},"message/rfc":{source:"iana",compressible:!,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/mf":{source:"iana",extensions:["mf"]},"model/e":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!,extensions:["glb"]},"model/iges":{source:"iana",compressible:!,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!,extensions:["msh","mesh","silo"]},"model/mtl":{source:"iana",extensions:["mtl"]},"model/obj":{source:"iana",extensions:["obj"]},"model/step":{source:"iana"},"model/step+xml":{source:"iana",compressible:!,extensions:["stpx"]},"model/step+zip":{source:"iana",compressible:!,extensions:["stpz"]},"model/step-xml+zip":{source:"iana",compressible:!,extensions:["stpxz"]},"model/stl":{source:"iana",extensions:["stl"]},"model/vnd.collada+xml":{source:"iana",compressible:!,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:!},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana",extensions:["ogex"]},"model/vnd.parasolid.transmit.binary":{source:"iana",extensions:["x_b"]},"model/vnd.parasolid.transmit.text":{source:"iana",extensions:["x_t"]},"model/vnd.pytha.pyox":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.sap.vds":{source:"iana",extensions:["vds"]},"model/vnd.usdz+zip":{source:"iana",compressible:!,extensions:["usdz"]},"model/vnd.valve.source.compiled-map":{source:"iana",extensions:["bsp"]},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!,extensions:["wrl","vrml"]},"model/xd+binary":{source:"apache",compressible:!,extensions:["xdb","xdbz"]},"model/xd+fastinfoset":{source:"iana",extensions:["xdb"]},"model/xd+vrml":{source:"apache",compressible:!,extensions:["xdv","xdvz"]},"model/xd+xml":{source:"iana",compressible:!,extensions:["xd","xdz"]},"model/xd-vrml":{source:"iana",extensions:["xdv"]},"multipart/alternative":{source:"iana",compressible:!},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!},"multipart/form-data":{source:"iana",compressible:!},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana"},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!},"text/cmd":{compressible:!},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/cql":{source:"iana"},"text/cql-expression":{source:"iana"},"text/cql-identifier":{source:"iana"},"text/css":{source:"iana",charset:"UTF-",compressible:!,extensions:["css"]},"text/csv":{source:"iana",compressible:!,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fhirpath":{source:"iana"},"text/flexfec":{source:"iana"},"text/fwdred":{source:"iana"},"text/gff":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!,extensions:["jsx"]},"text/less":{compressible:!,extensions:["less"]},"text/markdown":{source:"iana",compressible:!,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mdx":{compressible:!,extensions:["mdx"]},"text/mizar":{source:"iana"},"text/n":{source:"iana",charset:"UTF-",compressible:!,extensions:["n"]},"text/parameters":{source:"iana",charset:"UTF-"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana",charset:"UTF-"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!,extensions:["rtf"]},"text/rtp-enc-aescm":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shaclc":{source:"iana"},"text/shex":{source:"iana",extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/spdx":{source:"iana",extensions:["spdx"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana",charset:"UTF-"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana",charset:"UTF-"},"text/vnd.familysearch.gedcom":{source:"iana",extensions:["ged"]},"text/vnd.ficlab.flt":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hans":{source:"iana"},"text/vnd.hgl":{source:"iana"},"text/vnd.ind.dml":{source:"iana",extensions:["dml"]},"text/vnd.ind.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.netphone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.senx.warpscript":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sosi":{source:"iana"},"text/vnd.sun.jme.app-descriptor":{source:"iana",charset:"UTF-",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana",charset:"UTF-"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{source:"iana",charset:"UTF-",compressible:!,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f","f"]},"text/x-gwt-rpc":{compressible:!},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{compressible:!,extensions:["yaml","yml"]},"video/d-interleaved-parityfec":{source:"iana"},"video/gpp":{source:"iana",extensions:["gp","gpp"]},"video/gpp-tt":{source:"iana"},"video/gpp":{source:"iana",extensions:["g"]},"video/av":{source:"iana"},"video/bmpeg":{source:"iana"},"video/bt":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/ffv":{source:"iana"},"video/flexfec":{source:"iana"},"video/h":{source:"iana",extensions:["h"]},"video/h":{source:"iana",extensions:["h"]},"video/h-":{source:"iana"},"video/h-":{source:"iana"},"video/h":{source:"iana",extensions:["h"]},"video/h-rcdo":{source:"iana"},"video/h-svc":{source:"iana"},"video/h":{source:"iana"},"video/iso.segment":{source:"iana",extensions:["ms"]},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/jxsv":{source:"iana"},"video/mj":{source:"iana",extensions:["mj","mjp"]},"video/mps":{source:"iana"},"video/mpp":{source:"iana"},"video/mpt":{source:"iana",extensions:["ts"]},"video/mp":{source:"iana",compressible:!,extensions:["mp","mpv","mpg"]},"video/mpv-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!,extensions:["mpeg","mpg","mpe","mv","mv"]},"video/mpeg-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/scip":{source:"iana"},"video/smpte":{source:"iana"},"video/smptem":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc":{source:"iana"},"video/vc":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.dparityfec-":{source:"iana"},"video/vnd.iptvforum.dparityfec-":{source:"iana"},"video/vnd.iptvforum.dparityfec-":{source:"iana"},"video/vnd.iptvforum.dparityfec-":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","mu"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mpvr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg":{source:"iana"},"video/vnd.sealed.mpeg":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vnd.youtube.yt":{source:"iana"},"video/vp":{source:"iana"},"video/vp":{source:"iana"},"video/webm":{source:"apache",compressible:!,extensions:["webm"]},"video/x-fv":{source:"apache",extensions:["fv"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!,extensions:["flv"]},"video/x-mv":{source:"apache",extensions:["mv"]},"video/x-matroska":{source:"apache",compressible:!,extensions:["mkv","mkd","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!},"x-shader/x-vertex":{compressible:!}}});var cr=K((g,sr)=>{sr.exports=or()});var Bt=K((x,pr)=>{"use strict";function Pe(e){if(typeof e!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function lr(e,t){for(var n="",a=,i=-,r=,o,s=;s<=e.length;++s){if(s<e.length)o=e.charCodeAt(s);else{if(o===)break;o=}if(o===){if(!(i===s-||r===))if(i!==s-&&r===){if(n.length<||a!==||n.charCodeAt(n.length-)!==||n.charCodeAt(n.length-)!==){if(n.length>){var p=n.lastIndexOf("/");if(p!==n.length-){p===-?(n="",a=):(n=n.slice(,p),a=n.length--n.lastIndexOf("/")),i=s,r=;continue}}else if(n.length===||n.length===){n="",a=,i=s,r=;continue}}t&&(n.length>?n+="/..":n="..",a=)}else n.length>?n+="/"+e.slice(i+,s):n=e.slice(i+,s),a=s-i-;i=s,r=}else o===&&r!==-?++r:r=-}return n}function xp(e,t){var n=t.dir||t.root,a=t.base||(t.name||"")+(t.ext||"");return n?n===t.root?n+a:n+e+a:a}var ct={resolve:function(){for(var t="",n=!,a,i=arguments.length-;i>=-&&!n;i--){var r;i>=?r=arguments[i]:(a===void &&(a=process.cwd()),r=a),Pe(r),r.length!==&&(t=r+"/"+t,n=r.charCodeAt()===)}return t=lr(t,!n),n?t.length>?"/"+t:"/":t.length>?t:"."},normalize:function(t){if(Pe(t),t.length===)return".";var n=t.charCodeAt()===,a=t.charCodeAt(t.length-)===;return t=lr(t,!n),t.length===&&!n&&(t="."),t.length>&&a&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return Pe(t),t.length>&&t.charCodeAt()===},join:function(){if(arguments.length===)return".";for(var t,n=;n<arguments.length;++n){var a=arguments[n];Pe(a),a.length>&&(t===void ?t=a:t+="/"+a)}return t===void ?".":ct.normalize(t)},relative:function(t,n){if(Pe(t),Pe(n),t===n||(t=ct.resolve(t),n=ct.resolve(n),t===n))return"";for(var a=;a<t.length&&t.charCodeAt(a)===;++a);for(var i=t.length,r=i-a,o=;o<n.length&&n.charCodeAt(o)===;++o);for(var s=n.length,p=s-o,l=r<p?r:p,c=-,u=;u<=l;++u){if(u===l){if(p>l){if(n.charCodeAt(o+u)===)return n.slice(o+u+);if(u===)return n.slice(o+u)}else r>l&&(t.charCodeAt(a+u)===?c=u:u===&&(c=));break}var h=t.charCodeAt(a+u),f=n.charCodeAt(o+u);if(h!==f)break;h===&&(c=u)}var g="";for(u=a+c+;u<=i;++u)(u===i||t.charCodeAt(u)===)&&(g.length===?g+="..":g+="/..");return g.length>?g+n.slice(o+c):(o+=c,n.charCodeAt(o)===&&++o,n.slice(o))},_makeLong:function(t){return t},dirname:function(t){if(Pe(t),t.length===)return".";for(var n=t.charCodeAt(),a=n===,i=-,r=!,o=t.length-;o>=;--o)if(n=t.charCodeAt(o),n===){if(!r){i=o;break}}else r=!;return i===-?a?"/":".":a&&i===?"//":t.slice(,i)},basename:function(t,n){if(n!==void &&typeof n!="string")throw new TypeError('"ext" argument must be a string');Pe(t);var a=,i=-,r=!,o;if(n!==void &&n.length>&&n.length<=t.length){if(n.length===t.length&&n===t)return"";var s=n.length-,p=-;for(o=t.length-;o>=;--o){var l=t.charCodeAt(o);if(l===){if(!r){a=o+;break}}else p===-&&(r=!,p=o+),s>=&&(l===n.charCodeAt(s)?--s===-&&(i=o):(s=-,i=p))}return a===i?i=p:i===-&&(i=t.length),t.slice(a,i)}else{for(o=t.length-;o>=;--o)if(t.charCodeAt(o)===){if(!r){a=o+;break}}else i===-&&(r=!,i=o+);return i===-?"":t.slice(a,i)}},extname:function(t){Pe(t);for(var n=-,a=,i=-,r=!,o=,s=t.length-;s>=;--s){var p=t.charCodeAt(s);if(p===){if(!r){a=s+;break}continue}i===-&&(r=!,i=s+),p===?n===-?n=s:o!==&&(o=):n!==-&&(o=-)}return n===-||i===-||o===||o===&&n===i-&&n===a+?"":t.slice(n,i)},format:function(t){if(t===null||typeof t!="object")throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return xp("/",t)},parse:function(t){Pe(t);var n={root:"",dir:"",base:"",ext:"",name:""};if(t.length===)return n;var a=t.charCodeAt(),i=a===,r;i?(n.root="/",r=):r=;for(var o=-,s=,p=-,l=!,c=t.length-,u=;c>=r;--c){if(a=t.charCodeAt(c),a===){if(!l){s=c+;break}continue}p===-&&(l=!,p=c+),a===?o===-?o=c:u!==&&(u=):o!==-&&(u=-)}return o===-||p===-||u===||u===&&o===p-&&o===s+?p!==-&&(s===&&i?n.base=n.name=t.slice(,p):n.base=n.name=t.slice(s,p)):(s===&&i?(n.name=t.slice(,o),n.base=t.slice(,p)):(n.name=t.slice(s,o),n.base=t.slice(s,p)),n.ext=t.slice(o,p)),s>?n.dir=t.slice(,s-):i&&(n.dir="/"),n},sep:"/",delimiter:":",win:null,posix:null};ct.posix=ct;pr.exports=ct});var fr=K(ye=>{"use strict";var pn=cr(),vp=Bt().extname,ur=/^\s([^;\s])(?:;|\s|$)/,bp=/^text\//i;ye.charset=dr;ye.charsets={lookup:dr};ye.contentType=yp;ye.extension=_p;ye.extensions=Object.create(null);ye.lookup=kp;ye.types=Object.create(null);wp(ye.extensions,ye.types);function dr(e){if(!e||typeof e!="string")return!;var t=ur.exec(e),n=t&&pn[t[].toLowerCase()];return n&&n.charset?n.charset:t&&bp.test(t[])?"UTF-":!}function yp(e){if(!e||typeof e!="string")return!;var t=e.indexOf("/")===-?ye.lookup(e):e;if(!t)return!;if(t.indexOf("charset")===-){var n=ye.charset(t);n&&(t+="; charset="+n.toLowerCase())}return t}function _p(e){if(!e||typeof e!="string")return!;var t=ur.exec(e),n=t&&ye.extensions[t[].toLowerCase()];return!n||!n.length?!:n[]}function kp(e){if(!e||typeof e!="string")return!;var t=vp("x."+e).toLowerCase().substr();return t&&ye.types[t]||!}function wp(e,t){var n=["nginx","apache",void ,"iana"];Object.keys(pn).forEach(function(i){var r=pn[i],o=r.extensions;if(!(!o||!o.length)){e[i]=o;for(var s=;s<o.length;s++){var p=o[s];if(t[p]){var l=n.indexOf(pn[t[p]].source),c=n.indexOf(r.source);if(t[p]!=="application/octet-stream"&&(l>c||l===c&&t[p].substr(,)==="application/"))continue}t[p]=i}}})}});var aa=K((b,mr)=>{var Cp=typeof global=="object"&&global&&global.Object===Object&&global;mr.exports=Cp});var Ue=K((y,hr)=>{var jp=aa(),Lp=typeof self=="object"&&self&&self.Object===Object&&self,Ip=jp||Lp||Function("return this")();hr.exports=Ip});var un=K((_,gr)=>{var Sp=Ue(),Ap=Sp.Symbol;gr.exports=Ap});var vr=K((k,xr)=>{function Mp(e,t){var n=-,a=e.length;for(t||(t=Array(a));++n<a;)t[n]=e[n];return t}xr.exports=Mp});var kr=K((w,_r)=>{var br=un(),yr=Object.prototype,Fp=yr.hasOwnProperty,Ep=yr.toString,Pt=br?br.toStringTag:void ;function zp(e){var t=Fp.call(e,Pt),n=e[Pt];try{e[Pt]=void ;var a=!}catch{}var i=Ep.call(e);return a&&(t?e[Pt]=n:delete e[Pt]),i}_r.exports=zp});var Cr=K((C,wr)=>{var Bp=Object.prototype,Pp=Bp.toString;function Tp(e){return Pp.call(e)}wr.exports=Tp});var lt=K((j,Ir)=>{var jr=un(),Op=kr(),Np=Cr(),Dp="[object Null]",Wp="[object Undefined]",Lr=jr?jr.toStringTag:void ;function Rp(e){return e==null?e===void ?Wp:Dp:Lr&&Lr in Object(e)?Op(e):Np(e)}Ir.exports=Rp});var ia=K((L,Sr)=>{function Up(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}Sr.exports=Up});var ra=K((I,Ar)=>{var Vp=lt(),Hp=ia(),qp="[object AsyncFunction]",$p="[object Function]",Gp="[object GeneratorFunction]",Zp="[object Proxy]";function Kp(e){if(!Hp(e))return!;var t=Vp(e);return t==$p||t==Gp||t==qp||t==Zp}Ar.exports=Kp});var Fr=K((S,Mr)=>{var Yp=Ue(),Xp=Yp["__core-js_shared__"];Mr.exports=Xp});var Br=K((A,zr)=>{var oa=Fr(),Er=function(){var e=/[^.]+$/.exec(oa&&oa.keys&&oa.keys.IE_PROTO||"");return e?"Symbol(src)_."+e:""}();function Jp(e){return!!Er&&Er in e}zr.exports=Jp});var sa=K((M,Pr)=>{var Qp=Function.prototype,eu=Qp.toString;function tu(e){if(e!=null){try{return eu.call(e)}catch{}try{return e+""}catch{}}return""}Pr.exports=tu});var Or=K((F,Tr)=>{var nu=ra(),au=Br(),iu=ia(),ru=sa(),ou=/[\\^$.+?()[\]{}|]/g,su=/^\[object .+?Constructor\]$/,cu=Function.prototype,lu=Object.prototype,pu=cu.toString,uu=lu.hasOwnProperty,du=RegExp("^"+pu.call(uu).replace(ou,"\\$&").replace(/hasOwnProperty|(function).?(?=\\\()| for .+?(?=\\\])/g,"$.?")+"$");function fu(e){if(!iu(e)||au(e))return!;var t=nu(e)?du:su;return t.test(ru(e))}Tr.exports=fu});var Dr=K((E,Nr)=>{function mu(e,t){return e?.[t]}Nr.exports=mu});var pt=K((z,Wr)=>{var hu=Or(),gu=Dr();function xu(e,t){var n=gu(e,t);return hu(n)?n:void }Wr.exports=xu});var Ur=K((B,Rr)=>{var vu=pt(),bu=Ue(),yu=vu(bu,"DataView");Rr.exports=yu});var Hr=K((P,Vr)=>{var _u=pt(),ku=Ue(),wu=_u(ku,"Map");Vr.exports=wu});var $r=K((T,qr)=>{var Cu=pt(),ju=Ue(),Lu=Cu(ju,"Promise");qr.exports=Lu});var Zr=K((O,Gr)=>{var Iu=pt(),Su=Ue(),Au=Iu(Su,"Set");Gr.exports=Au});var Yr=K((N,Kr)=>{var Mu=pt(),Fu=Ue(),Eu=Mu(Fu,"WeakMap");Kr.exports=Eu});var io=K((D,ao)=>{var ca=Ur(),la=Hr(),pa=$r(),ua=Zr(),da=Yr(),no=lt(),ut=sa(),Xr="[object Map]",zu="[object Object]",Jr="[object Promise]",Qr="[object Set]",eo="[object WeakMap]",to="[object DataView]",Bu=ut(ca),Pu=ut(la),Tu=ut(pa),Ou=ut(ua),Nu=ut(da),nt=no;(ca&&nt(new ca(new ArrayBuffer()))!=to||la&&nt(new la)!=Xr||pa&&nt(pa.resolve())!=Jr||ua&&nt(new ua)!=Qr||da&&nt(new da)!=eo)&&(nt=function(e){var t=no(e),n=t==zu?e.constructor:void ,a=n?ut(n):"";if(a)switch(a){case Bu:return to;case Pu:return Xr;case Tu:return Jr;case Ou:return Qr;case Nu:return eo}return t});ao.exports=nt});var fa=K((W,ro)=>{var Du=;function Wu(e){return typeof e=="number"&&e>-&&e%==&&e<=Du}ro.exports=Wu});var ma=K((R,oo)=>{var Ru=ra(),Uu=fa();function Vu(e){return e!=null&&Uu(e.length)&&!Ru(e)}oo.exports=Vu});var ha=K((U,so)=>{var Hu=Array.isArray;so.exports=Hu});var Tt=K((V,co)=>{function qu(e){return e!=null&&typeof e=="object"}co.exports=qu});var po=K((H,lo)=>{var $u=lt(),Gu=ha(),Zu=Tt(),Ku="[object String]";function Yu(e){return typeof e=="string"||!Gu(e)&&Zu(e)&&$u(e)==Ku}lo.exports=Yu});var fo=K((q,uo)=>{function Xu(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}uo.exports=Xu});var ho=K(($,mo)=>{function Ju(e){var t=-,n=Array(e.size);return e.forEach(function(a,i){n[++t]=[i,a]}),n}mo.exports=Ju});var xo=K((G,go)=>{function Qu(e){var t=-,n=Array(e.size);return e.forEach(function(a){n[++t]=a}),n}go.exports=Qu});var bo=K((Z,vo)=>{function ed(e){return e.split("")}vo.exports=ed});var _o=K((K,yo)=>{var td="\\ud-\\udfff",nd="\\u-\\uf",ad="\\ufe-\\ufef",id="\\ud-\\uff",rd=nd+ad+id,od="\\ufee\\ufef",sd="\\ud",cd=RegExp("["+sd+td+rd+od+"]");function ld(e){return cd.test(e)}yo.exports=ld});var Ao=K((Y,So)=>{var ko="\\ud-\\udfff",pd="\\u-\\uf",ud="\\ufe-\\ufef",dd="\\ud-\\uff",fd=pd+ud+dd,md="\\ufee\\ufef",hd="["+ko+"]",ga="["+fd+"]",xa="\\udc[\\udffb-\\udfff]",gd="(?:"+ga+"|"+xa+")",wo="[^"+ko+"]",Co="(?:\\udc[\\udde-\\uddff]){}",jo="[\\ud-\\udbff][\\udc-\\udfff]",xd="\\ud",Lo=gd+"?",Io="["+md+"]?",vd="(?:"+xd+"(?:"+[wo,Co,jo].join("|")+")"+Io+Lo+")",bd=Io+Lo+vd,yd="(?:"+[wo+ga+"?",ga,Co,jo,hd].join("|")+")",_d=RegExp(xa+"(?="+xa+")|"+yd+bd,"g");function kd(e){return e.match(_d)||[]}So.exports=kd});var Fo=K((X,Mo)=>{var wd=bo(),Cd=_o(),jd=Ao();function Ld(e){return Cd(e)?jd(e):wd(e)}Mo.exports=Ld});var zo=K((J,Eo)=>{function Id(e,t){for(var n=-,a=e==null?:e.length,i=Array(a);++n<a;)i[n]=t(e[n],n,e);return i}Eo.exports=Id});var Po=K((Q,Bo)=>{var Sd=zo();function Ad(e,t){return Sd(t,function(n){return e[n]})}Bo.exports=Ad});var Oo=K((e,To)=>{function Md(e,t){for(var n=-,a=Array(e);++n<e;)a[n]=t(n);return a}To.exports=Md});var Do=K((t,No)=>{var Fd=lt(),Ed=Tt(),zd="[object Arguments]";function Bd(e){return Ed(e)&&Fd(e)==zd}No.exports=Bd});var Vo=K((n,Uo)=>{var Wo=Do(),Pd=Tt(),Ro=Object.prototype,Td=Ro.hasOwnProperty,Od=Ro.propertyIsEnumerable,Nd=Wo(function(){return arguments}())?Wo:function(e){return Pd(e)&&Td.call(e,"callee")&&!Od.call(e,"callee")};Uo.exports=Nd});var qo=K((a,Ho)=>{function Dd(){return!}Ho.exports=Dd});var Ko=K((Ot,dt)=>{var Wd=Ue(),Rd=qo(),Zo=typeof Ot=="object"&&Ot&&!Ot.nodeType&&Ot,$o=Zo&&typeof dt=="object"&&dt&&!dt.nodeType&&dt,Ud=$o&&$o.exports===Zo,Go=Ud?Wd.Buffer:void ,Vd=Go?Go.isBuffer:void ,Hd=Vd||Rd;dt.exports=Hd});var Xo=K((i,Yo)=>{var qd=,$d=/^(?:|[-]\d)$/;function Gd(e,t){var n=typeof e;return t=t??qd,!!t&&(n=="number"||n!="symbol"&&$d.test(e))&&e>-&&e%==&&e<t}Yo.exports=Gd});var Qo=K((r,Jo)=>{var Zd=lt(),Kd=fa(),Yd=Tt(),Xd="[object Arguments]",Jd="[object Array]",Qd="[object Boolean]",ef="[object Date]",tf="[object Error]",nf="[object Function]",af="[object Map]",rf="[object Number]",of="[object Object]",sf="[object RegExp]",cf="[object Set]",lf="[object String]",pf="[object WeakMap]",uf="[object ArrayBuffer]",df="[object DataView]",ff="[object FloatArray]",mf="[object FloatArray]",hf="[object IntArray]",gf="[object IntArray]",xf="[object IntArray]",vf="[object UintArray]",bf="[object UintClampedArray]",yf="[object UintArray]",_f="[object UintArray]",pe={};pe[ff]=pe[mf]=pe[hf]=pe[gf]=pe[xf]=pe[vf]=pe[bf]=pe[yf]=pe[_f]=!;pe[Xd]=pe[Jd]=pe[uf]=pe[Qd]=pe[df]=pe[ef]=pe[tf]=pe[nf]=pe[af]=pe[rf]=pe[of]=pe[sf]=pe[cf]=pe[lf]=pe[pf]=!;function kf(e){return Yd(e)&&Kd(e.length)&&!!pe[Zd(e)]}Jo.exports=kf});var ts=K((o,es)=>{function wf(e){return function(t){return e(t)}}es.exports=wf});var as=K((Nt,ft)=>{var Cf=aa(),ns=typeof Nt=="object"&&Nt&&!Nt.nodeType&&Nt,Dt=ns&&typeof ft=="object"&&ft&&!ft.nodeType&&ft,jf=Dt&&Dt.exports===ns,va=jf&&Cf.process,Lf=function(){try{var e=Dt&&Dt.require&&Dt.require("util").types;return e||va&&va.binding&&va.binding("util")}catch{}}();ft.exports=Lf});var ss=K((s,os)=>{var If=Qo(),Sf=ts(),is=as(),rs=is&&is.isTypedArray,Af=rs?Sf(rs):If;os.exports=Af});var ls=K((c,cs)=>{var Mf=Oo(),Ff=Vo(),Ef=ha(),zf=Ko(),Bf=Xo(),Pf=ss(),Tf=Object.prototype,Of=Tf.hasOwnProperty;function Nf(e,t){var n=Ef(e),a=!n&&Ff(e),i=!n&&!a&&zf(e),r=!n&&!a&&!i&&Pf(e),o=n||a||i||r,s=o?Mf(e.length,String):[],p=s.length;for(var l in e)(t||Of.call(e,l))&&!(o&&(l=="length"||i&&(l=="offset"||l=="parent")||r&&(l=="buffer"||l=="byteLength"||l=="byteOffset")||Bf(l,p)))&&s.push(l);return s}cs.exports=Nf});var us=K((l,ps)=>{var Df=Object.prototype;function Wf(e){var t=e&&e.constructor,n=typeof t=="function"&&t.prototype||Df;return e===n}ps.exports=Wf});var fs=K((p,ds)=>{function Rf(e,t){return function(n){return e(t(n))}}ds.exports=Rf});var hs=K((u,ms)=>{var Uf=fs(),Vf=Uf(Object.keys,Object);ms.exports=Vf});var xs=K((d,gs)=>{var Hf=us(),qf=hs(),$f=Object.prototype,Gf=$f.hasOwnProperty;function Zf(e){if(!Hf(e))return qf(e);var t=[];for(var n in Object(e))Gf.call(e,n)&&n!="constructor"&&t.push(n);return t}gs.exports=Zf});var bs=K((f,vs)=>{var Kf=ls(),Yf=xs(),Xf=ma();function Jf(e){return Xf(e)?Kf(e):Yf(e)}vs.exports=Jf});var _s=K((m,ys)=>{var Qf=Po(),em=bs();function tm(e){return e==null?[]:Qf(e,em(e))}ys.exports=tm});var Cs=K((h,ws)=>{var ks=un(),nm=vr(),am=io(),im=ma(),rm=po(),om=fo(),sm=ho(),cm=xo(),lm=Fo(),pm=_s(),um="[object Map]",dm="[object Set]",ba=ks?ks.iterator:void ;function fm(e){if(!e)return[];if(im(e))return rm(e)?lm(e):nm(e);if(ba&&e[ba])return om(e[ba]());var t=am(e),n=t==um?sm:t==dm?cm:pm;return n(e)}ws.exports=fm});var ya=K((g,mm)=>{mm.exports={"":"\u{FAF}","":"\u{F}",umbrella_with_rain_drops:"\u",coffee:"\u",aries:"\u",taurus:"\u",sagittarius:"\u",capricorn:"\u",aquarius:"\u",pisces:"\u",anchor:"\u",white_check_mark:"\u",sparkles:"\u",question:"\u",grey_question:"\u",grey_exclamation:"\u",exclamation:"\u",heavy_exclamation_mark:"\u",heavy_plus_sign:"\u",heavy_minus_sign:"\u",heavy_division_sign:"\u",hash:"\uFEF\uE",keycap_star:"\uFEF\uE",zero:"\uFEF\uE",one:"\uFEF\uE",two:"\uFEF\uE",three:"\uFEF\uE",four:"\uFEF\uE",five:"\uFEF\uE",six:"\uFEF\uE",seven:"\uFEF\uE",eight:"\uFEF\uE",nine:"\uFEF\uE",copyright:"\xA\uFEF",registered:"\xAE\uFEF",mahjong:"\u{F}",black_joker:"\u{FCF}",a:"\u{F}\uFEF",b:"\u{F}\uFEF",o:"\u{FE}\uFEF",parking:"\u{FF}\uFEF",ab:"\u{FE}",cl:"\u{F}",cool:"\u{F}",free:"\u{F}",id:"\u{F}",new:"\u{F}",ng:"\u{F}",ok:"\u{F}",sos:"\u{F}",up:"\u{F}",vs:"\u{FA}","flag-ac":"\u{FE}\u{FE}","flag-ad":"\u{FE}\u{FE}","flag-ae":"\u{FE}\u{FEA}","flag-af":"\u{FE}\u{FEB}","flag-ag":"\u{FE}\u{FEC}","flag-ai":"\u{FE}\u{FEE}","flag-al":"\u{FE}\u{FF}","flag-am":"\u{FE}\u{FF}","flag-ao":"\u{FE}\u{FF}","flag-aq":"\u{FE}\u{FF}","flag-ar":"\u{FE}\u{FF}","flag-as":"\u{FE}\u{FF}","flag-at":"\u{FE}\u{FF}","flag-au":"\u{FE}\u{FFA}","flag-aw":"\u{FE}\u{FFC}","flag-ax":"\u{FE}\u{FFD}","flag-az":"\u{FE}\u{FFF}","flag-ba":"\u{FE}\u{FE}","flag-bb":"\u{FE}\u{FE}","flag-bd":"\u{FE}\u{FE}","flag-be":"\u{FE}\u{FEA}","flag-bf":"\u{FE}\u{FEB}","flag-bg":"\u{FE}\u{FEC}","flag-bh":"\u{FE}\u{FED}","flag-bi":"\u{FE}\u{FEE}","flag-bj":"\u{FE}\u{FEF}","flag-bl":"\u{FE}\u{FF}","flag-bm":"\u{FE}\u{FF}","flag-bn":"\u{FE}\u{FF}","flag-bo":"\u{FE}\u{FF}","flag-bq":"\u{FE}\u{FF}","flag-br":"\u{FE}\u{FF}","flag-bs":"\u{FE}\u{FF}","flag-bt":"\u{FE}\u{FF}","flag-bv":"\u{FE}\u{FFB}","flag-bw":"\u{FE}\u{FFC}","flag-by":"\u{FE}\u{FFE}","flag-bz":"\u{FE}\u{FFF}","flag-ca":"\u{FE}\u{FE}","flag-cc":"\u{FE}\u{FE}","flag-cd":"\u{FE}\u{FE}","flag-cf":"\u{FE}\u{FEB}","flag-cg":"\u{FE}\u{FEC}","flag-ch":"\u{FE}\u{FED}","flag-ci":"\u{FE}\u{FEE}","flag-ck":"\u{FE}\u{FF}","flag-cl":"\u{FE}\u{FF}","flag-cm":"\u{FE}\u{FF}",cn:"\u{FE}\u{FF}","flag-cn":"\u{FE}\u{FF}","flag-co":"\u{FE}\u{FF}","flag-cp":"\u{FE}\u{FF}","flag-cr":"\u{FE}\u{FF}","flag-cu":"\u{FE}\u{FFA}","flag-cv":"\u{FE}\u{FFB}","flag-cw":"\u{FE}\u{FFC}","flag-cx":"\u{FE}\u{FFD}","flag-cy":"\u{FE}\u{FFE}","flag-cz":"\u{FE}\u{FFF}",de:"\u{FE}\u{FEA}","flag-de":"\u{FE}\u{FEA}","flag-dg":"\u{FE}\u{FEC}","flag-dj":"\u{FE}\u{FEF}","flag-dk":"\u{FE}\u{FF}","flag-dm":"\u{FE}\u{FF}","flag-do":"\u{FE}\u{FF}","flag-dz":"\u{FE}\u{FFF}","flag-ea":"\u{FEA}\u{FE}","flag-ec":"\u{FEA}\u{FE}","flag-ee":"\u{FEA}\u{FEA}","flag-eg":"\u{FEA}\u{FEC}","flag-eh":"\u{FEA}\u{FED}","flag-er":"\u{FEA}\u{FF}",es:"\u{FEA}\u{FF}","flag-es":"\u{FEA}\u{FF}","flag-et":"\u{FEA}\u{FF}","flag-eu":"\u{FEA}\u{FFA}","flag-fi":"\u{FEB}\u{FEE}","flag-fj":"\u{FEB}\u{FEF}","flag-fk":"\u{FEB}\u{FF}","flag-fm":"\u{FEB}\u{FF}","flag-fo":"\u{FEB}\u{FF}",fr:"\u{FEB}\u{FF}","flag-fr":"\u{FEB}\u{FF}","flag-ga":"\u{FEC}\u{FE}",gb:"\u{FEC}\u{FE}",uk:"\u{FEC}\u{FE}","flag-gb":"\u{FEC}\u{FE}","flag-gd":"\u{FEC}\u{FE}","flag-ge":"\u{FEC}\u{FEA}","flag-gf":"\u{FEC}\u{FEB}","flag-gg":"\u{FEC}\u{FEC}","flag-gh":"\u{FEC}\u{FED}","flag-gi":"\u{FEC}\u{FEE}","flag-gl":"\u{FEC}\u{FF}","flag-gm":"\u{FEC}\u{FF}","flag-gn":"\u{FEC}\u{FF}","flag-gp":"\u{FEC}\u{FF}","flag-gq":"\u{FEC}\u{FF}","flag-gr":"\u{FEC}\u{FF}","flag-gs":"\u{FEC}\u{FF}","flag-gt":"\u{FEC}\u{FF}","flag-gu":"\u{FEC}\u{FFA}","flag-gw":"\u{FEC}\u{FFC}","flag-gy":"\u{FEC}\u{FFE}","flag-hk":"\u{FED}\u{FF}","flag-hm":"\u{FED}\u{FF}","flag-hn":"\u{FED}\u{FF}","flag-hr":"\u{FED}\u{FF}","flag-ht":"\u{FED}\u{FF}","flag-hu":"\u{FED}\u{FFA}","flag-ic":"\u{FEE}\u{FE}","flag-id":"\u{FEE}\u{FE}","flag-ie":"\u{FEE}\u{FEA}","flag-il":"\u{FEE}\u{FF}","flag-im":"\u{FEE}\u{FF}","flag-in":"\u{FEE}\u{FF}","flag-io":"\u{FEE}\u{FF}","flag-iq":"\u{FEE}\u{FF}","flag-ir":"\u{FEE}\u{FF}","flag-is":"\u{FEE}\u{FF}",it:"\u{FEE}\u{FF}","flag-it":"\u{FEE}\u{FF}","flag-je":"\u{FEF}\u{FEA}","flag-jm":"\u{FEF}\u{FF}","flag-jo":"\u{FEF}\u{FF}",jp:"\u{FEF}\u{FF}","flag-jp":"\u{FEF}\u{FF}","flag-ke":"\u{FF}\u{FEA}","flag-kg":"\u{FF}\u{FEC}","flag-kh":"\u{FF}\u{FED}","flag-ki":"\u{FF}\u{FEE}","flag-km":"\u{FF}\u{FF}","flag-kn":"\u{FF}\u{FF}","flag-kp":"\u{FF}\u{FF}",kr:"\u{FF}\u{FF}","flag-kr":"\u{FF}\u{FF}","flag-kw":"\u{FF}\u{FFC}","flag-ky":"\u{FF}\u{FFE}","flag-kz":"\u{FF}\u{FFF}","flag-la":"\u{FF}\u{FE}","flag-lb":"\u{FF}\u{FE}","flag-lc":"\u{FF}\u{FE}","flag-li":"\u{FF}\u{FEE}","flag-lk":"\u{FF}\u{FF}","flag-lr":"\u{FF}\u{FF}","flag-ls":"\u{FF}\u{FF}","flag-lt":"\u{FF}\u{FF}","flag-lu":"\u{FF}\u{FFA}","flag-lv":"\u{FF}\u{FFB}","flag-ly":"\u{FF}\u{FFE}","flag-ma":"\u{FF}\u{FE}","flag-mc":"\u{FF}\u{FE}","flag-md":"\u{FF}\u{FE}","flag-me":"\u{FF}\u{FEA}","flag-mf":"\u{FF}\u{FEB}","flag-mg":"\u{FF}\u{FEC}","flag-mh":"\u{FF}\u{FED}","flag-mk":"\u{FF}\u{FF}","flag-ml":"\u{FF}\u{FF}","flag-mm":"\u{FF}\u{FF}","flag-mn":"\u{FF}\u{FF}","flag-mo":"\u{FF}\u{FF}","flag-mp":"\u{FF}\u{FF}","flag-mq":"\u{FF}\u{FF}","flag-mr":"\u{FF}\u{FF}","flag-ms":"\u{FF}\u{FF}","flag-mt":"\u{FF}\u{FF}","flag-mu":"\u{FF}\u{FFA}","flag-mv":"\u{FF}\u{FFB}","flag-mw":"\u{FF}\u{FFC}","flag-mx":"\u{FF}\u{FFD}","flag-my":"\u{FF}\u{FFE}","flag-mz":"\u{FF}\u{FFF}","flag-na":"\u{FF}\u{FE}","flag-nc":"\u{FF}\u{FE}","flag-ne":"\u{FF}\u{FEA}","flag-nf":"\u{FF}\u{FEB}","flag-ng":"\u{FF}\u{FEC}","flag-ni":"\u{FF}\u{FEE}","flag-nl":"\u{FF}\u{FF}","flag-no":"\u{FF}\u{FF}","flag-np":"\u{FF}\u{FF}","flag-nr":"\u{FF}\u{FF}","flag-nu":"\u{FF}\u{FFA}","flag-nz":"\u{FF}\u{FFF}","flag-om":"\u{FF}\u{FF}","flag-pa":"\u{FF}\u{FE}","flag-pe":"\u{FF}\u{FEA}","flag-pf":"\u{FF}\u{FEB}","flag-pg":"\u{FF}\u{FEC}","flag-ph":"\u{FF}\u{FED}","flag-pk":"\u{FF}\u{FF}","flag-pl":"\u{FF}\u{FF}","flag-pm":"\u{FF}\u{FF}","flag-pn":"\u{FF}\u{FF}","flag-pr":"\u{FF}\u{FF}","flag-ps":"\u{FF}\u{FF}","flag-pt":"\u{FF}\u{FF}","flag-pw":"\u{FF}\u{FFC}","flag-py":"\u{FF}\u{FFE}","flag-qa":"\u{FF}\u{FE}","flag-re":"\u{FF}\u{FEA}","flag-ro":"\u{FF}\u{FF}","flag-rs":"\u{FF}\u{FF}",ru:"\u{FF}\u{FFA}","flag-ru":"\u{FF}\u{FFA}","flag-rw":"\u{FF}\u{FFC}","flag-sa":"\u{FF}\u{FE}","flag-sb":"\u{FF}\u{FE}","flag-sc":"\u{FF}\u{FE}","flag-sd":"\u{FF}\u{FE}","flag-se":"\u{FF}\u{FEA}","flag-sg":"\u{FF}\u{FEC}","flag-sh":"\u{FF}\u{FED}","flag-si":"\u{FF}\u{FEE}","flag-sj":"\u{FF}\u{FEF}","flag-sk":"\u{FF}\u{FF}","flag-sl":"\u{FF}\u{FF}","flag-sm":"\u{FF}\u{FF}","flag-sn":"\u{FF}\u{FF}","flag-so":"\u{FF}\u{FF}","flag-sr":"\u{FF}\u{FF}","flag-ss":"\u{FF}\u{FF}","flag-st":"\u{FF}\u{FF}","flag-sv":"\u{FF}\u{FFB}","flag-sx":"\u{FF}\u{FFD}","flag-sy":"\u{FF}\u{FFE}","flag-sz":"\u{FF}\u{FFF}","flag-ta":"\u{FF}\u{FE}","flag-tc":"\u{FF}\u{FE}","flag-td":"\u{FF}\u{FE}","flag-tf":"\u{FF}\u{FEB}","flag-tg":"\u{FF}\u{FEC}","flag-th":"\u{FF}\u{FED}","flag-tj":"\u{FF}\u{FEF}","flag-tk":"\u{FF}\u{FF}","flag-tl":"\u{FF}\u{FF}","flag-tm":"\u{FF}\u{FF}","flag-tn":"\u{FF}\u{FF}","flag-to":"\u{FF}\u{FF}","flag-tr":"\u{FF}\u{FF}","flag-tt":"\u{FF}\u{FF}","flag-tv":"\u{FF}\u{FFB}","flag-tw":"\u{FF}\u{FFC}","flag-tz":"\u{FF}\u{FFF}","flag-ua":"\u{FFA}\u{FE}","flag-ug":"\u{FFA}\u{FEC}","flag-um":"\u{FFA}\u{FF}","flag-un":"\u{FFA}\u{FF}",us:"\u{FFA}\u{FF}","flag-us":"\u{FFA}\u{FF}","flag-uy":"\u{FFA}\u{FFE}","flag-uz":"\u{FFA}\u{FFF}","flag-va":"\u{FFB}\u{FE}","flag-vc":"\u{FFB}\u{FE}","flag-ve":"\u{FFB}\u{FEA}","flag-vg":"\u{FFB}\u{FEC}","flag-vi":"\u{FFB}\u{FEE}","flag-vn":"\u{FFB}\u{FF}","flag-vu":"\u{FFB}\u{FFA}","flag-wf":"\u{FFC}\u{FEB}","flag-ws":"\u{FFC}\u{FF}","flag-xk":"\u{FFD}\u{FF}","flag-ye":"\u{FFE}\u{FEA}","flag-yt":"\u{FFE}\u{FF}","flag-za":"\u{FFF}\u{FE}","flag-zm":"\u{FFF}\u{FF}","flag-zw":"\u{FFF}\u{FFC}",koko:"\u{F}",sa:"\u{F}\uFEF",u:"\u{FA}",u:"\u{FF}",u:"\u{F}",uaa:"\u{F}",u:"\u{F}",ue:"\u{F}",u:"\u{F}",u:"\u{F}\uFEF",u:"\u{F}",u:"\u{F}",ub:"\u{FA}",ideograph_advantage:"\u{F}",accept:"\u{F}",cyclone:"\u{F}",foggy:"\u{F}",closed_umbrella:"\u{F}",night_with_stars:"\u{F}",sunrise_over_mountains:"\u{F}",sunrise:"\u{F}",city_sunset:"\u{F}",city_sunrise:"\u{F}",rainbow:"\u{F}",bridge_at_night:"\u{F}",ocean:"\u{FA}",volcano:"\u{FB}",milky_way:"\u{FC}",earth_africa:"\u{FD}",earth_americas:"\u{FE}",earth_asia:"\u{FF}",globe_with_meridians:"\u{F}",new_moon:"\u{F}",waxing_crescent_moon:"\u{F}",first_quarter_moon:"\u{F}",moon:"\u{F}",waxing_gibbous_moon:"\u{F}",full_moon:"\u{F}",waning_gibbous_moon:"\u{F}",last_quarter_moon:"\u{F}",waning_crescent_moon:"\u{F}",crescent_moon:"\u{F}",new_moon_with_face:"\u{FA}",first_quarter_moon_with_face:"\u{FB}",last_quarter_moon_with_face:"\u{FC}",full_moon_with_face:"\u{FD}",sun_with_face:"\u{FE}",star:"\u{FF}",stars:"\u{F}",thermometer:"\u{F}\uFEF",mostly_sunny:"\u{F}\uFEF",sun_small_cloud:"\u{F}\uFEF",barely_sunny:"\u{F}\uFEF",sun_behind_cloud:"\u{F}\uFEF",partly_sunny_rain:"\u{F}\uFEF",sun_behind_rain_cloud:"\u{F}\uFEF",rain_cloud:"\u{F}\uFEF",snow_cloud:"\u{F}\uFEF",lightning:"\u{F}\uFEF",lightning_cloud:"\u{F}\uFEF",tornado:"\u{FA}\uFEF",tornado_cloud:"\u{FA}\uFEF",fog:"\u{FB}\uFEF",wind_blowing_face:"\u{FC}\uFEF",hotdog:"\u{FD}",taco:"\u{FE}",burrito:"\u{FF}",chestnut:"\u{F}",seedling:"\u{F}",evergreen_tree:"\u{F}",deciduous_tree:"\u{F}",palm_tree:"\u{F}",cactus:"\u{F}",hot_pepper:"\u{F}\uFEF",tulip:"\u{F}",cherry_blossom:"\u{F}",rose:"\u{F}",hibiscus:"\u{FA}",sunflower:"\u{FB}",blossom:"\u{FC}",corn:"\u{FD}",ear_of_rice:"\u{FE}",herb:"\u{FF}",four_leaf_clover:"\u{F}",maple_leaf:"\u{F}",fallen_leaf:"\u{F}",leaves:"\u{F}",mushroom:"\u{F}",tomato:"\u{F}",eggplant:"\u{F}",grapes:"\u{F}",melon:"\u{F}",watermelon:"\u{F}",tangerine:"\u{FA}",lemon:"\u{FB}",banana:"\u{FC}",pineapple:"\u{FD}",apple:"\u{FE}",green_apple:"\u{FF}",pear:"\u{F}",peach:"\u{F}",cherries:"\u{F}",strawberry:"\u{F}",hamburger:"\u{F}",pizza:"\u{F}",meat_on_bone:"\u{F}",poultry_leg:"\u{F}",rice_cracker:"\u{F}",rice_ball:"\u{F}",rice:"\u{FA}",curry:"\u{FB}",ramen:"\u{FC}",spaghetti:"\u{FD}",bread:"\u{FE}",fries:"\u{FF}",sweet_potato:"\u{F}",dango:"\u{F}",oden:"\u{F}",sushi:"\u{F}",fried_shrimp:"\u{F}",fish_cake:"\u{F}",icecream:"\u{F}",shaved_ice:"\u{F}",ice_cream:"\u{F}",doughnut:"\u{F}",cookie:"\u{FA}",chocolate_bar:"\u{FB}",candy:"\u{FC}",lollipop:"\u{FD}",custard:"\u{FE}",honey_pot:"\u{FF}",cake:"\u{F}",bento:"\u{F}",stew:"\u{F}",fried_egg:"\u{F}",cooking:"\u{F}",fork_and_knife:"\u{F}",tea:"\u{F}",sake:"\u{F}",wine_glass:"\u{F}",cocktail:"\u{F}",tropical_drink:"\u{F}",beer:"\u{FA}",beers:"\u{FB}",baby_bottle:"\u{FC}",knife_fork_plate:"\u{FD}\uFEF",champagne:"\u{FE}",popcorn:"\u{FF}",ribbon:"\u{F}",gift:"\u{F}",birthday:"\u{F}",jack_o_lantern:"\u{F}",christmas_tree:"\u{F}",santa:"\u{F}",fireworks:"\u{F}",sparkler:"\u{F}",balloon:"\u{F}",tada:"\u{F}",confetti_ball:"\u{FA}",tanabata_tree:"\u{FB}",crossed_flags:"\u{FC}",bamboo:"\u{FD}",dolls:"\u{FE}",flags:"\u{FF}",wind_chime:"\u{F}",rice_scene:"\u{F}",school_satchel:"\u{F}",mortar_board:"\u{F}",medal:"\u{F}\uFEF",reminder_ribbon:"\u{F}\uFEF",studio_microphone:"\u{F}\uFEF",level_slider:"\u{FA}\uFEF",control_knobs:"\u{FB}\uFEF",film_frames:"\u{FE}\uFEF",admission_tickets:"\u{FF}\uFEF",carousel_horse:"\u{FA}",ferris_wheel:"\u{FA}",roller_coaster:"\u{FA}",fishing_pole_and_fish:"\u{FA}",microphone:"\u{FA}",movie_camera:"\u{FA}",cinema:"\u{FA}",headphones:"\u{FA}",art:"\u{FA}",tophat:"\u{FA}",circus_tent:"\u{FAA}",ticket:"\u{FAB}",clapper:"\u{FAC}",performing_arts:"\u{FAD}",video_game:"\u{FAE}",dart:"\u{FAF}",slot_machine:"\u{FB}","ball":"\u{FB}",game_die:"\u{FB}",bowling:"\u{FB}",flower_playing_cards:"\u{FB}",musical_note:"\u{FB}",notes:"\u{FB}",saxophone:"\u{FB}",guitar:"\u{FB}",musical_keyboard:"\u{FB}",trumpet:"\u{FBA}",violin:"\u{FBB}",musical_score:"\u{FBC}",running_shirt_with_sash:"\u{FBD}",tennis:"\u{FBE}",ski:"\u{FBF}",basketball:"\u{FC}",checkered_flag:"\u{FC}",snowboarder:"\u{FC}","woman-running":"\u{FC}\uD\u\uFEF",running_woman:"\u{FC}\uD\u\uFEF","man-running":"\u{FC}\uD\u\uFEF",runner:"\u{FC}\uD\u\uFEF",running:"\u{FC}\uD\u\uFEF",running_man:"\u{FC}\uD\u\uFEF","woman-surfing":"\u{FC}\uD\u\uFEF",surfing_woman:"\u{FC}\uD\u\uFEF","man-surfing":"\u{FC}\uD\u\uFEF",surfer:"\u{FC}\uD\u\uFEF",surfing_man:"\u{FC}\uD\u\uFEF",sports_medal:"\u{FC}",trophy:"\u{FC}",horse_racing:"\u{FC}",football:"\u{FC}",rugby_football:"\u{FC}","woman-swimming":"\u{FCA}\uD\u\uFEF",swimming_woman:"\u{FCA}\uD\u\uFEF","man-swimming":"\u{FCA}\uD\u\uFEF",swimmer:"\u{FCA}\uD\u\uFEF",swimming_man:"\u{FCA}\uD\u\uFEF","woman-lifting-weights":"\u{FCB}\uFEF\uD\u\uFEF",weight_lifting_woman:"\u{FCB}\uFEF\uD\u\uFEF","man-lifting-weights":"\u{FCB}\uFEF\uD\u\uFEF",weight_lifter:"\u{FCB}\uFEF\uD\u\uFEF",weight_lifting_man:"\u{FCB}\uFEF\uD\u\uFEF","woman-golfing":"\u{FCC}\uFEF\uD\u\uFEF",golfing_woman:"\u{FCC}\uFEF\uD\u\uFEF","man-golfing":"\u{FCC}\uFEF\uD\u\uFEF",golfer:"\u{FCC}\uFEF\uD\u\uFEF",golfing_man:"\u{FCC}\uFEF\uD\u\uFEF",racing_motorcycle:"\u{FCD}\uFEF",racing_car:"\u{FCE}\uFEF",cricket_bat_and_ball:"\u{FCF}",volleyball:"\u{FD}",field_hockey_stick_and_ball:"\u{FD}",ice_hockey_stick_and_puck:"\u{FD}",table_tennis_paddle_and_ball:"\u{FD}",snow_capped_mountain:"\u{FD}\uFEF",camping:"\u{FD}\uFEF",beach_with_umbrella:"\u{FD}\uFEF",building_construction:"\u{FD}\uFEF",house_buildings:"\u{FD}\uFEF",cityscape:"\u{FD}\uFEF",derelict_house_building:"\u{FDA}\uFEF",classical_building:"\u{FDB}\uFEF",desert:"\u{FDC}\uFEF",desert_island:"\u{FDD}\uFEF",national_park:"\u{FDE}\uFEF",stadium:"\u{FDF}\uFEF",house:"\u{FE}",house_with_garden:"\u{FE}",office:"\u{FE}",post_office:"\u{FE}",european_post_office:"\u{FE}",hospital:"\u{FE}",bank:"\u{FE}",atm:"\u{FE}",hotel:"\u{FE}",love_hotel:"\u{FE}",convenience_store:"\u{FEA}",school:"\u{FEB}",department_store:"\u{FEC}",factory:"\u{FED}",izakaya_lantern:"\u{FEE}",lantern:"\u{FEE}",japanese_castle:"\u{FEF}",european_castle:"\u{FF}","rainbow-flag":"\u{FF}\uFEF\uD\u{F}",transgender_flag:"\u{FF}\uFEF\uD\uA\uFEF",waving_white_flag:"\u{FF}\uFEF",pirate_flag:"\u{FF}\uD\u\uFEF","flag-england":"\u{FF}\u{E}\u{E}\u{E}\u{EE}\u{E}\u{EF}","flag-scotland":"\u{FF}\u{E}\u{E}\u{E}\u{E}\u{E}\u{EF}","flag-wales":"\u{FF}\u{E}\u{E}\u{E}\u{EC}\u{E}\u{EF}",waving_black_flag:"\u{FF}",rosette:"\u{FF}\uFEF",label:"\u{FF}\uFEF",badminton_racquet_and_shuttlecock:"\u{FF}",bow_and_arrow:"\u{FF}",amphora:"\u{FFA}","skin-tone-":"\u{FFB}","skin-tone-":"\u{FFC}","skin-tone-":"\u{FFD}","skin-tone-":"\u{FFE}","skin-tone-":"\u{FFF}",rat:"\u{F}",mouse:"\u{F}",ox:"\u{F}",water_buffalo:"\u{F}",cow:"\u{F}",tiger:"\u{F}",leopard:"\u{F}",rabbit:"\u{F}",black_cat:"\u{F}\uD\uBB",cat:"\u{F}",dragon:"\u{F}",crocodile:"\u{FA}",whale:"\u{FB}",snail:"\u{FC}",snake:"\u{FD}",racehorse:"\u{FE}",ram:"\u{FF}",goat:"\u{F}",sheep:"\u{F}",monkey:"\u{F}",rooster:"\u{F}",chicken:"\u{F}",service_dog:"\u{F}\uD\u{FBA}",dog:"\u{F}",pig:"\u{F}",boar:"\u{F}",elephant:"\u{F}",octopus:"\u{F}",shell:"\u{FA}",bug:"\u{FB}",ant:"\u{FC}",bee:"\u{FD}",honeybee:"\u{FD}",ladybug:"\u{FE}",lady_beetle:"\u{FE}",fish:"\u{FF}",tropical_fish:"\u{F}",blowfish:"\u{F}",turtle:"\u{F}",hatching_chick:"\u{F}",baby_chick:"\u{F}",hatched_chick:"\u{F}",bird:"\u{F}",penguin:"\u{F}",koala:"\u{F}",poodle:"\u{F}",dromedary_camel:"\u{FA}",camel:"\u{FB}",dolphin:"\u{FC}",flipper:"\u{FC}",mouse:"\u{FD}",cow:"\u{FE}",tiger:"\u{FF}",rabbit:"\u{F}",cat:"\u{F}",dragon_face:"\u{F}",whale:"\u{F}",horse:"\u{F}",monkey_face:"\u{F}",dog:"\u{F}",pig:"\u{F}",frog:"\u{F}",hamster:"\u{F}",wolf:"\u{FA}",polar_bear:"\u{FB}\uD\u\uFEF",bear:"\u{FB}",panda_face:"\u{FC}",pig_nose:"\u{FD}",feet:"\u{FE}",paw_prints:"\u{FE}",chipmunk:"\u{FF}\uFEF",eyes:"\u{F}","eye-in-speech-bubble":"\u{F}\uFEF\uD\u{FE}\uFEF",eye:"\u{F}\uFEF",ear:"\u{F}",nose:"\u{F}",lips:"\u{F}",tongue:"\u{F}",point_up_:"\u{F}",point_down:"\u{F}",point_left:"\u{F}",point_right:"\u{F}",facepunch:"\u{FA}",punch:"\u{FA}",wave:"\u{FB}",ok_hand:"\u{FC}","+":"\u{FD}",thumbsup:"\u{FD}","-":"\u{FE}",thumbsdown:"\u{FE}",clap:"\u{FF}",open_hands:"\u{F}",crown:"\u{F}",womans_hat:"\u{F}",eyeglasses:"\u{F}",necktie:"\u{F}",shirt:"\u{F}",tshirt:"\u{F}",jeans:"\u{F}",dress:"\u{F}",kimono:"\u{F}",bikini:"\u{F}",womans_clothes:"\u{FA}",purse:"\u{FB}",handbag:"\u{FC}",pouch:"\u{FD}",mans_shoe:"\u{FE}",shoe:"\u{FE}",athletic_shoe:"\u{FF}",high_heel:"\u{F}",sandal:"\u{F}",boot:"\u{F}",footprints:"\u{F}",bust_in_silhouette:"\u{F}",busts_in_silhouette:"\u{F}",boy:"\u{F}",girl:"\u{F}","male-farmer":"\u{F}\uD\u{FE}","male-cook":"\u{F}\uD\u{F}",man_feeding_baby:"\u{F}\uD\u{FC}","male-student":"\u{F}\uD\u{F}","male-singer":"\u{F}\uD\u{FA}","male-artist":"\u{F}\uD\u{FA}","male-teacher":"\u{F}\uD\u{FEB}","male-factory-worker":"\u{F}\uD\u{FED}","man-boy-boy":"\u{F}\uD\u{F}\uD\u{F}","man-boy":"\u{F}\uD\u{F}","man-girl-boy":"\u{F}\uD\u{F}\uD\u{F}","man-girl-girl":"\u{F}\uD\u{F}\uD\u{F}","man-girl":"\u{F}\uD\u{F}","man-man-boy":"\u{F}\uD\u{F}\uD\u{F}","man-man-boy-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","man-man-girl":"\u{F}\uD\u{F}\uD\u{F}","man-man-girl-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","man-man-girl-girl":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","man-woman-boy":"\u{F}\uD\u{F}\uD\u{F}",family:"\u{F}\uD\u{F}\uD\u{F}","man-woman-boy-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","man-woman-girl":"\u{F}\uD\u{F}\uD\u{F}","man-woman-girl-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","man-woman-girl-girl":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","male-technologist":"\u{F}\uD\u{FBB}","male-office-worker":"\u{F}\uD\u{FBC}","male-mechanic":"\u{F}\uD\u{F}","male-scientist":"\u{F}\uD\u{FC}","male-astronaut":"\u{F}\uD\u{F}","male-firefighter":"\u{F}\uD\u{F}",man_with_probing_cane:"\u{F}\uD\u{FAF}",red_haired_man:"\u{F}\uD\u{FB}",curly_haired_man:"\u{F}\uD\u{FB}",bald_man:"\u{F}\uD\u{FB}",white_haired_man:"\u{F}\uD\u{FB}",man_in_motorized_wheelchair:"\u{F}\uD\u{FBC}",man_in_manual_wheelchair:"\u{F}\uD\u{FBD}","male-doctor":"\u{F}\uD\u\uFEF","male-judge":"\u{F}\uD\u\uFEF","male-pilot":"\u{F}\uD\u\uFEF","man-heart-man":"\u{F}\uD\u\uFEF\uD\u{F}","man-kiss-man":"\u{F}\uD\u\uFEF\uD\u{FB}\uD\u{F}",man:"\u{F}","female-farmer":"\u{F}\uD\u{FE}","female-cook":"\u{F}\uD\u{F}",woman_feeding_baby:"\u{F}\uD\u{FC}","female-student":"\u{F}\uD\u{F}","female-singer":"\u{F}\uD\u{FA}","female-artist":"\u{F}\uD\u{FA}","female-teacher":"\u{F}\uD\u{FEB}","female-factory-worker":"\u{F}\uD\u{FED}","woman-boy-boy":"\u{F}\uD\u{F}\uD\u{F}","woman-boy":"\u{F}\uD\u{F}","woman-girl-boy":"\u{F}\uD\u{F}\uD\u{F}","woman-girl-girl":"\u{F}\uD\u{F}\uD\u{F}","woman-girl":"\u{F}\uD\u{F}","woman-woman-boy":"\u{F}\uD\u{F}\uD\u{F}","woman-woman-boy-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","woman-woman-girl":"\u{F}\uD\u{F}\uD\u{F}","woman-woman-girl-boy":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","woman-woman-girl-girl":"\u{F}\uD\u{F}\uD\u{F}\uD\u{F}","female-technologist":"\u{F}\uD\u{FBB}","female-office-worker":"\u{F}\uD\u{FBC}","female-mechanic":"\u{F}\uD\u{F}","female-scientist":"\u{F}\uD\u{FC}","female-astronaut":"\u{F}\uD\u{F}","female-firefighter":"\u{F}\uD\u{F}",woman_with_probing_cane:"\u{F}\uD\u{FAF}",red_haired_woman:"\u{F}\uD\u{FB}",curly_haired_woman:"\u{F}\uD\u{FB}",bald_woman:"\u{F}\uD\u{FB}",white_haired_woman:"\u{F}\uD\u{FB}",woman_in_motorized_wheelchair:"\u{F}\uD\u{FBC}",woman_in_manual_wheelchair:"\u{F}\uD\u{FBD}","female-doctor":"\u{F}\uD\u\uFEF","female-judge":"\u{F}\uD\u\uFEF","female-pilot":"\u{F}\uD\u\uFEF","woman-heart-man":"\u{F}\uD\u\uFEF\uD\u{F}","woman-heart-woman":"\u{F}\uD\u\uFEF\uD\u{F}","woman-kiss-man":"\u{F}\uD\u\uFEF\uD\u{FB}\uD\u{F}","woman-kiss-woman":"\u{F}\uD\u\uFEF\uD\u{FB}\uD\u{F}",woman:"\u{F}",man_and_woman_holding_hands:"\u{FB}",woman_and_man_holding_hands:"\u{FB}",couple:"\u{FB}",two_men_holding_hands:"\u{FC}",men_holding_hands:"\u{FC}",two_women_holding_hands:"\u{FD}",women_holding_hands:"\u{FD}","female-police-officer":"\u{FE}\uD\u\uFEF","male-police-officer":"\u{FE}\uD\u\uFEF",cop:"\u{FE}\uD\u\uFEF","women-with-bunny-ears-partying":"\u{FF}\uD\u\uFEF","woman-with-bunny-ears-partying":"\u{FF}\uD\u\uFEF",dancers:"\u{FF}\uD\u\uFEF","men-with-bunny-ears-partying":"\u{FF}\uD\u\uFEF","man-with-bunny-ears-partying":"\u{FF}\uD\u\uFEF",woman_with_veil:"\u{F}\uD\u\uFEF",man_with_veil:"\u{F}\uD\u\uFEF",bride_with_veil:"\u{F}","blond-haired-woman":"\u{F}\uD\u\uFEF","blond-haired-man":"\u{F}\uD\u\uFEF",person_with_blond_hair:"\u{F}\uD\u\uFEF",man_with_gua_pi_mao:"\u{F}","woman-wearing-turban":"\u{F}\uD\u\uFEF",woman_with_turban:"\u{F}\uD\u\uFEF","man-wearing-turban":"\u{F}\uD\u\uFEF",man_with_turban:"\u{F}\uD\u\uFEF",older_man:"\u{F}",older_woman:"\u{F}",baby:"\u{F}","female-construction-worker":"\u{F}\uD\u\uFEF","male-construction-worker":"\u{F}\uD\u\uFEF",construction_worker:"\u{F}\uD\u\uFEF",princess:"\u{F}",japanese_ogre:"\u{F}",japanese_goblin:"\u{FA}",ghost:"\u{FB}",angel:"\u{FC}",alien:"\u{FD}",space_invader:"\u{FE}",imp:"\u{FF}",skull:"\u{F}","woman-tipping-hand":"\u{F}\uD\u\uFEF",information_desk_person:"\u{F}\uD\u\uFEF",tipping_hand_woman:"\u{F}\uD\u\uFEF","man-tipping-hand":"\u{F}\uD\u\uFEF",tipping_hand_man:"\u{F}\uD\u\uFEF","female-guard":"\u{F}\uD\u\uFEF",guardswoman:"\u{F}\uD\u\uFEF","male-guard":"\u{F}\uD\u\uFEF",guardsman:"\u{F}\uD\u\uFEF",dancer:"\u{F}",lipstick:"\u{F}",nail_care:"\u{F}","woman-getting-massage":"\u{F}\uD\u\uFEF",massage:"\u{F}\uD\u\uFEF","man-getting-massage":"\u{F}\uD\u\uFEF","woman-getting-haircut":"\u{F}\uD\u\uFEF",haircut:"\u{F}\uD\u\uFEF","man-getting-haircut":"\u{F}\uD\u\uFEF",barber:"\u{F}",syringe:"\u{F}",pill:"\u{FA}",kiss:"\u{FB}",love_letter:"\u{FC}",ring:"\u{FD}",gem:"\u{FE}",couplekiss:"\u{FF}",bouquet:"\u{F}",couple_with_heart:"\u{F}",wedding:"\u{F}",heartbeat:"\u{F}",broken_heart:"\u{F}",two_hearts:"\u{F}",sparkling_heart:"\u{F}",heartpulse:"\u{F}",cupid:"\u{F}",blue_heart:"\u{F}",green_heart:"\u{FA}",yellow_heart:"\u{FB}",purple_heart:"\u{FC}",gift_heart:"\u{FD}",revolving_hearts:"\u{FE}",heart_decoration:"\u{FF}",diamond_shape_with_a_dot_inside:"\u{FA}",bulb:"\u{FA}",anger:"\u{FA}",bomb:"\u{FA}",zzz:"\u{FA}",boom:"\u{FA}",collision:"\u{FA}",sweat_drops:"\u{FA}",droplet:"\u{FA}",dash:"\u{FA}",hankey:"\u{FA}",poop:"\u{FA}",shit:"\u{FA}",muscle:"\u{FAA}",dizzy:"\u{FAB}",speech_balloon:"\u{FAC}",thought_balloon:"\u{FAD}",white_flower:"\u{FAE}",moneybag:"\u{FB}",currency_exchange:"\u{FB}",heavy_dollar_sign:"\u{FB}",credit_card:"\u{FB}",yen:"\u{FB}",dollar:"\u{FB}",euro:"\u{FB}",pound:"\u{FB}",money_with_wings:"\u{FB}",chart:"\u{FB}",seat:"\u{FBA}",computer:"\u{FBB}",briefcase:"\u{FBC}",minidisc:"\u{FBD}",floppy_disk:"\u{FBE}",cd:"\u{FBF}",dvd:"\u{FC}",file_folder:"\u{FC}",open_file_folder:"\u{FC}",page_with_curl:"\u{FC}",page_facing_up:"\u{FC}",date:"\u{FC}",calendar:"\u{FC}",card_index:"\u{FC}",chart_with_upwards_trend:"\u{FC}",chart_with_downwards_trend:"\u{FC}",bar_chart:"\u{FCA}",clipboard:"\u{FCB}",pushpin:"\u{FCC}",round_pushpin:"\u{FCD}",paperclip:"\u{FCE}",straight_ruler:"\u{FCF}",triangular_ruler:"\u{FD}",bookmark_tabs:"\u{FD}",ledger:"\u{FD}",notebook:"\u{FD}",notebook_with_decorative_cover:"\u{FD}",closed_book:"\u{FD}",book:"\u{FD}",open_book:"\u{FD}",green_book:"\u{FD}",blue_book:"\u{FD}",orange_book:"\u{FD}",books:"\u{FDA}",name_badge:"\u{FDB}",scroll:"\u{FDC}",memo:"\u{FDD}",pencil:"\u{FDD}",telephone_receiver:"\u{FDE}",pager:"\u{FDF}",fax:"\u{FE}",satellite_antenna:"\u{FE}",loudspeaker:"\u{FE}",mega:"\u{FE}",outbox_tray:"\u{FE}",inbox_tray:"\u{FE}",package:"\u{FE}","e-mail":"\u{FE}",incoming_envelope:"\u{FE}",envelope_with_arrow:"\u{FE}",mailbox_closed:"\u{FEA}",mailbox:"\u{FEB}",mailbox_with_mail:"\u{FEC}",mailbox_with_no_mail:"\u{FED}",postbox:"\u{FEE}",postal_horn:"\u{FEF}",newspaper:"\u{FF}",iphone:"\u{FF}",calling:"\u{FF}",vibration_mode:"\u{FF}",mobile_phone_off:"\u{FF}",no_mobile_phones:"\u{FF}",signal_strength:"\u{FF}",camera:"\u{FF}",camera_with_flash:"\u{FF}",video_camera:"\u{FF}",tv:"\u{FFA}",radio:"\u{FFB}",vhs:"\u{FFC}",film_projector:"\u{FFD}\uFEF",prayer_beads:"\u{FFF}",twisted_rightwards_arrows:"\u{F}",repeat:"\u{F}",repeat_one:"\u{F}",arrows_clockwise:"\u{F}",arrows_counterclockwise:"\u{F}",low_brightness:"\u{F}",high_brightness:"\u{F}",mute:"\u{F}",speaker:"\u{F}",sound:"\u{F}",loud_sound:"\u{FA}",battery:"\u{FB}",electric_plug:"\u{FC}",mag:"\u{FD}",mag_right:"\u{FE}",lock_with_ink_pen:"\u{FF}",closed_lock_with_key:"\u{F}",key:"\u{F}",lock:"\u{F}",unlock:"\u{F}",bell:"\u{F}",no_bell:"\u{F}",bookmark:"\u{F}",link:"\u{F}",radio_button:"\u{F}",back:"\u{F}",end:"\u{FA}",on:"\u{FB}",soon:"\u{FC}",top:"\u{FD}",underage:"\u{FE}",keycap_ten:"\u{FF}",capital_abcd:"\u{F}",abcd:"\u{F}",symbols:"\u{F}",abc:"\u{F}",fire:"\u{F}",flashlight:"\u{F}",wrench:"\u{F}",hammer:"\u{F}",nut_and_bolt:"\u{F}",hocho:"\u{FA}",knife:"\u{FA}",gun:"\u{FB}",microscope:"\u{FC}",telescope:"\u{FD}",crystal_ball:"\u{FE}",six_pointed_star:"\u{FF}",beginner:"\u{F}",trident:"\u{F}",black_square_button:"\u{F}",white_square_button:"\u{F}",red_circle:"\u{F}",large_blue_circle:"\u{F}",large_orange_diamond:"\u{F}",large_blue_diamond:"\u{F}",small_orange_diamond:"\u{F}",small_blue_diamond:"\u{F}",small_red_triangle:"\u{FA}",small_red_triangle_down:"\u{FB}",arrow_up_small:"\u{FC}",arrow_down_small:"\u{FD}",om_symbol:"\u{F}\uFEF",dove_of_peace:"\u{FA}\uFEF",kaaba:"\u{FB}",mosque:"\u{FC}",synagogue:"\u{FD}",menorah_with_nine_branches:"\u{FE}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{FA}",clock:"\u{FB}",clock:"\u{FC}",clock:"\u{FD}",clock:"\u{FE}",clock:"\u{FF}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",clock:"\u{F}",candle:"\u{FF}\uFEF",mantelpiece_clock:"\u{F}\uFEF",hole:"\u{F}\uFEF",man_in_business_suit_levitating:"\u{F}\uFEF","female-detective":"\u{F}\uFEF\uD\u\uFEF","male-detective":"\u{F}\uFEF\uD\u\uFEF",sleuth_or_spy:"\u{F}\uFEF\uD\u\uFEF",dark_sunglasses:"\u{F}\uFEF",spider:"\u{F}\uFEF",spider_web:"\u{F}\uFEF",joystick:"\u{F}\uFEF",man_dancing:"\u{FA}",linked_paperclips:"\u{F}\uFEF",lower_left_ballpoint_pen:"\u{FA}\uFEF",lower_left_fountain_pen:"\u{FB}\uFEF",lower_left_paintbrush:"\u{FC}\uFEF",lower_left_crayon:"\u{FD}\uFEF",raised_hand_with_fingers_splayed:"\u{F}\uFEF",middle_finger:"\u{F}",reversed_hand_with_middle_finger_extended:"\u{F}","spock-hand":"\u{F}",black_heart:"\u{FA}",desktop_computer:"\u{FA}\uFEF",printer:"\u{FA}\uFEF",three_button_mouse:"\u{FB}\uFEF",trackball:"\u{FB}\uFEF",frame_with_picture:"\u{FBC}\uFEF",card_index_dividers:"\u{FC}\uFEF",card_file_box:"\u{FC}\uFEF",file_cabinet:"\u{FC}\uFEF",wastebasket:"\u{FD}\uFEF",spiral_note_pad:"\u{FD}\uFEF",spiral_calendar_pad:"\u{FD}\uFEF",compression:"\u{FDC}\uFEF",old_key:"\u{FDD}\uFEF",rolled_up_newspaper:"\u{FDE}\uFEF",dagger_knife:"\u{FE}\uFEF",speaking_head_in_silhouette:"\u{FE}\uFEF",left_speech_bubble:"\u{FE}\uFEF",right_anger_bubble:"\u{FEF}\uFEF",ballot_box_with_ballot:"\u{FF}\uFEF",world_map:"\u{FFA}\uFEF",mount_fuji:"\u{FFB}",tokyo_tower:"\u{FFC}",statue_of_liberty:"\u{FFD}",japan:"\u{FFE}",moyai:"\u{FFF}",grinning:"\u{F}",grin:"\u{F}",joy:"\u{F}",smiley:"\u{F}",smile:"\u{F}",sweat_smile:"\u{F}",laughing:"\u{F}",satisfied:"\u{F}",innocent:"\u{F}",smiling_imp:"\u{F}",wink:"\u{F}",blush:"\u{FA}",yum:"\u{FB}",relieved:"\u{FC}",heart_eyes:"\u{FD}",sunglasses:"\u{FE}",smirk:"\u{FF}",neutral_face:"\u{F}",expressionless:"\u{F}",unamused:"\u{F}",sweat:"\u{F}",pensive:"\u{F}",confused:"\u{F}",confounded:"\u{F}",kissing:"\u{F}",kissing_heart:"\u{F}",kissing_smiling_eyes:"\u{F}",kissing_closed_eyes:"\u{FA}",stuck_out_tongue:"\u{FB}",stuck_out_tongue_winking_eye:"\u{FC}",stuck_out_tongue_closed_eyes:"\u{FD}",disappointed:"\u{FE}",worried:"\u{FF}",angry:"\u{F}",rage:"\u{F}",cry:"\u{F}",persevere:"\u{F}",triumph:"\u{F}",disappointed_relieved:"\u{F}",frowning:"\u{F}",anguished:"\u{F}",fearful:"\u{F}",weary:"\u{F}",sleepy:"\u{FA}",tired_face:"\u{FB}",grimacing:"\u{FC}",sob:"\u{FD}",face_exhaling:"\u{FE}\uD\u{FA}",open_mouth:"\u{FE}",hushed:"\u{FF}",cold_sweat:"\u{F}",scream:"\u{F}",astonished:"\u{F}",flushed:"\u{F}",sleeping:"\u{F}",face_with_spiral_eyes:"\u{F}\uD\u{FAB}",dizzy_face:"\u{F}",face_in_clouds:"\u{F}\uD\u{FB}\uFEF",no_mouth:"\u{F}",mask:"\u{F}",smile_cat:"\u{F}",joy_cat:"\u{F}",smiley_cat:"\u{FA}",heart_eyes_cat:"\u{FB}",smirk_cat:"\u{FC}",kissing_cat:"\u{FD}",pouting_cat:"\u{FE}",crying_cat_face:"\u{FF}",scream_cat:"\u{F}",slightly_frowning_face:"\u{F}",slightly_smiling_face:"\u{F}",upside_down_face:"\u{F}",face_with_rolling_eyes:"\u{F}","woman-gesturing-no":"\u{F}\uD\u\uFEF",no_good:"\u{F}\uD\u\uFEF","man-gesturing-no":"\u{F}\uD\u\uFEF","woman-gesturing-ok":"\u{F}\uD\u\uFEF",ok_woman:"\u{F}\uD\u\uFEF","man-gesturing-ok":"\u{F}\uD\u\uFEF","woman-bowing":"\u{F}\uD\u\uFEF",bowing_woman:"\u{F}\uD\u\uFEF","man-bowing":"\u{F}\uD\u\uFEF",bow:"\u{F}\uD\u\uFEF",bowing_man:"\u{F}\uD\u\uFEF",see_no_evil:"\u{F}",hear_no_evil:"\u{F}",speak_no_evil:"\u{FA}","woman-raising-hand":"\u{FB}\uD\u\uFEF",raising_hand:"\u{FB}\uD\u\uFEF",raising_hand_woman:"\u{FB}\uD\u\uFEF","man-raising-hand":"\u{FB}\uD\u\uFEF",raising_hand_man:"\u{FB}\uD\u\uFEF",raised_hands:"\u{FC}","woman-frowning":"\u{FD}\uD\u\uFEF",person_frowning:"\u{FD}\uD\u\uFEF",frowning_woman:"\u{FD}\uD\u\uFEF","man-frowning":"\u{FD}\uD\u\uFEF",frowning_man:"\u{FD}\uD\u\uFEF","woman-pouting":"\u{FE}\uD\u\uFEF",person_with_pouting_face:"\u{FE}\uD\u\uFEF",pouting_woman:"\u{FE}\uD\u\uFEF","man-pouting":"\u{FE}\uD\u\uFEF",pouting_man:"\u{FE}\uD\u\uFEF",pray:"\u{FF}",rocket:"\u{F}",helicopter:"\u{F}",steam_locomotive:"\u{F}",railway_car:"\u{F}",bullettrain_side:"\u{F}",bullettrain_front:"\u{F}",train:"\u{F}",metro:"\u{F}",light_rail:"\u{F}",station:"\u{F}",tram:"\u{FA}",train:"\u{FB}",bus:"\u{FC}",oncoming_bus:"\u{FD}",trolleybus:"\u{FE}",busstop:"\u{FF}",minibus:"\u{F}",ambulance:"\u{F}",fire_engine:"\u{F}",police_car:"\u{F}",oncoming_police_car:"\u{F}",taxi:"\u{F}",oncoming_taxi:"\u{F}",car:"\u{F}",red_car:"\u{F}",oncoming_automobile:"\u{F}",blue_car:"\u{F}",truck:"\u{FA}",articulated_lorry:"\u{FB}",tractor:"\u{FC}",monorail:"\u{FD}",mountain_railway:"\u{FE}",suspension_railway:"\u{FF}",mountain_cableway:"\u{FA}",aerial_tramway:"\u{FA}",ship:"\u{FA}","woman-rowing-boat":"\u{FA}\uD\u\uFEF",rowing_woman:"\u{FA}\uD\u\uFEF","man-rowing-boat":"\u{FA}\uD\u\uFEF",rowboat:"\u{FA}\uD\u\uFEF",rowing_man:"\u{FA}\uD\u\uFEF",speedboat:"\u{FA}",traffic_light:"\u{FA}",vertical_traffic_light:"\u{FA}",construction:"\u{FA}",rotating_light:"\u{FA}",triangular_flag_on_post:"\u{FA}",door:"\u{FAA}",no_entry_sign:"\u{FAB}",smoking:"\u{FAC}",no_smoking:"\u{FAD}",put_litter_in_its_place:"\u{FAE}",do_not_litter:"\u{FAF}",potable_water:"\u{FB}","non-potable_water":"\u{FB}",bike:"\u{FB}",no_bicycles:"\u{FB}","woman-biking":"\u{FB}\uD\u\uFEF",biking_woman:"\u{FB}\uD\u\uFEF","man-biking":"\u{FB}\uD\u\uFEF",bicyclist:"\u{FB}\uD\u\uFEF",biking_man:"\u{FB}\uD\u\uFEF","woman-mountain-biking":"\u{FB}\uD\u\uFEF",mountain_biking_woman:"\u{FB}\uD\u\uFEF","man-mountain-biking":"\u{FB}\uD\u\uFEF",mountain_bicyclist:"\u{FB}\uD\u\uFEF",mountain_biking_man:"\u{FB}\uD\u\uFEF","woman-walking":"\u{FB}\uD\u\uFEF",walking_woman:"\u{FB}\uD\u\uFEF","man-walking":"\u{FB}\uD\u\uFEF",walking:"\u{FB}\uD\u\uFEF",walking_man:"\u{FB}\uD\u\uFEF",no_pedestrians:"\u{FB}",children_crossing:"\u{FB}",mens:"\u{FB}",womens:"\u{FBA}",restroom:"\u{FBB}",baby_symbol:"\u{FBC}",toilet:"\u{FBD}",wc:"\u{FBE}",shower:"\u{FBF}",bath:"\u{FC}",bathtub:"\u{FC}",passport_control:"\u{FC}",customs:"\u{FC}",baggage_claim:"\u{FC}",left_luggage:"\u{FC}",couch_and_lamp:"\u{FCB}\uFEF",sleeping_accommodation:"\u{FCC}",shopping_bags:"\u{FCD}\uFEF",bellhop_bell:"\u{FCE}\uFEF",bed:"\u{FCF}\uFEF",place_of_worship:"\u{FD}",octagonal_sign:"\u{FD}",shopping_trolley:"\u{FD}",hindu_temple:"\u{FD}",hut:"\u{FD}",elevator:"\u{FD}",hammer_and_wrench:"\u{FE}\uFEF",shield:"\u{FE}\uFEF",oil_drum:"\u{FE}\uFEF",motorway:"\u{FE}\uFEF",railway_track:"\u{FE}\uFEF",motor_boat:"\u{FE}\uFEF",small_airplane:"\u{FE}\uFEF",airplane_departure:"\u{FEB}",airplane_arriving:"\u{FEC}",satellite:"\u{FF}\uFEF",passenger_ship:"\u{FF}\uFEF",scooter:"\u{FF}",motor_scooter:"\u{FF}",canoe:"\u{FF}",sled:"\u{FF}",flying_saucer:"\u{FF}",skateboard:"\u{FF}",auto_rickshaw:"\u{FFA}",pickup_truck:"\u{FFB}",roller_skate:"\u{FFC}",large_orange_circle:"\u{FE}",large_yellow_circle:"\u{FE}",large_green_circle:"\u{FE}",large_purple_circle:"\u{FE}",large_brown_circle:"\u{FE}",large_red_square:"\u{FE}",large_blue_square:"\u{FE}",large_orange_square:"\u{FE}",large_yellow_square:"\u{FE}",large_green_square:"\u{FE}",large_purple_square:"\u{FEA}",large_brown_square:"\u{FEB}",pinched_fingers:"\u{FC}",white_heart:"\u{FD}",brown_heart:"\u{FE}",pinching_hand:"\u{FF}",zipper_mouth_face:"\u{F}",money_mouth_face:"\u{F}",face_with_thermometer:"\u{F}",nerd_face:"\u{F}",thinking_face:"\u{F}",face_with_head_bandage:"\u{F}",robot_face:"\u{F}",hugging_face:"\u{F}",the_horns:"\u{F}",sign_of_the_horns:"\u{F}",call_me_hand:"\u{F}",raised_back_of_hand:"\u{FA}","left-facing_fist":"\u{FB}","right-facing_fist":"\u{FC}",handshake:"\u{FD}",crossed_fingers:"\u{FE}",hand_with_index_and_middle_fingers_crossed:"\u{FE}",i_love_you_hand_sign:"\u{FF}",face_with_cowboy_hat:"\u{F}",clown_face:"\u{F}",nauseated_face:"\u{F}",rolling_on_the_floor_laughing:"\u{F}",drooling_face:"\u{F}",lying_face:"\u{F}","woman-facepalming":"\u{F}\uD\u\uFEF","man-facepalming":"\u{F}\uD\u\uFEF",face_palm:"\u{F}",sneezing_face:"\u{F}",face_with_raised_eyebrow:"\u{F}",face_with_one_eyebrow_raised:"\u{F}","star-struck":"\u{F}",grinning_face_with_star_eyes:"\u{F}",zany_face:"\u{FA}",grinning_face_with_one_large_and_one_small_eye:"\u{FA}",shushing_face:"\u{FB}",face_with_finger_covering_closed_lips:"\u{FB}",face_with_symbols_on_mouth:"\u{FC}",serious_face_with_symbols_covering_mouth:"\u{FC}",face_with_hand_over_mouth:"\u{FD}",smiling_face_with_smiling_eyes_and_hand_covering_mouth:"\u{FD}",face_vomiting:"\u{FE}",face_with_open_mouth_vomiting:"\u{FE}",exploding_head:"\u{FF}",shocked_face_with_exploding_head:"\u{FF}",pregnant_woman:"\u{F}","breast-feeding":"\u{F}",palms_up_together:"\u{F}",selfie:"\u{F}",prince:"\u{F}",woman_in_tuxedo:"\u{F}\uD\u\uFEF",man_in_tuxedo:"\u{F}\uD\u\uFEF",person_in_tuxedo:"\u{F}",mrs_claus:"\u{F}",mother_christmas:"\u{F}","woman-shrugging":"\u{F}\uD\u\uFEF","man-shrugging":"\u{F}\uD\u\uFEF",shrug:"\u{F}","woman-cartwheeling":"\u{F}\uD\u\uFEF","man-cartwheeling":"\u{F}\uD\u\uFEF",person_doing_cartwheel:"\u{F}","woman-juggling":"\u{F}\uD\u\uFEF","man-juggling":"\u{F}\uD\u\uFEF",juggling:"\u{F}",fencer:"\u{FA}","woman-wrestling":"\u{FC}\uD\u\uFEF","man-wrestling":"\u{FC}\uD\u\uFEF",wrestlers:"\u{FC}","woman-playing-water-polo":"\u{FD}\uD\u\uFEF","man-playing-water-polo":"\u{FD}\uD\u\uFEF",water_polo:"\u{FD}","woman-playing-handball":"\u{FE}\uD\u\uFEF","man-playing-handball":"\u{FE}\uD\u\uFEF",handball:"\u{FE}",diving_mask:"\u{FF}",wilted_flower:"\u{F}",drum_with_drumsticks:"\u{F}",clinking_glasses:"\u{F}",tumbler_glass:"\u{F}",spoon:"\u{F}",goal_net:"\u{F}",first_place_medal:"\u{F}",second_place_medal:"\u{F}",third_place_medal:"\u{F}",boxing_glove:"\u{FA}",martial_arts_uniform:"\u{FB}",curling_stone:"\u{FC}",lacrosse:"\u{FD}",softball:"\u{FE}",flying_disc:"\u{FF}",croissant:"\u{F}",avocado:"\u{F}",cucumber:"\u{F}",bacon:"\u{F}",potato:"\u{F}",carrot:"\u{F}",baguette_bread:"\u{F}",green_salad:"\u{F}",shallow_pan_of_food:"\u{F}",stuffed_flatbread:"\u{F}",egg:"\u{FA}",glass_of_milk:"\u{FB}",peanuts:"\u{FC}",kiwifruit:"\u{FD}",pancakes:"\u{FE}",dumpling:"\u{FF}",fortune_cookie:"\u{F}",takeout_box:"\u{F}",chopsticks:"\u{F}",bowl_with_spoon:"\u{F}",cup_with_straw:"\u{F}",coconut:"\u{F}",broccoli:"\u{F}",pie:"\u{F}",pretzel:"\u{F}",cut_of_meat:"\u{F}",sandwich:"\u{FA}",canned_food:"\u{FB}",leafy_green:"\u{FC}",mango:"\u{FD}",moon_cake:"\u{FE}",bagel:"\u{FF}",smiling_face_with__hearts:"\u{F}",yawning_face:"\u{F}",smiling_face_with_tear:"\u{F}",partying_face:"\u{F}",woozy_face:"\u{F}",hot_face:"\u{F}",cold_face:"\u{F}",ninja:"\u{F}",disguised_face:"\u{F}",pleading_face:"\u{FA}",sari:"\u{FB}",lab_coat:"\u{FC}",goggles:"\u{FD}",hiking_boot:"\u{FE}",womans_flat_shoe:"\u{FF}",crab:"\u{F}",lion_face:"\u{F}",scorpion:"\u{F}",turkey:"\u{F}",unicorn_face:"\u{F}",eagle:"\u{F}",duck:"\u{F}",bat:"\u{F}",shark:"\u{F}",owl:"\u{F}",fox_face:"\u{FA}",butterfly:"\u{FB}",deer:"\u{FC}",gorilla:"\u{FD}",lizard:"\u{FE}",rhinoceros:"\u{FF}",shrimp:"\u{F}",squid:"\u{F}",giraffe_face:"\u{F}",zebra_face:"\u{F}",hedgehog:"\u{F}",sauropod:"\u{F}","t-rex":"\u{F}",cricket:"\u{F}",kangaroo:"\u{F}",llama:"\u{F}",peacock:"\u{FA}",hippopotamus:"\u{FB}",parrot:"\u{FC}",raccoon:"\u{FD}",lobster:"\u{FE}",mosquito:"\u{FF}",microbe:"\u{FA}",badger:"\u{FA}",swan:"\u{FA}",mammoth:"\u{FA}",dodo:"\u{FA}",sloth:"\u{FA}",otter:"\u{FA}",orangutan:"\u{FA}",skunk:"\u{FA}",flamingo:"\u{FA}",oyster:"\u{FAA}",beaver:"\u{FAB}",bison:"\u{FAC}",seal:"\u{FAD}",guide_dog:"\u{FAE}",probing_cane:"\u{FAF}",bone:"\u{FB}",leg:"\u{FB}",foot:"\u{FB}",tooth:"\u{FB}",female_superhero:"\u{FB}\uD\u\uFEF",male_superhero:"\u{FB}\uD\u\uFEF",superhero:"\u{FB}",female_supervillain:"\u{FB}\uD\u\uFEF",male_supervillain:"\u{FB}\uD\u\uFEF",supervillain:"\u{FB}",safety_vest:"\u{FBA}",ear_with_hearing_aid:"\u{FBB}",motorized_wheelchair:"\u{FBC}",manual_wheelchair:"\u{FBD}",mechanical_arm:"\u{FBE}",mechanical_leg:"\u{FBF}",cheese_wedge:"\u{FC}",cupcake:"\u{FC}",salt:"\u{FC}",beverage_box:"\u{FC}",garlic:"\u{FC}",onion:"\u{FC}",falafel:"\u{FC}",waffle:"\u{FC}",butter:"\u{FC}",mate_drink:"\u{FC}",ice_cube:"\u{FCA}",bubble_tea:"\u{FCB}",woman_standing:"\u{FCD}\uD\u\uFEF",man_standing:"\u{FCD}\uD\u\uFEF",standing_person:"\u{FCD}",woman_kneeling:"\u{FCE}\uD\u\uFEF",man_kneeling:"\u{FCE}\uD\u\uFEF",kneeling_person:"\u{FCE}",deaf_woman:"\u{FCF}\uD\u\uFEF",deaf_man:"\u{FCF}\uD\u\uFEF",deaf_person:"\u{FCF}",face_with_monocle:"\u{FD}",farmer:"\u{FD}\uD\u{FE}",cook:"\u{FD}\uD\u{F}",person_feeding_baby:"\u{FD}\uD\u{FC}",mx_claus:"\u{FD}\uD\u{F}",student:"\u{FD}\uD\u{F}",singer:"\u{FD}\uD\u{FA}",artist:"\u{FD}\uD\u{FA}",teacher:"\u{FD}\uD\u{FEB}",factory_worker:"\u{FD}\uD\u{FED}",technologist:"\u{FD}\uD\u{FBB}",office_worker:"\u{FD}\uD\u{FBC}",mechanic:"\u{FD}\uD\u{F}",scientist:"\u{FD}\uD\u{FC}",astronaut:"\u{FD}\uD\u{F}",firefighter:"\u{FD}\uD\u{F}",people_holding_hands:"\u{FD}\uD\u{FD}\uD\u{FD}",person_with_probing_cane:"\u{FD}\uD\u{FAF}",red_haired_person:"\u{FD}\uD\u{FB}",curly_haired_person:"\u{FD}\uD\u{FB}",bald_person:"\u{FD}\uD\u{FB}",white_haired_person:"\u{FD}\uD\u{FB}",person_in_motorized_wheelchair:"\u{FD}\uD\u{FBC}",person_in_manual_wheelchair:"\u{FD}\uD\u{FBD}",health_worker:"\u{FD}\uD\u\uFEF",judge:"\u{FD}\uD\u\uFEF",pilot:"\u{FD}\uD\u\uFEF",adult:"\u{FD}",child:"\u{FD}",older_adult:"\u{FD}",woman_with_beard:"\u{FD}\uD\u\uFEF",man_with_beard:"\u{FD}\uD\u\uFEF",bearded_person:"\u{FD}",person_with_headscarf:"\u{FD}",woman_in_steamy_room:"\u{FD}\uD\u\uFEF",man_in_steamy_room:"\u{FD}\uD\u\uFEF",person_in_steamy_room:"\u{FD}\uD\u\uFEF",woman_climbing:"\u{FD}\uD\u\uFEF",person_climbing:"\u{FD}\uD\u\uFEF",man_climbing:"\u{FD}\uD\u\uFEF",woman_in_lotus_position:"\u{FD}\uD\u\uFEF",person_in_lotus_position:"\u{FD}\uD\u\uFEF",man_in_lotus_position:"\u{FD}\uD\u\uFEF",female_mage:"\u{FD}\uD\u\uFEF",mage:"\u{FD}\uD\u\uFEF",male_mage:"\u{FD}\uD\u\uFEF",female_fairy:"\u{FDA}\uD\u\uFEF",fairy:"\u{FDA}\uD\u\uFEF",male_fairy:"\u{FDA}\uD\u\uFEF",female_vampire:"\u{FDB}\uD\u\uFEF",vampire:"\u{FDB}\uD\u\uFEF",male_vampire:"\u{FDB}\uD\u\uFEF",mermaid:"\u{FDC}\uD\u\uFEF",merman:"\u{FDC}\uD\u\uFEF",merperson:"\u{FDC}\uD\u\uFEF",female_elf:"\u{FDD}\uD\u\uFEF",male_elf:"\u{FDD}\uD\u\uFEF",elf:"\u{FDD}\uD\u\uFEF",female_genie:"\u{FDE}\uD\u\uFEF",male_genie:"\u{FDE}\uD\u\uFEF",genie:"\u{FDE}\uD\u\uFEF",female_zombie:"\u{FDF}\uD\u\uFEF",male_zombie:"\u{FDF}\uD\u\uFEF",zombie:"\u{FDF}\uD\u\uFEF",brain:"\u{FE}",orange_heart:"\u{FE}",billed_cap:"\u{FE}",scarf:"\u{FE}",gloves:"\u{FE}",coat:"\u{FE}",socks:"\u{FE}",red_envelope:"\u{FE}",firecracker:"\u{FE}",jigsaw:"\u{FE}",test_tube:"\u{FEA}",petri_dish:"\u{FEB}",dna:"\u{FEC}",compass:"\u{FED}",abacus:"\u{FEE}",fire_extinguisher:"\u{FEF}",toolbox:"\u{FF}",bricks:"\u{FF}",magnet:"\u{FF}",luggage:"\u{FF}",lotion_bottle:"\u{FF}",thread:"\u{FF}",yarn:"\u{FF}",safety_pin:"\u{FF}",teddy_bear:"\u{FF}",broom:"\u{FF}",basket:"\u{FFA}",roll_of_paper:"\u{FFB}",soap:"\u{FFC}",sponge:"\u{FFD}",receipt:"\u{FFE}",nazar_amulet:"\u{FFF}",ballet_shoes:"\u{FA}","one-piece_swimsuit":"\u{FA}",briefs:"\u{FA}",shorts:"\u{FA}",thong_sandal:"\u{FA}",drop_of_blood:"\u{FA}",adhesive_bandage:"\u{FA}",stethoscope:"\u{FAA}","yo-yo":"\u{FA}",kite:"\u{FA}",parachute:"\u{FA}",boomerang:"\u{FA}",magic_wand:"\u{FA}",pinata:"\u{FA}",nesting_dolls:"\u{FA}",ringed_planet:"\u{FA}",chair:"\u{FA}",razor:"\u{FA}",axe:"\u{FA}",diya_lamp:"\u{FA}",banjo:"\u{FA}",military_helmet:"\u{FA}",accordion:"\u{FA}",long_drum:"\u{FA}",coin:"\u{FA}",carpentry_saw:"\u{FAA}",screwdriver:"\u{FAB}",ladder:"\u{FAC}",hook:"\u{FAD}",mirror:"\u{FAE}",window:"\u{FAF}",plunger:"\u{FAA}",sewing_needle:"\u{FAA}",knot:"\u{FAA}",bucket:"\u{FAA}",mouse_trap:"\u{FAA}",toothbrush:"\u{FAA}",headstone:"\u{FAA}",placard:"\u{FAA}",rock:"\u{FAA}",fly:"\u{FAB}",worm:"\u{FAB}",beetle:"\u{FAB}",cockroach:"\u{FAB}",potted_plant:"\u{FAB}",wood:"\u{FAB}",feather:"\u{FAB}",anatomical_heart:"\u{FAC}",lungs:"\u{FAC}",people_hugging:"\u{FAC}",blueberries:"\u{FAD}",bell_pepper:"\u{FAD}",olive:"\u{FAD}",flatbread:"\u{FAD}",tamale:"\u{FAD}",fondue:"\u{FAD}",teapot:"\u{FAD}",bangbang:"\uC\uFEF",interrobang:"\u\uFEF",tm:"\u\uFEF",information_source:"\u\uFEF",left_right_arrow:"\u\uFEF",arrow_up_down:"\u\uFEF",arrow_upper_left:"\u\uFEF",arrow_upper_right:"\u\uFEF",arrow_lower_right:"\u\uFEF",arrow_lower_left:"\u\uFEF",leftwards_arrow_with_hook:"\uA\uFEF",arrow_right_hook:"\uAA\uFEF",watch:"\uA",hourglass:"\uB",keyboard:"\u\uFEF",eject:"\uCF\uFEF",fast_forward:"\uE",rewind:"\uEA",arrow_double_up:"\uEB",arrow_double_down:"\uEC",black_right_pointing_double_triangle_with_vertical_bar:"\uED\uFEF",black_left_pointing_double_triangle_with_vertical_bar:"\uEE\uFEF",black_right_pointing_triangle_with_double_vertical_bar:"\uEF\uFEF",alarm_clock:"\uF",stopwatch:"\uF\uFEF",timer_clock:"\uF\uFEF",hourglass_flowing_sand:"\uF",double_vertical_bar:"\uF\uFEF",black_square_for_stop:"\uF\uFEF",black_circle_for_record:"\uFA\uFEF",m:"\uC\uFEF",black_small_square:"\uAA\uFEF",white_small_square:"\uAB\uFEF",arrow_forward:"\uB\uFEF",arrow_backward:"\uC\uFEF",white_medium_square:"\uFB\uFEF",black_medium_square:"\uFC\uFEF",white_medium_small_square:"\uFD",black_medium_small_square:"\uFE",sunny:"\u\uFEF",cloud:"\u\uFEF",umbrella:"\u\uFEF",snowman:"\u\uFEF",comet:"\u\uFEF",phone:"\uE\uFEF",telephone:"\uE\uFEF",ballot_box_with_check:"\u\uFEF",shamrock:"\u\uFEF",point_up:"\uD\uFEF",skull_and_crossbones:"\u\uFEF",radioactive_sign:"\u\uFEF",biohazard_sign:"\u\uFEF",orthodox_cross:"\u\uFEF",star_and_crescent:"\uA\uFEF",peace_symbol:"\uE\uFEF",yin_yang:"\uF\uFEF",wheel_of_dharma:"\u\uFEF",white_frowning_face:"\u\uFEF",relaxed:"\uA\uFEF",female_sign:"\u\uFEF",male_sign:"\u\uFEF",gemini:"\uA",cancer:"\uB",leo:"\uC",virgo:"\uD",libra:"\uE",scorpius:"\uF",chess_pawn:"\uF\uFEF",spades:"\u\uFEF",clubs:"\u\uFEF",hearts:"\u\uFEF",diamonds:"\u\uFEF",hotsprings:"\u\uFEF",recycle:"\uB\uFEF",infinity:"\uE\uFEF",wheelchair:"\uF",hammer_and_pick:"\u\uFEF",crossed_swords:"\u\uFEF",medical_symbol:"\u\uFEF",staff_of_aesculapius:"\u\uFEF",scales:"\u\uFEF",alembic:"\u\uFEF",gear:"\u\uFEF",atom_symbol:"\uB\uFEF",fleur_de_lis:"\uC\uFEF",warning:"\uA\uFEF",zap:"\uA",transgender_symbol:"\uA\uFEF",white_circle:"\uAA",black_circle:"\uAB",coffin:"\uB\uFEF",funeral_urn:"\uB\uFEF",soccer:"\uBD",baseball:"\uBE",snowman_without_snow:"\uC",partly_sunny:"\uC",thunder_cloud_and_rain:"\uC\uFEF",ophiuchus:"\uCE",pick:"\uCF\uFEF",helmet_with_white_cross:"\uD\uFEF",chains:"\uD\uFEF",no_entry:"\uD",shinto_shrine:"\uE\uFEF",church:"\uEA",mountain:"\uF\uFEF",umbrella_on_ground:"\uF\uFEF",fountain:"\uF",golf:"\uF",ferry:"\uF\uFEF",boat:"\uF",sailboat:"\uF",skier:"\uF\uFEF",ice_skate:"\uF\uFEF","woman-bouncing-ball":"\uF\uFEF\uD\u\uFEF","man-bouncing-ball":"\uF\uFEF\uD\u\uFEF",person_with_ball:"\uF\uFEF\uD\u\uFEF",tent:"\uFA",fuelpump:"\uFD",scissors:"\u\uFEF",airplane:"\u\uFEF",email:"\u\uFEF",envelope:"\u\uFEF",fist:"\uA",hand:"\uB",raised_hand:"\uB",v:"\uC\uFEF",writing_hand:"\uD\uFEF",pencil:"\uF\uFEF",black_nib:"\u\uFEF",heavy_check_mark:"\u\uFEF",heavy_multiplication_x:"\u\uFEF",latin_cross:"\uD\uFEF",star_of_david:"\u\uFEF",eight_spoked_asterisk:"\u\uFEF",eight_pointed_black_star:"\u\uFEF",snowflake:"\u\uFEF",sparkle:"\u\uFEF",x:"\uC",negative_squared_cross_mark:"\uE",heavy_heart_exclamation_mark_ornament:"\u\uFEF",heart_on_fire:"\u\uFEF\uD\u{F}",mending_heart:"\u\uFEF\uD\u{FA}",heart:"\u\uFEF",arrow_right:"\uA\uFEF",curly_loop:"\uB",loop:"\uBF",arrow_heading_up:"\u\uFEF",arrow_heading_down:"\u\uFEF",arrow_left:"\uB\uFEF",arrow_up:"\uB\uFEF",arrow_down:"\uB\uFEF",black_large_square:"\uBB",white_large_square:"\uBC",star:"\uB",o:"\uB",wavy_dash:"\u\uFEF",part_alternation_mark:"\uD\uFEF",congratulations:"\u\uFEF",secret:"\u\uFEF"}});var Ss=K((x,Is)=>{var js=Cs(),Ve=ya(),hm=/:([a-zA-Z-_\-\+]+):/g,gm=/^[\s\uFEFF\xA]+|[\s\uFEFF\xA]+$/g;function mt(e){var t=e.indexOf(":");return t>-?t===e.length-?(e=e.substring(,t),mt(e)):(e=e.substr(t+),mt(e)):e}function Ls(e){return typeof e=="string"&&e.length>?":"+e+":":e}function xm(e){return typeof e=="string"&&e[]!==":"?Ls(e):e}var vm=String.fromCharCode(),bm=new RegExp(vm,"g");function ht(e){return e.replace(bm,"")}var _a=Object.keys(Ve).reduce(function(e,t){return e[ht(Ve[t])]=t,e},{}),ce={emoji:Ve};ce._get=function(t){return _a[ht(t)]?t:Ve.hasOwnProperty(t)?Ve[t]:xm(t)};ce.get=function(t){return t=mt(t),ce._get(t)};ce.find=function(t){return ce.findByName(t)||ce.findByCode(t)};ce.findByName=function(t){var n=mt(t),a=Ve[n];return a?{emoji:a,key:n}:void };ce.findByCode=function(t){var n=ht(t),a=_a[n];return a?{emoji:Ve[a],key:a}:void };ce.hasEmoji=function(t){return ce.hasEmojiByName(t)||ce.hasEmojiByCode(t)};ce.hasEmojiByName=function(t){var n=ce.findByName(t);return!!n&&n.key===mt(t)};ce.hasEmojiByCode=function(t){var n=ce.findByCode(t);return!!n&&ht(n.emoji)===ht(t)};ce.which=function(t,n){var a=ht(t),i=_a[a];return n?Ls(i):i};ce.emojify=function(t,n,a){return t?t.split(hm).map(function(r,o){if(o%===)return r;var s=ce._get(r),p=s.indexOf(":")>-;return p&&typeof n=="function"?n(r):!p&&typeof a=="function"?a(s,r):s}).join(""):""};ce.random=function(){var t=Object.keys(Ve),n=Math.floor(Math.random()t.length),a=t[n],i=ce._get(a);return{key:a,emoji:i}};ce.search=function(t){var n=Object.keys(Ve),a=mt(t),i=n.filter(function(r){return r.toString().indexOf(a)===});return i.map(function(r){return{key:r,emoji:ce._get(r)}})};ce.unemojify=function(t){if(!t)return"";var n=js(t);return n.map(function(a){return ce.which(a,!)||a}).join("")};ce.replace=function(t,n,a){if(!t)return"";var i=typeof n=="function"?n:function(){return n},r=js(t),o=r.map(function(s,p){var l=ce.findByCode(s);return l&&a&&r[p+]===" "&&(r[p+]=""),l?i(l):s}).join("");return a?o.replace(gm,""):o};ce.strip=function(t){return ce.replace(t,"",!)};Is.exports=ce});var Wt=K((v,As)=>{As.exports=Ss()});var fn=K((b,dn)=>{(function(){"use strict";var e={}.hasOwnProperty;function t(){for(var n=[],a=;a<arguments.length;a++){var i=arguments[a];if(!!i){var r=typeof i;if(r==="string"||r==="number")n.push(i);else if(Array.isArray(i)){if(i.length){var o=t.apply(null,i);o&&n.push(o)}}else if(r==="object")if(i.toString===Object.prototype.toString)for(var s in i)e.call(i,s)&&i[s]&&n.push(s);else n.push(i.toString())}}return n.join(" ")}typeof dn<"u"&&dn.exports?(t.default=t,dn.exports=t):typeof define=="function"&&typeof define.amd=="object"&&define.amd?define("classnames",[],function(){return t}):window.classNames=t})()});var Ia=K(yn=>{"use strict";Object.defineProperty(yn,"__esModule",{value:!});function Ds(e,t){if(t)return e;throw new Error("Unhandled discriminated union member: "+JSON.stringify(e))}yn.assertNever=Ds;yn.default=Ds});var Js=K((Xs,Va)=>{(function(e){typeof Xs=="object"&&typeof Va<"u"?Va.exports=e():typeof define=="function"&&define.amd?define([],e):(typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:this).JSZip=e()})(function(){return function e(t,n,a){function i(s,p){if(!n[s]){if(!t[s]){var l=typeof require=="function"&&require;if(!p&&l)return l(s,!);if(r)return r(s,!);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[s]={exports:{}};t[s][].call(u.exports,function(h){var f=t[s][][h];return i(f||h)},u,u.exports,e,t,n,a)}return n[s].exports}for(var r=typeof require=="function"&&require,o=;o<a.length;o++)i(a[o]);return i}({:[function(e,t,n){"use strict";var a=e("./utils"),i=e("./support"),r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/=";n.encode=function(o){for(var s,p,l,c,u,h,f,g=[],x=,b=o.length,_=b,C=a.getTypeOf(o)!=="string";x<o.length;)_=b-x,l=C?(s=o[x++],p=x<b?o[x++]:,x<b?o[x++]:):(s=o.charCodeAt(x++),p=x<b?o.charCodeAt(x++):,x<b?o.charCodeAt(x++):),c=s>>,u=(&s)<<|p>>,h=<_?(&p)<<|l>>:,f=<_?&l:,g.push(r.charAt(c)+r.charAt(u)+r.charAt(h)+r.charAt(f));return g.join("")},n.decode=function(o){var s,p,l,c,u,h,f=,g=,x="data:";if(o.substr(,x.length)===x)throw new Error("Invalid base input, it looks like a data url.");var b,_=(o=o.replace(/[^A-Za-z-\+\/\=]/g,"")).length/;if(o.charAt(o.length-)===r.charAt()&&_--,o.charAt(o.length-)===r.charAt()&&_--,_%!=)throw new Error("Invalid base input, bad content length.");for(b=i.uintarray?new UintArray(|_):new Array(|_);f<o.length;)s=r.indexOf(o.charAt(f++))<<|(c=r.indexOf(o.charAt(f++)))>>,p=(&c)<<|(u=r.indexOf(o.charAt(f++)))>>,l=(&u)<<|(h=r.indexOf(o.charAt(f++))),b[g++]=s,u!==&&(b[g++]=p),h!==&&(b[g++]=l);return b}},{"./support":,"./utils":}],:[function(e,t,n){"use strict";var a=e("./external"),i=e("./stream/DataWorker"),r=e("./stream/CrcProbe"),o=e("./stream/DataLengthProbe");function s(p,l,c,u,h){this.compressedSize=p,this.uncompressedSize=l,this.crc=c,this.compression=u,this.compressedContent=h}s.prototype={getContentWorker:function(){var p=new i(a.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),l=this;return p.on("end",function(){if(this.streamInfo.data_length!==l.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),p},getCompressedWorker:function(){return new i(a.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc",this.crc).withStreamInfo("compression",this.compression)}},s.createWorkerFrom=function(p,l,c){return p.pipe(new r).pipe(new o("uncompressedSize")).pipe(l.compressWorker(c)).pipe(new o("compressedSize")).withStreamInfo("compression",l)},t.exports=s},{"./external":,"./stream/CrcProbe":,"./stream/DataLengthProbe":,"./stream/DataWorker":}],:[function(e,t,n){"use strict";var a=e("./stream/GenericWorker");n.STORE={magic:"\\",compressWorker:function(i){return new a("STORE compression")},uncompressWorker:function(){return new a("STORE decompression")}},n.DEFLATE=e("./flate")},{"./flate":,"./stream/GenericWorker":}],:[function(e,t,n){"use strict";var a=e("./utils"),i=function(){for(var r,o=[],s=;s<;s++){r=s;for(var p=;p<;p++)r=&r?^r>>>:r>>>;o[s]=r}return o}();t.exports=function(r,o){return r!==void &&r.length?a.getTypeOf(r)!=="string"?function(s,p,l,c){var u=i,h=c+l;s^=-;for(var f=c;f<h;f++)s=s>>>^u[&(s^p[f])];return-^s}(|o,r,r.length,):function(s,p,l,c){var u=i,h=c+l;s^=-;for(var f=c;f<h;f++)s=s>>>^u[&(s^p.charCodeAt(f))];return-^s}(|o,r,r.length,):}},{"./utils":}],:[function(e,t,n){"use strict";n.base=!,n.binary=!,n.dir=!,n.createFolders=!,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],:[function(e,t,n){"use strict";var a=null;a=typeof Promise<"u"?Promise:e("lie"),t.exports={Promise:a}},{lie:}],:[function(e,t,n){"use strict";var a=typeof UintArray<"u"&&typeof UintArray<"u"&&typeof UintArray<"u",i=e("pako"),r=e("./utils"),o=e("./stream/GenericWorker"),s=a?"uintarray":"array";function p(l,c){o.call(this,"FlateWorker/"+l),this._pako=null,this._pakoAction=l,this._pakoOptions=c,this.meta={}}n.magic="\b\",r.inherits(p,o),p.prototype.processChunk=function(l){this.meta=l.meta,this._pako===null&&this._createPako(),this._pako.push(r.transformTo(s,l.data),!)},p.prototype.flush=function(){o.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!)},p.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},p.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!,level:this._pakoOptions.level||-});var l=this;this._pako.onData=function(c){l.push({data:c,meta:l.meta})}},n.compressWorker=function(l){return new p("Deflate",l)},n.uncompressWorker=function(){return new p("Inflate",{})}},{"./stream/GenericWorker":,"./utils":,pako:}],:[function(e,t,n){"use strict";function a(u,h){var f,g="";for(f=;f<h;f++)g+=String.fromCharCode(&u),u>>>=;return g}function i(u,h,f,g,x,b){var _,C,w=u.file,z=u.compression,F=b!==s.utfencode,T=r.transformTo("string",b(w.name)),S=r.transformTo("string",s.utfencode(w.name)),W=w.comment,Y=r.transformTo("string",b(W)),k=r.transformTo("string",s.utfencode(W)),E=S.length!==w.name.length,m=k.length!==W.length,P="",J="",D="",ae=w.dir,R=w.date,te={crc:,compressedSize:,uncompressedSize:};h&&!f||(te.crc=u.crc,te.compressedSize=u.compressedSize,te.uncompressedSize=u.uncompressedSize);var A=;h&&(A|=),F||!E&&!m||(A|=);var I=,ee=;ae&&(I|=),x==="UNIX"?(ee=,I|=function(q,ue){var ve=q;return q||(ve=ue?:),(&ve)<<}(w.unixPermissions,ae)):(ee=,I|=function(q){return &(q||)}(w.dosPermissions)),_=R.getUTCHours(),_<<=,_|=R.getUTCMinutes(),_<<=,_|=R.getUTCSeconds()/,C=R.getUTCFullYear()-,C<<=,C|=R.getUTCMonth()+,C<<=,C|=R.getUTCDate(),E&&(J=a(,)+a(p(T),)+S,P+="up"+a(J.length,)+J),m&&(D=a(,)+a(p(Y),)+k,P+="uc"+a(D.length,)+D);var G="";return G+=`
\`,G+=a(A,),G+=z.magic,G+=a(_,),G+=a(C,),G+=a(te.crc,),G+=a(te.compressedSize,),G+=a(te.uncompressedSize,),G+=a(T.length,),G+=a(P.length,),{fileRecord:l.LOCAL_FILE_HEADER+G+T+P,dirRecord:l.CENTRAL_FILE_HEADER+a(ee,)+G+a(Y.length,)+"\\\\"+a(I,)+a(g,)+T+P+Y}}var r=e("../utils"),o=e("../stream/GenericWorker"),s=e("../utf"),p=e("../crc"),l=e("../signature");function c(u,h,f,g){o.call(this,"ZipFileWorker"),this.bytesWritten=,this.zipComment=h,this.zipPlatform=f,this.encodeFileName=g,this.streamFiles=u,this.accumulate=!,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=,this.entriesCount=,this.currentFile=null,this._sources=[]}r.inherits(c,o),c.prototype.push=function(u){var h=u.meta.percent||,f=this.entriesCount,g=this._sources.length;this.accumulate?this.contentBuffer.push(u):(this.bytesWritten+=u.data.length,o.prototype.push.call(this,{data:u.data,meta:{currentFile:this.currentFile,percent:f?(h+(f-g-))/f:}}))},c.prototype.openedSource=function(u){this.currentSourceOffset=this.bytesWritten,this.currentFile=u.file.name;var h=this.streamFiles&&!u.file.dir;if(h){var f=i(u,h,!,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:f.fileRecord,meta:{percent:}})}else this.accumulate=!},c.prototype.closedSource=function(u){this.accumulate=!;var h=this.streamFiles&&!u.file.dir,f=i(u,h,!,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(f.dirRecord),h)this.push({data:function(g){return l.DATA_DESCRIPTOR+a(g.crc,)+a(g.compressedSize,)+a(g.uncompressedSize,)}(u),meta:{percent:}});else for(this.push({data:f.fileRecord,meta:{percent:}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},c.prototype.flush=function(){for(var u=this.bytesWritten,h=;h<this.dirRecords.length;h++)this.push({data:this.dirRecords[h],meta:{percent:}});var f=this.bytesWritten-u,g=function(x,b,_,C,w){var z=r.transformTo("string",w(C));return l.CENTRAL_DIRECTORY_END+"\\\\"+a(x,)+a(x,)+a(b,)+a(_,)+a(z.length,)+z}(this.dirRecords.length,f,u,this.zipComment,this.encodeFileName);this.push({data:g,meta:{percent:}})},c.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},c.prototype.registerPrevious=function(u){this._sources.push(u);var h=this;return u.on("data",function(f){h.processChunk(f)}),u.on("end",function(){h.closedSource(h.previous.streamInfo),h._sources.length?h.prepareNextSource():h.end()}),u.on("error",function(f){h.error(f)}),this},c.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!):this.previous||this._sources.length||this.generatedError?void :(this.end(),!))},c.prototype.error=function(u){var h=this._sources;if(!o.prototype.error.call(this,u))return!;for(var f=;f<h.length;f++)try{h[f].error(u)}catch{}return!},c.prototype.lock=function(){o.prototype.lock.call(this);for(var u=this._sources,h=;h<u.length;h++)u[h].lock()},t.exports=c},{"../crc":,"../signature":,"../stream/GenericWorker":,"../utf":,"../utils":}],:[function(e,t,n){"use strict";var a=e("../compressions"),i=e("./ZipFileWorker");n.generateWorker=function(r,o,s){var p=new i(o.streamFiles,s,o.platform,o.encodeFileName),l=;try{r.forEach(function(c,u){l++;var h=function(b,_){var C=b||_,w=a[C];if(!w)throw new Error(C+" is not a valid compression method !");return w}(u.options.compression,o.compression),f=u.options.compressionOptions||o.compressionOptions||{},g=u.dir,x=u.date;u._compressWorker(h,f).withStreamInfo("file",{name:c,dir:g,date:x,comment:u.comment||"",unixPermissions:u.unixPermissions,dosPermissions:u.dosPermissions}).pipe(p)}),p.entriesCount=l}catch(c){p.error(c)}return p}},{"../compressions":,"./ZipFileWorker":}],:[function(e,t,n){"use strict";function a(){if(!(this instanceof a))return new a;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip ., please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var i=new a;for(var r in this)typeof this[r]!="function"&&(i[r]=this[r]);return i}}(a.prototype=e("./object")).loadAsync=e("./load"),a.support=e("./support"),a.defaults=e("./defaults"),a.version="..",a.loadAsync=function(i,r){return new a().loadAsync(i,r)},a.external=e("./external"),t.exports=a},{"./defaults":,"./external":,"./load":,"./object":,"./support":}],:[function(e,t,n){"use strict";var a=e("./utils"),i=e("./external"),r=e("./utf"),o=e("./zipEntries"),s=e("./stream/CrcProbe"),p=e("./nodejsUtils");function l(c){return new i.Promise(function(u,h){var f=c.decompressed.getContentWorker().pipe(new s);f.on("error",function(g){h(g)}).on("end",function(){f.streamInfo.crc!==c.decompressed.crc?h(new Error("Corrupted zip : CRC mismatch")):u()}).resume()})}t.exports=function(c,u){var h=this;return u=a.extend(u||{},{base:!,checkCRC:!,optimizedBinaryString:!,createFolders:!,decodeFileName:r.utfdecode}),p.isNode&&p.isStream(c)?i.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):a.prepareContent("the loaded zip file",c,!,u.optimizedBinaryString,u.base).then(function(f){var g=new o(u);return g.load(f),g}).then(function(f){var g=[i.Promise.resolve(f)],x=f.files;if(u.checkCRC)for(var b=;b<x.length;b++)g.push(l(x[b]));return i.Promise.all(g)}).then(function(f){for(var g=f.shift(),x=g.files,b=;b<x.length;b++){var _=x[b],C=_.fileNameStr,w=a.resolve(_.fileNameStr);h.file(w,_.decompressed,{binary:!,optimizedBinaryString:!,date:_.date,dir:_.dir,comment:_.fileCommentStr.length?_.fileCommentStr:null,unixPermissions:_.unixPermissions,dosPermissions:_.dosPermissions,createFolders:u.createFolders}),_.dir||(h.file(w).unsafeOriginalName=C)}return g.zipComment.length&&(h.comment=g.zipComment),h})}},{"./external":,"./nodejsUtils":,"./stream/CrcProbe":,"./utf":,"./utils":,"./zipEntries":}],:[function(e,t,n){"use strict";var a=e("../utils"),i=e("../stream/GenericWorker");function r(o,s){i.call(this,"Nodejs stream input adapter for "+o),this._upstreamEnded=!,this._bindStream(s)}a.inherits(r,i),r.prototype._bindStream=function(o){var s=this;(this._stream=o).pause(),o.on("data",function(p){s.push({data:p,meta:{percent:}})}).on("error",function(p){s.isPaused?this.generatedError=p:s.error(p)}).on("end",function(){s.isPaused?s._upstreamEnded=!:s.end()})},r.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!)},r.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!)},t.exports=r},{"../stream/GenericWorker":,"../utils":}],:[function(e,t,n){"use strict";var a=e("readable-stream").Readable;function i(r,o,s){a.call(this,o),this._helper=r;var p=this;r.on("data",function(l,c){p.push(l)||p._helper.pause(),s&&s(c)}).on("error",function(l){p.emit("error",l)}).on("end",function(){p.push(null)})}e("../utils").inherits(i,a),i.prototype._read=function(){this._helper.resume()},t.exports=i},{"../utils":,"readable-stream":}],:[function(e,t,n){"use strict";t.exports={isNode:typeof Buffer<"u",newBufferFrom:function(a,i){if(Buffer.from&&Buffer.from!==UintArray.from)return Buffer.from(a,i);if(typeof a=="number")throw new Error('The "data" argument must not be a number');return new Buffer(a,i)},allocBuffer:function(a){if(Buffer.alloc)return Buffer.alloc(a);var i=new Buffer(a);return i.fill(),i},isBuffer:function(a){return Buffer.isBuffer(a)},isStream:function(a){return a&&typeof a.on=="function"&&typeof a.pause=="function"&&typeof a.resume=="function"}}},{}],:[function(e,t,n){"use strict";function a(w,z,F){var T,S=r.getTypeOf(z),W=r.extend(F||{},p);W.date=W.date||new Date,W.compression!==null&&(W.compression=W.compression.toUpperCase()),typeof W.unixPermissions=="string"&&(W.unixPermissions=parseInt(W.unixPermissions,)),W.unixPermissions&&&W.unixPermissions&&(W.dir=!),W.dosPermissions&&&W.dosPermissions&&(W.dir=!),W.dir&&(w=x(w)),W.createFolders&&(T=g(w))&&b.call(this,T,!);var Y=S==="string"&&W.binary===!&&W.base===!;F&&F.binary!==void ||(W.binary=!Y),(z instanceof l&&z.uncompressedSize===||W.dir||!z||z.length===)&&(W.base=!,W.binary=!,z="",W.compression="STORE",S="string");var k=null;k=z instanceof l||z instanceof o?z:h.isNode&&h.isStream(z)?new f(w,z):r.prepareContent(w,z,W.binary,W.optimizedBinaryString,W.base);var E=new c(w,k,W);this.files[w]=E}var i=e("./utf"),r=e("./utils"),o=e("./stream/GenericWorker"),s=e("./stream/StreamHelper"),p=e("./defaults"),l=e("./compressedObject"),c=e("./zipObject"),u=e("./generate"),h=e("./nodejsUtils"),f=e("./nodejs/NodejsStreamInputAdapter"),g=function(w){w.slice(-)==="/"&&(w=w.substring(,w.length-));var z=w.lastIndexOf("/");return <z?w.substring(,z):""},x=function(w){return w.slice(-)!=="/"&&(w+="/"),w},b=function(w,z){return z=z!==void ?z:p.createFolders,w=x(w),this.files[w]||a.call(this,w,null,{dir:!,createFolders:z}),this.files[w]};function _(w){return Object.prototype.toString.call(w)==="[object RegExp]"}var C={load:function(){throw new Error("This method has been removed in JSZip ., please check the upgrade guide.")},forEach:function(w){var z,F,T;for(z in this.files)T=this.files[z],(F=z.slice(this.root.length,z.length))&&z.slice(,this.root.length)===this.root&&w(F,T)},filter:function(w){var z=[];return this.forEach(function(F,T){w(F,T)&&z.push(T)}),z},file:function(w,z,F){if(arguments.length!==)return w=this.root+w,a.call(this,w,z,F),this;if(_(w)){var T=w;return this.filter(function(W,Y){return!Y.dir&&T.test(W)})}var S=this.files[this.root+w];return S&&!S.dir?S:null},folder:function(w){if(!w)return this;if(_(w))return this.filter(function(S,W){return W.dir&&w.test(S)});var z=this.root+w,F=b.call(this,z),T=this.clone();return T.root=F.name,T},remove:function(w){w=this.root+w;var z=this.files[w];if(z||(w.slice(-)!=="/"&&(w+="/"),z=this.files[w]),z&&!z.dir)delete this.files[w];else for(var F=this.filter(function(S,W){return W.name.slice(,w.length)===w}),T=;T<F.length;T++)delete this.files[F[T].name];return this},generate:function(w){throw new Error("This method has been removed in JSZip ., please check the upgrade guide.")},generateInternalStream:function(w){var z,F={};try{if((F=r.extend(w||{},{streamFiles:!,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:i.utfencode})).type=F.type.toLowerCase(),F.compression=F.compression.toUpperCase(),F.type==="binarystring"&&(F.type="string"),!F.type)throw new Error("No output type specified.");r.checkSupport(F.type),F.platform!=="darwin"&&F.platform!=="freebsd"&&F.platform!=="linux"&&F.platform!=="sunos"||(F.platform="UNIX"),F.platform==="win"&&(F.platform="DOS");var T=F.comment||this.comment||"";z=u.generateWorker(this,F,T)}catch(S){(z=new o("error")).error(S)}return new s(z,F.type||"string",F.mimeType)},generateAsync:function(w,z){return this.generateInternalStream(w).accumulate(z)},generateNodeStream:function(w,z){return(w=w||{}).type||(w.type="nodebuffer"),this.generateInternalStream(w).toNodejsStream(z)}};t.exports=C},{"./compressedObject":,"./defaults":,"./generate":,"./nodejs/NodejsStreamInputAdapter":,"./nodejsUtils":,"./stream/GenericWorker":,"./stream/StreamHelper":,"./utf":,"./utils":,"./zipObject":}],:[function(e,t,n){t.exports=e("stream")},{stream:void }],:[function(e,t,n){"use strict";var a=e("./DataReader");function i(r){a.call(this,r);for(var o=;o<this.data.length;o++)r[o]=&r[o]}e("../utils").inherits(i,a),i.prototype.byteAt=function(r){return this.data[this.zero+r]},i.prototype.lastIndexOfSignature=function(r){for(var o=r.charCodeAt(),s=r.charCodeAt(),p=r.charCodeAt(),l=r.charCodeAt(),c=this.length-;<=c;--c)if(this.data[c]===o&&this.data[c+]===s&&this.data[c+]===p&&this.data[c+]===l)return c-this.zero;return-},i.prototype.readAndCheckSignature=function(r){var o=r.charCodeAt(),s=r.charCodeAt(),p=r.charCodeAt(),l=r.charCodeAt(),c=this.readData();return o===c[]&&s===c[]&&p===c[]&&l===c[]},i.prototype.readData=function(r){if(this.checkOffset(r),r===)return[];var o=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,o},t.exports=i},{"../utils":,"./DataReader":}],:[function(e,t,n){"use strict";var a=e("../utils");function i(r){this.data=r,this.length=r.length,this.index=,this.zero=}i.prototype={checkOffset:function(r){this.checkIndex(this.index+r)},checkIndex:function(r){if(this.length<this.zero+r||r<)throw new Error("End of data reached (data length = "+this.length+", asked index = "+r+"). Corrupted zip ?")},setIndex:function(r){this.checkIndex(r),this.index=r},skip:function(r){this.setIndex(this.index+r)},byteAt:function(r){},readInt:function(r){var o,s=;for(this.checkOffset(r),o=this.index+r-;o>=this.index;o--)s=(s<<)+this.byteAt(o);return this.index+=r,s},readString:function(r){return a.transformTo("string",this.readData(r))},readData:function(r){},lastIndexOfSignature:function(r){},readAndCheckSignature:function(r){},readDate:function(){var r=this.readInt();return new Date(Date.UTC(+(r>>&),(r>>&)-,r>>&,r>>&,r>>&,(&r)<<))}},t.exports=i},{"../utils":}],:[function(e,t,n){"use strict";var a=e("./UintArrayReader");function i(r){a.call(this,r)}e("../utils").inherits(i,a),i.prototype.readData=function(r){this.checkOffset(r);var o=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,o},t.exports=i},{"../utils":,"./UintArrayReader":}],:[function(e,t,n){"use strict";var a=e("./DataReader");function i(r){a.call(this,r)}e("../utils").inherits(i,a),i.prototype.byteAt=function(r){return this.data.charCodeAt(this.zero+r)},i.prototype.lastIndexOfSignature=function(r){return this.data.lastIndexOf(r)-this.zero},i.prototype.readAndCheckSignature=function(r){return r===this.readData()},i.prototype.readData=function(r){this.checkOffset(r);var o=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,o},t.exports=i},{"../utils":,"./DataReader":}],:[function(e,t,n){"use strict";var a=e("./ArrayReader");function i(r){a.call(this,r)}e("../utils").inherits(i,a),i.prototype.readData=function(r){if(this.checkOffset(r),r===)return new UintArray();var o=this.data.subarray(this.zero+this.index,this.zero+this.index+r);return this.index+=r,o},t.exports=i},{"../utils":,"./ArrayReader":}],:[function(e,t,n){"use strict";var a=e("../utils"),i=e("../support"),r=e("./ArrayReader"),o=e("./StringReader"),s=e("./NodeBufferReader"),p=e("./UintArrayReader");t.exports=function(l){var c=a.getTypeOf(l);return a.checkSupport(c),c!=="string"||i.uintarray?c==="nodebuffer"?new s(l):i.uintarray?new p(a.transformTo("uintarray",l)):new r(a.transformTo("array",l)):new o(l)}},{"../support":,"../utils":,"./ArrayReader":,"./NodeBufferReader":,"./StringReader":,"./UintArrayReader":}],:[function(e,t,n){"use strict";n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP_CENTRAL_DIRECTORY_LOCATOR="PK\x",n.ZIP_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\x\b"},{}],:[function(e,t,n){"use strict";var a=e("./GenericWorker"),i=e("../utils");function r(o){a.call(this,"ConvertWorker to "+o),this.destType=o}i.inherits(r,a),r.prototype.processChunk=function(o){this.push({data:i.transformTo(this.destType,o.data),meta:o.meta})},t.exports=r},{"../utils":,"./GenericWorker":}],:[function(e,t,n){"use strict";var a=e("./GenericWorker"),i=e("../crc");function r(){a.call(this,"CrcProbe"),this.withStreamInfo("crc",)}e("../utils").inherits(r,a),r.prototype.processChunk=function(o){this.streamInfo.crc=i(o.data,this.streamInfo.crc||),this.push(o)},t.exports=r},{"../crc":,"../utils":,"./GenericWorker":}],:[function(e,t,n){"use strict";var a=e("../utils"),i=e("./GenericWorker");function r(o){i.call(this,"DataLengthProbe for "+o),this.propName=o,this.withStreamInfo(o,)}a.inherits(r,i),r.prototype.processChunk=function(o){if(o){var s=this.streamInfo[this.propName]||;this.streamInfo[this.propName]=s+o.data.length}i.prototype.processChunk.call(this,o)},t.exports=r},{"../utils":,"./GenericWorker":}],:[function(e,t,n){"use strict";var a=e("../utils"),i=e("./GenericWorker");function r(o){i.call(this,"DataWorker");var s=this;this.dataIsReady=!,this.index=,this.max=,this.data=null,this.type="",this._tickScheduled=!,o.then(function(p){s.dataIsReady=!,s.data=p,s.max=p&&p.length||,s.type=a.getTypeOf(p),s.isPaused||s._tickAndRepeat()},function(p){s.error(p)})}a.inherits(r,i),r.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},r.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!,a.delay(this._tickAndRepeat,[],this)),!)},r.prototype._tickAndRepeat=function(){this._tickScheduled=!,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(a.delay(this._tickAndRepeat,[],this),this._tickScheduled=!))},r.prototype._tick=function(){if(this.isPaused||this.isFinished)return!;var o=null,s=Math.min(this.max,this.index+);if(this.index>=this.max)return this.end();switch(this.type){case"string":o=this.data.substring(this.index,s);break;case"uintarray":o=this.data.subarray(this.index,s);break;case"array":case"nodebuffer":o=this.data.slice(this.index,s)}return this.index=s,this.push({data:o,meta:{percent:this.max?this.index/this.max:}})},t.exports=r},{"../utils":,"./GenericWorker":}],:[function(e,t,n){"use strict";function a(i){this.name=i||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!,this.isFinished=!,this.isLocked=!,this._listeners={data:[],end:[],error:[]},this.previous=null}a.prototype={push:function(i){this.emit("data",i)},end:function(){if(this.isFinished)return!;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!}catch(i){this.emit("error",i)}return!},error:function(i){return!this.isFinished&&(this.isPaused?this.generatedError=i:(this.isFinished=!,this.emit("error",i),this.previous&&this.previous.error(i),this.cleanUp()),!)},on:function(i,r){return this._listeners[i].push(r),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(i,r){if(this._listeners[i])for(var o=;o<this._listeners[i].length;o++)this._listeners[i][o].call(this,r)},pipe:function(i){return i.registerPrevious(this)},registerPrevious:function(i){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=i.streamInfo,this.mergeStreamInfo(),this.previous=i;var r=this;return i.on("data",function(o){r.processChunk(o)}),i.on("end",function(){r.end()}),i.on("error",function(o){r.error(o)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!,this.previous&&this.previous.pause(),!)},resume:function(){if(!this.isPaused||this.isFinished)return!;var i=this.isPaused=!;return this.generatedError&&(this.error(this.generatedError),i=!),this.previous&&this.previous.resume(),!i},flush:function(){},processChunk:function(i){this.push(i)},withStreamInfo:function(i,r){return this.extraStreamInfo[i]=r,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var i in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(i)&&(this.streamInfo[i]=this.extraStreamInfo[i])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!,this.previous&&this.previous.lock()},toString:function(){var i="Worker "+this.name;return this.previous?this.previous+" -> "+i:i}},t.exports=a},{}],:[function(e,t,n){"use strict";var a=e("../utils"),i=e("./ConvertWorker"),r=e("./GenericWorker"),o=e("../base"),s=e("../support"),p=e("../external"),l=null;if(s.nodestream)try{l=e("../nodejs/NodejsStreamOutputAdapter")}catch{}function c(h,f){return new p.Promise(function(g,x){var b=[],_=h._internalType,C=h._outputType,w=h._mimeType;h.on("data",function(z,F){b.push(z),f&&f(F)}).on("error",function(z){b=[],x(z)}).on("end",function(){try{var z=function(F,T,S){switch(F){case"blob":return a.newBlob(a.transformTo("arraybuffer",T),S);case"base":return o.encode(T);default:return a.transformTo(F,T)}}(C,function(F,T){var S,W=,Y=null,k=;for(S=;S<T.length;S++)k+=T[S].length;switch(F){case"string":return T.join("");case"array":return Array.prototype.concat.apply([],T);case"uintarray":for(Y=new UintArray(k),S=;S<T.length;S++)Y.set(T[S],W),W+=T[S].length;return Y;case"nodebuffer":return Buffer.concat(T);default:throw new Error("concat : unsupported type '"+F+"'")}}(_,b),w);g(z)}catch(F){x(F)}b=[]}).resume()})}function u(h,f,g){var x=f;switch(f){case"blob":case"arraybuffer":x="uintarray";break;case"base":x="string"}try{this._internalType=x,this._outputType=f,this._mimeType=g,a.checkSupport(x),this._worker=h.pipe(new i(x)),h.lock()}catch(b){this._worker=new r("error"),this._worker.error(b)}}u.prototype={accumulate:function(h){return c(this,h)},on:function(h,f){var g=this;return h==="data"?this._worker.on(h,function(x){f.call(g,x.data,x.meta)}):this._worker.on(h,function(){a.delay(f,arguments,g)}),this},resume:function(){return a.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(h){if(a.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new l(this,{objectMode:this._outputType!=="nodebuffer"},h)}},t.exports=u},{"../base":,"../external":,"../nodejs/NodejsStreamOutputAdapter":,"../support":,"../utils":,"./ConvertWorker":,"./GenericWorker":}],:[function(e,t,n){"use strict";if(n.base=!,n.array=!,n.string=!,n.arraybuffer=typeof ArrayBuffer<"u"&&typeof UintArray<"u",n.nodebuffer=typeof Buffer<"u",n.uintarray=typeof UintArray<"u",typeof ArrayBuffer>"u")n.blob=!;else{var a=new ArrayBuffer();try{n.blob=new Blob([a],{type:"application/zip"}).size===}catch{try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(a),n.blob=i.getBlob("application/zip").size===}catch{n.blob=!}}}try{n.nodestream=!!e("readable-stream").Readable}catch{n.nodestream=!}},{"readable-stream":}],:[function(e,t,n){"use strict";for(var a=e("./utils"),i=e("./support"),r=e("./nodejsUtils"),o=e("./stream/GenericWorker"),s=new Array(),p=;p<;p++)s[p]=<=p?:<=p?:<=p?:<=p?:<=p?:;s[]=s[]=;function l(){o.call(this,"utf- decode"),this.leftOver=null}function c(){o.call(this,"utf- encode")}n.utfencode=function(u){return i.nodebuffer?r.newBufferFrom(u,"utf-"):function(h){var f,g,x,b,_,C=h.length,w=;for(b=;b<C;b++)(&(g=h.charCodeAt(b)))==&&b+<C&&(&(x=h.charCodeAt(b+)))==&&(g=+(g-<<)+(x-),b++),w+=g<?:g<?:g<?:;for(f=i.uintarray?new UintArray(w):new Array(w),b=_=;_<w;b++)(&(g=h.charCodeAt(b)))==&&b+<C&&(&(x=h.charCodeAt(b+)))==&&(g=+(g-<<)+(x-),b++),g<?f[_++]=g:(g<?f[_++]=|g>>>:(g<?f[_++]=|g>>>:(f[_++]=|g>>>,f[_++]=|g>>>&),f[_++]=|g>>>&),f[_++]=|&g);return f}(u)},n.utfdecode=function(u){return i.nodebuffer?a.transformTo("nodebuffer",u).toString("utf-"):function(h){var f,g,x,b,_=h.length,C=new Array(_);for(f=g=;f<_;)if((x=h[f++])<)C[g++]=x;else if(<(b=s[x]))C[g++]=,f+=b-;else{for(x&=b===?:b===?:;<b&&f<_;)x=x<<|&h[f++],b--;<b?C[g++]=:x<?C[g++]=x:(x-=,C[g++]=|x>>&,C[g++]=|&x)}return C.length!==g&&(C.subarray?C=C.subarray(,g):C.length=g),a.applyFromCharCode(C)}(u=a.transformTo(i.uintarray?"uintarray":"array",u))},a.inherits(l,o),l.prototype.processChunk=function(u){var h=a.transformTo(i.uintarray?"uintarray":"array",u.data);if(this.leftOver&&this.leftOver.length){if(i.uintarray){var f=h;(h=new UintArray(f.length+this.leftOver.length)).set(this.leftOver,),h.set(f,this.leftOver.length)}else h=this.leftOver.concat(h);this.leftOver=null}var g=function(b,_){var C;for((_=_||b.length)>b.length&&(_=b.length),C=_-;<=C&&(&b[C])==;)C--;return C<||C===?_:C+s[b[C]]>_?C:_}(h),x=h;g!==h.length&&(i.uintarray?(x=h.subarray(,g),this.leftOver=h.subarray(g,h.length)):(x=h.slice(,g),this.leftOver=h.slice(g,h.length))),this.push({data:n.utfdecode(x),meta:u.meta})},l.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utfdecode(this.leftOver),meta:{}}),this.leftOver=null)},n.UtfDecodeWorker=l,a.inherits(c,o),c.prototype.processChunk=function(u){this.push({data:n.utfencode(u.data),meta:u.meta})},n.UtfEncodeWorker=c},{"./nodejsUtils":,"./stream/GenericWorker":,"./support":,"./utils":}],:[function(e,t,n){"use strict";var a=e("./support"),i=e("./base"),r=e("./nodejsUtils"),o=e("./external");function s(f){return f}function p(f,g){for(var x=;x<f.length;++x)g[x]=&f.charCodeAt(x);return g}e("setimmediate"),n.newBlob=function(f,g){n.checkSupport("blob");try{return new Blob([f],{type:g})}catch{try{var x=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return x.append(f),x.getBlob(g)}catch{throw new Error("Bug : can't construct the Blob.")}}};var l={stringifyByChunk:function(f,g,x){var b=[],_=,C=f.length;if(C<=x)return String.fromCharCode.apply(null,f);for(;_<C;)g==="array"||g==="nodebuffer"?b.push(String.fromCharCode.apply(null,f.slice(_,Math.min(_+x,C)))):b.push(String.fromCharCode.apply(null,f.subarray(_,Math.min(_+x,C)))),_+=x;return b.join("")},stringifyByChar:function(f){for(var g="",x=;x<f.length;x++)g+=String.fromCharCode(f[x]);return g},applyCanBeUsed:{uintarray:function(){try{return a.uintarray&&String.fromCharCode.apply(null,new UintArray()).length===}catch{return!}}(),nodebuffer:function(){try{return a.nodebuffer&&String.fromCharCode.apply(null,r.allocBuffer()).length===}catch{return!}}()}};function c(f){var g=,x=n.getTypeOf(f),b=!;if(x==="uintarray"?b=l.applyCanBeUsed.uintarray:x==="nodebuffer"&&(b=l.applyCanBeUsed.nodebuffer),b)for(;<g;)try{return l.stringifyByChunk(f,x,g)}catch{g=Math.floor(g/)}return l.stringifyByChar(f)}function u(f,g){for(var x=;x<f.length;x++)g[x]=f[x];return g}n.applyFromCharCode=c;var h={};h.string={string:s,array:function(f){return p(f,new Array(f.length))},arraybuffer:function(f){return h.string.uintarray(f).buffer},uintarray:function(f){return p(f,new UintArray(f.length))},nodebuffer:function(f){return p(f,r.allocBuffer(f.length))}},h.array={string:c,array:s,arraybuffer:function(f){return new UintArray(f).buffer},uintarray:function(f){return new UintArray(f)},nodebuffer:function(f){return r.newBufferFrom(f)}},h.arraybuffer={string:function(f){return c(new UintArray(f))},array:function(f){return u(new UintArray(f),new Array(f.byteLength))},arraybuffer:s,uintarray:function(f){return new UintArray(f)},nodebuffer:function(f){return r.newBufferFrom(new UintArray(f))}},h.uintarray={string:c,array:function(f){return u(f,new Array(f.length))},arraybuffer:function(f){return f.buffer},uintarray:s,nodebuffer:function(f){return r.newBufferFrom(f)}},h.nodebuffer={string:c,array:function(f){return u(f,new Array(f.length))},arraybuffer:function(f){return h.nodebuffer.uintarray(f).buffer},uintarray:function(f){return u(f,new UintArray(f.length))},nodebuffer:s},n.transformTo=function(f,g){if(g=g||"",!f)return g;n.checkSupport(f);var x=n.getTypeOf(g);return h[x][f](g)},n.resolve=function(f){for(var g=f.split("/"),x=[],b=;b<g.length;b++){var _=g[b];_==="."||_===""&&b!==&&b!==g.length-||(_===".."?x.pop():x.push(_))}return x.join("/")},n.getTypeOf=function(f){return typeof f=="string"?"string":Object.prototype.toString.call(f)==="[object Array]"?"array":a.nodebuffer&&r.isBuffer(f)?"nodebuffer":a.uintarray&&f instanceof UintArray?"uintarray":a.arraybuffer&&f instanceof ArrayBuffer?"arraybuffer":void },n.checkSupport=function(f){if(!a[f.toLowerCase()])throw new Error(f+" is not supported by this platform")},n.MAX_VALUE_BITS=,n.MAX_VALUE_BITS=-,n.pretty=function(f){var g,x,b="";for(x=;x<(f||"").length;x++)b+="\\x"+((g=f.charCodeAt(x))<?"":"")+g.toString().toUpperCase();return b},n.delay=function(f,g,x){setImmediate(function(){f.apply(x||null,g||[])})},n.inherits=function(f,g){function x(){}x.prototype=g.prototype,f.prototype=new x},n.extend=function(){var f,g,x={};for(f=;f<arguments.length;f++)for(g in arguments[f])arguments[f].hasOwnProperty(g)&&x[g]===void &&(x[g]=arguments[f][g]);return x},n.prepareContent=function(f,g,x,b,_){return o.Promise.resolve(g).then(function(C){return a.blob&&(C instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(C))!==-)&&typeof FileReader<"u"?new o.Promise(function(w,z){var F=new FileReader;F.onload=function(T){w(T.target.result)},F.onerror=function(T){z(T.target.error)},F.readAsArrayBuffer(C)}):C}).then(function(C){var w=n.getTypeOf(C);return w?(w==="arraybuffer"?C=n.transformTo("uintarray",C):w==="string"&&(_?C=i.decode(C):x&&b!==!&&(C=function(z){return p(z,a.uintarray?new UintArray(z.length):new Array(z.length))}(C))),C):o.Promise.reject(new Error("Can't read the data of '"+f+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base":,"./external":,"./nodejsUtils":,"./support":,setimmediate:}],:[function(e,t,n){"use strict";var a=e("./reader/readerFor"),i=e("./utils"),r=e("./signature"),o=e("./zipEntry"),s=(e("./utf"),e("./support"));function p(l){this.files=[],this.loadOptions=l}p.prototype={checkSignature:function(l){if(!this.reader.readAndCheckSignature(l)){this.reader.index-=;var c=this.reader.readString();throw new Error("Corrupted zip or bug: unexpected signature ("+i.pretty(c)+", expected "+i.pretty(l)+")")}},isSignature:function(l,c){var u=this.reader.index;this.reader.setIndex(l);var h=this.reader.readString()===c;return this.reader.setIndex(u),h},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(),this.diskWithCentralDirStart=this.reader.readInt(),this.centralDirRecordsOnThisDisk=this.reader.readInt(),this.centralDirRecords=this.reader.readInt(),this.centralDirSize=this.reader.readInt(),this.centralDirOffset=this.reader.readInt(),this.zipCommentLength=this.reader.readInt();var l=this.reader.readData(this.zipCommentLength),c=s.uintarray?"uintarray":"array",u=i.transformTo(c,l);this.zipComment=this.loadOptions.decodeFileName(u)},readBlockZipEndOfCentral:function(){this.zipEndOfCentralSize=this.reader.readInt(),this.reader.skip(),this.diskNumber=this.reader.readInt(),this.diskWithCentralDirStart=this.reader.readInt(),this.centralDirRecordsOnThisDisk=this.reader.readInt(),this.centralDirRecords=this.reader.readInt(),this.centralDirSize=this.reader.readInt(),this.centralDirOffset=this.reader.readInt(),this.zipExtensibleData={};for(var l,c,u,h=this.zipEndOfCentralSize-;<h;)l=this.reader.readInt(),c=this.reader.readInt(),u=this.reader.readData(c),this.zipExtensibleData[l]={id:l,length:c,value:u}},readBlockZipEndOfCentralLocator:function(){if(this.diskWithZipCentralDirStart=this.reader.readInt(),this.relativeOffsetEndOfZipCentralDir=this.reader.readInt(),this.disksCount=this.reader.readInt(),<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var l,c;for(l=;l<this.files.length;l++)c=this.files[l],this.reader.setIndex(c.localHeaderOffset),this.checkSignature(r.LOCAL_FILE_HEADER),c.readLocalPart(this.reader),c.handleUTF(),c.processAttributes()},readCentralDir:function(){var l;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(r.CENTRAL_FILE_HEADER);)(l=new o({zip:this.zip},this.loadOptions)).readCentralPart(this.reader),this.files.push(l);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==&&this.files.length===)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var l=this.reader.lastIndexOfSignature(r.CENTRAL_DIRECTORY_END);if(l<)throw this.isSignature(,r.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(l);var c=l;if(this.checkSignature(r.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_BITS||this.diskWithCentralDirStart===i.MAX_VALUE_BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_BITS||this.centralDirRecords===i.MAX_VALUE_BITS||this.centralDirSize===i.MAX_VALUE_BITS||this.centralDirOffset===i.MAX_VALUE_BITS){if(this.zip=!,(l=this.reader.lastIndexOfSignature(r.ZIP_CENTRAL_DIRECTORY_LOCATOR))<)throw new Error("Corrupted zip: can't find the ZIP end of central directory locator");if(this.reader.setIndex(l),this.checkSignature(r.ZIP_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZipEndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZipCentralDir,r.ZIP_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZipCentralDir=this.reader.lastIndexOfSignature(r.ZIP_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZipCentralDir<))throw new Error("Corrupted zip: can't find the ZIP end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZipCentralDir),this.checkSignature(r.ZIP_CENTRAL_DIRECTORY_END),this.readBlockZipEndOfCentral()}var u=this.centralDirOffset+this.centralDirSize;this.zip&&(u+=,u+=+this.zipEndOfCentralSize);var h=c-u;if(<h)this.isSignature(c,r.CENTRAL_FILE_HEADER)||(this.reader.zero=h);else if(h<)throw new Error("Corrupted zip: missing "+Math.abs(h)+" bytes.")},prepareReader:function(l){this.reader=a(l)},load:function(l){this.prepareReader(l),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=p},{"./reader/readerFor":,"./signature":,"./support":,"./utf":,"./utils":,"./zipEntry":}],:[function(e,t,n){"use strict";var a=e("./reader/readerFor"),i=e("./utils"),r=e("./compressedObject"),o=e("./crc"),s=e("./utf"),p=e("./compressions"),l=e("./support");function c(u,h){this.options=u,this.loadOptions=h}c.prototype={isEncrypted:function(){return(&this.bitFlag)==},useUTF:function(){return(&this.bitFlag)==},readLocalPart:function(u){var h,f;if(u.skip(),this.fileNameLength=u.readInt(),f=u.readInt(),this.fileName=u.readData(this.fileNameLength),u.skip(f),this.compressedSize===-||this.uncompressedSize===-)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === - || uncompressedSize === -)");if((h=function(g){for(var x in p)if(p.hasOwnProperty(x)&&p[x].magic===g)return p[x];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+i.pretty(this.compressionMethod)+" unknown (inner file : "+i.transformTo("string",this.fileName)+")");this.decompressed=new r(this.compressedSize,this.uncompressedSize,this.crc,h,u.readData(this.compressedSize))},readCentralPart:function(u){this.versionMadeBy=u.readInt(),u.skip(),this.bitFlag=u.readInt(),this.compressionMethod=u.readString(),this.date=u.readDate(),this.crc=u.readInt(),this.compressedSize=u.readInt(),this.uncompressedSize=u.readInt();var h=u.readInt();if(this.extraFieldsLength=u.readInt(),this.fileCommentLength=u.readInt(),this.diskNumberStart=u.readInt(),this.internalFileAttributes=u.readInt(),this.externalFileAttributes=u.readInt(),this.localHeaderOffset=u.readInt(),this.isEncrypted())throw new Error("Encrypted zip are not supported");u.skip(h),this.readExtraFields(u),this.parseZIPExtraField(u),this.fileComment=u.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var u=this.versionMadeBy>>;this.dir=!!(&this.externalFileAttributes),u==&&(this.dosPermissions=&this.externalFileAttributes),u==&&(this.unixPermissions=this.externalFileAttributes>>&),this.dir||this.fileNameStr.slice(-)!=="/"||(this.dir=!)},parseZIPExtraField:function(u){if(this.extraFields[]){var h=a(this.extraFields[].value);this.uncompressedSize===i.MAX_VALUE_BITS&&(this.uncompressedSize=h.readInt()),this.compressedSize===i.MAX_VALUE_BITS&&(this.compressedSize=h.readInt()),this.localHeaderOffset===i.MAX_VALUE_BITS&&(this.localHeaderOffset=h.readInt()),this.diskNumberStart===i.MAX_VALUE_BITS&&(this.diskNumberStart=h.readInt())}},readExtraFields:function(u){var h,f,g,x=u.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});u.index+<x;)h=u.readInt(),f=u.readInt(),g=u.readData(f),this.extraFields[h]={id:h,length:f,value:g};u.setIndex(x)},handleUTF:function(){var u=l.uintarray?"uintarray":"array";if(this.useUTF())this.fileNameStr=s.utfdecode(this.fileName),this.fileCommentStr=s.utfdecode(this.fileComment);else{var h=this.findExtraFieldUnicodePath();if(h!==null)this.fileNameStr=h;else{var f=i.transformTo(u,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(f)}var g=this.findExtraFieldUnicodeComment();if(g!==null)this.fileCommentStr=g;else{var x=i.transformTo(u,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(x)}}},findExtraFieldUnicodePath:function(){var u=this.extraFields[];if(u){var h=a(u.value);return h.readInt()!==||o(this.fileName)!==h.readInt()?null:s.utfdecode(h.readData(u.length-))}return null},findExtraFieldUnicodeComment:function(){var u=this.extraFields[];if(u){var h=a(u.value);return h.readInt()!==||o(this.fileComment)!==h.readInt()?null:s.utfdecode(h.readData(u.length-))}return null}},t.exports=c},{"./compressedObject":,"./compressions":,"./crc":,"./reader/readerFor":,"./support":,"./utf":,"./utils":}],:[function(e,t,n){"use strict";function a(h,f,g){this.name=h,this.dir=g.dir,this.date=g.date,this.comment=g.comment,this.unixPermissions=g.unixPermissions,this.dosPermissions=g.dosPermissions,this._data=f,this._dataBinary=g.binary,this.options={compression:g.compression,compressionOptions:g.compressionOptions}}var i=e("./stream/StreamHelper"),r=e("./stream/DataWorker"),o=e("./utf"),s=e("./compressedObject"),p=e("./stream/GenericWorker");a.prototype={internalStream:function(h){var f=null,g="string";try{if(!h)throw new Error("No output type specified.");var x=(g=h.toLowerCase())==="string"||g==="text";g!=="binarystring"&&g!=="text"||(g="string"),f=this._decompressWorker();var b=!this._dataBinary;b&&!x&&(f=f.pipe(new o.UtfEncodeWorker)),!b&&x&&(f=f.pipe(new o.UtfDecodeWorker))}catch(_){(f=new p("error")).error(_)}return new i(f,g,"")},async:function(h,f){return this.internalStream(h).accumulate(f)},nodeStream:function(h,f){return this.internalStream(h||"nodebuffer").toNodejsStream(f)},_compressWorker:function(h,f){if(this._data instanceof s&&this._data.compression.magic===h.magic)return this._data.getCompressedWorker();var g=this._decompressWorker();return this._dataBinary||(g=g.pipe(new o.UtfEncodeWorker)),s.createWorkerFrom(g,h,f)},_decompressWorker:function(){return this._data instanceof s?this._data.getContentWorker():this._data instanceof p?this._data:new r(this._data)}};for(var l=["asText","asBinary","asNodeBuffer","asUintArray","asArrayBuffer"],c=function(){throw new Error("This method has been removed in JSZip ., please check the upgrade guide.")},u=;u<l.length;u++)a.prototype[l[u]]=c;t.exports=a},{"./compressedObject":,"./stream/DataWorker":,"./stream/GenericWorker":,"./stream/StreamHelper":,"./utf":}],:[function(e,t,n){(function(a){"use strict";var i,r,o=a.MutationObserver||a.WebKitMutationObserver;if(o){var s=,p=new o(h),l=a.document.createTextNode("");p.observe(l,{characterData:!}),i=function(){l.data=s=++s%}}else if(a.setImmediate||a.MessageChannel===void )i="document"in a&&"onreadystatechange"in a.document.createElement("script")?function(){var f=a.document.createElement("script");f.onreadystatechange=function(){h(),f.onreadystatechange=null,f.parentNode.removeChild(f),f=null},a.document.documentElement.appendChild(f)}:function(){setTimeout(h,)};else{var c=new a.MessageChannel;c.port.onmessage=h,i=function(){c.port.postMessage()}}var u=[];function h(){var f,g;r=!;for(var x=u.length;x;){for(g=u,u=[],f=-;++f<x;)g[f]();x=u.length}r=!}t.exports=function(f){u.push(f)!==||r||i()}}).call(this,typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:{})},{}],:[function(e,t,n){"use strict";var a=e("immediate");function i(){}var r={},o=["REJECTED"],s=["FULFILLED"],p=["PENDING"];function l(x){if(typeof x!="function")throw new TypeError("resolver must be a function");this.state=p,this.queue=[],this.outcome=void ,x!==i&&f(this,x)}function c(x,b,_){this.promise=x,typeof b=="function"&&(this.onFulfilled=b,this.callFulfilled=this.otherCallFulfilled),typeof _=="function"&&(this.onRejected=_,this.callRejected=this.otherCallRejected)}function u(x,b,_){a(function(){var C;try{C=b(_)}catch(w){return r.reject(x,w)}C===x?r.reject(x,new TypeError("Cannot resolve promise with itself")):r.resolve(x,C)})}function h(x){var b=x&&x.then;if(x&&(typeof x=="object"||typeof x=="function")&&typeof b=="function")return function(){b.apply(x,arguments)}}function f(x,b){var _=!;function C(F){_||(_=!,r.reject(x,F))}function w(F){_||(_=!,r.resolve(x,F))}var z=g(function(){b(w,C)});z.status==="error"&&C(z.value)}function g(x,b){var _={};try{_.value=x(b),_.status="success"}catch(C){_.status="error",_.value=C}return _}(t.exports=l).prototype.finally=function(x){if(typeof x!="function")return this;var b=this.constructor;return this.then(function(_){return b.resolve(x()).then(function(){return _})},function(_){return b.resolve(x()).then(function(){throw _})})},l.prototype.catch=function(x){return this.then(null,x)},l.prototype.then=function(x,b){if(typeof x!="function"&&this.state===s||typeof b!="function"&&this.state===o)return this;var _=new this.constructor(i);return this.state!==p?u(_,this.state===s?x:b,this.outcome):this.queue.push(new c(_,x,b)),_},c.prototype.callFulfilled=function(x){r.resolve(this.promise,x)},c.prototype.otherCallFulfilled=function(x){u(this.promise,this.onFulfilled,x)},c.prototype.callRejected=function(x){r.reject(this.promise,x)},c.prototype.otherCallRejected=function(x){u(this.promise,this.onRejected,x)},r.resolve=function(x,b){var _=g(h,b);if(_.status==="error")return r.reject(x,_.value);var C=_.value;if(C)f(x,C);else{x.state=s,x.outcome=b;for(var w=-,z=x.queue.length;++w<z;)x.queue[w].callFulfilled(b)}return x},r.reject=function(x,b){x.state=o,x.outcome=b;for(var _=-,C=x.queue.length;++_<C;)x.queue[_].callRejected(b);return x},l.resolve=function(x){return x instanceof this?x:r.resolve(new this(i),x)},l.reject=function(x){var b=new this(i);return r.reject(b,x)},l.all=function(x){var b=this;if(Object.prototype.toString.call(x)!=="[object Array]")return this.reject(new TypeError("must be an array"));var _=x.length,C=!;if(!_)return this.resolve([]);for(var w=new Array(_),z=,F=-,T=new this(i);++F<_;)S(x[F],F);return T;function S(W,Y){b.resolve(W).then(function(k){w[Y]=k,++z!==_||C||(C=!,r.resolve(T,w))},function(k){C||(C=!,r.reject(T,k))})}},l.race=function(x){var b=this;if(Object.prototype.toString.call(x)!=="[object Array]")return this.reject(new TypeError("must be an array"));var _=x.length,C=!;if(!_)return this.resolve([]);for(var w=-,z=new this(i);++w<_;)F=x[w],b.resolve(F).then(function(T){C||(C=!,r.resolve(z,T))},function(T){C||(C=!,r.reject(z,T))});var F;return z}},{immediate:}],:[function(e,t,n){"use strict";var a={};(,e("./lib/utils/common").assign)(a,e("./lib/deflate"),e("./lib/inflate"),e("./lib/zlib/constants")),t.exports=a},{"./lib/deflate":,"./lib/inflate":,"./lib/utils/common":,"./lib/zlib/constants":}],:[function(e,t,n){"use strict";var a=e("./zlib/deflate"),i=e("./utils/common"),r=e("./utils/strings"),o=e("./zlib/messages"),s=e("./zlib/zstream"),p=Object.prototype.toString,l=,c=-,u=,h=;function f(x){if(!(this instanceof f))return new f(x);this.options=i.assign({level:c,method:h,chunkSize:,windowBits:,memLevel:,strategy:u,to:""},x||{});var b=this.options;b.raw&&<b.windowBits?b.windowBits=-b.windowBits:b.gzip&&<b.windowBits&&b.windowBits<&&(b.windowBits+=),this.err=,this.msg="",this.ended=!,this.chunks=[],this.strm=new s,this.strm.avail_out=;var _=a.deflateInit(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(_!==l)throw new Error(o[_]);if(b.header&&a.deflateSetHeader(this.strm,b.header),b.dictionary){var C;if(C=typeof b.dictionary=="string"?r.stringbuf(b.dictionary):p.call(b.dictionary)==="[object ArrayBuffer]"?new UintArray(b.dictionary):b.dictionary,(_=a.deflateSetDictionary(this.strm,C))!==l)throw new Error(o[_]);this._dict_set=!}}function g(x,b){var _=new f(b);if(_.push(x,!),_.err)throw _.msg||o[_.err];return _.result}f.prototype.push=function(x,b){var _,C,w=this.strm,z=this.options.chunkSize;if(this.ended)return!;C=b===~~b?b:b===!?:,typeof x=="string"?w.input=r.stringbuf(x):p.call(x)==="[object ArrayBuffer]"?w.input=new UintArray(x):w.input=x,w.next_in=,w.avail_in=w.input.length;do{if(w.avail_out===&&(w.output=new i.Buf(z),w.next_out=,w.avail_out=z),(_=a.deflate(w,C))!==&&_!==l)return this.onEnd(_),!(this.ended=!);w.avail_out!==&&(w.avail_in!==||C!==&&C!==)||(this.options.to==="string"?this.onData(r.bufbinstring(i.shrinkBuf(w.output,w.next_out))):this.onData(i.shrinkBuf(w.output,w.next_out)))}while((<w.avail_in||w.avail_out===)&&_!==);return C===?(_=a.deflateEnd(this.strm),this.onEnd(_),this.ended=!,_===l):C!==||(this.onEnd(l),!(w.avail_out=))},f.prototype.onData=function(x){this.chunks.push(x)},f.prototype.onEnd=function(x){x===l&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=x,this.msg=this.strm.msg},n.Deflate=f,n.deflate=g,n.deflateRaw=function(x,b){return(b=b||{}).raw=!,g(x,b)},n.gzip=function(x,b){return(b=b||{}).gzip=!,g(x,b)}},{"./utils/common":,"./utils/strings":,"./zlib/deflate":,"./zlib/messages":,"./zlib/zstream":}],:[function(e,t,n){"use strict";var a=e("./zlib/inflate"),i=e("./utils/common"),r=e("./utils/strings"),o=e("./zlib/constants"),s=e("./zlib/messages"),p=e("./zlib/zstream"),l=e("./zlib/gzheader"),c=Object.prototype.toString;function u(f){if(!(this instanceof u))return new u(f);this.options=i.assign({chunkSize:,windowBits:,to:""},f||{});var g=this.options;g.raw&&<=g.windowBits&&g.windowBits<&&(g.windowBits=-g.windowBits,g.windowBits===&&(g.windowBits=-)),!(<=g.windowBits&&g.windowBits<)||f&&f.windowBits||(g.windowBits+=),<g.windowBits&&g.windowBits<&&(&g.windowBits)==&&(g.windowBits|=),this.err=,this.msg="",this.ended=!,this.chunks=[],this.strm=new p,this.strm.avail_out=;var x=a.inflateInit(this.strm,g.windowBits);if(x!==o.Z_OK)throw new Error(s[x]);this.header=new l,a.inflateGetHeader(this.strm,this.header)}function h(f,g){var x=new u(g);if(x.push(f,!),x.err)throw x.msg||s[x.err];return x.result}u.prototype.push=function(f,g){var x,b,_,C,w,z,F=this.strm,T=this.options.chunkSize,S=this.options.dictionary,W=!;if(this.ended)return!;b=g===~~g?g:g===!?o.Z_FINISH:o.Z_NO_FLUSH,typeof f=="string"?F.input=r.binstringbuf(f):c.call(f)==="[object ArrayBuffer]"?F.input=new UintArray(f):F.input=f,F.next_in=,F.avail_in=F.input.length;do{if(F.avail_out===&&(F.output=new i.Buf(T),F.next_out=,F.avail_out=T),(x=a.inflate(F,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&S&&(z=typeof S=="string"?r.stringbuf(S):c.call(S)==="[object ArrayBuffer]"?new UintArray(S):S,x=a.inflateSetDictionary(this.strm,z)),x===o.Z_BUF_ERROR&&W===!&&(x=o.Z_OK,W=!),x!==o.Z_STREAM_END&&x!==o.Z_OK)return this.onEnd(x),!(this.ended=!);F.next_out&&(F.avail_out!==&&x!==o.Z_STREAM_END&&(F.avail_in!==||b!==o.Z_FINISH&&b!==o.Z_SYNC_FLUSH)||(this.options.to==="string"?(_=r.utfborder(F.output,F.next_out),C=F.next_out-_,w=r.bufstring(F.output,_),F.next_out=C,F.avail_out=T-C,C&&i.arraySet(F.output,F.output,_,C,),this.onData(w)):this.onData(i.shrinkBuf(F.output,F.next_out)))),F.avail_in===&&F.avail_out===&&(W=!)}while((<F.avail_in||F.avail_out===)&&x!==o.Z_STREAM_END);return x===o.Z_STREAM_END&&(b=o.Z_FINISH),b===o.Z_FINISH?(x=a.inflateEnd(this.strm),this.onEnd(x),this.ended=!,x===o.Z_OK):b!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),!(F.avail_out=))},u.prototype.onData=function(f){this.chunks.push(f)},u.prototype.onEnd=function(f){f===o.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=f,this.msg=this.strm.msg},n.Inflate=u,n.inflate=h,n.inflateRaw=function(f,g){return(g=g||{}).raw=!,h(f,g)},n.ungzip=h},{"./utils/common":,"./utils/strings":,"./zlib/constants":,"./zlib/gzheader":,"./zlib/inflate":,"./zlib/messages":,"./zlib/zstream":}],:[function(e,t,n){"use strict";var a=typeof UintArray<"u"&&typeof UintArray<"u"&&typeof IntArray<"u";n.assign=function(o){for(var s=Array.prototype.slice.call(arguments,);s.length;){var p=s.shift();if(p){if(typeof p!="object")throw new TypeError(p+"must be non-object");for(var l in p)p.hasOwnProperty(l)&&(o[l]=p[l])}}return o},n.shrinkBuf=function(o,s){return o.length===s?o:o.subarray?o.subarray(,s):(o.length=s,o)};var i={arraySet:function(o,s,p,l,c){if(s.subarray&&o.subarray)o.set(s.subarray(p,p+l),c);else for(var u=;u<l;u++)o[c+u]=s[p+u]},flattenChunks:function(o){var s,p,l,c,u,h;for(s=l=,p=o.length;s<p;s++)l+=o[s].length;for(h=new UintArray(l),s=c=,p=o.length;s<p;s++)u=o[s],h.set(u,c),c+=u.length;return h}},r={arraySet:function(o,s,p,l,c){for(var u=;u<l;u++)o[c+u]=s[p+u]},flattenChunks:function(o){return[].concat.apply([],o)}};n.setTyped=function(o){o?(n.Buf=UintArray,n.Buf=UintArray,n.Buf=IntArray,n.assign(n,i)):(n.Buf=Array,n.Buf=Array,n.Buf=Array,n.assign(n,r))},n.setTyped(a)},{}],:[function(e,t,n){"use strict";var a=e("./common"),i=!,r=!;try{String.fromCharCode.apply(null,[])}catch{i=!}try{String.fromCharCode.apply(null,new UintArray())}catch{r=!}for(var o=new a.Buf(),s=;s<;s++)o[s]=<=s?:<=s?:<=s?:<=s?:<=s?:;function p(l,c){if(c<&&(l.subarray&&r||!l.subarray&&i))return String.fromCharCode.apply(null,a.shrinkBuf(l,c));for(var u="",h=;h<c;h++)u+=String.fromCharCode(l[h]);return u}o[]=o[]=,n.stringbuf=function(l){var c,u,h,f,g,x=l.length,b=;for(f=;f<x;f++)(&(u=l.charCodeAt(f)))==&&f+<x&&(&(h=l.charCodeAt(f+)))==&&(u=+(u-<<)+(h-),f++),b+=u<?:u<?:u<?:;for(c=new a.Buf(b),f=g=;g<b;f++)(&(u=l.charCodeAt(f)))==&&f+<x&&(&(h=l.charCodeAt(f+)))==&&(u=+(u-<<)+(h-),f++),u<?c[g++]=u:(u<?c[g++]=|u>>>:(u<?c[g++]=|u>>>:(c[g++]=|u>>>,c[g++]=|u>>>&),c[g++]=|u>>>&),c[g++]=|&u);return c},n.bufbinstring=function(l){return p(l,l.length)},n.binstringbuf=function(l){for(var c=new a.Buf(l.length),u=,h=c.length;u<h;u++)c[u]=l.charCodeAt(u);return c},n.bufstring=function(l,c){var u,h,f,g,x=c||l.length,b=new Array(x);for(u=h=;u<x;)if((f=l[u++])<)b[h++]=f;else if(<(g=o[f]))b[h++]=,u+=g-;else{for(f&=g===?:g===?:;<g&&u<x;)f=f<<|&l[u++],g--;<g?b[h++]=:f<?b[h++]=f:(f-=,b[h++]=|f>>&,b[h++]=|&f)}return p(b,h)},n.utfborder=function(l,c){var u;for((c=c||l.length)>l.length&&(c=l.length),u=c-;<=u&&(&l[u])==;)u--;return u<||u===?c:u+o[l[u]]>c?u:c}},{"./common":}],:[function(e,t,n){"use strict";t.exports=function(a,i,r,o){for(var s=&a|,p=a>>>&|,l=;r!==;){for(r-=l=e<r?e:r;p=p+(s=s+i[o++]|)|,--l;);s%=,p%=}return s|p<<|}},{}],:[function(e,t,n){"use strict";t.exports={Z_NO_FLUSH:,Z_PARTIAL_FLUSH:,Z_SYNC_FLUSH:,Z_FULL_FLUSH:,Z_FINISH:,Z_BLOCK:,Z_TREES:,Z_OK:,Z_STREAM_END:,Z_NEED_DICT:,Z_ERRNO:-,Z_STREAM_ERROR:-,Z_DATA_ERROR:-,Z_BUF_ERROR:-,Z_NO_COMPRESSION:,Z_BEST_SPEED:,Z_BEST_COMPRESSION:,Z_DEFAULT_COMPRESSION:-,Z_FILTERED:,Z_HUFFMAN_ONLY:,Z_RLE:,Z_FIXED:,Z_DEFAULT_STRATEGY:,Z_BINARY:,Z_TEXT:,Z_UNKNOWN:,Z_DEFLATED:}},{}],:[function(e,t,n){"use strict";var a=function(){for(var i,r=[],o=;o<;o++){i=o;for(var s=;s<;s++)i=&i?^i>>>:i>>>;r[o]=i}return r}();t.exports=function(i,r,o,s){var p=a,l=s+o;i^=-;for(var c=s;c<l;c++)i=i>>>^p[&(i^r[c])];return-^i}},{}],:[function(e,t,n){"use strict";var a,i=e("../utils/common"),r=e("./trees"),o=e("./adler"),s=e("./crc"),p=e("./messages"),l=,c=,u=,h=-,f=-,g=,x=,b=,_=,C=,w=,z=,F=C+,T=,S=,W=,Y=W+S+,k=,E=,m=,P=,J=,D=;function ae(d,B){return d.msg=p[B],B}function R(d){return(d<<)-(<d?:)}function te(d){for(var B=d.length;<=--B;)d[B]=}function A(d){var B=d.state,M=B.pending;M>d.avail_out&&(M=d.avail_out),M!==&&(i.arraySet(d.output,B.pending_buf,B.pending_out,M,d.next_out),d.next_out+=M,B.pending_out+=M,d.total_out+=M,d.avail_out-=M,B.pending-=M,B.pending===&&(B.pending_out=))}function I(d,B){r._tr_flush_block(d,<=d.block_start?d.block_start:-,d.strstart-d.block_start,B),d.block_start=d.strstart,A(d.strm)}function ee(d,B){d.pending_buf[d.pending++]=B}function G(d,B){d.pending_buf[d.pending++]=B>>>&,d.pending_buf[d.pending++]=&B}function q(d,B){var M,y,v=d.max_chain_length,j=d.strstart,O=d.prev_length,N=d.nice_match,L=d.strstart>d.w_size-Y?d.strstart-(d.w_size-Y):,U=d.window,Z=d.w_mask,V=d.prev,Q=d.strstart+W,le=U[j+O-],re=U[j+O];d.prev_length>=d.good_match&&(v>>=),N>d.lookahead&&(N=d.lookahead);do if(U[(M=B)+O]===re&&U[M+O-]===le&&U[M]===U[j]&&U[++M]===U[j+]){j+=,M++;do;while(U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&U[++j]===U[++M]&&j<Q);if(y=W-(Q-j),j=Q-W,O<y){if(d.match_start=B,N<=(O=y))break;le=U[j+O-],re=U[j+O]}}while((B=V[B&Z])>L&&--v!=);return O<=d.lookahead?O:d.lookahead}function ue(d){var B,M,y,v,j,O,N,L,U,Z,V=d.w_size;do{if(v=d.window_size-d.lookahead-d.strstart,d.strstart>=V+(V-Y)){for(i.arraySet(d.window,d.window,V,V,),d.match_start-=V,d.strstart-=V,d.block_start-=V,B=M=d.hash_size;y=d.head[--B],d.head[B]=V<=y?y-V:,--M;);for(B=M=V;y=d.prev[--B],d.prev[B]=V<=y?y-V:,--M;);v+=V}if(d.strm.avail_in===)break;if(O=d.strm,N=d.window,L=d.strstart+d.lookahead,U=v,Z=void ,Z=O.avail_in,U<Z&&(Z=U),M=Z===?:(O.avail_in-=Z,i.arraySet(N,O.input,O.next_in,Z,L),O.state.wrap===?O.adler=o(O.adler,N,Z,L):O.state.wrap===&&(O.adler=s(O.adler,N,Z,L)),O.next_in+=Z,O.total_in+=Z,Z),d.lookahead+=M,d.lookahead+d.insert>=S)for(j=d.strstart-d.insert,d.ins_h=d.window[j],d.ins_h=(d.ins_h<<d.hash_shift^d.window[j+])&d.hash_mask;d.insert&&(d.ins_h=(d.ins_h<<d.hash_shift^d.window[j+S-])&d.hash_mask,d.prev[j&d.w_mask]=d.head[d.ins_h],d.head[d.ins_h]=j,j++,d.insert--,!(d.lookahead+d.insert<S)););}while(d.lookahead<Y&&d.strm.avail_in!==)}function ve(d,B){for(var M,y;;){if(d.lookahead<Y){if(ue(d),d.lookahead<Y&&B===l)return m;if(d.lookahead===)break}if(M=,d.lookahead>=S&&(d.ins_h=(d.ins_h<<d.hash_shift^d.window[d.strstart+S-])&d.hash_mask,M=d.prev[d.strstart&d.w_mask]=d.head[d.ins_h],d.head[d.ins_h]=d.strstart),M!==&&d.strstart-M<=d.w_size-Y&&(d.match_length=q(d,M)),d.match_length>=S)if(y=r._tr_tally(d,d.strstart-d.match_start,d.match_length-S),d.lookahead-=d.match_length,d.match_length<=d.max_lazy_match&&d.lookahead>=S){for(d.match_length--;d.strstart++,d.ins_h=(d.ins_h<<d.hash_shift^d.window[d.strstart+S-])&d.hash_mask,M=d.prev[d.strstart&d.w_mask]=d.head[d.ins_h],d.head[d.ins_h]=d.strstart,--d.match_length!=;);d.strstart++}else d.strstart+=d.match_length,d.match_length=,d.ins_h=d.window[d.strstart],d.ins_h=(d.ins_h<<d.hash_shift^d.window[d.strstart+])&d.hash_mask;else y=r._tr_tally(d,,d.window[d.strstart]),d.lookahead--,d.strstart++;if(y&&(I(d,!),d.strm.avail_out===))return m}return d.insert=d.strstart<S-?d.strstart:S-,B===c?(I(d,!),d.strm.avail_out===?J:D):d.last_lit&&(I(d,!),d.strm.avail_out===)?m:P}function ie(d,B){for(var M,y,v;;){if(d.lookahead<Y){if(ue(d),d.lookahead<Y&&B===l)return m;if(d.lookahead===)break}if(M=,d.lookahead>=S&&(d.ins_h=(d.ins_h<<d.hash_shift^d.window[d.strstart+S-])&d.hash_mask,M=d.prev[d.strstart&d.w_mask]=d.head[d.ins_h],d.head[d.ins_h]=d.strstart),d.prev_length=d.match_length,d.prev_match=d.match_start,d.match_length=S-,M!==&&d.prev_length<d.max_lazy_match&&d.strstart-M<=d.w_size-Y&&(d.match_length=q(d,M),d.match_length<=&&(d.strategy===||d.match_length===S&&<d.strstart-d.match_start)&&(d.match_length=S-)),d.prev_length>=S&&d.match_length<=d.prev_length){for(v=d.strstart+d.lookahead-S,y=r._tr_tally(d,d.strstart--d.prev_match,d.prev_length-S),d.lookahead-=d.prev_length-,d.prev_length-=;++d.strstart<=v&&(d.ins_h=(d.ins_h<<d.hash_shift^d.window[d.strstart+S-])&d.hash_mask,M=d.prev[d.strstart&d.w_mask]=d.head[d.ins_h],d.head[d.ins_h]=d.strstart),--d.prev_length!=;);if(d.match_available=,d.match_length=S-,d.strstart++,y&&(I(d,!),d.strm.avail_out===))return m}else if(d.match_available){if((y=r._tr_tally(d,,d.window[d.strstart-]))&&I(d,!),d.strstart++,d.lookahead--,d.strm.avail_out===)return m}else d.match_available=,d.strstart++,d.lookahead--}return d.match_available&&(y=r._tr_tally(d,,d.window[d.strstart-]),d.match_available=),d.insert=d.strstart<S-?d.strstart:S-,B===c?(I(d,!),d.strm.avail_out===?J:D):d.last_lit&&(I(d,!),d.strm.avail_out===)?m:P}function oe(d,B,M,y,v){this.good_length=d,this.max_lazy=B,this.nice_length=M,this.max_chain=y,this.func=v}function he(){this.strm=null,this.status=,this.pending_buf=null,this.pending_buf_size=,this.pending_out=,this.pending=,this.wrap=,this.gzhead=null,this.gzindex=,this.method=b,this.last_flush=-,this.w_size=,this.w_bits=,this.w_mask=,this.window=null,this.window_size=,this.prev=null,this.head=null,this.ins_h=,this.hash_size=,this.hash_bits=,this.hash_mask=,this.hash_shift=,this.block_start=,this.match_length=,this.prev_match=,this.match_available=,this.strstart=,this.match_start=,this.lookahead=,this.prev_length=,this.max_chain_length=,this.max_lazy_match=,this.level=,this.strategy=,this.good_match=,this.nice_match=,this.dyn_ltree=new i.Buf(F),this.dyn_dtree=new i.Buf((w+)),this.bl_tree=new i.Buf((z+)),te(this.dyn_ltree),te(this.dyn_dtree),te(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf(T+),this.heap=new i.Buf(C+),te(this.heap),this.heap_len=,this.heap_max=,this.depth=new i.Buf(C+),te(this.depth),this.l_buf=,this.lit_bufsize=,this.last_lit=,this.d_buf=,this.opt_len=,this.static_len=,this.matches=,this.insert=,this.bi_buf=,this.bi_valid=}function de(d){var B;return d&&d.state?(d.total_in=d.total_out=,d.data_type=x,(B=d.state).pending=,B.pending_out=,B.wrap<&&(B.wrap=-B.wrap),B.status=B.wrap?k:E,d.adler=B.wrap===?:,B.last_flush=l,r._tr_init(B),u):ae(d,h)}function ze(d){var B=de(d);return B===u&&function(M){M.window_size=M.w_size,te(M.head),M.max_lazy_match=a[M.level].max_lazy,M.good_match=a[M.level].good_length,M.nice_match=a[M.level].nice_length,M.max_chain_length=a[M.level].max_chain,M.strstart=,M.block_start=,M.lookahead=,M.insert=,M.match_length=M.prev_length=S-,M.match_available=,M.ins_h=}(d.state),B}function Ae(d,B,M,y,v,j){if(!d)return h;var O=;if(B===f&&(B=),y<?(O=,y=-y):<y&&(O=,y-=),v<||_<v||M!==b||y<||<y||B<||<B||j<||g<j)return ae(d,h);y===&&(y=);var N=new he;return(d.state=N).strm=d,N.wrap=O,N.gzhead=null,N.w_bits=y,N.w_size=<<N.w_bits,N.w_mask=N.w_size-,N.hash_bits=v+,N.hash_size=<<N.hash_bits,N.hash_mask=N.hash_size-,N.hash_shift=~~((N.hash_bits+S-)/S),N.window=new i.Buf(N.w_size),N.head=new i.Buf(N.hash_size),N.prev=new i.Buf(N.w_size),N.lit_bufsize=<<v+,N.pending_buf_size=N.lit_bufsize,N.pending_buf=new i.Buf(N.pending_buf_size),N.d_buf=N.lit_bufsize,N.l_buf=N.lit_bufsize,N.level=B,N.strategy=j,N.method=M,ze(d)}a=[new oe(,,,,function(d,B){var M=;for(M>d.pending_buf_size-&&(M=d.pending_buf_size-);;){if(d.lookahead<=){if(ue(d),d.lookahead===&&B===l)return m;if(d.lookahead===)break}d.strstart+=d.lookahead,d.lookahead=;var y=d.block_start+M;if((d.strstart===||d.strstart>=y)&&(d.lookahead=d.strstart-y,d.strstart=y,I(d,!),d.strm.avail_out===)||d.strstart-d.block_start>=d.w_size-Y&&(I(d,!),d.strm.avail_out===))return m}return d.insert=,B===c?(I(d,!),d.strm.avail_out===?J:D):(d.strstart>d.block_start&&(I(d,!),d.strm.avail_out),m)}),new oe(,,,,ve),new oe(,,,,ve),new oe(,,,,ve),new oe(,,,,ie),new oe(,,,,ie),new oe(,,,,ie),new oe(,,,,ie),new oe(,,,,ie),new oe(,,,,ie)],n.deflateInit=function(d,B){return Ae(d,B,b,,,)},n.deflateInit=Ae,n.deflateReset=ze,n.deflateResetKeep=de,n.deflateSetHeader=function(d,B){return d&&d.state?d.state.wrap!==?h:(d.state.gzhead=B,u):h},n.deflate=function(d,B){var M,y,v,j;if(!d||!d.state||<B||B<)return d?ae(d,h):h;if(y=d.state,!d.output||!d.input&&d.avail_in!==||y.status===&&B!==c)return ae(d,d.avail_out===?-:h);if(y.strm=d,M=y.last_flush,y.last_flush=B,y.status===k)if(y.wrap===)d.adler=,ee(y,),ee(y,),ee(y,),y.gzhead?(ee(y,(y.gzhead.text?:)+(y.gzhead.hcrc?:)+(y.gzhead.extra?:)+(y.gzhead.name?:)+(y.gzhead.comment?:)),ee(y,&y.gzhead.time),ee(y,y.gzhead.time>>&),ee(y,y.gzhead.time>>&),ee(y,y.gzhead.time>>&),ee(y,y.level===?:<=y.strategy||y.level<?:),ee(y,&y.gzhead.os),y.gzhead.extra&&y.gzhead.extra.length&&(ee(y,&y.gzhead.extra.length),ee(y,y.gzhead.extra.length>>&)),y.gzhead.hcrc&&(d.adler=s(d.adler,y.pending_buf,y.pending,)),y.gzindex=,y.status=):(ee(y,),ee(y,),ee(y,),ee(y,),ee(y,),ee(y,y.level===?:<=y.strategy||y.level<?:),ee(y,),y.status=E);else{var O=b+(y.w_bits-<<)<<;O|=(<=y.strategy||y.level<?:y.level<?:y.level===?:)<<,y.strstart!==&&(O|=),O+=-O%,y.status=E,G(y,O),y.strstart!==&&(G(y,d.adler>>>),G(y,&d.adler)),d.adler=}if(y.status===)if(y.gzhead.extra){for(v=y.pending;y.gzindex<(&y.gzhead.extra.length)&&(y.pending!==y.pending_buf_size||(y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),A(d),v=y.pending,y.pending!==y.pending_buf_size));)ee(y,&y.gzhead.extra[y.gzindex]),y.gzindex++;y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),y.gzindex===y.gzhead.extra.length&&(y.gzindex=,y.status=)}else y.status=;if(y.status===)if(y.gzhead.name){v=y.pending;do{if(y.pending===y.pending_buf_size&&(y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),A(d),v=y.pending,y.pending===y.pending_buf_size)){j=;break}j=y.gzindex<y.gzhead.name.length?&y.gzhead.name.charCodeAt(y.gzindex++):,ee(y,j)}while(j!==);y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),j===&&(y.gzindex=,y.status=)}else y.status=;if(y.status===)if(y.gzhead.comment){v=y.pending;do{if(y.pending===y.pending_buf_size&&(y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),A(d),v=y.pending,y.pending===y.pending_buf_size)){j=;break}j=y.gzindex<y.gzhead.comment.length?&y.gzhead.comment.charCodeAt(y.gzindex++):,ee(y,j)}while(j!==);y.gzhead.hcrc&&y.pending>v&&(d.adler=s(d.adler,y.pending_buf,y.pending-v,v)),j===&&(y.status=)}else y.status=;if(y.status===&&(y.gzhead.hcrc?(y.pending+>y.pending_buf_size&&A(d),y.pending+<=y.pending_buf_size&&(ee(y,&d.adler),ee(y,d.adler>>&),d.adler=,y.status=E)):y.status=E),y.pending!==){if(A(d),d.avail_out===)return y.last_flush=-,u}else if(d.avail_in===&&R(B)<=R(M)&&B!==c)return ae(d,-);if(y.status===&&d.avail_in!==)return ae(d,-);if(d.avail_in!==||y.lookahead!==||B!==l&&y.status!==){var N=y.strategy===?function(L,U){for(var Z;;){if(L.lookahead===&&(ue(L),L.lookahead===)){if(U===l)return m;break}if(L.match_length=,Z=r._tr_tally(L,,L.window[L.strstart]),L.lookahead--,L.strstart++,Z&&(I(L,!),L.strm.avail_out===))return m}return L.insert=,U===c?(I(L,!),L.strm.avail_out===?J:D):L.last_lit&&(I(L,!),L.strm.avail_out===)?m:P}(y,B):y.strategy===?function(L,U){for(var Z,V,Q,le,re=L.window;;){if(L.lookahead<=W){if(ue(L),L.lookahead<=W&&U===l)return m;if(L.lookahead===)break}if(L.match_length=,L.lookahead>=S&&<L.strstart&&(V=re[Q=L.strstart-])===re[++Q]&&V===re[++Q]&&V===re[++Q]){le=L.strstart+W;do;while(V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&V===re[++Q]&&Q<le);L.match_length=W-(le-Q),L.match_length>L.lookahead&&(L.match_length=L.lookahead)}if(L.match_length>=S?(Z=r._tr_tally(L,,L.match_length-S),L.lookahead-=L.match_length,L.strstart+=L.match_length,L.match_length=):(Z=r._tr_tally(L,,L.window[L.strstart]),L.lookahead--,L.strstart++),Z&&(I(L,!),L.strm.avail_out===))return m}return L.insert=,U===c?(I(L,!),L.strm.avail_out===?J:D):L.last_lit&&(I(L,!),L.strm.avail_out===)?m:P}(y,B):a[y.level].func(y,B);if(N!==J&&N!==D||(y.status=),N===m||N===J)return d.avail_out===&&(y.last_flush=-),u;if(N===P&&(B===?r._tr_align(y):B!==&&(r._tr_stored_block(y,,,!),B===&&(te(y.head),y.lookahead===&&(y.strstart=,y.block_start=,y.insert=))),A(d),d.avail_out===))return y.last_flush=-,u}return B!==c?u:y.wrap<=?:(y.wrap===?(ee(y,&d.adler),ee(y,d.adler>>&),ee(y,d.adler>>&),ee(y,d.adler>>&),ee(y,&d.total_in),ee(y,d.total_in>>&),ee(y,d.total_in>>&),ee(y,d.total_in>>&)):(G(y,d.adler>>>),G(y,&d.adler)),A(d),<y.wrap&&(y.wrap=-y.wrap),y.pending!==?u:)},n.deflateEnd=function(d){var B;return d&&d.state?(B=d.state.status)!==k&&B!==&&B!==&&B!==&&B!==&&B!==E&&B!==?ae(d,h):(d.state=null,B===E?ae(d,-):u):h},n.deflateSetDictionary=function(d,B){var M,y,v,j,O,N,L,U,Z=B.length;if(!d||!d.state||(j=(M=d.state).wrap)===||j===&&M.status!==k||M.lookahead)return h;for(j===&&(d.adler=o(d.adler,B,Z,)),M.wrap=,Z>=M.w_size&&(j===&&(te(M.head),M.strstart=,M.block_start=,M.insert=),U=new i.Buf(M.w_size),i.arraySet(U,B,Z-M.w_size,M.w_size,),B=U,Z=M.w_size),O=d.avail_in,N=d.next_in,L=d.input,d.avail_in=Z,d.next_in=,d.input=B,ue(M);M.lookahead>=S;){for(y=M.strstart,v=M.lookahead-(S-);M.ins_h=(M.ins_h<<M.hash_shift^M.window[y+S-])&M.hash_mask,M.prev[y&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=y,y++,--v;);M.strstart=y,M.lookahead=S-,ue(M)}return M.strstart+=M.lookahead,M.block_start=M.strstart,M.insert=M.lookahead,M.lookahead=,M.match_length=M.prev_length=S-,M.match_available=,d.next_in=N,d.input=L,d.avail_in=O,M.wrap=j,u},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":,"./adler":,"./crc":,"./messages":,"./trees":}],:[function(e,t,n){"use strict";t.exports=function(){this.text=,this.time=,this.xflags=,this.os=,this.extra=null,this.extra_len=,this.name="",this.comment="",this.hcrc=,this.done=!}},{}],:[function(e,t,n){"use strict";t.exports=function(a,i){var r,o,s,p,l,c,u,h,f,g,x,b,_,C,w,z,F,T,S,W,Y,k,E,m,P;r=a.state,o=a.next_in,m=a.input,s=o+(a.avail_in-),p=a.next_out,P=a.output,l=p-(i-a.avail_out),c=p+(a.avail_out-),u=r.dmax,h=r.wsize,f=r.whave,g=r.wnext,x=r.window,b=r.hold,_=r.bits,C=r.lencode,w=r.distcode,z=(<<r.lenbits)-,F=(<<r.distbits)-;e:do{_<&&(b+=m[o++]<<_,_+=,b+=m[o++]<<_,_+=),T=C[b&z];t:for(;;){if(b>>>=S=T>>>,_-=S,(S=T>>>&)===)P[p++]=&T;else{if(!(&S)){if((&S)==){T=C[(&T)+(b&(<<S)-)];continue t}if(&S){r.mode=;break e}a.msg="invalid literal/length code",r.mode=;break e}W=&T,(S&=)&&(_<S&&(b+=m[o++]<<_,_+=),W+=b&(<<S)-,b>>>=S,_-=S),_<&&(b+=m[o++]<<_,_+=,b+=m[o++]<<_,_+=),T=w[b&F];n:for(;;){if(b>>>=S=T>>>,_-=S,!(&(S=T>>>&))){if((&S)==){T=w[(&T)+(b&(<<S)-)];continue n}a.msg="invalid distance code",r.mode=;break e}if(Y=&T,_<(S&=)&&(b+=m[o++]<<_,(_+=)<S&&(b+=m[o++]<<_,_+=)),u<(Y+=b&(<<S)-)){a.msg="invalid distance too far back",r.mode=;break e}if(b>>>=S,_-=S,(S=p-l)<Y){if(f<(S=Y-S)&&r.sane){a.msg="invalid distance too far back",r.mode=;break e}if(E=x,(k=)===g){if(k+=h-S,S<W){for(W-=S;P[p++]=x[k++],--S;);k=p-Y,E=P}}else if(g<S){if(k+=h+g-S,(S-=g)<W){for(W-=S;P[p++]=x[k++],--S;);if(k=,g<W){for(W-=S=g;P[p++]=x[k++],--S;);k=p-Y,E=P}}}else if(k+=g-S,S<W){for(W-=S;P[p++]=x[k++],--S;);k=p-Y,E=P}for(;<W;)P[p++]=E[k++],P[p++]=E[k++],P[p++]=E[k++],W-=;W&&(P[p++]=E[k++],<W&&(P[p++]=E[k++]))}else{for(k=p-Y;P[p++]=P[k++],P[p++]=P[k++],P[p++]=P[k++],<(W-=););W&&(P[p++]=P[k++],<W&&(P[p++]=P[k++]))}break}}break}}while(o<s&&p<c);o-=W=_>>,b&=(<<(_-=W<<))-,a.next_in=o,a.next_out=p,a.avail_in=o<s?s-o+:-(o-s),a.avail_out=p<c?c-p+:-(p-c),r.hold=b,r.bits=_}},{}],:[function(e,t,n){"use strict";var a=e("../utils/common"),i=e("./adler"),r=e("./crc"),o=e("./inffast"),s=e("./inftrees"),p=,l=,c=,u=-,h=,f=,g=;function x(k){return(k>>>&)+(k>>>&)+((&k)<<)+((&k)<<)}function b(){this.mode=,this.last=!,this.wrap=,this.havedict=!,this.flags=,this.dmax=,this.check=,this.total=,this.head=null,this.wbits=,this.wsize=,this.whave=,this.wnext=,this.window=null,this.hold=,this.bits=,this.length=,this.offset=,this.extra=,this.lencode=null,this.distcode=null,this.lenbits=,this.distbits=,this.ncode=,this.nlen=,this.ndist=,this.have=,this.next=null,this.lens=new a.Buf(),this.work=new a.Buf(),this.lendyn=null,this.distdyn=null,this.sane=,this.back=,this.was=}function _(k){var E;return k&&k.state?(E=k.state,k.total_in=k.total_out=E.total=,k.msg="",E.wrap&&(k.adler=&E.wrap),E.mode=h,E.last=,E.havedict=,E.dmax=,E.head=null,E.hold=,E.bits=,E.lencode=E.lendyn=new a.Buf(f),E.distcode=E.distdyn=new a.Buf(g),E.sane=,E.back=-,c):u}function C(k){var E;return k&&k.state?((E=k.state).wsize=,E.whave=,E.wnext=,_(k)):u}function w(k,E){var m,P;return k&&k.state?(P=k.state,E<?(m=,E=-E):(m=+(E>>),E<&&(E&=)),E&&(E<||<E)?u:(P.window!==null&&P.wbits!==E&&(P.window=null),P.wrap=m,P.wbits=E,C(k))):u}function z(k,E){var m,P;return k?(P=new b,(k.state=P).window=null,(m=w(k,E))!==c&&(k.state=null),m):u}var F,T,S=!;function W(k){if(S){var E;for(F=new a.Buf(),T=new a.Buf(),E=;E<;)k.lens[E++]=;for(;E<;)k.lens[E++]=;for(;E<;)k.lens[E++]=;for(;E<;)k.lens[E++]=;for(s(p,k.lens,,,F,,k.work,{bits:}),E=;E<;)k.lens[E++]=;s(l,k.lens,,,T,,k.work,{bits:}),S=!}k.lencode=F,k.lenbits=,k.distcode=T,k.distbits=}function Y(k,E,m,P){var J,D=k.state;return D.window===null&&(D.wsize=<<D.wbits,D.wnext=,D.whave=,D.window=new a.Buf(D.wsize)),P>=D.wsize?(a.arraySet(D.window,E,m-D.wsize,D.wsize,),D.wnext=,D.whave=D.wsize):(P<(J=D.wsize-D.wnext)&&(J=P),a.arraySet(D.window,E,m-P,J,D.wnext),(P-=J)?(a.arraySet(D.window,E,m-P,P,),D.wnext=P,D.whave=D.wsize):(D.wnext+=J,D.wnext===D.wsize&&(D.wnext=),D.whave<D.wsize&&(D.whave+=J))),}n.inflateReset=C,n.inflateReset=w,n.inflateResetKeep=_,n.inflateInit=function(k){return z(k,)},n.inflateInit=z,n.inflate=function(k,E){var m,P,J,D,ae,R,te,A,I,ee,G,q,ue,ve,ie,oe,he,de,ze,Ae,d,B,M,y,v=,j=new a.Buf(),O=[,,,,,,,,,,,,,,,,,,];if(!k||!k.state||!k.output||!k.input&&k.avail_in!==)return u;(m=k.state).mode===&&(m.mode=),ae=k.next_out,J=k.output,te=k.avail_out,D=k.next_in,P=k.input,R=k.avail_in,A=m.hold,I=m.bits,ee=R,G=te,B=c;e:for(;;)switch(m.mode){case h:if(m.wrap===){m.mode=;break}for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(&m.wrap&&A===){j[m.check=]=&A,j[]=A>>>&,m.check=r(m.check,j,,),I=A=,m.mode=;break}if(m.flags=,m.head&&(m.head.done=!),!(&m.wrap)||(((&A)<<)+(A>>))%){k.msg="incorrect header check",m.mode=;break}if((&A)!=){k.msg="unknown compression method",m.mode=;break}if(I-=,d=+(&(A>>>=)),m.wbits===)m.wbits=d;else if(d>m.wbits){k.msg="invalid window size",m.mode=;break}m.dmax=<<d,k.adler=m.check=,m.mode=&A?:,I=A=;break;case :for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(m.flags=A,(&m.flags)!=){k.msg="unknown compression method",m.mode=;break}if(&m.flags){k.msg="unknown header flags set",m.mode=;break}m.head&&(m.head.text=A>>&),&m.flags&&(j[]=&A,j[]=A>>>&,m.check=r(m.check,j,,)),I=A=,m.mode=;case :for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.head&&(m.head.time=A),&m.flags&&(j[]=&A,j[]=A>>>&,j[]=A>>>&,j[]=A>>>&,m.check=r(m.check,j,,)),I=A=,m.mode=;case :for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.head&&(m.head.xflags=&A,m.head.os=A>>),&m.flags&&(j[]=&A,j[]=A>>>&,m.check=r(m.check,j,,)),I=A=,m.mode=;case :if(&m.flags){for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.length=A,m.head&&(m.head.extra_len=A),&m.flags&&(j[]=&A,j[]=A>>>&,m.check=r(m.check,j,,)),I=A=}else m.head&&(m.head.extra=null);m.mode=;case :if(&m.flags&&(R<(q=m.length)&&(q=R),q&&(m.head&&(d=m.head.extra_len-m.length,m.head.extra||(m.head.extra=new Array(m.head.extra_len)),a.arraySet(m.head.extra,P,D,q,d)),&m.flags&&(m.check=r(m.check,P,q,D)),R-=q,D+=q,m.length-=q),m.length))break e;m.length=,m.mode=;case :if(&m.flags){if(R===)break e;for(q=;d=P[D+q++],m.head&&d&&m.length<&&(m.head.name+=String.fromCharCode(d)),d&&q<R;);if(&m.flags&&(m.check=r(m.check,P,q,D)),R-=q,D+=q,d)break e}else m.head&&(m.head.name=null);m.length=,m.mode=;case :if(&m.flags){if(R===)break e;for(q=;d=P[D+q++],m.head&&d&&m.length<&&(m.head.comment+=String.fromCharCode(d)),d&&q<R;);if(&m.flags&&(m.check=r(m.check,P,q,D)),R-=q,D+=q,d)break e}else m.head&&(m.head.comment=null);m.mode=;case :if(&m.flags){for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(A!==(&m.check)){k.msg="header crc mismatch",m.mode=;break}I=A=}m.head&&(m.head.hcrc=m.flags>>&,m.head.done=!),k.adler=m.check=,m.mode=;break;case :for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}k.adler=m.check=x(A),I=A=,m.mode=;case :if(m.havedict===)return k.next_out=ae,k.avail_out=te,k.next_in=D,k.avail_in=R,m.hold=A,m.bits=I,;k.adler=m.check=,m.mode=;case :if(E===||E===)break e;case :if(m.last){A>>>=&I,I-=&I,m.mode=;break}for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}switch(m.last=&A,I-=,&(A>>>=)){case :m.mode=;break;case :if(W(m),m.mode=,E!==)break;A>>>=,I-=;break e;case :m.mode=;break;case :k.msg="invalid block type",m.mode=}A>>>=,I-=;break;case :for(A>>>=&I,I-=&I;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if((&A)!=(A>>>^)){k.msg="invalid stored block lengths",m.mode=;break}if(m.length=&A,I=A=,m.mode=,E===)break e;case :m.mode=;case :if(q=m.length){if(R<q&&(q=R),te<q&&(q=te),q===)break e;a.arraySet(J,P,D,q,ae),R-=q,D+=q,te-=q,ae+=q,m.length-=q;break}m.mode=;break;case :for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(m.nlen=+(&A),A>>>=,I-=,m.ndist=+(&A),A>>>=,I-=,m.ncode=+(&A),A>>>=,I-=,<m.nlen||<m.ndist){k.msg="too many length or distance symbols",m.mode=;break}m.have=,m.mode=;case :for(;m.have<m.ncode;){for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.lens[O[m.have++]]=&A,A>>>=,I-=}for(;m.have<;)m.lens[O[m.have++]]=;if(m.lencode=m.lendyn,m.lenbits=,M={bits:m.lenbits},B=s(,m.lens,,,m.lencode,,m.work,M),m.lenbits=M.bits,B){k.msg="invalid code lengths set",m.mode=;break}m.have=,m.mode=;case :for(;m.have<m.nlen+m.ndist;){for(;oe=(v=m.lencode[A&(<<m.lenbits)-])>>>&,he=&v,!((ie=v>>>)<=I);){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(he<)A>>>=ie,I-=ie,m.lens[m.have++]=he;else{if(he===){for(y=ie+;I<y;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(A>>>=ie,I-=ie,m.have===){k.msg="invalid bit length repeat",m.mode=;break}d=m.lens[m.have-],q=+(&A),A>>>=,I-=}else if(he===){for(y=ie+;I<y;){if(R===)break e;R--,A+=P[D++]<<I,I+=}I-=ie,d=,q=+(&(A>>>=ie)),A>>>=,I-=}else{for(y=ie+;I<y;){if(R===)break e;R--,A+=P[D++]<<I,I+=}I-=ie,d=,q=+(&(A>>>=ie)),A>>>=,I-=}if(m.have+q>m.nlen+m.ndist){k.msg="invalid bit length repeat",m.mode=;break}for(;q--;)m.lens[m.have++]=d}}if(m.mode===)break;if(m.lens[]===){k.msg="invalid code -- missing end-of-block",m.mode=;break}if(m.lenbits=,M={bits:m.lenbits},B=s(p,m.lens,,m.nlen,m.lencode,,m.work,M),m.lenbits=M.bits,B){k.msg="invalid literal/lengths set",m.mode=;break}if(m.distbits=,m.distcode=m.distdyn,M={bits:m.distbits},B=s(l,m.lens,m.nlen,m.ndist,m.distcode,,m.work,M),m.distbits=M.bits,B){k.msg="invalid distances set",m.mode=;break}if(m.mode=,E===)break e;case :m.mode=;case :if(<=R&&<=te){k.next_out=ae,k.avail_out=te,k.next_in=D,k.avail_in=R,m.hold=A,m.bits=I,o(k,G),ae=k.next_out,J=k.output,te=k.avail_out,D=k.next_in,P=k.input,R=k.avail_in,A=m.hold,I=m.bits,m.mode===&&(m.back=-);break}for(m.back=;oe=(v=m.lencode[A&(<<m.lenbits)-])>>>&,he=&v,!((ie=v>>>)<=I);){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(oe&&(&oe)==){for(de=ie,ze=oe,Ae=he;oe=(v=m.lencode[Ae+((A&(<<de+ze)-)>>de)])>>>&,he=&v,!(de+(ie=v>>>)<=I);){if(R===)break e;R--,A+=P[D++]<<I,I+=}A>>>=de,I-=de,m.back+=de}if(A>>>=ie,I-=ie,m.back+=ie,m.length=he,oe===){m.mode=;break}if(&oe){m.back=-,m.mode=;break}if(&oe){k.msg="invalid literal/length code",m.mode=;break}m.extra=&oe,m.mode=;case :if(m.extra){for(y=m.extra;I<y;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.length+=A&(<<m.extra)-,A>>>=m.extra,I-=m.extra,m.back+=m.extra}m.was=m.length,m.mode=;case :for(;oe=(v=m.distcode[A&(<<m.distbits)-])>>>&,he=&v,!((ie=v>>>)<=I);){if(R===)break e;R--,A+=P[D++]<<I,I+=}if((&oe)==){for(de=ie,ze=oe,Ae=he;oe=(v=m.distcode[Ae+((A&(<<de+ze)-)>>de)])>>>&,he=&v,!(de+(ie=v>>>)<=I);){if(R===)break e;R--,A+=P[D++]<<I,I+=}A>>>=de,I-=de,m.back+=de}if(A>>>=ie,I-=ie,m.back+=ie,&oe){k.msg="invalid distance code",m.mode=;break}m.offset=he,m.extra=&oe,m.mode=;case :if(m.extra){for(y=m.extra;I<y;){if(R===)break e;R--,A+=P[D++]<<I,I+=}m.offset+=A&(<<m.extra)-,A>>>=m.extra,I-=m.extra,m.back+=m.extra}if(m.offset>m.dmax){k.msg="invalid distance too far back",m.mode=;break}m.mode=;case :if(te===)break e;if(q=G-te,m.offset>q){if((q=m.offset-q)>m.whave&&m.sane){k.msg="invalid distance too far back",m.mode=;break}ue=q>m.wnext?(q-=m.wnext,m.wsize-q):m.wnext-q,q>m.length&&(q=m.length),ve=m.window}else ve=J,ue=ae-m.offset,q=m.length;for(te<q&&(q=te),te-=q,m.length-=q;J[ae++]=ve[ue++],--q;);m.length===&&(m.mode=);break;case :if(te===)break e;J[ae++]=m.length,te--,m.mode=;break;case :if(m.wrap){for(;I<;){if(R===)break e;R--,A|=P[D++]<<I,I+=}if(G-=te,k.total_out+=G,m.total+=G,G&&(k.adler=m.check=m.flags?r(m.check,J,G,ae-G):i(m.check,J,G,ae-G)),G=te,(m.flags?A:x(A))!==m.check){k.msg="incorrect data check",m.mode=;break}I=A=}m.mode=;case :if(m.wrap&&m.flags){for(;I<;){if(R===)break e;R--,A+=P[D++]<<I,I+=}if(A!==(&m.total)){k.msg="incorrect length check",m.mode=;break}I=A=}m.mode=;case :B=;break e;case :B=-;break e;case :return-;case :default:return u}return k.next_out=ae,k.avail_out=te,k.next_in=D,k.avail_in=R,m.hold=A,m.bits=I,(m.wsize||G!==k.avail_out&&m.mode<&&(m.mode<||E!==))&&Y(k,k.output,k.next_out,G-k.avail_out)?(m.mode=,-):(ee-=k.avail_in,G-=k.avail_out,k.total_in+=ee,k.total_out+=G,m.total+=G,m.wrap&&G&&(k.adler=m.check=m.flags?r(m.check,J,G,k.next_out-G):i(m.check,J,G,k.next_out-G)),k.data_type=m.bits+(m.last?:)+(m.mode===?:)+(m.mode===||m.mode===?:),(ee==&&G===||E===)&&B===c&&(B=-),B)},n.inflateEnd=function(k){if(!k||!k.state)return u;var E=k.state;return E.window&&(E.window=null),k.state=null,c},n.inflateGetHeader=function(k,E){var m;return k&&k.state?(&(m=k.state).wrap)==?u:((m.head=E).done=!,c):u},n.inflateSetDictionary=function(k,E){var m,P=E.length;return k&&k.state?(m=k.state).wrap!==&&m.mode!==?u:m.mode===&&i(,E,P,)!==m.check?-:Y(k,E,P,P)?(m.mode=,-):(m.havedict=,c):u},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":,"./adler":,"./crc":,"./inffast":,"./inftrees":}],:[function(e,t,n){"use strict";var a=e("../utils/common"),i=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],r=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],o=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],s=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,];t.exports=function(p,l,c,u,h,f,g,x){var b,_,C,w,z,F,T,S,W,Y=x.bits,k=,E=,m=,P=,J=,D=,ae=,R=,te=,A=,I=null,ee=,G=new a.Buf(),q=new a.Buf(),ue=null,ve=;for(k=;k<=;k++)G[k]=;for(E=;E<u;E++)G[l[c+E]]++;for(J=Y,P=;<=P&&G[P]===;P--);if(P<J&&(J=P),P===)return h[f++]=,h[f++]=,x.bits=,;for(m=;m<P&&G[m]===;m++);for(J<m&&(J=m),k=R=;k<=;k++)if(R<<=,(R-=G[k])<)return-;if(<R&&(p===||P!==))return-;for(q[]=,k=;k<;k++)q[k+]=q[k]+G[k];for(E=;E<u;E++)l[c+E]!==&&(g[q[l[c+E]]++]=E);if(F=p===?(I=ue=g,):p===?(I=i,ee-=,ue=r,ve-=,):(I=o,ue=s,-),k=m,z=f,ae=E=A=,C=-,w=(te=<<(D=J))-,p===&&<te||p===&&<te)return ;for(;;){for(T=k-ae,W=g[E]<F?(S=,g[E]):g[E]>F?(S=ue[ve+g[E]],I[ee+g[E]]):(S=,),b=<<k-ae,m=_=<<D;h[z+(A>>ae)+(_-=b)]=T<<|S<<|W|,_!==;);for(b=<<k-;A&b;)b>>=;if(b!==?(A&=b-,A+=b):A=,E++,--G[k]==){if(k===P)break;k=l[c+g[E]]}if(J<k&&(A&w)!==C){for(ae===&&(ae=J),z+=m,R=<<(D=k-ae);D+ae<P&&!((R-=G[D+ae])<=);)D++,R<<=;if(te+=<<D,p===&&<te||p===&&<te)return ;h[C=A&w]=J<<|D<<|z-f|}}return A!==&&(h[z+A]=k-ae<<|<<|),x.bits=J,}},{"../utils/common":}],:[function(e,t,n){"use strict";t.exports={:"need dictionary",:"stream end",:"","-":"file error","-":"stream error","-":"data error","-":"insufficient memory","-":"buffer error","-":"incompatible version"}},{}],:[function(e,t,n){"use strict";var a=e("../utils/common"),i=,r=;function o(v){for(var j=v.length;<=--j;)v[j]=}var s=,p=,l=,c=l++p,u=,h=,f=c+,g=,x=,b=,_=,C=,w=,z=,F=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,],T=[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,],S=[,,,,,,,,,,,,,,,,,,],W=[,,,,,,,,,,,,,,,,,,],Y=new Array((c+));o(Y);var k=new Array(u);o(k);var E=new Array();o(E);var m=new Array();o(m);var P=new Array(p);o(P);var J,D,ae,R=new Array(u);function te(v,j,O,N,L){this.static_tree=v,this.extra_bits=j,this.extra_base=O,this.elems=N,this.max_length=L,this.has_stree=v&&v.length}function A(v,j){this.dyn_tree=v,this.max_code=,this.stat_desc=j}function I(v){return v<?E[v]:E[+(v>>>)]}function ee(v,j){v.pending_buf[v.pending++]=&j,v.pending_buf[v.pending++]=j>>>&}function G(v,j,O){v.bi_valid>x-O?(v.bi_buf|=j<<v.bi_valid&,ee(v,v.bi_buf),v.bi_buf=j>>x-v.bi_valid,v.bi_valid+=O-x):(v.bi_buf|=j<<v.bi_valid&,v.bi_valid+=O)}function q(v,j,O){G(v,O[j],O[j+])}function ue(v,j){for(var O=;O|=&v,v>>>=,O<<=,<--j;);return O>>>}function ve(v,j,O){var N,L,U=new Array(g+),Z=;for(N=;N<=g;N++)U[N]=Z=Z+O[N-]<<;for(L=;L<=j;L++){var V=v[L+];V!==&&(v[L]=ue(U[V]++,V))}}function ie(v){var j;for(j=;j<c;j++)v.dyn_ltree[j]=;for(j=;j<u;j++)v.dyn_dtree[j]=;for(j=;j<h;j++)v.bl_tree[j]=;v.dyn_ltree[_]=,v.opt_len=v.static_len=,v.last_lit=v.matches=}function oe(v){<v.bi_valid?ee(v,v.bi_buf):<v.bi_valid&&(v.pending_buf[v.pending++]=v.bi_buf),v.bi_buf=,v.bi_valid=}function he(v,j,O,N){var L=j,U=O;return v[L]<v[U]||v[L]===v[U]&&N[j]<=N[O]}function de(v,j,O){for(var N=v.heap[O],L=O<<;L<=v.heap_len&&(L<v.heap_len&&he(j,v.heap[L+],v.heap[L],v.depth)&&L++,!he(j,N,v.heap[L],v.depth));)v.heap[O]=v.heap[L],O=L,L<<=;v.heap[O]=N}function ze(v,j,O){var N,L,U,Z,V=;if(v.last_lit!==)for(;N=v.pending_buf[v.d_buf+V]<<|v.pending_buf[v.d_buf+V+],L=v.pending_buf[v.l_buf+V],V++,N===?q(v,L,j):(q(v,(U=m[L])+l+,j),(Z=F[U])!==&&G(v,L-=P[U],Z),q(v,U=I(--N),O),(Z=T[U])!==&&G(v,N-=R[U],Z)),V<v.last_lit;);q(v,_,j)}function Ae(v,j){var O,N,L,U=j.dyn_tree,Z=j.stat_desc.static_tree,V=j.stat_desc.has_stree,Q=j.stat_desc.elems,le=-;for(v.heap_len=,v.heap_max=f,O=;O<Q;O++)U[O]!==?(v.heap[++v.heap_len]=le=O,v.depth[O]=):U[O+]=;for(;v.heap_len<;)U[(L=v.heap[++v.heap_len]=le<?++le:)]=,v.depth[L]=,v.opt_len--,V&&(v.static_len-=Z[L+]);for(j.max_code=le,O=v.heap_len>>;<=O;O--)de(v,U,O);for(L=Q;O=v.heap[],v.heap[]=v.heap[v.heap_len--],de(v,U,),N=v.heap[],v.heap[--v.heap_max]=O,v.heap[--v.heap_max]=N,U[L]=U[O]+U[N],v.depth[L]=(v.depth[O]>=v.depth[N]?v.depth[O]:v.depth[N])+,U[O+]=U[N+]=L,v.heap[]=L++,de(v,U,),<=v.heap_len;);v.heap[--v.heap_max]=v.heap[],function(re,Ce){var Mt,Be,Ft,fe,rn,Qn,Re=Ce.dyn_tree,Gi=Ce.max_code,np=Ce.stat_desc.static_tree,ap=Ce.stat_desc.has_stree,ip=Ce.stat_desc.extra_bits,Zi=Ce.stat_desc.extra_base,Et=Ce.stat_desc.max_length,on=;for(fe=;fe<=g;fe++)re.bl_count[fe]=;for(Re[re.heap[re.heap_max]+]=,Mt=re.heap_max+;Mt<f;Mt++)Et<(fe=Re[Re[(Be=re.heap[Mt])+]+]+)&&(fe=Et,on++),Re[Be+]=fe,Gi<Be||(re.bl_count[fe]++,rn=,Zi<=Be&&(rn=ip[Be-Zi]),Qn=Re[Be],re.opt_len+=Qn(fe+rn),ap&&(re.static_len+=Qn(np[Be+]+rn)));if(on!==){do{for(fe=Et-;re.bl_count[fe]===;)fe--;re.bl_count[fe]--,re.bl_count[fe+]+=,re.bl_count[Et]--,on-=}while(<on);for(fe=Et;fe!==;fe--)for(Be=re.bl_count[fe];Be!==;)Gi<(Ft=re.heap[--Mt])||(Re[Ft+]!==fe&&(re.opt_len+=(fe-Re[Ft+])Re[Ft],Re[Ft+]=fe),Be--)}}(v,j),ve(U,le,v.bl_count)}function d(v,j,O){var N,L,U=-,Z=j[],V=,Q=,le=;for(Z===&&(Q=,le=),j[(O+)+]=,N=;N<=O;N++)L=Z,Z=j[(N+)+],++V<Q&&L===Z||(V<le?v.bl_tree[L]+=V:L!==?(L!==U&&v.bl_tree[L]++,v.bl_tree[C]++):V<=?v.bl_tree[w]++:v.bl_tree[z]++,U=L,le=(V=)===Z?(Q=,):L===Z?(Q=,):(Q=,))}function B(v,j,O){var N,L,U=-,Z=j[],V=,Q=,le=;for(Z===&&(Q=,le=),N=;N<=O;N++)if(L=Z,Z=j[(N+)+],!(++V<Q&&L===Z)){if(V<le)for(;q(v,L,v.bl_tree),--V!=;);else L!==?(L!==U&&(q(v,L,v.bl_tree),V--),q(v,C,v.bl_tree),G(v,V-,)):V<=?(q(v,w,v.bl_tree),G(v,V-,)):(q(v,z,v.bl_tree),G(v,V-,));U=L,le=(V=)===Z?(Q=,):L===Z?(Q=,):(Q=,)}}o(R);var M=!;function y(v,j,O,N){G(v,(s<<)+(N?:),),function(L,U,Z,V){oe(L),V&&(ee(L,Z),ee(L,~Z)),a.arraySet(L.pending_buf,L.window,U,Z,L.pending),L.pending+=Z}(v,j,O,!)}n._tr_init=function(v){M||(function(){var j,O,N,L,U,Z=new Array(g+);for(L=N=;L<p-;L++)for(P[L]=N,j=;j<<<F[L];j++)m[N++]=L;for(m[N-]=L,L=U=;L<;L++)for(R[L]=U,j=;j<<<T[L];j++)E[U++]=L;for(U>>=;L<u;L++)for(R[L]=U<<,j=;j<<<T[L]-;j++)E[+U++]=L;for(O=;O<=g;O++)Z[O]=;for(j=;j<=;)Y[j+]=,j++,Z[]++;for(;j<=;)Y[j+]=,j++,Z[]++;for(;j<=;)Y[j+]=,j++,Z[]++;for(;j<=;)Y[j+]=,j++,Z[]++;for(ve(Y,c+,Z),j=;j<u;j++)k[j+]=,k[j]=ue(j,);J=new te(Y,F,l+,c,g),D=new te(k,T,,u,g),ae=new te(new Array(),S,,h,b)}(),M=!),v.l_desc=new A(v.dyn_ltree,J),v.d_desc=new A(v.dyn_dtree,D),v.bl_desc=new A(v.bl_tree,ae),v.bi_buf=,v.bi_valid=,ie(v)},n._tr_stored_block=y,n._tr_flush_block=function(v,j,O,N){var L,U,Z=;<v.level?(v.strm.data_type===&&(v.strm.data_type=function(V){var Q,le=;for(Q=;Q<=;Q++,le>>>=)if(&le&&V.dyn_ltree[Q]!==)return i;if(V.dyn_ltree[]!==||V.dyn_ltree[]!==||V.dyn_ltree[]!==)return r;for(Q=;Q<l;Q++)if(V.dyn_ltree[Q]!==)return r;return i}(v)),Ae(v,v.l_desc),Ae(v,v.d_desc),Z=function(V){var Q;for(d(V,V.dyn_ltree,V.l_desc.max_code),d(V,V.dyn_dtree,V.d_desc.max_code),Ae(V,V.bl_desc),Q=h-;<=Q&&V.bl_tree[W[Q]+]===;Q--);return V.opt_len+=(Q+)+++,Q}(v),L=v.opt_len++>>>,(U=v.static_len++>>>)<=L&&(L=U)):L=U=O+,O+<=L&&j!==-?y(v,j,O,N):v.strategy===||U===L?(G(v,+(N?:),),ze(v,Y,k)):(G(v,+(N?:),),function(V,Q,le,re){var Ce;for(G(V,Q-,),G(V,le-,),G(V,re-,),Ce=;Ce<re;Ce++)G(V,V.bl_tree[W[Ce]+],);B(V,V.dyn_ltree,Q-),B(V,V.dyn_dtree,le-)}(v,v.l_desc.max_code+,v.d_desc.max_code+,Z+),ze(v,v.dyn_ltree,v.dyn_dtree)),ie(v),N&&oe(v)},n._tr_tally=function(v,j,O){return v.pending_buf[v.d_buf+v.last_lit]=j>>>&,v.pending_buf[v.d_buf+v.last_lit+]=&j,v.pending_buf[v.l_buf+v.last_lit]=&O,v.last_lit++,j===?v.dyn_ltree[O]++:(v.matches++,j--,v.dyn_ltree[(m[O]+l+)]++,v.dyn_dtree[I(j)]++),v.last_lit===v.lit_bufsize-},n._tr_align=function(v){G(v,,),q(v,_,Y),function(j){j.bi_valid===?(ee(j,j.bi_buf),j.bi_buf=,j.bi_valid=):<=j.bi_valid&&(j.pending_buf[j.pending++]=&j.bi_buf,j.bi_buf>>=,j.bi_valid-=)}(v)}},{"../utils/common":}],:[function(e,t,n){"use strict";t.exports=function(){this.input=null,this.next_in=,this.avail_in=,this.total_in=,this.output=null,this.next_out=,this.avail_out=,this.total_out=,this.msg="",this.state=null,this.data_type=,this.adler=}},{}],:[function(e,t,n){(function(a){(function(i,r){"use strict";if(!i.setImmediate){var o,s,p,l,c=,u={},h=!,f=i.document,g=Object.getPrototypeOf&&Object.getPrototypeOf(i);g=g&&g.setTimeout?g:i,o={}.toString.call(i.process)==="[object process]"?function(C){process.nextTick(function(){b(C)})}:function(){if(i.postMessage&&!i.importScripts){var C=!,w=i.onmessage;return i.onmessage=function(){C=!},i.postMessage("",""),i.onmessage=w,C}}()?(l="setImmediate$"+Math.random()+"$",i.addEventListener?i.addEventListener("message",_,!):i.attachEvent("onmessage",_),function(C){i.postMessage(l+C,"")}):i.MessageChannel?((p=new MessageChannel).port.onmessage=function(C){b(C.data)},function(C){p.port.postMessage(C)}):f&&"onreadystatechange"in f.createElement("script")?(s=f.documentElement,function(C){var w=f.createElement("script");w.onreadystatechange=function(){b(C),w.onreadystatechange=null,s.removeChild(w),w=null},s.appendChild(w)}):function(C){setTimeout(b,,C)},g.setImmediate=function(C){typeof C!="function"&&(C=new Function(""+C));for(var w=new Array(arguments.length-),z=;z<w.length;z++)w[z]=arguments[z+];var F={callback:C,args:w};return u[c]=F,o(c),c++},g.clearImmediate=x}function x(C){delete u[C]}function b(C){if(h)setTimeout(b,,C);else{var w=u[C];if(w){h=!;try{(function(z){var F=z.callback,T=z.args;switch(T.length){case :F();break;case :F(T[]);break;case :F(T[],T[]);break;case :F(T[],T[],T[]);break;default:F.apply(r,T)}})(w)}finally{x(C),h=!}}}}function _(C){C.source===i&&typeof C.data=="string"&&C.data.indexOf(l)===&&b(+C.data.slice(l.length))}})(typeof self>"u"?a===void ?this:a:self)}).call(this,typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[])()})});var pc=K((Z,lc)=>{lc.exports={aqua:/ffff(ff)?(?!\w)|ff(f)?(?!\w)/gi,azure:/fffff(ff)?(?!\w)/gi,beige:/ffdc(ff)?(?!\w)/gi,bisque:/ffec(ff)?(?!\w)/gi,black:/(ff)?(?!\w)|(f)?(?!\w)/gi,blue:/ff(ff)?(?!\w)|f(f)?(?!\w)/gi,brown:/aaa(ff)?(?!\w)/gi,coral:/fff(ff)?(?!\w)/gi,cornsilk:/fffdc(ff)?(?!\w)/gi,crimson:/dcc(ff)?(?!\w)/gi,cyan:/ffff(ff)?(?!\w)|ff(f)?(?!\w)/gi,darkblue:/b(ff)?(?!\w)/gi,darkcyan:/bb(ff)?(?!\w)/gi,darkgrey:/aaa(ff)?(?!\w)/gi,darkred:/b(ff)?(?!\w)/gi,deeppink:/ff(ff)?(?!\w)/gi,dimgrey:/(ff)?(?!\w)/gi,gold:/ffd(ff)?(?!\w)/gi,green:/(ff)?(?!\w)/gi,grey:/(ff)?(?!\w)/gi,honeydew:/ffff(ff)?(?!\w)/gi,hotpink:/ffb(ff)?(?!\w)/gi,indigo:/b(ff)?(?!\w)/gi,ivory:/fffff(ff)?(?!\w)/gi,khaki:/fec(ff)?(?!\w)/gi,lavender:/eefa(ff)?(?!\w)/gi,lime:/ff(ff)?(?!\w)|f(f)?(?!\w)/gi,linen:/fafe(ff)?(?!\w)/gi,maroon:/(ff)?(?!\w)/gi,moccasin:/ffeb(ff)?(?!\w)/gi,navy:/(ff)?(?!\w)/gi,oldlace:/fdfe(ff)?(?!\w)/gi,olive:/(ff)?(?!\w)/gi,orange:/ffa(ff)?(?!\w)/gi,orchid:/dad(ff)?(?!\w)/gi,peru:/cdf(ff)?(?!\w)/gi,pink:/ffccb(ff)?(?!\w)/gi,plum:/ddadd(ff)?(?!\w)/gi,purple:/(ff)?(?!\w)/gi,red:/ff(ff)?(?!\w)|f(f)?(?!\w)/gi,salmon:/fa(ff)?(?!\w)/gi,seagreen:/eb(ff)?(?!\w)/gi,seashell:/fffee(ff)?(?!\w)/gi,sienna:/ad(ff)?(?!\w)/gi,silver:/ccc(ff)?(?!\w)/gi,skyblue:/ceeb(ff)?(?!\w)/gi,snow:/fffafa(ff)?(?!\w)/gi,tan:/dbc(ff)?(?!\w)/gi,teal:/(ff)?(?!\w)/gi,thistle:/dbfd(ff)?(?!\w)/gi,tomato:/ff(ff)?(?!\w)/gi,violet:/eeee(ff)?(?!\w)/gi,wheat:/fdeb(ff)?(?!\w)/gi,white:/ffffff(ff)?(?!\w)|fff(f)?(?!\w)/gi}});var dc=K((K,uc)=>{var Ga=pc(),Ka={whitespace:/\s+/g,urlHexPairs:/%[\dA-F]{}/g,quotes:/"/g};function dh(e){return e.trim().replace(Ka.whitespace," ")}function fh(e){return encodeURIComponent(e).replace(Ka.urlHexPairs,hh)}function mh(e){return Object.keys(Ga).forEach(function(t){Ga[t].test(e)&&(e=e.replace(Ga[t],t))}),e}function hh(e){switch(e){case"%":return" ";case"%D":return"=";case"%A":return":";case"%F":return"/";default:return e.toLowerCase()}}function Za(e){if(typeof e!="string")throw new TypeError("Expected a string, but received "+typeof e);e.charCodeAt()===&&(e=e.slice());var t=mh(dh(e)).replace(Ka.quotes,"'");return"data:image/svg+xml,"+fh(t)}Za.toSrcset=function(t){return Za(t).replace(/ /g,"%")};uc.exports=Za});var n={};Xi(n,{default:()=>Jn});module.exports=up(n);var tp=require("obsidian");var st=require("@codemirror/view"),na=require("obsidian");var ln=require("@codemirror/view"),er=require("obsidian");var Qi=require("@codemirror/view"),tt=class extends Qi.WidgetType{constructor(n,a){super();this.id=n;this.plugin=a}eq(n){return n instanceof tt&&n.id===this.id}toDOM(n){let a=createSpan({cls:"cm-isc-icon",attr:{"aria-label":this.id.replace(/_/g," ")}});return this.plugin.packManager.getSVGIcon(this.id).then(i=>{i?(i.classList.forEach(r=>a.addClass(r)),a.replaceChildren(...i.childNodes)):a.append(`:${this.id}:`)}),a}ignoreEvent(){return!}};var dp=(e,t)=>{let n=[],a=e.state.field(t.shortcodePosField);for(let{from:i,to:r}of e.visibleRanges)a.between(i,r,(o,s,{iconId:p})=>{n.push([p,o,s])});return ln.Decoration.set(n.map(([i,r,o])=>{let p={widget:new tt(i,t),side:-,from:r,to:o};return e.state.field(er.editorLivePreviewField)?ln.Decoration.replace(p).range(r,o):ln.Decoration.widget(p).range(o)}),!)},ta=dp;var tr=require("obsidian"),fp=(e,t,n,a)=>new tr.Menu().addItem(i=>i.setIcon("image-glyph").setTitle("Change Icon").onClick(()=>$(void ,null,function(){let r=yield n.api.getIconFromUser();!r||a.dispatch({changes:{from:e,to:t,insert:`:${r.id}:`}})}))).addItem(i=>i.setIcon("trash").setTitle("Delete Icon").onClick(()=>{a.dispatch({changes:{from:e,to:t,insert:""}})})),nr=fp;var mp=e=>{class t{constructor(i){this.plugin=e,this.decorations=ta(i,this.plugin)}update(i){let r=i.startState.field(na.editorLivePreviewField),o=i.state.field(na.editorLivePreviewField);(i.docChanged||i.viewportChanged||r!==o)&&(this.decorations=ta(i.view,e))}}return st.ViewPlugin.fromClass(t,{eventHandlers:{mousedown:n},decorations:a=>a.decorations,provide:a=>st.EditorView.atomicRanges.of(i=>{let r=i.plugin(a);return r?r.decorations:st.Decoration.none})});function n(a,i){let r=a.target;if(r.matchParent(".cm-isc-icon",i.contentDOM)){let o=i.posAtDOM(r),s=-,p=-;if(this.decorations.between(o-,o+,(l,c,u)=>{if(o>=l&&o<=c){l===c?(s=u.spec.from,p=u.spec.to):(s=l,p=c);return}}),s<||p<){console.error("no range found for",r);return}if(ar().then(()=>i.dispatch({selection:{anchor:s,head:p}})),a.button===||a.button===){let l=nr(s,p,e,i);ar().then(()=>l.showAtMouseEvent(a))}}}},ar=e=>new Promise(t=>setTimeout(t,e)),ir=mp;var hp=e=>{e.registerEditorExtension([e.shortcodePosField,ir(e)])},rr=hp;var Ps=require("@codemirror/language"),Ts=require("@codemirror/language"),bn=require("@codemirror/state"),Os=require("@codemirror/state");var mn=be(fr(),),Fs=be(Wt(),),Bs=be(fn(),);var{toString:ym}=Object.prototype;function ka(e){return ym.call(e)==="[object RegExp]"}var Ms={global:"g",ignoreCase:"i",multiline:"m",dotAll:"s",sticky:"y",unicode:"u"};function wa(e,t={}){if(!ka(e))throw new TypeError("Expected a RegExp instance");let n=Object.keys(Ms).map(i=>(typeof t[i]=="boolean"?t[i]:e[i])?Ms[i]:"").join(""),a=new RegExp(t.source||e.source,n);return a.lastIndex=typeof t.lastIndex=="number"?t.lastIndex:e.lastIndex,a}var je=e=>{var t=e.indexOf(":");return t>-?t===e.length-?(e=e.substring(,t),je(e)):(e=e.substring(t+),je(e)):e},_m=/^([A-Za-z-]+?)_/,Ca=e=>{if(Fs.default.hasEmoji(e))return{pack:"emoji",name:e};let t=e.match(_m);if(!t)return console.error("No vaild pack id found in: ",e),null;let[n,a]=t;return{pack:a,name:e.substring(n.length)}},ja=e=>{let t=Ca(e);return t?`${t.pack}_${La(t.name)}`:(console.log("failed to rename icon: id %s invalid",e),null)},La=e=>e.trim().replace(/[ -]+/g,"_").replace(/\s+/g,"").toLocaleLowerCase(),hn=[".bmp",".png",".jpg",".jpeg",".gif",".svg",".webp"],Es=/^[\w-]+\.(?:bmp|png|jpg|jpeg|gif|svg|webp)$/,gn=/\.(?:bmp|png|jpg|jpeg|gif|svg|webp)$/,km=hn.map(e=>(,mn.lookup)(e)),zs=e=>$(void ,null,function(){if(!e||e.length<=)return null;let t=i=>$(void ,null,function(){return{name:i.name.replace(gn,""),ext:"."+(,mn.extension)(i.type),data:yield i.arrayBuffer()}}),n=[];for(let i=;i<e.length;i++){let r=e[i];km.includes(r.type)&&n.push(t(r))}let a=yield Promise.all(n);return a.length>?a:null}),gt=/:\+:|:-:|:[\w-]+:/,Rt=e=>wa(e,{global:!}),xt=e=>(,Bs.default)(["isc-icon",`isc-${e.pack}`]);var wm=(e,t)=>xn(e,t[])||xn(e,t[]),xn=(e,t)=>e[]<t&&e[]>t,Cm=(e,t)=>{let n=xn(e,t[])?e[]:t[],a=xn(e,t[])?e[]:t[];return[n,a]},jm=e=>e.sort((t,n)=>t[]-n[]).reduce((t,n)=>{let a=t.findIndex(i=>wm(i,n));return a!==-?t[a]=Cm(t[a],n):t.push(n),t},[]),vn=jm;var Ut=class extends bn.RangeValue{constructor(n){super();this.text=n}get iconId(){return je(this.text)}eq(n){return n instanceof Ut&&n.text===this.text}},Lm=["link-alias","comment","header","strong","em","strikethrough","quote","link","list-","list-","list-","highlight","hmd-footref","footref"],Im=["formatting","comment-start","comment-end"],Sm=e=>{let t=e.prop(Ts.tokenClassNodeProp);if(!t)return!;let n=new Set(t==null?void :t.split(" "));return Im.every(a=>!n.has(a))&&Lm.some(a=>n.has(a))},Am=e=>{let t=(n,a,i,r)=>{let o=(p,l)=>{let c=n.doc.sliceString(p,l);if(!!c.trim())for(let{:u,index:h}of c.matchAll(Rt(gt)))e.packManager.hasIcon(je(u))&&r(p+h,p+h+u.length,new Ut(u))},s=a;(,Ps.syntaxTree)(n).iterate({from:a-,to:i+,enter:({type:p,from:l,to:c})=>{p.name!=="Document"&&(l!==s&&o(s,l),s=c,Sm(p)&&o(l,c))}}),s!==i&&o(s,i)};return Os.StateField.define({create:n=>{let a=new bn.RangeSetBuilder;return t(n,,n.doc.length,a.add.bind(a)),a.finish()},update:(n,a)=>{if(!a.docChanged)return n;n=n.map(a.changes);let i=[];a.changes.iterChangedRanges((o,s,p,l)=>{i.push([a.state.doc.lineAt(p).number,a.state.doc.lineAt(l).number])});let r=[];for(let[o,s]of vn(i)){let{from:p}=a.state.doc.line(o),{to:l}=a.state.doc.line(s);n=n.update({filterFrom:p,filterTo:l,filter:()=>!}),t(a.state,p,l,(c,u,h)=>{r.push(h.range(c,u))})}return n=n.update({add:r}),n}})},Ns=Am;var Vt=class{constructor(t){this.plugin=t;this.cache=new Map}get vault(){return this.plugin.app.vault}getIcon(t){return $(this,null,function(){let n=yield this.vault.adapter.stat(t);if(!n||n.type!=="file")return null;if(this.cache.has(t)){let i=this.cache.get(t);if(i.ctime===n.ctime&&i.mtime===n.mtime&&i.size===n.size)return i.svg.cloneNode(!)}return(yield this.readIntoCache(t,n)).cloneNode(!)})}readIntoCache(t,n){return $(this,null,function(){let a=DOMPurify.sanitize(yield this.vault.adapter.read(t)),i=new DOMParser().parseFromString(a,"image/svg+xml").documentElement;return this.cache.set(t,et(Me({},n),{svg:i})),i})}refresh(){let t=n=>$(this,null,function(){let a=yield this.vault.adapter.stat(n);return!a||a.type!=="file"?this.cache.delete(n):yield this.readIntoCache(n,a),n});return Promise.allSettled([...this.cache.keys()].map(t))}clear(){this.cache.clear()}};var yc=be(Ia(),);function He(e){return Array.isArray?Array.isArray(e):Gs(e)==="[object Array]"}var Mm=/;function Fm(e){if(typeof e=="string")return e;let t=e+"";return t==""&&/e==-Mm?"-":t}function Em(e){return e==null?"":Fm(e)}function Te(e){return typeof e=="string"}function qs(e){return typeof e=="number"}function zm(e){return e===!||e===!||Bm(e)&&Gs(e)=="[object Boolean]"}function $s(e){return typeof e=="object"}function Bm(e){return $s(e)&&e!==null}function ke(e){return e!=null}function Sa(e){return!e.trim().length}function Gs(e){return e==null?e===void ?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}var Pm="Incorrect 'index' type",Tm=e=>`Invalid value for key ${e}`,Om=e=>`Pattern length exceeds max of ${e}.`,Nm=e=>`Missing ${e} property in key`,Dm=e=>`Property 'weight' in key '${e}' must be a positive integer`,Ws=Object.prototype.hasOwnProperty,Aa=class{constructor(t){this._keys=[],this._keyMap={};let n=;t.forEach(a=>{let i=Zs(a);n+=i.weight,this._keys.push(i),this._keyMap[i.id]=i,n+=i.weight}),this._keys.forEach(a=>{a.weight/=n})}get(t){return this._keyMap[t]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}};function Zs(e){let t=null,n=null,a=null,i=,r=null;if(Te(e)||He(e))a=e,t=Rs(e),n=Ma(e);else{if(!Ws.call(e,"name"))throw new Error(Nm("name"));let o=e.name;if(a=o,Ws.call(e,"weight")&&(i=e.weight,i<=))throw new Error(Dm(o));t=Rs(o),n=Ma(o),r=e.getFn}return{path:t,id:n,weight:i,src:a,getFn:r}}function Rs(e){return He(e)?e:e.split(".")}function Ma(e){return He(e)?e.join("."):e}function Wm(e,t){let n=[],a=!,i=(r,o,s)=>{if(!!ke(r))if(!o[s])n.push(r);else{let p=o[s],l=r[p];if(!ke(l))return;if(s===o.length-&&(Te(l)||qs(l)||zm(l)))n.push(Em(l));else if(He(l)){a=!;for(let c=,u=l.length;c<u;c+=)i(l[c],o,s+)}else o.length&&i(l,o,s+)}};return i(e,Te(t)?t.split("."):t,),a?n:n[]}var Rm={includeMatches:!,findAllMatches:!,minMatchCharLength:},Um={isCaseSensitive:!,includeScore:!,keys:[],shouldSort:!,sortFn:(e,t)=>e.score===t.score?e.idx<t.idx?-::e.score<t.score?-:},Vm={location:,threshold:.,distance:},Hm={useExtendedSearch:!,getFn:Wm,ignoreLocation:!,ignoreFieldNorm:!,fieldNormWeight:},ne={...Um,...Rm,...Vm,...Hm},qm=/[^ ]+/g;function $m(e=,t=){let n=new Map,a=Math.pow(,t);return{get(i){let r=i.match(qm).length;if(n.has(r))return n.get(r);let o=/Math.pow(r,.e),s=parseFloat(Math.round(oa)/a);return n.set(r,s),s},clear(){n.clear()}}}var Ht=class{constructor({getFn:t=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){this.norm=$m(n,),this.getFn=t,this.isCreated=!,this.setIndexRecords()}setSources(t=[]){this.docs=t}setIndexRecords(t=[]){this.records=t}setKeys(t=[]){this.keys=t,this._keysMap={},t.forEach((n,a)=>{this._keysMap[n.id]=a})}create(){this.isCreated||!this.docs.length||(this.isCreated=!,Te(this.docs[])?this.docs.forEach((t,n)=>{this._addString(t,n)}):this.docs.forEach((t,n)=>{this._addObject(t,n)}),this.norm.clear())}add(t){let n=this.size();Te(t)?this._addString(t,n):this._addObject(t,n)}removeAt(t){this.records.splice(t,);for(let n=t,a=this.size();n<a;n+=)this.records[n].i-=}getValueForItemAtKeyId(t,n){return t[this._keysMap[n]]}size(){return this.records.length}_addString(t,n){if(!ke(t)||Sa(t))return;let a={v:t,i:n,n:this.norm.get(t)};this.records.push(a)}_addObject(t,n){let a={i:n,$:{}};this.keys.forEach((i,r)=>{let o=i.getFn?i.getFn(t):this.getFn(t,i.path);if(!!ke(o)){if(He(o)){let s=[],p=[{nestedArrIndex:-,value:o}];for(;p.length;){let{nestedArrIndex:l,value:c}=p.pop();if(!!ke(c))if(Te(c)&&!Sa(c)){let u={v:c,i:l,n:this.norm.get(c)};s.push(u)}else He(c)&&c.forEach((u,h)=>{p.push({nestedArrIndex:h,value:u})})}a.$[r]=s}else if(Te(o)&&!Sa(o)){let s={v:o,n:this.norm.get(o)};a.$[r]=s}}}),this.records.push(a)}toJSON(){return{keys:this.keys,records:this.records}}};function Ks(e,t,{getFn:n=ne.getFn,fieldNormWeight:a=ne.fieldNormWeight}={}){let i=new Ht({getFn:n,fieldNormWeight:a});return i.setKeys(e.map(Zs)),i.setSources(t),i.create(),i}function Gm(e,{getFn:t=ne.getFn,fieldNormWeight:n=ne.fieldNormWeight}={}){let{keys:a,records:i}=e,r=new Ht({getFn:t,fieldNormWeight:n});return r.setKeys(a),r.setIndexRecords(i),r}function _n(e,{errors:t=,currentLocation:n=,expectedLocation:a=,distance:i=ne.distance,ignoreLocation:r=ne.ignoreLocation}={}){let o=t/e.length;if(r)return o;let s=Math.abs(a-n);return i?o+s/i:s?:o}function Zm(e=[],t=ne.minMatchCharLength){let n=[],a=-,i=-,r=;for(let o=e.length;r<o;r+=){let s=e[r];s&&a===-?a=r:!s&&a!==-&&(i=r-,i-a+>=t&&n.push([a,i]),a=-)}return e[r-]&&r-a>=t&&n.push([a,r-]),n}var at=;function Km(e,t,n,{location:a=ne.location,distance:i=ne.distance,threshold:r=ne.threshold,findAllMatches:o=ne.findAllMatches,minMatchCharLength:s=ne.minMatchCharLength,includeMatches:p=ne.includeMatches,ignoreLocation:l=ne.ignoreLocation}={}){if(t.length>at)throw new Error(Om(at));let c=t.length,u=e.length,h=Math.max(,Math.min(a,u)),f=r,g=h,x=s>||p,b=x?Array(u):[],_;for(;(_=e.indexOf(t,g))>-;){let S=_n(t,{currentLocation:_,expectedLocation:h,distance:i,ignoreLocation:l});if(f=Math.min(S,f),g=_+c,x){let W=;for(;W<c;)b[_+W]=,W+=}}g=-;let C=[],w=,z=c+u,F=<<c-;for(let S=;S<c;S+=){let W=,Y=z;for(;W<Y;)_n(t,{errors:S,currentLocation:h+Y,expectedLocation:h,distance:i,ignoreLocation:l})<=f?W=Y:z=Y,Y=Math.floor((z-W)/+W);z=Y;let k=Math.max(,h-Y+),E=o?u:Math.min(h+Y,u)+c,m=Array(E+);m[E+]=(<<S)-;for(let J=E;J>=k;J-=){let D=J-,ae=n[e.charAt(D)];if(x&&(b[D]=+!!ae),m[J]=(m[J+]<<|)&ae,S&&(m[J]|=(C[J+]|C[J])<<||C[J+]),m[J]&F&&(w=_n(t,{errors:S,currentLocation:D,expectedLocation:h,distance:i,ignoreLocation:l}),w<=f)){if(f=w,g=D,g<=h)break;k=Math.max(,h-g)}}if(_n(t,{errors:S+,currentLocation:h,expectedLocation:h,distance:i,ignoreLocation:l})>f)break;C=m}let T={isMatch:g>=,score:Math.max(.,w)};if(x){let S=Zm(b,s);S.length?p&&(T.indices=S):T.isMatch=!}return T}function Ym(e){let t={};for(let n=,a=e.length;n<a;n+=){let i=e.charAt(n);t[i]=(t[i]||)|<<a-n-}return t}var kn=class{constructor(t,{location:n=ne.location,threshold:a=ne.threshold,distance:i=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:s=ne.minMatchCharLength,isCaseSensitive:p=ne.isCaseSensitive,ignoreLocation:l=ne.ignoreLocation}={}){if(this.options={location:n,threshold:a,distance:i,includeMatches:r,findAllMatches:o,minMatchCharLength:s,isCaseSensitive:p,ignoreLocation:l},this.pattern=p?t:t.toLowerCase(),this.chunks=[],!this.pattern.length)return;let c=(h,f)=>{this.chunks.push({pattern:h,alphabet:Ym(h),startIndex:f})},u=this.pattern.length;if(u>at){let h=,f=u%at,g=u-f;for(;h<g;)c(this.pattern.substr(h,at),h),h+=at;if(f){let x=u-at;c(this.pattern.substr(x),x)}}else c(this.pattern,)}searchIn(t){let{isCaseSensitive:n,includeMatches:a}=this.options;if(n||(t=t.toLowerCase()),this.pattern===t){let g={isMatch:!,score:};return a&&(g.indices=[[,t.length-]]),g}let{location:i,distance:r,threshold:o,findAllMatches:s,minMatchCharLength:p,ignoreLocation:l}=this.options,c=[],u=,h=!;this.chunks.forEach(({pattern:g,alphabet:x,startIndex:b})=>{let{isMatch:_,score:C,indices:w}=Km(t,g,x,{location:i+b,distance:r,threshold:o,findAllMatches:s,minMatchCharLength:p,includeMatches:a,ignoreLocation:l});_&&(h=!),u+=C,_&&w&&(c=[...c,...w])});let f={isMatch:h,score:h?u/this.chunks.length:};return h&&a&&(f.indices=c),f}},Oe=class{constructor(t){this.pattern=t}static isMultiMatch(t){return Us(t,this.multiRegex)}static isSingleMatch(t){return Us(t,this.singleRegex)}search(){}};function Us(e,t){let n=e.match(t);return n?n[]:null}var Fa=class extends Oe{constructor(t){super(t)}static get type(){return"exact"}static get multiRegex(){return/^="(.)"$/}static get singleRegex(){return/^=(.)$/}search(t){let n=t===this.pattern;return{isMatch:n,score:n?:,indices:[,this.pattern.length-]}}},Ea=class extends Oe{constructor(t){super(t)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.)"$/}static get singleRegex(){return/^!(.)$/}search(t){let a=t.indexOf(this.pattern)===-;return{isMatch:a,score:a?:,indices:[,t.length-]}}},za=class extends Oe{constructor(t){super(t)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.)"$/}static get singleRegex(){return/^\^(.)$/}search(t){let n=t.startsWith(this.pattern);return{isMatch:n,score:n?:,indices:[,this.pattern.length-]}}},Ba=class extends Oe{constructor(t){super(t)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.)"$/}static get singleRegex(){return/^!\^(.)$/}search(t){let n=!t.startsWith(this.pattern);return{isMatch:n,score:n?:,indices:[,t.length-]}}},Pa=class extends Oe{constructor(t){super(t)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.)"\$$/}static get singleRegex(){return/^(.)\$$/}search(t){let n=t.endsWith(this.pattern);return{isMatch:n,score:n?:,indices:[t.length-this.pattern.length,t.length-]}}},Ta=class extends Oe{constructor(t){super(t)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.)"\$$/}static get singleRegex(){return/^!(.)\$$/}search(t){let n=!t.endsWith(this.pattern);return{isMatch:n,score:n?:,indices:[,t.length-]}}},wn=class extends Oe{constructor(t,{location:n=ne.location,threshold:a=ne.threshold,distance:i=ne.distance,includeMatches:r=ne.includeMatches,findAllMatches:o=ne.findAllMatches,minMatchCharLength:s=ne.minMatchCharLength,isCaseSensitive:p=ne.isCaseSensitive,ignoreLocation:l=ne.ignoreLocation}={}){super(t),this._bitapSearch=new kn(t,{location:n,threshold:a,distance:i,includeMatches:r,findAllMatches:o,minMatchCharLength:s,isCaseSensitive:p,ignoreLocation:l})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.)"$/}static get singleRegex(){return/^(.)$/}search(t){return this._bitapSearch.searchIn(t)}},Cn=class extends Oe{constructor(t){super(t)}static get type(){return"include"}static get multiRegex(){return/^'"(.)"$/}static get singleRegex(){return/^'(.)$/}search(t){let n=,a,i=[],r=this.pattern.length;for(;(a=t.indexOf(this.pattern,n))>-;)n=a+r,i.push([a,n-]);let o=!!i.length;return{isMatch:o,score:o?:,indices:i}}},Oa=[Fa,Cn,za,Ba,Ta,Pa,Ea,wn],Vs=Oa.length,Xm=/ +(?=(?:[^\"]\"[^\"]\")[^\"]$)/,Jm="|";function Qm(e,t={}){return e.split(Jm).map(n=>{let a=n.trim().split(Xm).filter(r=>r&&!!r.trim()),i=[];for(let r=,o=a.length;r<o;r+=){let s=a[r],p=!,l=-;for(;!p&&++l<Vs;){let c=Oa[l],u=c.isMultiMatch(s);u&&(i.push(new c(u,t)),p=!)}if(!p)for(l=-;++l<Vs;){let c=Oa[l],u=c.isSingleMatch(s);if(u){i.push(new c(u,t));break}}}return i})}var eh=new Set([wn.type,Cn.type]),Na=class{constructor(t,{isCaseSensitive:n=ne.isCaseSensitive,includeMatches:a=ne.includeMatches,minMatchCharLength:i=ne.minMatchCharLength,ignoreLocation:r=ne.ignoreLocation,findAllMatches:o=ne.findAllMatches,location:s=ne.location,threshold:p=ne.threshold,distance:l=ne.distance}={}){this.query=null,this.options={isCaseSensitive:n,includeMatches:a,minMatchCharLength:i,findAllMatches:o,ignoreLocation:r,location:s,threshold:p,distance:l},this.pattern=n?t:t.toLowerCase(),this.query=Qm(this.pattern,this.options)}static condition(t,n){return n.useExtendedSearch}searchIn(t){let n=this.query;if(!n)return{isMatch:!,score:};let{includeMatches:a,isCaseSensitive:i}=this.options;t=i?t:t.toLowerCase();let r=,o=[],s=;for(let p=,l=n.length;p<l;p+=){let c=n[p];o.length=,r=;for(let u=,h=c.length;u<h;u+=){let f=c[u],{isMatch:g,indices:x,score:b}=f.search(t);if(g){if(r+=,s+=b,a){let _=f.constructor.type;eh.has(_)?o=[...o,...x]:o.push(x)}}else{s=,r=,o.length=;break}}if(r){let u={isMatch:!,score:s/r};return a&&(u.indices=o),u}}return{isMatch:!,score:}}},Da=[];function th(...e){Da.push(...e)}function Wa(e,t){for(let n=,a=Da.length;n<a;n+=){let i=Da[n];if(i.condition(e,t))return new i(e,t)}return new kn(e,t)}var jn={AND:"$and",OR:"$or"},Ra={PATH:"$path",PATTERN:"$val"},Ua=e=>!!(e[jn.AND]||e[jn.OR]),nh=e=>!!e[Ra.PATH],ah=e=>!He(e)&&$s(e)&&!Ua(e),Hs=e=>({[jn.AND]:Object.keys(e).map(t=>({[t]:e[t]}))});function Ys(e,t,{auto:n=!}={}){let a=i=>{let r=Object.keys(i),o=nh(i);if(!o&&r.length>&&!Ua(i))return a(Hs(i));if(ah(i)){let p=o?i[Ra.PATH]:r[],l=o?i[Ra.PATTERN]:i[p];if(!Te(l))throw new Error(Tm(p));let c={keyId:Ma(p),pattern:l};return n&&(c.searcher=Wa(l,t)),c}let s={children:[],operator:r[]};return r.forEach(p=>{let l=i[p];He(l)&&l.forEach(c=>{s.children.push(a(c))})}),s};return Ua(e)||(e=Hs(e)),a(e)}function ih(e,{ignoreFieldNorm:t=ne.ignoreFieldNorm}){e.forEach(n=>{let a=;n.matches.forEach(({key:i,norm:r,score:o})=>{let s=i?i.weight:null;a=Math.pow(o===&&s?Number.EPSILON:o,(s||)(t?:r))}),n.score=a})}function rh(e,t){let n=e.matches;t.matches=[],ke(n)&&n.forEach(a=>{if(!ke(a.indices)||!a.indices.length)return;let{indices:i,value:r}=a,o={indices:i,value:r};a.key&&(o.key=a.key.src),a.idx>-&&(o.refIndex=a.idx),t.matches.push(o)})}function oh(e,t){t.score=e.score}function sh(e,t,{includeMatches:n=ne.includeMatches,includeScore:a=ne.includeScore}={}){let i=[];return n&&i.push(rh),a&&i.push(oh),e.map(r=>{let{idx:o}=r,s={item:t[o],refIndex:o};return i.length&&i.forEach(p=>{p(r,s)}),s})}var qe=class{constructor(t,n={},a){this.options={...ne,...n},this.options.useExtendedSearch,this._keyStore=new Aa(this.options.keys),this.setCollection(t,a)}setCollection(t,n){if(this._docs=t,n&&!(n instanceof Ht))throw new Error(Pm);this._myIndex=n||Ks(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(t){!ke(t)||(this._docs.push(t),this._myIndex.add(t))}remove(t=()=>!){let n=[];for(let a=,i=this._docs.length;a<i;a+=){let r=this._docs[a];t(r,a)&&(this.removeAt(a),a-=,i-=,n.push(r))}return n}removeAt(t){this._docs.splice(t,),this._myIndex.removeAt(t)}getIndex(){return this._myIndex}search(t,{limit:n=-}={}){let{includeMatches:a,includeScore:i,shouldSort:r,sortFn:o,ignoreFieldNorm:s}=this.options,p=Te(t)?Te(this._docs[])?this._searchStringList(t):this._searchObjectList(t):this._searchLogical(t);return ih(p,{ignoreFieldNorm:s}),r&&p.sort(o),qs(n)&&n>-&&(p=p.slice(,n)),sh(p,this._docs,{includeMatches:a,includeScore:i})}_searchStringList(t){let n=Wa(t,this.options),{records:a}=this._myIndex,i=[];return a.forEach(({v:r,i:o,n:s})=>{if(!ke(r))return;let{isMatch:p,score:l,indices:c}=n.searchIn(r);p&&i.push({item:r,idx:o,matches:[{score:l,value:r,norm:s,indices:c}]})}),i}_searchLogical(t){let n=Ys(t,this.options),a=(s,p,l)=>{if(!s.children){let{keyId:u,searcher:h}=s,f=this._findMatches({key:this._keyStore.get(u),value:this._myIndex.getValueForItemAtKeyId(p,u),searcher:h});return f&&f.length?[{idx:l,item:p,matches:f}]:[]}let c=[];for(let u=,h=s.children.length;u<h;u+=){let f=s.children[u],g=a(f,p,l);if(g.length)c.push(...g);else if(s.operator===jn.AND)return[]}return c},i=this._myIndex.records,r={},o=[];return i.forEach(({$:s,i:p})=>{if(ke(s)){let l=a(n,s,p);l.length&&(r[p]||(r[p]={idx:p,item:s,matches:[]},o.push(r[p])),l.forEach(({matches:c})=>{r[p].matches.push(...c)}))}}),o}_searchObjectList(t){let n=Wa(t,this.options),{keys:a,records:i}=this._myIndex,r=[];return i.forEach(({$:o,i:s})=>{if(!ke(o))return;let p=[];a.forEach((l,c)=>{p.push(...this._findMatches({key:l,value:o[c],searcher:n}))}),p.length&&r.push({idx:s,item:o,matches:p})}),r}_findMatches({key:t,value:n,searcher:a}){if(!ke(n))return[];let i=[];if(He(n))n.forEach(({v:r,i:o,n:s})=>{if(!ke(r))return;let{isMatch:p,score:l,indices:c}=a.searchIn(r);p&&i.push({score:l,key:t,value:r,idx:o,norm:s,indices:c})});else{let{v:r,n:o}=n,{isMatch:s,score:p,indices:l}=a.searchIn(r);s&&i.push({score:p,key:t,value:r,norm:o,indices:l})}return i}};qe.version="..";qe.createIndex=Ks;qe.parseIndex=Gm;qe.config=ne;qe.parseQuery=Ys;th(Na);var En=be(Js(),),_c=be(Wt(),),Fe=require("obsidian"),Le=be(Bt(),);function qt(e,t){let n=In(e),a=In(t),i=n.pop(),r=a.pop(),o=Ha(n,a);return o!==?o:i&&r?Ha(i.split("."),r.split(".")):i||r?i?-::}var ch=e=>typeof e=="string"&&/^[v\d]/.test(e)&&nc.test(e),Sn=(e,t,n)=>{ph(n);let a=qt(e,t);return ac[n].includes(a)},qa=(e,t)=>{let n=t.match(/^([<>=~^]+)/),a=n?n[]:"=";if(a!=="^"&&a!=="~")return Sn(e,t,a);let[i,r,o]=In(e),[s,p,l]=In(t);return Ln(i,s)!==?!:a==="^"?Ha([r,o],[p,l])>=:Ln(r,p)!==?!:Ln(o,l)>=};qt.validate=ch;qt.compare=Sn;qt.sastisfies=qa;var nc=/^[v^~<>=]?(\d+)(?:\.([x]|\d+)(?:\.([x]|\d+)(?:\.([x]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+))?)?)?$/i,In=e=>{if(typeof e!="string")throw new TypeError("Invalid argument expected string");let t=e.match(nc);if(!t)throw new Error(`Invalid argument not valid semver ('${e}' received)`);return t.shift(),t},Qs=e=>e===""||e==="x"||e==="X",ec=e=>{let t=parseInt(e,);return isNaN(t)?e:t},lh=(e,t)=>typeof e!=typeof t?[String(e),String(t)]:[e,t],Ln=(e,t)=>{if(Qs(e)||Qs(t))return ;let[n,a]=lh(ec(e),ec(t));return n>a?:n<a?-:},Ha=(e,t)=>{for(let n=;n<Math.max(e.length,t.length);n++){let a=Ln(e[n]||,t[n]||);if(a!==)return a}return },ac={">":[],">=":[,],"=":[],"<=":[-,],"<":[-]},tc=Object.keys(ac),ph=e=>{if(typeof e!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof e}`);if(tc.indexOf(e)===-)throw new Error(`Invalid operator, expected one of ${tc.join("|")}`)};var $a=be(Wt(),);var Fn=require("obsidian");var ic="isc",rc=(e,t)=>typeof e=="string"&&e.trim().length>?t.search(e.replace(/^\+|\+$/g,"").split(/[+]/g)):t.getAllIds();function oc(e,t){return $(this,null,function(){let{id:n,name:a}=e.item,{matches:i}=e,r=yield this.packManager.getSVGIcon(n);if(!r)throw new TypeError("Failed to get icon for key: "+n);t.addClass("mod-complex");let o=t.createDiv("suggestion-content").createDiv("suggestion-title");if(i){let s=i.length===?i[].key==="name"?i[].indices:[]:vn(i.flatMap(p=>p.key==="name"?p.indices:[]));uh(o,a.replace(/[_-]/g," "),s)}else o.setText(a.replace(/[_-]/g," "));t.createDiv("suggestion-aux").createSpan("suggestion-flair",s=>s.appendChild(r))})}var An=class extends Fn.SuggestModal{constructor(n){super(n.app);this.plugin=n;this.renderSuggestion=oc;this.resolve=null;this.modalEl.addClass(ic)}get packManager(){return this.plugin.packManager}getSuggestions(n){return rc(n,this.packManager)}open(){return super.open(),new Promise(n=>{this.resolve=n})}onClose(){this.resolve&&(this.resolve(null),this.resolve=null)}onChooseSuggestion(n){}selectSuggestion(n,a){this.resolve&&(n!=null&&n.item?this.resolve(n.item):this.resolve(null),this.resolve=null),super.selectSuggestion(n,a)}},Mn=class extends Fn.EditorSuggest{constructor(n){super(n.app);this.plugin=n;this.renderSuggestion=oc;this.suggestEl.addClass(ic)}get packManager(){return this.plugin.packManager}onTrigger(n,a){if(!this.plugin.settings.suggester)return null;let i=a.getLine(n.line).substring(,n.ch),r=this.plugin.settings.triggerWithTrailingSpace?" ":"",o=String.raw`(?:${r}:|：：)([^:\s]+$)`,s=i.match(new RegExp(o,"i"));if(!s)return null;let p=s.input.substring(,s.index).match(/:([^\s:]+$)/);return p&&this.packManager.hasIcon(p[])?null:{end:n,start:{ch:s.index,line:n.line},query:s[]}}getSuggestions(n){return rc(n.query,this.packManager)}selectSuggestion(n){if(!this.context)return;let{id:a,pack:i}=n.item;this.context.editor.replaceRange(this.plugin.settings.codeemoji&&i==="emoji"?this.packManager.getIcon(a,!):`:${a}:`+(this.plugin.settings.spaceAfterSC?" ":""),this.context.start,this.context.end)}},uh=(e,t,n,a)=>{if(n){a===void &&(a=);let i=;for(let r=;r<n.length&&i<t.length;r++){let o=n[r],s=o[]+a,p=o[]+a+;if(!(p<=)){if(s>=t.length)break;s<&&(s=),s!==i&&e.appendText(t.substring(i,s)),e.createSpan({cls:"suggestion-highlight",text:t.substring(s,p)}),i=p}}i<t.length&&e.appendText(t.substring(i))}else e.appendText(t)};var sc="iconsc:",cc=(e,t)=>({hasIcon:e.hasIcon.bind(e),getIcon:e.getIcon.bind(e),getIconData:e.getIconData.bind(e),getSVGIcon:e.getSVGIcon.bind(e),getIconFromUser:()=>new An(t).open(),isEmoji:$a.default.hasEmoji.bind($a.default),postProcessor:t.postProcessor.bind(t),version:{get current(){return t.manifest.version},compare:(n,a)=>Sn(t.manifest.version,a,n),satisfies:n=>qa(t.manifest.version,n)}});var hc=be(dc(),),gc=be(ya(),),Ja=require("obsidian");var Ya=["activity","airplay","alarm-check","alarm-clock-off","alarm-clock","alarm-minus","alarm-plus","album","alert-circle","alert-octagon","alert-triangle","align-center","align-justify","align-left","align-right","anchor","aperture","archive","arrow-big-down","arrow-big-left","arrow-big-right","arrow-big-up","arrow-down-circle","arrow-down-left","arrow-down-right","arrow-down","arrow-left-circle","arrow-left-right","arrow-left","arrow-right-circle","arrow-right","arrow-up-circle","arrow-up-left","arrow-up-right","arrow-up","asterisk","at-sign","award","axe","banknote","bar-chart-","bar-chart","battery-charging","battery-full","battery-low","battery-medium","battery","beaker","bell-minus","bell-off","bell-plus","bell-ring","bell","bike","binary","bitcoin","bluetooth-connected","bluetooth-off","bluetooth-searching","bluetooth","bold","book-open","book","bookmark-minus","bookmark-plus","bookmark","bot","box-select","box","briefcase","brush","bug","building","bus","calculator","calendar","camera-off","camera","car","carrot","cast","check-circle-","check-circle","check-square","check","chevron-down","chevron-first","chevron-last","chevron-left","chevron-right","chevron-up","chevrons-down-up","chevrons-down","chevrons-left","chevrons-right","chevrons-up-down","chevrons-up","chrome","circle-slashed","circle","clipboard-check","clipboard-copy","clipboard-list","clipboard-x","clipboard","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock-","clock","cloud-drizzle","cloud-fog","cloud-hail","cloud-lightning","cloud-moon","cloud-off","cloud-rain-wind","cloud-rain","cloud-snow","cloud-sun","cloud","cloudy","clover","code-","code","codepen","codesandbox","coffee","coins","columns","command","compass","contact","contrast","cookie","copy","copyleft","copyright","corner-down-left","corner-down-right","corner-left-down","corner-left-up","corner-right-down","corner-right-up","corner-up-left","corner-up-right","cpu","credit-card","crop","cross","crosshair","crown","currency","database","delete","disc","divide-circle","divide-square","divide","dollar-sign","download-cloud","download","dribbble","droplet","droplets","drumstick","edit-","edit-","edit","egg","equal-not","equal","euro","expand","external-link","eye-off","eye","facebook","fast-forward","feather","figma","file-check-","file-check","file-code","file-digit","file-input","file-minus-","file-minus","file-output","file-plus-","file-plus","file-search","file-text","file-x-","file-x","file","files","film","filter","flag-triangle-left","flag-triangle-right","flag","flame","flashlight-off","flashlight","flask-conical","flask-round","folder-minus","folder-open","folder-plus","folder","form-input","forward","framer","frown","function-square","gamepad-","gamepad","gauge","gavel","gem","ghost","gift","git-branch-plus","git-branch","git-commit","git-merge","git-pull-request","github","gitlab","glasses","globe-","globe","grab","graduation-cap","grid","grip-horizontal","grip-vertical","hammer","hand-metal","hand","hard-drive","hard-hat","hash","haze","headphones","heart","help-circle","hexagon","highlighter","history","home","image-minus","image-off","image-plus","image","import","inbox","indent","indian-rupee","infinity","info","inspect","instagram","italic","japanese-yen","key","landmark","languages","laptop-","laptop","lasso-select","lasso","layers","layout-dashboard","layout-grid","layout-list","layout-template","layout","library","life-buoy","lightbulb-off","lightbulb","link--off","link-","link","linkedin","list-checks","list-minus","list-ordered","list-plus","list-x","list","list.txt","loader-","loader","locate-fixed","locate","lock","log-in","log-out","mail","map-pin","map","maximize-","maximize","megaphone","meh","menu","message-circle","message-square","mic-off","mic","minimize-","minimize","minus-circle","minus-square","minus","monitor-off","monitor-speaker","monitor","moon","more-horizontal","more-vertical","mountain-snow","mountain","mouse-pointer-","mouse-pointer-click","mouse-pointer","move-diagonal-","move-diagonal","move-horizontal","move-vertical","move","music","navigation-","navigation","network","octagon","option","outdent","package-check","package-minus","package-plus","package-search","package-x","package","palette","paperclip","pause-circle","pause-octagon","pause","pen-tool","pencil","percent","person-standing","phone-call","phone-forwarded","phone-incoming","phone-missed","phone-off","phone-outgoing","phone","pie-chart","piggy-bank","pin","pipette","plane","play-circle","play","plug-zap","plus-circle","plus-square","plus","pocket","podcast","pointer","pound-sterling","power-off","power","printer","qr-code","quote","radio-receiver","radio","redo","refresh-ccw","refresh-cw","regex","repeat-","repeat","reply-all","reply","rewind","rocking-chair","rotate-ccw","rotate-cw","rss","ruler","russian-ruble","save","scale","scan-line","scan","scissors","screen-share-off","screen-share","search","send","separator-horizontal","separator-vertical","server-crash","server-off","server","settings-","settings","share-","share","sheet","shield-alert","shield-check","shield-close","shield-off","shield","shirt","shopping-bag","shopping-cart","shovel","shrink","shuffle","sidebar-close","sidebar-open","sidebar","sigma","signal-high","signal-low","signal-medium","signal-zero","signal","skip-back","skip-forward","skull","slack","slash","sliders","smartphone-charging","smartphone","smile","snowflake","sort-asc","sort-desc","speaker","sprout","square","star-half","star","stop-circle","strikethrough","subscript","sun","sunrise","sunset","superscript","swiss-franc","switch-camera","table","tablet","tag","target","tent","terminal-square","terminal","text-cursor-input","text-cursor","thermometer-snowflake","thermometer-sun","thermometer","thumbs-down","thumbs-up","ticket","timer-off","timer-reset","timer","toggle-left","toggle-right","tornado","trash-","trash","trello","trending-down","trending-up","triangle","truck","tv-","tv","twitch","twitter","type","umbrella","underline","undo","unlink-","unlink","unlock","upload-cloud","upload","user-check","user-minus","user-plus","user-x","user","users","verified","vibrate","video-off","video","view","voicemail","volume-","volume-","volume-x","volume","wallet","wand","watch","webcam","wifi-off","wifi","wind","wrap-text","wrench","x-circle","x-octagon","x-square","x","youtube","zap-off","zap","zoom-in","zoom-out",""];var Xa=["logo-crystal","create-new","trash","search","right-triangle","document","folder","pencil","left-arrow","right-arrow","three-horizontal-bars","dot-network","audio-file","image-file","pdf-file","gear","documents","blocks","go-to-file","presentation","cross-in-box","microphone","microphone-filled","link","popup-open","checkmark","hashtag","left-arrow-with-tail","right-arrow-with-tail","up-arrow-with-tail","down-arrow-with-tail","lines-of-text","vertical-three-dots","pin","magnifying-glass","info","horizontal-split","vertical-split","calendar-with-checkmark","sheets-in-box","up-and-down-arrows","broken-link","cross","any-key","reset","star","crossed-star","dice","filled-pin","enter","help","vault","open-vault","paper-plane","bullet-list","uppercase-lowercase-a","star-list","expand-vertically","languages","switch","pane-layout","install","sync","check-in-circle","sync-small","check-small","paused","forward-arrow","stacked-levels","bracket-glyph","note-glyph","tag-glyph","price-tag-glyph","heading-glyph","bold-glyph","italic-glyph","strikethrough-glyph","highlight-glyph","code-glyph","quote-glyph","link-glyph","bullet-list-glyph","number-list-glyph","checkbox-glyph","undo-glyph","redo-glyph","up-chevron-glyph","down-chevron-glyph","left-chevron-glyph","right-chevron-glyph","percent-sign-glyph","keyboard-glyph","double-up-arrow-glyph","double-down-arrow-glyph","image-glyph","wrench-screwdriver-glyph","clock","plus-with-circle","minus-with-circle","indent-glyph","unindent-glyph","fullscreen","exit-fullscreen","cloud","run-command","compress-glyph","enlarge-glyph","scissors-glyph","up-curly-arrow-glyph","down-curly-arrow-glyph","plus-minus-glyph","links-going-out","links-coming-in","add-note-glyph","duplicate-glyph","clock-glyph","calendar-glyph","command-glyph","dice-glyph","file-explorer-glyph","graph-glyph","import-glyph","navigate-glyph","open-elsewhere-glyph","bullet-list-glyph","presentation-glyph","paper-plane-glyph","question-mark-glyph","restore-file-glyph","search-glyph","star-glyph","play-audio-glyph","stop-audio-glyph","tomorrow-glyph","wand-glyph","workspace-glyph","yesterday-glyph","box-glyph","merge-files-glyph","merge-files","two-blank-pages","scissors","paste","paste-text","split","select-all-text","wand","github-glyph","reading-glasses"];var vh=e=>e.replace(/-/g,"_"),Qa="luc",bh="obs",fc=e=>["class","height","width"].forEach(t=>{var n;return(n=e.firstElementChild)==null?void :n.removeAttribute(t)}),ei=class{constructor(t,n){this.pack=t;this.obsidianId=n;this.type="bulti-in";this.name=vh(n),this.id=`${t}_${this.name}`}get data(){var n;let t=createDiv();return(,Ja.setIcon)(t,(this.pack===Qa?"lucide-":"")+this.obsidianId),fc(t),(n=t.firstElementChild)==null||n.setAttribute("xmlns","http://www.w.org//svg"),t.innerHTML}get dataUri(){return(,hc.default)(this.data)}getDOM(t=!){let n=createSpan({cls:xt(this)});return t?(n.addClass("isc-svg-icon"),(,Ja.setIcon)(n,(this.pack===Qa?"lucide-":"")+this.obsidianId),fc(n)):(n.addClass("isc-img-icon"),n.createEl("img",{attr:{src:this.dataUri}})),n}},mc="emoji",yh=()=>{let e=new Map,t=[],n=[];for(let[a,i]of[[bh,Xa],[Qa,Ya]]){n.push(a);for(let r of i){let o=new ei(a,r);e.set(o.id,o),t.push(o)}}n.push(mc);for(let a of Object.keys(gc.default))t.push({pack:mc,id:a,name:a});return{packs:e,ids:t,packnames:n}},ti=yh(),ni=ti.packs,ai=ti.ids,vt=ti.packnames;var ii=be(Wt(),);var it=class{constructor(t){this.name=t}get id(){return this.name}get pack(){return"emoji"}get type(){return"emoji"}get char(){return ii.default.get(this.name)}static getData(t){return ii.default.hasEmoji(t)?new it(t):null}getDOM(t=!){return createSpan({cls:[xt(this),"isc-char-icon"],text:this.char})}};var xc=require("obsidian"),vc=be(Bt(),);var Xe=class{constructor(t,n,a,i,r){this._id=t;this._name=n;this._pack=a;this.plugin=r;this.path=i.trim()}static getData(t,n,a){let i=Ca(t);return!i||i.pack==="emoji"?null:new Xe(t,i.name,i.pack,n,a)}get type(){return"file"}get vault(){return this.plugin.app.vault}get id(){return this._id}get pack(){return this._pack}get name(){return this._name}get ext(){return(,vc.extname)(this.path)}get fsPath(){return this.vault.adapter instanceof xc.FileSystemAdapter?this.vault.adapter.getFullPath(this.path):null}get resourcePath(){return this.vault.adapter.getResourcePath(this.path)}get isSVG(){return this.ext===".svg"}getDOM(t=!){let n=createSpan({cls:xt(this)});return t&&this.isSVG?(n.addClass("isc-svg-icon"),(()=>$(this,null,function(){let a=yield this.plugin.fileIconCache.getIcon(this.path);return a?(this.fixFillColor(a),n.append(a)):console.error("failed to get icon data for",this.path),n}))()):(n.addClass("isc-img-icon"),n.createEl("img",{attr:{src:this.resourcePath}}),n)}fixFillColor(t){if(!!_h.includes(this.pack))for(let n of t.getElementsByTagName("path"))n.hasAttribute("fill")||n.setAttribute("fill","currentColor")}},_h=["fab","far","fas","rif","ril"];var bc=e=>!!e.ext;var kh="/icons.json",wh="icons",$t=class extends Fe.Events{constructor(n){super();this.plugin=n;this._customIcons=new Map;this._cutomsIconPacknames=new Set;this._loaded=!;this._fuse=new qe(ai,{keys:["name","pack"],includeScore:!,findAllMatches:!,threshold:.,shouldSort:!,includeMatches:!,useExtendedSearch:!})}get vault(){return this.plugin.app.vault}renameIconFile(n,a,i){return $(this,null,function(){let r=(,Le.join)(this.customIconsDir,i+a),o=(,Le.join)(this.customIconsDir,n+a);return yield this.vault.adapter.rename(o,r),r})}removeIconFile(n,a){let i=(,Le.join)(this.customIconsDir,n+a);return this.vault.adapter.remove(i)}addIcon(n,a,i){return $(this,null,function(){let r=(,Le.join)(this.customIconsDir,n+a);return yield this.vault.adapter.writeBinary(r,i),r})}get customPacknames(){return[...this._cutomsIconPacknames]}get customIconsFilePath(){return(,Fe.normalizePath)(this.plugin.manifest.dir+kh)}get customIconsDir(){return(,Le.join)(this.vault.configDir,wh)}isPacknameExists(n){return vt.includes(n)||this._cutomsIconPacknames.has(n)}get enabledPacknames(){return[...vt,...this._cutomsIconPacknames].filter(n=>this.isPackEnabled(n))}hasIcon(n){return this._isBuiltIn(n)||this._customIcons.has(n)}_isBuiltIn(n){return _c.default.hasEmoji(n)||ni.has(n)}getIcon(n,a=!){n=je(n);let i=this.getIconData(n);if(!i)return null;let r=()=>i.getDOM(!);switch(i.type){case"emoji":return a?i.char:r();case"bulti-in":return a?i.dataUri:r();case"file":return a?i.resourcePath:r();default:(,yc.default)(i)}}getSVGIcon(n,a=!){return $(this,null,function(){n=je(n);let i=this.getIconData(n);if(!i)return null;let r=()=>i.getDOM(!);if(i.type==="emoji")return a?i.char:r();if(i.type==="bulti-in"||i.type==="file"&&i.isSVG){let o=yield r();return a?o.innerHTML:o}else return a?i.resourcePath:r()})}getIconData(n){n=je(n);let a;return(a=it.getData(n))||(a=ni.get(n))||(a=this._customIcons.get(n))?a:null}isPackEnabled(n){return n==="emoji"?!:!this.plugin.settings.disabledPacks.has(n)}refreshPackNames(){this._cutomsIconPacknames.clear();for(let[,{pack:n}]of this._customIcons)this._cutomsIconPacknames.add(n)}loadIcons(){return $(this,null,function(){if(this._loaded&&(this._fuse.setCollection([]),this._customIcons.clear(),this._cutomsIconPacknames.clear(),this._loaded=!),!(yield this.vault.adapter.exists(this.customIconsDir))){yield this.vault.adapter.mkdir(this.customIconsDir);return}let n=yield this.vault.adapter.list(this.customIconsDir),a,i=n.files.map(r=>$(this,null,function(){if(!gn.test(r))return;let o=(,Le.basename)(r).replace(gn,""),s=Xe.getData(o,r,this.plugin);s?(this._customIcons.set(o,s),this._fuse.add(s)):console.warn("Failed to load icon data (raw value: %o) for id %s, skipping...",r,o)}));for(let r of yield Promise.allSettled(i))r.status==="rejected"&&console.error("Failed to load icon",r.reason);this._loaded=!,this.refreshPackNames(),this.trigger("initialized",this.plugin.api)})}backupIcons(n){return $(this,null,function(){let a=new En.default,i=yield this.vault.adapter.list(this.customIconsDir);for(let o of i.files)(!n||(,Le.basename)(o).startsWith(n+"_"))&&a.file((,Le.basename)(o),this.vault.adapter.readBinary(o));let r=`${n!=null?n:"custom-icons"}.zip`;yield this.vault.createBinary(r,yield a.generateAsync({type:"arraybuffer"})),Fe.Platform.isDesktopApp?this.plugin.app.openWithDefaultApp(""):new Fe.Notice(`icons have been saved to ${r}, enable 'Detect all file extension' in 'Files & Links' to visit it`)})}importIconsFromFileList(n,a=!){return $(this,null,function(){let i=[];for(let r=;r<n.length;r++){let o=n[r];o.type==="application/zip"&&i.push(this.importIcons(o,a))}return Promise.allSettled(i)})}importIcons(n,a){return $(this,null,function(){let i=n.name.replace(/\.zip$/,""),r;n instanceof File?r=yield En.default.loadAsync(n):r=yield En.default.loadAsync(n.data);let o=r.file(Es).map(p=>$(this,null,function(){let{name:l}=p;a&&!l.startsWith(i+"_")&&(l=i+"_"+l);let c=this.getAvailableId(l),u=(,Le.join)(this.customIconsDir,c);return(yield this.vault.adapter.exists(u))?Promise.reject(`icon ${c} already exists, skipping..`):(yield this.vault.adapter.writeBinary(u,yield p.async("arraybuffer")),c)})),s=(yield Promise.allSettled(o)).reduce((p,l)=>(l.status==="rejected"?console.error("Failed to import icon",l.reason):p.push(l.value),p),[]);return new Fe.Notice(s.length+" icons imported"),n.name})}addFromFiles(n,a){return $(this,null,function(){let i=yield zs(a);if(!i){new Fe.Notice("No SVG file found in dropped items");return}if(vt.includes(n)){console.error("failed to add pack: pack name %s reserved",n);return}let r=i.reduce((s,{name:p,ext:l,data:c})=>{let u=ja(`${n}_${p}`);return u?(u=this.getAvailableId(u),this._customIcons.has(u)?(s.push(Promise.reject(`icon ${u} already exists, skipping..`)),s):(s.push((()=>$(this,null,function(){try{let h=yield this.addIcon(u,l,c);this.set(u,new Xe(u,p,n,h,this.plugin),!)}catch(h){throw new $e("add",u,h)}return u}))()),s)):(console.warn("failed to add icon: id %s invalid, skipping...",u),s)},[]),o=[];for(let s of yield Promise.allSettled(r))s.status==="rejected"?console.error("Failed to add icon, details: ",s.reason):o.push(s.value);this.refreshPackNames(),this.trigger("changed",this.plugin.api,o),new Fe.Notice(o.length.toString()+" icons added")})}deleteMultiple(...n){return $(this,null,function(){this._fuse.remove(r=>bc(r)&&n.includes(r.id));let a=n.map(r=>$(this,null,function(){let o=this._customIcons.get(r);if(!o)throw new $e("delete",r,"No icon found in _customIcons");this._customIcons.delete(r);try{yield this.removeIconFile(r,o.ext)}catch(s){throw new $e("delete",r,s)}})),i=!;for(let r of yield Promise.allSettled(a))r.status==="rejected"?console.error("Failed to remove icon file, details: ",r.reason):i||(i=!);i&&(this.refreshPackNames(),this.trigger("changed",this.plugin.api,n))})}filter(n){return $(this,null,function(){let a=new Map;for(let[r,o]of this._customIcons)n(r,o)||(this._customIcons.delete(r),a.set(r,o.path));if(this._fuse.remove(r=>a.has(r.id)),a.size===)return;this.refreshPackNames(),this.trigger("changed",this.plugin.api,[...a.keys()]);let i=[...a.values()].map(r=>$(this,null,function(){try{yield this.vault.adapter.remove(r)}catch(o){throw new $e("delete",(,Le.basename)(r),o)}}));for(let r of yield Promise.allSettled(i))r.status==="rejected"&&console.error("Failed to remove icon file, details: ",r.reason)})}rename(n,a){return $(this,null,function(){if(this.hasIcon(a))return console.log("failed to rename icon: id %s already exists",a),null;let i=this._customIcons.get(n);if(!i)return console.log("failed to rename icon: id %s not found in custom icons",n),null;let r=ja(a);if(!r)return console.log("failed to rename icon: id %s invalid",n),null;try{i.path=yield this.renameIconFile(n,i.ext,a)}catch(o){throw new $e("rename",n,o,a)}return this.set(r,i,!),this.delete(n,!,!),this.refreshPackNames(),this.trigger("changed",this.plugin.api,[n,a]),a})}star(n){return $(this,null,function(){let a=n.replace(/_\d?$/,"");if(a===n)return console.log("failed to star icon: no suffix found for id %s",n),null;let i=this._customIcons.get(n);if(!i)return console.log("failed to star icon: id %s not found in custom icons",n),null;if(this._isBuiltIn(a))return console.log("failed to star icon: new id %s exists in built-in icons",a),null;try{let{ext:r}=i;if(this._customIcons.has(a)){let o=this._customIcons.get(a),{ext:s}=o;yield this.renameIconFile(a,s,a+"_temp"),i.path=yield this.renameIconFile(n,r,a),this.set(a,i,!),o.path=yield this.renameIconFile(a+"_temp",s,n),this.set(n,o,!)}else i.path=yield this.renameIconFile(n,r,a),this.set(a,i,!),this.delete(n,!,!)}catch(r){new $e("rename",n,r,a)}return this.refreshPackNames(),this.trigger("changed",this.plugin.api,[n,a]),a})}getAvailableId(n){if(!this.hasIcon(n))return n;let a=,i=`${n}_${a}`;for(;this.hasIcon(i);)i=`${n}_${++a}`;return`${n}_${a}`}set(n,a,i=!){this._customIcons.get(n)!==a&&(this._customIcons.set(n,a),this._fuse.remove(r=>r.id===n),this._fuse.add(a),i&&(this.refreshPackNames(),this.trigger("changed",this.plugin.api,[n])))}delete(n,a=!,i=!){return $(this,null,function(){let r=this._customIcons.get(n);if(!r)return!;if(i)try{yield this.removeIconFile(n,r.ext)}catch(s){throw new $e("delete",n,s)}let o=this._customIcons.delete(n);return this._fuse.remove(s=>s.id===n),a&&(this.refreshPackNames(),this.trigger("changed",this.plugin.api,[n])),o})}clear(){return $(this,null,function(){let n=(yield this.vault.adapter.list(this.customIconsDir)).files.map(a=>this.vault.adapter.remove(a));for(let a of yield Promise.allSettled(n))a.status==="rejected"&&console.error("Failed to remove icon file, details: ",a.reason);this._customIcons.clear(),this._fuse.remove(a=>!ai.includes(a)),this.refreshPackNames(),this.trigger("changed",this.plugin.api)})}search(n,a,i){let r=n.map(o=>({name:o}));return a=a!=null?a:this.enabledPacknames,r.push({$or:a.map(o=>({pack:`=${o}`}))}),this._fuse.search({$and:r},{limit:i!=null?i:})}getAllIds(n,a){let i=(n!=null?n:this.enabledPacknames).map(r=>({pack:`=${r}`}));return this._fuse.search({$or:i},{limit:a!=null?a:})}trigger(...n){let[a,...i]=n;super.trigger(a,...i),this.plugin.app.vault.trigger(sc+a,...i)}on(...n){return super.on(...n)}},$e=class extends Error{constructor(t,n,a,i){super(`Error while ${t} on ${n}${i?"=>"+i:""}: ${a instanceof Error?`${a.name}: ${a.message}`:a}`),console.error(`${t} on ${n}${i?"=>"+i:""}`,a),this.name="SaveIconError"}};var oi=require("obsidian"),Cc=be(Bt(),);var kc=require("obsidian"),ri=class extends kc.Modal{constructor(n){super(n);this.buttonContainerEl=this.modalEl.createDiv("modal-button-container");this.resolve=null;this.containerEl.addClass("mod-confirmation"),this.addButton("mod-cta","OK",()=>this.resolve&&this.resolve(!)),this.addCancelButton()}open(){return super.open(),new Promise(n=>this.resolve=n)}addButton(n,a,i){return this.buttonContainerEl.createEl("button",{cls:n,text:a}).addEventListener("click",r=>$(this,null,function(){i&&(yield i(r)),this.close()})),this}onClose(){this.resolve&&this.resolve(!)}addCancelButton(){return this.addButton("","Cancel",this.close.bind(this))}},wc=(e,t)=>{let n=new ri(t);return n.contentEl.setText(e),n.open()};var Ch=e=>$(void ,null,function(){let{vault:t}=e.app,n=yield t.readJson(e.packManager.customIconsFilePath),a=e.packManager.customIconsDir;(yield t.adapter.exists(a))||(yield t.adapter.mkdir(a)),yield Promise.allSettled(Object.entries(n).reduce((i,[r,o])=>{if(typeof r=="string"&&typeof o=="string"){let s=(,Cc.join)(a,`${r}.svg`);i.push(t.create(s,o))}return i},[]))}),jh=e=>$(void ,null,function(){if((yield e.app.vault.adapter.exists(e.packManager.customIconsFilePath))&&!e.settings.isMigrated&&(yield wc("Found custom icons that have not been upgraded, update icons now?",e.app)))try{yield Ch(e),e.settings.isMigrated=!,yield e.saveSettings(),new oi.Notice("Icon update complete, you can now find icon files in "+e.packManager.customIconsDir)}catch(n){new oi.Notice("Failed to update icons, check console for more details"),console.error(n)}}),jc=jh;var Lh=e=>(t,n)=>{for(let a of t.querySelectorAll(".callout")){let i=a.querySelector(".callout-title > .callout-icon"),r=new MutationObserver(o=>$(void ,null,function(){if(i.childElementCount>)return;let s=Ih(i,"--callout-icon"),p=yield e.api.getSVGIcon(s);!p||(r.disconnect(),i.className+=" "+p.className,i.replaceChildren(...p.childNodes))}));r.observe(i,{childList:!})}},Lc=Lh,Ih=(e,t,n)=>getComputedStyle(e,n).getPropertyValue(t).trim();var Sh=e=>{switch(e.nodeName){case"CODE":case"MJX-CONTAINER":return NodeFilter.FILTER_REJECT;case"text":return e.nodeValue&&gt.test(e.nodeValue)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT;default:return NodeFilter.FILTER_SKIP}},si=e=>{let t=a=>$(void ,null,function(){for(let i of[...a.wholeText.matchAll(Rt(gt))].sort((r,o)=>o.index-r.index).map(r=>({text:r[],index:r.index})))yield n(a,i)}),n=(o,s)=>$(void ,[o,s],function(a,{text:i,index:r}){var l,c;let p=yield e.packManager.getSVGIcon(je(i));if(!p)return a;if(typeof p=="string")a.textContent&&(a.textContent=(l=a.textContent)==null?void :l.replace(i,p));else{let u=a.splitText(r);(c=u.parentElement)==null||c.insertBefore(p,u),u.textContent=u.wholeText.substring(i.length)}});return a=>{let i=document.createTreeWalker(a,NodeFilter.SHOW_ALL,{acceptNode:Sh}),r=i.currentNode;for(;r;){if(r.nodeType===){let o=r;$(void ,null,function(){let s=[o];o.__PENDING__&&(yield o.__PENDING__,s=[...o.parentElement.childNodes].filter(l=>l instanceof Text));let p=Promise.all(s.map(t));o.__PENDING__=p,yield p,delete o.__PENDING__})}r=i.nextNode()}}},ci=e=>(t,n)=>t.replace(Rt(gt),a=>e.packManager.hasIcon(je(a))?n(a):a);var Ic=e=>{e.registerMarkdownPostProcessor(e._nodeProcessor),e.registerMarkdownPostProcessor(Lc(e))};var zn=class extends Error{},li=class extends zn{},pi=class extends zn{},Ah=(e,t=",")=>e.join(t),Mh={accept:"",multiple:!,strict:!},ui=e=>{let{accept:t,multiple:n,strict:a}={...Mh,...e},i=zh({multiple:n,accept:Array.isArray(t)?Ah(t):t});return new Promise(r=>{i.onchange=()=>{r(Fh(i.files,n,a)),i.remove()},i.click()})},Fh=(e,t,n)=>new Promise((a,i)=>{if(!e)return i(new li);let r=Eh(e,t,n);if(!r)return i(new pi);a(r)}),Eh=(e,t,n)=>!t&&n?e.length===?e[]:null:e.length?e:null,zh=({accept:e,multiple:t})=>{let n=document.createElement("input");return n.type="file",n.multiple=t,n.accept=e,n};var me=require("obsidian");var Ol=be(Ia(),),Nl=be(fn(),),Vn=require("obsidian");var Kt,X,Ec,Bh,Gt,zc,Sc,Bc,Bn={},Pc=[],Ph=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function Ge(e,t){for(var n in t)e[n]=t[n];return e}function Tc(e){var t=e.parentNode;t&&t.removeChild(e)}function Ee(e,t,n){var a,i,r,o={};for(r in t)r=="key"?a=t[r]:r=="ref"?i=t[r]:o[r]=t[r];if(arguments.length>&&(o.children=arguments.length>?Kt.call(arguments,):n),typeof e=="function"&&e.defaultProps!=null)for(r in e.defaultProps)o[r]===void &&(o[r]=e.defaultProps[r]);return Zt(e,o,a,i,null)}function Zt(e,t,n,a,i){var r={type:e,props:t,key:n,ref:a,__k:null,__:null,__b:,__e:null,__d:void ,__c:null,__h:null,constructor:void ,__v:i??++Ec};return i==null&&X.vnode!=null&&X.vnode(r),r}function fi(){return{current:null}}function Ne(e){return e.children}function Ie(e,t){this.props=e,this.context=t}function bt(e,t){if(t==null)return e.__?bt(e.__,e.__.__k.indexOf(e)+):null;for(var n;t<e.__k.length;t++)if((n=e.__k[t])!=null&&n.__e!=null)return n.__e;return typeof e.type=="function"?bt(e):null}function Oc(e){var t,n;if((e=e.__)!=null&&e.__c!=null){for(e.__e=e.__c.base=null,t=;t<e.__k.length;t++)if((n=e.__k[t])!=null&&n.__e!=null){e.__e=e.__c.base=n.__e;break}return Oc(e)}}function di(e){(!e.__d&&(e.__d=!)&&Gt.push(e)&&!Pn.__r++||Sc!==X.debounceRendering)&&((Sc=X.debounceRendering)||zc)(Pn)}function Pn(){for(var e;Pn.__r=Gt.length;)e=Gt.sort(function(t,n){return t.__v.__b-n.__v.__b}),Gt=[],e.some(function(t){var n,a,i,r,o,s;t.__d&&(o=(r=(n=t).__v).__e,(s=n.__P)&&(a=[],(i=Ge({},r)).__v=r.__v+,mi(s,r,i,n.__n,s.ownerSVGElement!==void ,r.__h!=null?[o]:null,a,o??bt(r),r.__h),Rc(a,r),r.__e!=o&&Oc(r)))})}function Nc(e,t,n,a,i,r,o,s,p,l){var c,u,h,f,g,x,b,_=a&&a.__k||Pc,C=_.length;for(n.__k=[],c=;c<t.length;c++)if((f=n.__k[c]=(f=t[c])==null||typeof f=="boolean"?null:typeof f=="string"||typeof f=="number"||typeof f=="bigint"?Zt(null,f,null,null,f):Array.isArray(f)?Zt(Ne,{children:f},null,null,null):f.__b>?Zt(f.type,f.props,f.key,null,f.__v):f)!=null){if(f.__=n,f.__b=n.__b+,(h=_[c])===null||h&&f.key==h.key&&f.type===h.type)_[c]=void ;else for(u=;u<C;u++){if((h=_[u])&&f.key==h.key&&f.type===h.type){_[u]=void ;break}h=null}mi(e,f,h=h||Bn,i,r,o,s,p,l),g=f.__e,(u=f.ref)&&h.ref!=u&&(b||(b=[]),h.ref&&b.push(h.ref,null,f),b.push(u,f.__c||g,f)),g!=null?(x==null&&(x=g),typeof f.type=="function"&&f.__k===h.__k?f.__d=p=Dc(f,p,e):p=Wc(e,f,h,_,g,p),typeof n.type=="function"&&(n.__d=p)):p&&h.__e==p&&p.parentNode!=e&&(p=bt(h))}for(n.__e=x,c=C;c--;)_[c]!=null&&(typeof n.type=="function"&&_[c].__e!=null&&_[c].__e==n.__d&&(n.__d=bt(a,c+)),Vc(_[c],_[c]));if(b)for(c=;c<b.length;c++)Uc(b[c],b[++c],b[++c])}function Dc(e,t,n){for(var a,i=e.__k,r=;i&&r<i.length;r++)(a=i[r])&&(a.__=e,t=typeof a.type=="function"?Dc(a,t,n):Wc(n,a,a,i,a.__e,t));return t}function De(e,t){return t=t||[],e==null||typeof e=="boolean"||(Array.isArray(e)?e.some(function(n){De(n,t)}):t.push(e)),t}function Wc(e,t,n,a,i,r){var o,s,p;if(t.__d!==void )o=t.__d,t.__d=void ;else if(n==null||i!=r||i.parentNode==null)e:if(r==null||r.parentNode!==e)e.appendChild(i),o=null;else{for(s=r,p=;(s=s.nextSibling)&&p<a.length;p+=)if(s==i)break e;e.insertBefore(i,r),o=r}return o!==void ?o:i.nextSibling}function Th(e,t,n,a,i){var r;for(r in n)r==="children"||r==="key"||r in t||Tn(e,r,null,n[r],a);for(r in t)i&&typeof t[r]!="function"||r==="children"||r==="key"||r==="value"||r==="checked"||n[r]===t[r]||Tn(e,r,t[r],n[r],a)}function Ac(e,t,n){t[]==="-"?e.setProperty(t,n):e[t]=n==null?"":typeof n!="number"||Ph.test(t)?n:n+"px"}function Tn(e,t,n,a,i){var r;e:if(t==="style")if(typeof n=="string")e.style.cssText=n;else{if(typeof a=="string"&&(e.style.cssText=a=""),a)for(t in a)n&&t in n||Ac(e.style,t,"");if(n)for(t in n)a&&n[t]===a[t]||Ac(e.style,t,n[t])}else if(t[]==="o"&&t[]==="n")r=t!==(t=t.replace(/Capture$/,"")),t=t.toLowerCase()in e?t.toLowerCase().slice():t.slice(),e.l||(e.l={}),e.l[t+r]=n,n?a||e.addEventListener(t,r?Fc:Mc,r):e.removeEventListener(t,r?Fc:Mc,r);else if(t!=="dangerouslySetInnerHTML"){if(i)t=t.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(t!=="href"&&t!=="list"&&t!=="form"&&t!=="tabIndex"&&t!=="download"&&t in e)try{e[t]=n??"";break e}catch{}typeof n=="function"||(n!=null&&(n!==!||t[]==="a"&&t[]==="r")?e.setAttribute(t,n):e.removeAttribute(t))}}function Mc(e){this.l[e.type+!](X.event?X.event(e):e)}function Fc(e){this.l[e.type+!](X.event?X.event(e):e)}function mi(e,t,n,a,i,r,o,s,p){var l,c,u,h,f,g,x,b,_,C,w,z,F,T=t.type;if(t.constructor!==void )return null;n.__h!=null&&(p=n.__h,s=t.__e=n.__e,t.__h=null,r=[s]),(l=X.__b)&&l(t);try{e:if(typeof T=="function"){if(b=t.props,_=(l=T.contextType)&&a[l.__c],C=l?_?_.props.value:l.__:a,n.__c?x=(c=t.__c=n.__c).__=c.__E:("prototype"in T&&T.prototype.render?t.__c=c=new T(b,C):(t.__c=c=new Ie(b,C),c.constructor=T,c.render=Nh),_&&_.sub(c),c.props=b,c.state||(c.state={}),c.context=C,c.__n=a,u=c.__d=!,c.__h=[]),c.__s==null&&(c.__s=c.state),T.getDerivedStateFromProps!=null&&(c.__s==c.state&&(c.__s=Ge({},c.__s)),Ge(c.__s,T.getDerivedStateFromProps(b,c.__s))),h=c.props,f=c.state,u)T.getDerivedStateFromProps==null&&c.componentWillMount!=null&&c.componentWillMount(),c.componentDidMount!=null&&c.__h.push(c.componentDidMount);else{if(T.getDerivedStateFromProps==null&&b!==h&&c.componentWillReceiveProps!=null&&c.componentWillReceiveProps(b,C),!c.__e&&c.shouldComponentUpdate!=null&&c.shouldComponentUpdate(b,c.__s,C)===!||t.__v===n.__v){c.props=b,c.state=c.__s,t.__v!==n.__v&&(c.__d=!),c.__v=t,t.__e=n.__e,t.__k=n.__k,t.__k.forEach(function(S){S&&(S.__=t)}),c.__h.length&&o.push(c);break e}c.componentWillUpdate!=null&&c.componentWillUpdate(b,c.__s,C),c.componentDidUpdate!=null&&c.__h.push(function(){c.componentDidUpdate(h,f,g)})}if(c.context=C,c.props=b,c.__v=t,c.__P=e,w=X.__r,z=,"prototype"in T&&T.prototype.render)c.state=c.__s,c.__d=!,w&&w(t),l=c.render(c.props,c.state,c.context);else do c.__d=!,w&&w(t),l=c.render(c.props,c.state,c.context),c.state=c.__s;while(c.__d&&++z<);c.state=c.__s,c.getChildContext!=null&&(a=Ge(Ge({},a),c.getChildContext())),u||c.getSnapshotBeforeUpdate==null||(g=c.getSnapshotBeforeUpdate(h,f)),F=l!=null&&l.type===Ne&&l.key==null?l.props.children:l,Nc(e,Array.isArray(F)?F:[F],t,n,a,i,r,o,s,p),c.base=t.__e,t.__h=null,c.__h.length&&o.push(c),x&&(c.__E=c.__=null),c.__e=!}else r==null&&t.__v===n.__v?(t.__k=n.__k,t.__e=n.__e):t.__e=Oh(n.__e,t,n,a,i,r,o,p);(l=X.diffed)&&l(t)}catch(S){t.__v=null,(p||r!=null)&&(t.__e=s,t.__h=!!p,r[r.indexOf(s)]=null),X.__e(S,t,n)}}function Rc(e,t){X.__c&&X.__c(t,e),e.some(function(n){try{e=n.__h,n.__h=[],e.some(function(a){a.call(n)})}catch(a){X.__e(a,n.__v)}})}function Oh(e,t,n,a,i,r,o,s){var p,l,c,u=n.props,h=t.props,f=t.type,g=;if(f==="svg"&&(i=!),r!=null){for(;g<r.length;g++)if((p=r[g])&&"setAttribute"in p==!!f&&(f?p.localName===f:p.nodeType===)){e=p,r[g]=null;break}}if(e==null){if(f===null)return document.createTextNode(h);e=i?document.createElementNS("http://www.w.org//svg",f):document.createElement(f,h.is&&h),r=null,s=!}if(f===null)u===h||s&&e.data===h||(e.data=h);else{if(r=r&&Kt.call(e.childNodes),l=(u=n.props||Bn).dangerouslySetInnerHTML,c=h.dangerouslySetInnerHTML,!s){if(r!=null)for(u={},g=;g<e.attributes.length;g++)u[e.attributes[g].name]=e.attributes[g].value;(c||l)&&(c&&(l&&c.__html==l.__html||c.__html===e.innerHTML)||(e.innerHTML=c&&c.__html||""))}if(Th(e,h,u,i,s),c)t.__k=[];else if(g=t.props.children,Nc(e,Array.isArray(g)?g:[g],t,n,a,i&&f!=="foreignObject",r,o,r?r[]:n.__k&&bt(n,),s),r!=null)for(g=r.length;g--;)r[g]!=null&&Tc(r[g]);s||("value"in h&&(g=h.value)!==void &&(g!==e.value||f==="progress"&&!g||f==="option"&&g!==u.value)&&Tn(e,"value",g,u.value,!),"checked"in h&&(g=h.checked)!==void &&g!==e.checked&&Tn(e,"checked",g,u.checked,!))}return e}function Uc(e,t,n){try{typeof e=="function"?e(t):e.current=t}catch(a){X.__e(a,n)}}function Vc(e,t,n){var a,i;if(X.unmount&&X.unmount(e),(a=e.ref)&&(a.current&&a.current!==e.__e||Uc(a,null,t)),(a=e.__c)!=null){if(a.componentWillUnmount)try{a.componentWillUnmount()}catch(r){X.__e(r,t)}a.base=a.__P=null}if(a=e.__k)for(i=;i<a.length;i++)a[i]&&Vc(a[i],t,typeof e.type!="function");n||e.__e==null||Tc(e.__e),e.__e=e.__d=void }function Nh(e,t,n){return this.constructor(e,n)}function yt(e,t,n){var a,i,r;X.__&&X.__(e,t),i=(a=typeof n=="function")?null:n&&n.__k||t.__k,r=[],mi(t,e=(!a&&n||t).__k=Ee(Ne,null,[e]),i||Bn,Bn,t.ownerSVGElement!==void ,!a&&n?[n]:i?null:t.firstChild?Kt.call(t.childNodes):null,r,!a&&n?n:i?i.__e:t.firstChild,a),Rc(r,e)}function hi(e,t){yt(e,t,hi)}function Hc(e,t,n){var a,i,r,o=Ge({},e.props);for(r in t)r=="key"?a=t[r]:r=="ref"?i=t[r]:o[r]=t[r];return arguments.length>&&(o.children=arguments.length>?Kt.call(arguments,):n),Zt(e.type,o,a||e.key,i||e.ref,null)}function Yt(e,t){var n={__c:t="__cC"+Bc++,__:e,Consumer:function(a,i){return a.children(i)},Provider:function(a){var i,r;return this.getChildContext||(i=[],(r={})[t]=this,this.getChildContext=function(){return r},this.shouldComponentUpdate=function(o){this.props.value!==o.value&&i.some(di)},this.sub=function(o){i.push(o);var s=o.componentWillUnmount;o.componentWillUnmount=function(){i.splice(i.indexOf(o),),s&&s.call(o)}}),a.children}};return n.Provider.__=n.Consumer.contextType=n}Kt=Pc.slice,X={__e:function(e,t,n,a){for(var i,r,o;t=t.__;)if((i=t.__c)&&!i.__)try{if((r=i.constructor)&&r.getDerivedStateFromError!=null&&(i.setState(r.getDerivedStateFromError(e)),o=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(e,a||{}),o=i.__d),o)return i.__E=i}catch(s){e=s}throw e}},Ec=,Bh=function(e){return e!=null&&e.constructor===void },Ie.prototype.setState=function(e,t){var n;n=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Ge({},this.state),typeof e=="function"&&(e=e(Ge({},n),this.props)),e&&Ge(n,e),e!=null&&this.__v&&(t&&this.__h.push(t),di(this))},Ie.prototype.forceUpdate=function(e){this.__v&&(this.__e=!,e&&this.__h.push(e),di(this))},Ie.prototype.render=Ne,Gt=[],zc=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,Pn.__r=,Bc=;var kt,ge,gi,qc,_t=,Jc=[],$c=X.__b,Gc=X.__r,Zc=X.diffed,Kc=X.__c,Yc=X.unmount;function Xt(e,t){X.__h&&X.__h(ge,e,_t||t),_t=;var n=ge.__H||(ge.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({}),n.__[e]}function _e(e){return _t=,Nn(nl,e)}function Nn(e,t,n){var a=Xt(kt++,);return a.t=e,a.__c||(a.__=[n?n(t):nl(void ,t),function(i){var r=a.t(a.__[],i);a.__[]!==r&&(a.__=[r,a.__[]],a.__c.setState({}))}],a.__c=ge),a.__}function Je(e,t){var n=Xt(kt++,);!X.__s&&bi(n.__H,t)&&(n.__=e,n.__H=t,ge.__H.__h.push(n))}function vi(e,t){var n=Xt(kt++,);!X.__s&&bi(n.__H,t)&&(n.__=e,n.__H=t,ge.__h.push(n))}function Qc(e){return _t=,Ze(function(){return{current:e}},[])}function el(e,t,n){_t=,vi(function(){return typeof e=="function"?(e(t()),function(){return e(null)}):e?(e.current=t(),function(){return e.current=null}):void },n==null?n:n.concat(e))}function Ze(e,t){var n=Xt(kt++,);return bi(n.__H,t)&&(n.__=e(),n.__H=t,n.__h=e),n.__}function rt(e,t){return _t=,Ze(function(){return e},t)}function wt(e){var t=ge.context[e.__c],n=Xt(kt++,);return n.c=e,t?(n.__==null&&(n.__=!,t.sub(ge)),t.props.value):e.__}function tl(e,t){X.useDebugValue&&X.useDebugValue(t?t(e):e)}function Dh(){for(var e;e=Jc.shift();)if(e.__P)try{e.__H.__h.forEach(On),e.__H.__h.forEach(xi),e.__H.__h=[]}catch(t){e.__H.__h=[],X.__e(t,e.__v)}}X.__b=function(e){ge=null,$c&&$c(e)},X.__r=function(e){Gc&&Gc(e),kt=;var t=(ge=e.__c).__H;t&&(gi===ge?(t.__h=[],ge.__h=[],t.__.forEach(function(n){n.__H&&(n.__H=void )})):(t.__h.forEach(On),t.__h.forEach(xi),t.__h=[])),gi=ge},X.diffed=function(e){Zc&&Zc(e);var t=e.__c;t&&t.__H&&t.__H.__h.length&&(Jc.push(t)!==&&qc===X.requestAnimationFrame||((qc=X.requestAnimationFrame)||function(n){var a,i=function(){clearTimeout(r),Xc&&cancelAnimationFrame(a),setTimeout(n)},r=setTimeout(i,);Xc&&(a=requestAnimationFrame(i))})(Dh)),ge=null,gi=null},X.__c=function(e,t){t.some(function(n){try{n.__h.forEach(On),n.__h=n.__h.filter(function(a){return!a.__||xi(a)})}catch(a){t.some(function(i){i.__h&&(i.__h=[])}),t=[],X.__e(a,n.__v)}}),Kc&&Kc(e,t)},X.unmount=function(e){Yc&&Yc(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach(function(a){try{On(a)}catch(i){t=i}}),t&&X.__e(t,n.__v))};var Xc=typeof requestAnimationFrame=="function";function On(e){var t=ge,n=e.__c;typeof n=="function"&&(e.__c=void ,n()),ge=t}function xi(e){var t=ge;e.__c=e.__(),ge=t}function bi(e,t){return!e||e.length!==t.length||t.some(function(n,a){return n!==e[a]})}function nl(e,t){return typeof t=="function"?t(e):t}function ul(e,t){for(var n in t)e[n]=t[n];return e}function yi(e,t){for(var n in e)if(n!=="__source"&&!(n in t))return!;for(var a in t)if(a!=="__source"&&e[a]!==t[a])return!;return!}function _i(e){this.props=e}function Wh(e,t){function n(i){var r=this.props.ref,o=r==i.ref;return!o&&r&&(r.call?r(null):r.current=null),t?!t(this.props,i)||!o:yi(this.props,i)}function a(i){return this.shouldComponentUpdate=n,Ee(e,i)}return a.displayName="Memo("+(e.displayName||e.name)+")",a.prototype.isReactComponent=!,a.__f=!,a}(_i.prototype=new Ie).isPureReactComponent=!,_i.prototype.shouldComponentUpdate=function(e,t){return yi(this.props,e)||yi(this.state,t)};var al=X.__b;X.__b=function(e){e.type&&e.type.__f&&e.ref&&(e.props.ref=e.ref,e.ref=null),al&&al(e)};var Rh=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.forward_ref")||;function Uh(e){function t(n){var a=ul({},n);return delete a.ref,e(a,n.ref||null)}return t.$$typeof=Rh,t.render=t,t.prototype.isReactComponent=t.__f=!,t.displayName="ForwardRef("+(e.displayName||e.name)+")",t}var il=function(e,t){return e==null?null:De(De(e).map(t))},Vh={map:il,forEach:il,count:function(e){return e?De(e).length:},only:function(e){var t=De(e);if(t.length!==)throw"Children.only";return t[]},toArray:De},Hh=X.__e;X.__e=function(e,t,n,a){if(e.then){for(var i,r=t;r=r.__;)if((i=r.__c)&&i.__c)return t.__e==null&&(t.__e=n.__e,t.__k=n.__k),i.__c(e,t)}Hh(e,t,n,a)};var rl=X.unmount;function Dn(){this.__u=,this.t=null,this.__b=null}function dl(e){var t=e.__.__c;return t&&t.__e&&t.__e(e)}function qh(e){var t,n,a;function i(r){if(t||(t=e()).then(function(o){n=o.default||o},function(o){a=o}),a)throw a;if(!n)throw t;return Ee(n,r)}return i.displayName="Lazy",i.__f=!,i}function Jt(){this.u=null,this.o=null}X.unmount=function(e){var t=e.__c;t&&t.__R&&t.__R(),t&&e.__h===!&&(e.type=null),rl&&rl(e)},(Dn.prototype=new Ie).__c=function(e,t){var n=t.__c,a=this;a.t==null&&(a.t=[]),a.t.push(n);var i=dl(a.__v),r=!,o=function(){r||(r=!,n.__R=null,i?i(s):s())};n.__R=o;var s=function(){if(!--a.__u){if(a.state.__e){var l=a.state.__e;a.__v.__k[]=function u(h,f,g){return h&&(h.__v=null,h.__k=h.__k&&h.__k.map(function(x){return u(x,f,g)}),h.__c&&h.__c.__P===f&&(h.__e&&g.insertBefore(h.__e,h.__d),h.__c.__e=!,h.__c.__P=g)),h}(l,l.__c.__P,l.__c.__O)}var c;for(a.setState({__e:a.__b=null});c=a.t.pop();)c.forceUpdate()}},p=t.__h===!;a.__u++||p||a.setState({__e:a.__b=a.__v.__k[]}),e.then(o,o)},Dn.prototype.componentWillUnmount=function(){this.t=[]},Dn.prototype.render=function(e,t){if(this.__b){if(this.__v.__k){var n=document.createElement("div"),a=this.__v.__k[].__c;this.__v.__k[]=function r(o,s,p){return o&&(o.__c&&o.__c.__H&&(o.__c.__H.__.forEach(function(l){typeof l.__c=="function"&&l.__c()}),o.__c.__H=null),(o=ul({},o)).__c!=null&&(o.__c.__P===p&&(o.__c.__P=s),o.__c=null),o.__k=o.__k&&o.__k.map(function(l){return r(l,s,p)})),o}(this.__b,n,a.__O=a.__P)}this.__b=null}var i=t.__e&&Ee(Ne,null,e.fallback);return i&&(i.__h=null),[Ee(Ne,null,t.__e?null:e.children),i]};var ol=function(e,t,n){if(++n[]===n[]&&e.o.delete(t),e.props.revealOrder&&(e.props.revealOrder[]!=="t"||!e.o.size))for(n=e.u;n;){for(;n.length>;)n.pop()();if(n[]<n[])break;e.u=n=n[]}};function $h(e){return this.getChildContext=function(){return e.context},e.children}function Gh(e){var t=this,n=e.i;t.componentWillUnmount=function(){yt(null,t.l),t.l=null,t.i=null},t.i&&t.i!==n&&t.componentWillUnmount(),e.__v?(t.l||(t.i=n,t.l={nodeType:,parentNode:n,childNodes:[],appendChild:function(a){this.childNodes.push(a),t.i.appendChild(a)},insertBefore:function(a,i){this.childNodes.push(a),t.i.appendChild(a)},removeChild:function(a){this.childNodes.splice(this.childNodes.indexOf(a)>>>,),t.i.removeChild(a)}}),yt(Ee($h,{context:t.context},e.__v),t.l)):t.l&&t.componentWillUnmount()}function Zh(e,t){var n=Ee(Gh,{__v:e,i:t});return n.containerInfo=t,n}(Jt.prototype=new Ie).__e=function(e){var t=this,n=dl(t.__v),a=t.o.get(e);return a[]++,function(i){var r=function(){t.props.revealOrder?(a.push(i),ol(t,e,a)):i()};n?n(r):r()}},Jt.prototype.render=function(e){this.u=null,this.o=new Map;var t=De(e.children);e.revealOrder&&e.revealOrder[]==="b"&&t.reverse();for(var n=t.length;n--;)this.o.set(t[n],this.u=[,,this.u]);return e.children},Jt.prototype.componentDidUpdate=Jt.prototype.componentDidMount=function(){var e=this;this.o.forEach(function(t,n){ol(e,n,t)})};var fl=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.element")||,Kh=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Yh=typeof document<"u",Xh=function(e){return(typeof Symbol<"u"&&typeof Symbol()=="symbol"?/fil|che|rad/i:/fil|che|ra/i).test(e)};function Jh(e,t,n){return t.__k==null&&(t.textContent=""),yt(e,t),typeof n=="function"&&n(),e?e.__c:null}function Qh(e,t,n){return hi(e,t),typeof n=="function"&&n(),e?e.__c:null}Ie.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(e){Object.defineProperty(Ie.prototype,e,{configurable:!,get:function(){return this["UNSAFE_"+e]},set:function(t){Object.defineProperty(this,e,{configurable:!,writable:!,value:t})}})});var sl=X.event;function eg(){}function tg(){return this.cancelBubble}function ng(){return this.defaultPrevented}X.event=function(e){return sl&&(e=sl(e)),e.persist=eg,e.isPropagationStopped=tg,e.isDefaultPrevented=ng,e.nativeEvent=e};var ml,cl={configurable:!,get:function(){return this.class}},ll=X.vnode;X.vnode=function(e){var t=e.type,n=e.props,a=n;if(typeof t=="string"){var i=t.indexOf("-")===-;for(var r in a={},n){var o=n[r];Yh&&r==="children"&&t==="noscript"||r==="value"&&"defaultValue"in n&&o==null||(r==="defaultValue"&&"value"in n&&n.value==null?r="value":r==="download"&&o===!?o="":/ondoubleclick/i.test(r)?r="ondblclick":/^onchange(textarea|input)/i.test(r+t)&&!Xh(n.type)?r="oninput":/^onfocus$/i.test(r)?r="onfocusin":/^onblur$/i.test(r)?r="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(r)?r=r.toLowerCase():i&&Kh.test(r)?r=r.replace(/[A-Z-]/,"-$&").toLowerCase():o===null&&(o=void ),/^oninput/i.test(r)&&(r=r.toLowerCase(),a[r]&&(r="oninputCapture")),a[r]=o)}t=="select"&&a.multiple&&Array.isArray(a.value)&&(a.value=De(n.children).forEach(function(s){s.props.selected=a.value.indexOf(s.props.value)!=-})),t=="select"&&a.defaultValue!=null&&(a.value=De(n.children).forEach(function(s){s.props.selected=a.multiple?a.defaultValue.indexOf(s.props.value)!=-:a.defaultValue==s.props.value})),e.props=a,n.class!=n.className&&(cl.enumerable="className"in n,n.className!=null&&(a.class=n.className),Object.defineProperty(a,"className",cl))}e.$$typeof=fl,ll&&ll(e)};var pl=X.__r;X.__r=function(e){pl&&pl(e),ml=e.__c};var ag={ReactCurrentDispatcher:{current:{readContext:function(e){return ml.__n[e.__c].props.value}}}};function ig(e){return Ee.bind(null,e)}function hl(e){return!!e&&e.$$typeof===fl}function rg(e){return hl(e)?Hc.apply(null,arguments):e}function og(e){return!!e.__k&&(yt(null,e),!)}function sg(e){return e&&(e.base||e.nodeType===&&e)||null}var cg=function(e,t){return e(t)},lg=function(e,t){return e(t)};var H={useState:_e,useReducer:Nn,useEffect:Je,useLayoutEffect:vi,useRef:Qc,useImperativeHandle:el,useMemo:Ze,useCallback:rt,useContext:wt,useDebugValue:tl,version:"..",Children:Vh,render:Jh,hydrate:Qh,unmountComponentAtNode:og,createPortal:Zh,createElement:Ee,createContext:Yt,createFactory:ig,cloneElement:rg,createRef:fi,Fragment:Ne,isValidElement:hl,findDOMNode:sg,Component:Ie,PureComponent:_i,memo:Wh,forwardRef:Uh,flushSync:lg,unstable_batchedUpdates:cg,StrictMode:Ne,Suspense:Dn,SuspenseList:Jt,lazy:qh,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:ag};var ki={color:void ,size:void ,className:void ,style:void ,attr:void },wi=H.createContext&&H.createContext(ki);var Qe=function(){return Qe=Object.assign||function(e){for(var t,n=,a=arguments.length;n<a;n++){t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},Qe.apply(this,arguments)},pg=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<&&(n[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=,a=Object.getOwnPropertySymbols(e);i<a.length;i++)t.indexOf(a[i])<&&Object.prototype.propertyIsEnumerable.call(e,a[i])&&(n[a[i]]=e[a[i]]);return n};function gl(e){return e&&e.map(function(t,n){return H.createElement(t.tag,Qe({key:n},t.attr),gl(t.child))})}function Ct(e){return function(t){return H.createElement(ug,Qe({attr:Qe({},e.attr)},t),gl(e.child))}}function ug(e){var t=function(n){var a=e.attr,i=e.size,r=e.title,o=pg(e,["attr","size","title"]),s=i||n.size||"em",p;return n.className&&(p=n.className),e.className&&(p=(p?p+" ":"")+e.className),H.createElement("svg",Qe({stroke:"currentColor",fill:"currentColor",strokeWidth:""},n.attr,a,o,{className:p,style:Qe(Qe({color:e.color||n.color},n.style),e.style),height:s,width:s,xmlns:"http://www.w.org//svg"}),r&&H.createElement("title",null,r),e.children)};return wi!==void ?H.createElement(wi.Consumer,null,function(n){return t(n)}):t(ki)}function xl(e){return Ct({tag:"svg",attr:{viewBox:"   ",fill:"none",stroke:"currentColor",strokeWidth:"",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"",cy:"",r:""}},{tag:"polyline",attr:{points:". .       . ."}}]})(e)}function vl(e){return Ct({tag:"svg",attr:{viewBox:"   ",fill:"none",stroke:"currentColor",strokeWidth:"",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M va    - Ha    --v-"}},{tag:"polyline",attr:{points:"     "}},{tag:"line",attr:{x:"",y:"",x:"",y:""}}]})(e)}function bl(e){return Ct({tag:"svg",attr:{viewBox:"   ",fill:"none",stroke:"currentColor",strokeWidth:"",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M va    - Ha    --Va     -h"}},{tag:"polyline",attr:{points:"     "}},{tag:"line",attr:{x:"",y:"",x:"",y:""}}]})(e)}function yl(e){return Ct({tag:"svg",attr:{viewBox:"   ",fill:"none",stroke:"currentColor",strokeWidth:"",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M l-  va    - Ha    --z"}},{tag:"polyline",attr:{points:"       "}}]})(e)}function Ci(e){return Ct({tag:"svg",attr:{viewBox:"   ",fill:"none",stroke:"currentColor",strokeWidth:"",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"rect",attr:{x:"",y:"",width:"",height:"",rx:"",ry:""}},{tag:"circle",attr:{cx:".",cy:".",r:"."}},{tag:"polyline",attr:{points:"     "}}]})(e)}var dg=typeof atob=="function";var ji=typeof Buffer=="function",_l=typeof TextDecoder=="function"?new TextDecoder:void ,p=typeof TextEncoder=="function"?new TextEncoder:void ,fg="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/=",mg=Array.prototype.slice.call(fg),Wn=(e=>{let t={};return e.forEach((n,a)=>t[n]=a),t})(mg),hg=/^(?:[A-Za-z\d+\/]{})?(?:[A-Za-z\d+\/]{}(?:==)?|[A-Za-z\d+\/]{}=?)?$/,ot=String.fromCharCode.bind(String),kl=typeof UintArray.from=="function"?UintArray.from.bind(UintArray):(e,t=n=>n)=>new UintArray(Array.prototype.slice.call(e,).map(t));var wl=e=>e.replace(/[^A-Za-z-\+\/]/g,"");var gg=/[\xC-\xDF][\x-\xBF]|[\xE-\xEF][\x-\xBF]{}|[\xF-\xF][\x-\xBF]{}/g,xg=e=>{switch(e.length){case :var t=(&e.charCodeAt())<<|(&e.charCodeAt())<<|(&e.charCodeAt())<<|&e.charCodeAt(),n=t-;return ot((n>>>)+)+ot((n&)+);case :return ot((&e.charCodeAt())<<|(&e.charCodeAt())<<|&e.charCodeAt());default:return ot((&e.charCodeAt())<<|&e.charCodeAt())}},vg=e=>e.replace(gg,xg),bg=e=>{if(e=e.replace(/\s+/g,""),!hg.test(e))throw new TypeError("malformed base.");e+="==".slice(-(e.length&));let t,n="",a,i;for(let r=;r<e.length;)t=Wn[e.charAt(r++)]<<|Wn[e.charAt(r++)]<<|(a=Wn[e.charAt(r++)])<<|(i=Wn[e.charAt(r++)]),n+=a===?ot(t>>&):i===?ot(t>>&,t>>&):ot(t>>&,t>>&,t&);return n},Cl=dg?e=>atob(wl(e)):ji?e=>Buffer.from(e,"base").toString("binary"):bg,yg=ji?e=>kl(Buffer.from(e,"base")):e=>kl(Cl(e),t=>t.charCodeAt());var _g=ji?e=>Buffer.from(e,"base").toString("utf"):_l?e=>_l.decode(yg(e)):e=>vg(Cl(e)),kg=e=>wl(e.replace(/[-_]/g,t=>t=="-"?"+":"/")),jl=e=>_g(kg(e));var Li=require("obsidian"),Ii=(e,t="master",n=!)=>`https://${n?"raw.staticdn.net":"raw.githubusercontent.com"}/aidenlx/obsidian-icon-shortcodes/${t}/${e}`,Rn=class extends Error{constructor(n){super("GitHub: "+n.message);this.response=n}},Ll=(e="master")=>$(void ,null,function(){var a;let t=`https://api.github.com/repos/aidenlx/obsidian-icon-shortcodes/git/trees/${e}?recursive=&${Date.now()}`,n=(yield(,Li.requestUrl)({url:t})).json;if(Array.isArray(n.tree)){let i=(a=n.tree.find(r=>r.path==="assets/manifest.json"))==null?void :a.url;if(i)return yield wg(i);throw console.error(n),new Error("No manifest.json for icon pack found")}else throw new Rn(n)}),wg=e=>$(void ,null,function(){let t=(yield(,Li.requestUrl)({url:e})).json;if(t.encoding&&t.content){if(t.encoding==="base")return JSON.parse(jl(t.content));throw console.error(t),new TypeError("Unsupported encoding")}else throw new Rn(t)});var Si={};Xi(Si,{balls:()=>Sl,bars:()=>Al,blank:()=>Il,bubbles:()=>Ml,cubes:()=>Fl,cylon:()=>El,spin:()=>zl,spinningBubbles:()=>Bl,spokes:()=>Pl});var Il=`<svg class="icon-blank" xmlns="http://www.w.org//svg" viewBox="   "></svg>
`;var Sl=`<svg class="icon-loading" xmlns="http://www.w.org//svg" viewBox="   ">
  <path transform="translate(- )" d="M  A       A      "> 
    <animateTransform attributeName="transform" type="translate" values="- ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  A       A      "> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  A       A      "> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  A       A      "> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
</svg>
`;var Al=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <path transform="translate()" d="M  V H Vz"> 
    <animate attributeName="d" values="M  V H Vz; M  V H Vz; M  V H Vz; M  V H Vz" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate()" d="M  V H Vz">
    <animate attributeName="d" values="M  V H Vz; M  V H Vz; M  V H Vz; M  V H Vz" dur=".s" repeatCount="indefinite" begin="." keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate()" d="M  V H Vz">
    <animate attributeName="d" values="M  V H Vz; M  V H Vz; M  V H Vz; M  V H Vz" dur=".s" repeatCount="indefinite" begin="." keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
  <path transform="translate()" d="M  V H Vz">
    <animate attributeName="d" values="M  V H Vz; M  V H Vz; M  V H Vz; M  V H Vz" dur=".s" repeatCount="indefinite" begin="." keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
  <path transform="translate()" d="M  V H Vz">
    <animate attributeName="d" values="M  V H Vz; M  V H Vz; M  V H Vz; M  V H Vz" dur=".s" repeatCount="indefinite" begin="." keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
</svg>
`;var Ml=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <circle transform="translate( )" cx="" cy="" r=""> 
    <animate attributeName="r" values="; ; ; " dur=".s" repeatCount="indefinite" begin=""
      keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="translate( )" cx="" cy="" r=""> 
    <animate attributeName="r" values="; ; ; " dur=".s" repeatCount="indefinite" begin="."
      keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="translate( )" cx="" cy="" r=""> 
    <animate attributeName="r" values="; ; ; " dur=".s" repeatCount="indefinite" begin="."
      keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
</svg>
`;var Fl=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <path transform="translate(- )" d="M  V H Vz"> 
    <animateTransform attributeName="transform" type="translate" values="- ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  V H Vz"> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  V H Vz"> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
  <path transform="translate( )" d="M  V H Vz"> 
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;" dur=".s" repeatCount="indefinite" begin="" keytimes=";.;" keySplines=". . . .;. . . ." calcMode="spline"  />
  </path>
</svg>
`;var El=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <path transform="translate( )" d="M  V H Vz">
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;  " dur=".s" begin="" repeatCount="indefinite" keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
  <path opacity="." transform="translate( )" d="M  V H Vz">
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;  " dur=".s" begin=".s" repeatCount="indefinite" keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
  <path opacity="." transform="translate( )" d="M  V H Vz">
    <animateTransform attributeName="transform" type="translate" values=" ;  ;  ;  " dur=".s" begin=".s" repeatCount="indefinite" keytimes=";.;.;" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </path>
</svg>
`;var zl=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <path opacity="." d="M  A       A       M  A       A      "/>
  <path d="M  A       L  A      z">
    <animateTransform attributeName="transform" type="rotate" from="  " to="  " dur=".s" repeatCount="indefinite" />
  </path>
</svg>
`;var Bl=`<svg xmlns="http://www.w.org//svg" viewBox="   ">
  <circle cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin="" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
  <circle transform="rotate(  )" cx="" cy="" r="">
    <animate attributeName="r" values=";;;" dur="s" repeatCount="indefinite" begin=".s" keySplines=". . . .;. . . .;. . . ." calcMode="spline" />
  </circle>
</svg>
`;var Pl=`<svg id="loading" xmlns="http://www.w.org//svg" viewBox="   ">
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=""/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
  <path opacity="." d="M  H V H z" transform="rotate(  )">
    <animate attributeName="opacity" from="" to="." dur="s" repeatCount="indefinite" begin=".s"/>
  </path>
</svg>
`;var zg=o=>{var s=o,{color:e="var(--interactive-accent)",delay:t=,type:n="balls",height:a=,width:i=}=s,r=cn(s,["color","delay","type","height","width"]);let[p,l]=_e(t>);return Je(()=>{let u=-;return p&&(u=window.setTimeout(()=>l(!),t)),()=>clearTimeout(u)},[]),H.createElement("div",Me({style:{fill:e,height:a,width:i},dangerouslySetInnerHTML:{__html:Si[p?"blank":n]}},r))},Ai=zg;var Qt=class extends Vn.Modal{constructor(n){super(n.app);this.plugin=n;this.modalEl.addClass("mod-browser-packs")}onOpen(){H.render(H.createElement(Pg,{getIconPack:this.getIconPack.bind(this)}),this.contentEl)}onClose(){H.unmountComponentAtNode(this.contentEl)}getIconPack(n,a){return $(this,null,function(){let i=(r=!)=>$(this,null,function(){let o=Ii(n,a,r),s=(yield(,Vn.requestUrl)({url:o})).arrayBuffer;yield this.plugin.packManager.importIcons({name:o.split("/").pop(),data:s},!)});try{yield i()}catch(r){console.error("switch to alternative link",r),yield i(!)}})}},Bg=(e="master")=>$(void ,null,function(){let t=yield Ll(e),n=[];for(let a of t){let i=n.last();(i==null?void :i.series)===a.series?(i.styles.push(a),i.count+=a.count):n.push({homepage:a.homepage,description:a.description,series:a.series,license:a.license,styles:[a],count:a.count})}return n}),Pg=({getIconPack:e})=>{var a;let[t,n]=_e(null);return Je(()=>{Bg().then(n).catch(n)},[]),t===null?H.createElement("div",{className:"loading"},H.createElement(Ai,{type:"spin",className:"loading-indicator"}),H.createElement("div",null,"Loading Icon Pack List...")):Array.isArray(t)?H.createElement("div",{className:"icon-pack-list"},t.map(i=>H.createElement(Tg,{key:i.homepage,manifest:i,onDownload:r=>e(r)}))):(console.error(t),H.createElement("div",{className:"error"},"Failed to Load Icon Pack List:",H.createElement("div",{className:"mod-warning"},(a=t.message)!=null?a:t.toString())))},Tl="pack-manifest",Tg=({manifest:{series:e,styles:t,description:n,count:a,homepage:i,license:r},onDownload:o})=>{let s=rt(p=>`${Tl}-${p}`,[]);return H.createElement("div",{className:Tl},H.createElement("div",{className:s("title")},e),H.createElement("div",{className:s("details")},H.createElement("span",{className:s("license"),"aria-label":"License: "+r},H.createElement(xl,{size:".em"})),H.createElement("span",{className:s("count"),"aria-label":`${a} icons in total`},H.createElement(Ci,{size:".em"}),H.createElement("span",{className:"icon-text"},a))),H.createElement("div",{className:s("desc")},H.createElement("div",{className:s("homepage"),"aria-label":i,onClick:()=>window.open(i)},H.createElement(yl,null),H.createElement("a",{className:"icon-text"},"Home Page")),n),H.createElement("div",{className:"styles-list"},t.map(p=>H.createElement(Og,{key:p.bundleName,styleInfo:p,onDownload:o}))))},Dl="style-info",Un=(...e)=>(,Nl.default)(Dl,...e),Og=({styleInfo:{count:e,packId:t,path:n,style:a},onDownload:i})=>{var p;let r=rt(l=>`${Dl}-${l}`,[]),[o,s]=_e({state:"display"});switch(o.state){case"display":return H.createElement("div",{className:Un()},H.createElement("div",{className:r("title")},a||"regular",H.createElement("span",{className:r("pack-id"),"aria-label":"Pack id used as shortcode prefix"},t)),H.createElement("div",{className:r("details")},H.createElement("div",{className:r("count"),"aria-label":`${e} icons in total`},H.createElement(Ci,{size:".em"}),H.createElement("span",{className:"icon-text"},e))),H.createElement("div",{className:r("button-container")},H.createElement("button",{className:r("download"),onClick:()=>$(void ,null,function(){s({state:"downloading"});try{yield i(n),s({state:"done"}),console.log("done")}catch(l){console.error(l),s({state:"error",error:l})}}),"aria-label":"Download"},H.createElement(vl,null)),H.createElement("button",{"aria-label":"Download via Browser",onClick:()=>window.open(Ii(n))},H.createElement(bl,null))));case"downloading":return H.createElement("div",{className:Un("downloading")},H.createElement(Ai,{type:"bubbles",className:"loading-indicator"}),H.createElement("div",null,"Downloading..."));case"done":return H.createElement("div",{className:Un("done")},"Downloaded");case"error":return console.error(o.error),H.createElement("div",{className:Un("error")},"Failed to Download:",H.createElement("div",{className:"mod-warning"},o.error instanceof Error?o.error.message:(p=o.error)==null?void :p.toString()));default:(,Ol.default)(o)}};function Se(e){for(var t=arguments.length,n=Array(t>?t-:),a=;a<t;a++)n[a-]=arguments[a];if(!)var i,r;throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.map(function(o){return"'"+o+"'"}).join(","):"")+". Find the full error at: https://bit.ly/cXEKWf")}function jt(e){return!!e&&!!e[se]}function Ye(e){return!!e&&(function(t){if(!t||typeof t!="object")return!;var n=Object.getPrototypeOf(t);if(n===null)return!;var a=Object.hasOwnProperty.call(n,"constructor")&&n.constructor;return a===Object||typeof a=="function"&&Function.toString.call(a)===$g}(e)||Array.isArray(e)||!!e[$l]||!!e.constructor[$l]||Ni(e)||Di(e))}function Lt(e,t,n){n===void &&(n=!),It(e)===?(n?Object.keys:Vi)(e).forEach(function(a){n&&typeof a=="symbol"||t(a,e[a],e)}):e.forEach(function(a,i){return t(i,a,e)})}function It(e){var t=e[se];return t?t.i>?t.i-:t.i:Array.isArray(e)?:Ni(e)?:Di(e)?:}function Bi(e,t){return It(e)===?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function Ng(e,t){return It(e)===?e.get(t):e[t]}function Gl(e,t,n){var a=It(e);a===?e.set(t,n):a===?(e.delete(t),e.add(n)):e[t]=n}function Dg(e,t){return e===t?e!==||/e==/t:e!=e&&t!=t}function Ni(e){return Hg&&e instanceof Map}function Di(e){return qg&&e instanceof Set}function xe(e){return e.o||e.t}function Wi(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=Gg(e);delete t[se];for(var n=Vi(t),a=;a<n.length;a++){var i=n[a],r=t[i];r.writable===!&&(r.writable=!,r.configurable=!),(r.get||r.set)&&(t[i]={configurable:!,writable:!,enumerable:r.enumerable,value:e[i]})}return Object.create(Object.getPrototypeOf(e),t)}function St(e,t){return t===void &&(t=!),Ri(e)||jt(e)||!Ye(e)||(It(e)>&&(e.set=e.add=e.clear=e.delete=Wg),Object.freeze(e),t&&Lt(e,function(n,a){return St(a,!)},!)),e}function Wg(){Se()}function Ri(e){return e==null||typeof e!="object"||Object.isFrozen(e)}function We(e){var t=Ti[e];return t||Se(,e),t}function Rg(e,t){Ti[e]||(Ti[e]=t)}function qn(){return nn}function Mi(e,t){t&&(We("Patches"),e.u=[],e.s=[],e.v=t)}function $n(e){Pi(e),e.p.forEach(Ug),e.p=null}function Pi(e){e===nn&&(nn=e.l)}function Wl(e){return nn={p:[],l:nn,h:e,m:!,_:}}function Ug(e){var t=e[se];t.i===||t.i===?t.j():t.O=!}function Fi(e,t){t._=t.p.length;var n=t.p[],a=e!==void &&e!==n;return t.h.g||We("ES").S(t,e,a),a?(n[se].P&&($n(t),Se()),Ye(e)&&(e=Gn(t,e),t.l||Zn(t,e)),t.u&&We("Patches").M(n[se].t,e,t.u,t.s)):e=Gn(t,n,[]),$n(t),t.u&&t.v(t.u,t.s),e!==Kl?e:void }function Gn(e,t,n){if(Ri(t))return t;var a=t[se];if(!a)return Lt(t,function(r,o){return Rl(e,a,t,r,o,n)},!),t;if(a.A!==e)return t;if(!a.P)return Zn(e,a.t,!),a.t;if(!a.I){a.I=!,a.A._--;var i=a.i===||a.i===?a.o=Wi(a.k):a.o;Lt(a.i===?new Set(i):i,function(r,o){return Rl(e,a,i,r,o,n)}),Zn(e,i,!),n&&e.u&&We("Patches").R(a,n,e.u,e.s)}return a.o}function Rl(e,t,n,a,i,r){if(jt(i)){var o=Gn(e,i,r&&t&&t.i!==&&!Bi(t.D,a)?r.concat(a):void );if(Gl(n,a,o),!jt(o))return;e.m=!}if(Ye(i)&&!Ri(i)){if(!e.h.F&&e._<)return;Gn(e,i),t&&t.A.l||Zn(e,i)}}function Zn(e,t,n){n===void &&(n=!),e.h.F&&e.m&&St(t,n)}function Ei(e,t){var n=e[se];return(n?xe(n):e)[t]}function Ul(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var a=Object.getOwnPropertyDescriptor(n,t);if(a)return a;n=Object.getPrototypeOf(n)}}function Ke(e){e.P||(e.P=!,e.l&&Ke(e.l))}function zi(e){e.o||(e.o=Wi(e.t))}function tn(e,t,n){var a=Ni(t)?We("MapSet").N(t,n):Di(t)?We("MapSet").T(t,n):e.g?function(i,r){var o=Array.isArray(i),s={i:o?:,A:r?r.A:qn(),P:!,I:!,D:{},l:r,t:i,k:null,o:null,j:null,C:!},p=s,l=Oi;o&&(p=[s],l=en);var c=Proxy.revocable(p,l),u=c.revoke,h=c.proxy;return s.k=h,s.j=u,h}(t,n):We("ES").J(t,n);return(n?n.A:qn()).p.push(a),a}function Vg(e){return jt(e)||Se(,e),function t(n){if(!Ye(n))return n;var a,i=n[se],r=It(n);if(i){if(!i.P&&(i.i<||!We("ES").K(i)))return i.t;i.I=!,a=Vl(n,r),i.I=!}else a=Vl(n,r);return Lt(a,function(o,s){i&&Ng(i.t,o)===s||Gl(a,o,t(s))}),r===?new Set(a):a}(e)}function Vl(e,t){switch(t){case :return new Map(e);case :return Array.from(e)}return Wi(e)}function Zl(){function e(s,p){function l(){this.constructor=s}i(s,p),s.prototype=(l.prototype=p.prototype,new l)}function t(s){s.o||(s.D=new Map,s.o=new Map(s.t))}function n(s){s.o||(s.o=new Set,s.t.forEach(function(p){if(Ye(p)){var l=tn(s.A.h,p,s);s.p.set(p,l),s.o.add(l)}else s.o.add(p)}))}function a(s){s.O&&Se(,JSON.stringify(xe(s)))}var i=function(s,p){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(l,c){l.__proto__=c}||function(l,c){for(var u in c)c.hasOwnProperty(u)&&(l[u]=c[u])})(s,p)},r=function(){function s(l,c){return this[se]={i:,l:c,A:c?c.A:qn(),P:!,I:!,o:void ,D:void ,t:l,k:this,C:!,O:!},this}e(s,Map);var p=s.prototype;return Object.defineProperty(p,"size",{get:function(){return xe(this[se]).size}}),p.has=function(l){return xe(this[se]).has(l)},p.set=function(l,c){var u=this[se];return a(u),xe(u).has(l)&&xe(u).get(l)===c||(t(u),Ke(u),u.D.set(l,!),u.o.set(l,c),u.D.set(l,!)),this},p.delete=function(l){if(!this.has(l))return!;var c=this[se];return a(c),t(c),Ke(c),c.t.has(l)?c.D.set(l,!):c.D.delete(l),c.o.delete(l),!},p.clear=function(){var l=this[se];a(l),xe(l).size&&(t(l),Ke(l),l.D=new Map,Lt(l.t,function(c){l.D.set(c,!)}),l.o.clear())},p.forEach=function(l,c){var u=this;xe(this[se]).forEach(function(h,f){l.call(c,u.get(f),f,u)})},p.get=function(l){var c=this[se];a(c);var u=xe(c).get(l);if(c.I||!Ye(u)||u!==c.t.get(l))return u;var h=tn(c.A.h,u,c);return t(c),c.o.set(l,h),h},p.keys=function(){return xe(this[se]).keys()},p.values=function(){var l,c=this,u=this.keys();return(l={})[Hn]=function(){return c.values()},l.next=function(){var h=u.next();return h.done?h:{done:!,value:c.get(h.value)}},l},p.entries=function(){var l,c=this,u=this.keys();return(l={})[Hn]=function(){return c.entries()},l.next=function(){var h=u.next();if(h.done)return h;var f=c.get(h.value);return{done:!,value:[h.value,f]}},l},p[Hn]=function(){return this.entries()},s}(),o=function(){function s(l,c){return this[se]={i:,l:c,A:c?c.A:qn(),P:!,I:!,o:void ,t:l,k:this,p:new Map,O:!,C:!},this}e(s,Set);var p=s.prototype;return Object.defineProperty(p,"size",{get:function(){return xe(this[se]).size}}),p.has=function(l){var c=this[se];return a(c),c.o?!!c.o.has(l)||!(!c.p.has(l)||!c.o.has(c.p.get(l))):c.t.has(l)},p.add=function(l){var c=this[se];return a(c),this.has(l)||(n(c),Ke(c),c.o.add(l)),this},p.delete=function(l){if(!this.has(l))return!;var c=this[se];return a(c),n(c),Ke(c),c.o.delete(l)||!!c.p.has(l)&&c.o.delete(c.p.get(l))},p.clear=function(){var l=this[se];a(l),xe(l).size&&(n(l),Ke(l),l.o.clear())},p.values=function(){var l=this[se];return a(l),n(l),l.o.values()},p.entries=function(){var l=this[se];return a(l),n(l),l.o.entries()},p.keys=function(){return this.values()},p[Hn]=function(){return this.values()},p.forEach=function(l,c){for(var u=this.values(),h=u.next();!h.done;)l.call(c,h.value,h.value,this),h=u.next()},s}();Rg("MapSet",{N:function(s,p){return new r(s,p)},T:function(s,p){return new o(s,p)}})}var Hl,nn,Ui=typeof Symbol<"u"&&typeof Symbol("x")=="symbol",Hg=typeof Map<"u",qg=typeof Set<"u",ql=typeof Proxy<"u"&&Proxy.revocable!==void &&typeof Reflect<"u",Kl=Ui?Symbol.for("immer-nothing"):((Hl={})["immer-nothing"]=!,Hl),$l=Ui?Symbol.for("immer-draftable"):"__$immer_draftable",se=Ui?Symbol.for("immer-state"):"__$immer_state",Hn=typeof Symbol<"u"&&Symbol.iterator||"@@iterator";var $g=""+Object.prototype.constructor,Vi=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void ?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,Gg=Object.getOwnPropertyDescriptors||function(e){var t={};return Vi(e).forEach(function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)}),t},Ti={},Oi={get:function(e,t){if(t===se)return e;var n=xe(e);if(!Bi(n,t))return function(i,r,o){var s,p=Ul(r,o);return p?"value"in p?p.value:(s=p.get)===null||s===void ?void :s.call(i.k):void }(e,n,t);var a=n[t];return e.I||!Ye(a)?a:a===Ei(e.t,t)?(zi(e),e.o[t]=tn(e.A.h,a,e)):a},has:function(e,t){return t in xe(e)},ownKeys:function(e){return Reflect.ownKeys(xe(e))},set:function(e,t,n){var a=Ul(xe(e),t);if(a?.set)return a.set.call(e.k,n),!;if(!e.P){var i=Ei(xe(e),t),r=i?.[se];if(r&&r.t===n)return e.o[t]=n,e.D[t]=!,!;if(Dg(n,i)&&(n!==void ||Bi(e.t,t)))return!;zi(e),Ke(e)}return e.o[t]===n&&typeof n!="number"&&(n!==void ||t in e.o)||(e.o[t]=n,e.D[t]=!,!)},deleteProperty:function(e,t){return Ei(e.t,t)!==void ||t in e.t?(e.D[t]=!,zi(e),Ke(e)):delete e.D[t],e.o&&delete e.o[t],!},getOwnPropertyDescriptor:function(e,t){var n=xe(e),a=Reflect.getOwnPropertyDescriptor(n,t);return a&&{writable:!,configurable:e.i!==||t!=="length",enumerable:a.enumerable,value:n[t]}},defineProperty:function(){Se()},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){Se()}},en={};Lt(Oi,function(e,t){en[e]=function(){return arguments[]=arguments[][],t.apply(this,arguments)}}),en.deleteProperty=function(e,t){return en.set.call(this,e,t,void )},en.set=function(e,t,n){return Oi.set.call(this,e[],t,n,e[])};var Zg=function(){function e(n){var a=this;this.g=ql,this.F=!,this.produce=function(i,r,o){if(typeof i=="function"&&typeof r!="function"){var s=r;r=i;var p=a;return function(x){var b=this;x===void &&(x=s);for(var _=arguments.length,C=Array(_>?_-:),w=;w<_;w++)C[w-]=arguments[w];return p.produce(x,function(z){var F;return(F=r).call.apply(F,[b,z].concat(C))})}}var l;if(typeof r!="function"&&Se(),o!==void &&typeof o!="function"&&Se(),Ye(i)){var c=Wl(a),u=tn(a,i,void ),h=!;try{l=r(u),h=!}finally{h?$n(c):Pi(c)}return typeof Promise<"u"&&l instanceof Promise?l.then(function(x){return Mi(c,o),Fi(x,c)},function(x){throw $n(c),x}):(Mi(c,o),Fi(l,c))}if(!i||typeof i!="object"){if((l=r(i))===void &&(l=i),l===Kl&&(l=void ),a.F&&St(l,!),o){var f=[],g=[];We("Patches").M(i,l,f,g),o(f,g)}return l}Se(,i)},this.produceWithPatches=function(i,r){if(typeof i=="function")return function(l){for(var c=arguments.length,u=Array(c>?c-:),h=;h<c;h++)u[h-]=arguments[h];return a.produceWithPatches(l,function(f){return i.apply(void ,[f].concat(u))})};var o,s,p=a.produce(i,r,function(l,c){o=l,s=c});return typeof Promise<"u"&&p instanceof Promise?p.then(function(l){return[l,o,s]}):[p,o,s]},typeof n?.useProxies=="boolean"&&this.setUseProxies(n.useProxies),typeof n?.autoFreeze=="boolean"&&this.setAutoFreeze(n.autoFreeze)}var t=e.prototype;return t.createDraft=function(n){Ye(n)||Se(),jt(n)&&(n=Vg(n));var a=Wl(this),i=tn(this,n,void );return i[se].C=!,Pi(a),i},t.finishDraft=function(n,a){var i=n&&n[se],r=i.A;return Mi(r,a),Fi(void ,r)},t.setAutoFreeze=function(n){this.F=n},t.setUseProxies=function(n){n&&!ql&&Se(),this.g=n},t.applyPatches=function(n,a){var i;for(i=a.length-;i>=;i--){var r=a[i];if(r.path.length===&&r.op==="replace"){n=r.value;break}}i>-&&(a=a.slice(i+));var o=We("Patches").$;return jt(n)?o(n,a):this.produce(n,function(s){return o(s,a)})},e}(),we=new Zg,Kg=we.produce,H=we.produceWithPatches.bind(we),q=we.setAutoFreeze.bind(we),$=we.setUseProxies.bind(we),G=we.applyPatches.bind(we),Z=we.createDraft.bind(we),K=we.finishDraft.bind(we),Yl=Kg;var Yn=require("obsidian");function Xl(e){var t=_e(function(){return St(typeof e=="function"?e():e,!)}),n=t[];return[t[],rt(function(a){n(typeof a=="function"?Yl(a):St(a))},[])]}var qi=be(fn(),),At=require("obsidian");var Yg=({iconInfo:e,updated:t})=>{let{packs:n,icons:a}=wt(Kn),{trash:i,pencil:r,star:o,checkmark:s}=a,[p,l]=_e(e.name.replace(/[-_]/g," ")),[c,u]=_e(!),h=`${e.pack}_${La(p)}`,f=h===e.id||!n.hasIcon(h),g=Ze(()=>n.getIcon(e.id,!),[e.id,t]),x=b=>$(void ,null,function(){let _=yield n.rename(e.id,b);_?(new At.Notice(`The icon is renamed to ${_}`),u(!)):new At.Notice(`Failed to rename to ${p}, check log for details`)});return H.createElement("div",{className:"item"},H.createElement("div",{className:"icon"},H.createElement("img",{className:"isc-icon",src:g!=null?g:void })),H.createElement("div",{className:"name"},c?H.createElement(Xg,{className:(,qi.default)({invalid:!f}),onChange:b=>l(b.target.value),value:p}):H.createElement("span",null,p)),H.createElement("div",{className:"buttons"},H.createElement(Hi,{btnType:"cta",icon:o,onClick:()=>$(void ,null,function(){let b;(b=yield n.star(e.id))&&new At.Notice(`${e.id} is now ${b}`)})}),H.createElement(Hi,{btnType:"cta",icon:c?s:r,onClick:()=>$(void ,null,function(){c?f?h!==e.id?yield x(h):u(!):new At.Notice(`Unable to rename to ${p}, given id invalid`):u(!)})}),H.createElement(Hi,{btnType:"warning",icon:i,onClick:()=>$(void ,null,function(){(yield n.delete(e.id))&&new At.Notice(`${e.id} is removed from the pack`)})})))},Jl=Yg,Hi=e=>{let i=e,{btnType:t,icon:n}=i,a=cn(i,["btnType","icon"]);return H.createElement("button",et(Me({},a),{className:(,qi.default)({["mod-"+t]:!!t}),dangerouslySetInnerHTML:{__html:n}}))},Xg=e=>H.createElement("textarea",Me({spellCheck:"false",rows:},e));Zl();var Jg=()=>{let e=createDiv(),t={};for(let n of["trash","pencil","star","checkmark"])e.empty(),(,Yn.setIcon)(e,n,),t[n]=e.innerHTML;return t},Kn=Yt(null),$i="%ALL%",an=class extends Yn.Modal{constructor(n,a){super(n.app);this.plugin=n;this.pack=a;this.titleEl.setText(`${a} Icons`),this.modalEl.addClasses(["isc-icon-manager","mod-community-theme"])}onOpen(){return $(this,null,function(){this.contentEl.empty(),H.render(H.createElement(Kn.Provider,{value:{packs:this.plugin.packManager,icons:Jg()}},H.createElement(e,{pack:this.pack})),this.contentEl)})}onClose(){H.unmountComponentAtNode(this.contentEl)}},Qg=(e,t)=>e.name.localeCompare(t.name),e=({pack:e})=>{if(e==="emoji")throw new TypeError("Emoji not supported");let{packs:t}=wt(Kn),[n,a]=_e(""),[i,r]=Xl(new Map),o=Ze(()=>{let s=t.search(n?n.trim().split(" "):[],[e],/).map(({item:p})=>p);return n||s.sort(Qg),s},[n,e,i]);return Je(()=>{let s=t.on("changed",(p,l)=>r(c=>{l?l.forEach(u=>c.set(u,(c.get(u)||)+)):c.set($i,(c.get($i)||)+)}));return()=>t.offref(s)},[t]),H.createElement(H.Fragment,null,H.createElement("div",{className:"filter"},H.createElement("input",{type:"text",placeholder:"Filter",value:n,onChange:s=>a(s.target.value)})),H.createElement("div",{className:"icons"},o.map(s=>{var l,c;let p=((l=i.get(s.id))!=null?l:)+((c=i.get($i))!=null?c:);return H.createElement(Jl,{iconInfo:s,updated:p,key:s.id+p})})))};var Ql={codeemoji:!,suggester:!,disabledPacks:new Set(["obs"]),triggerWithTrailingSpace:!,spaceAfterSC:!,isMigrated:!},Xn=class extends me.PluginSettingTab{constructor(n,a){super(n,a);this.plugin=a}display(){let{containerEl:n}=this;this.containerEl.empty(),new me.Setting(n).setHeading().setName("Icon Suggester"),new me.Setting(n).setDesc("If this is turned on, a Suggester will appear everytime you type :(or \uFFA\uFFA if full-width) followed by a letter. This will help you insert Emojis. ").addToggle(i=>{i.setValue(this.plugin.settings.suggester).onChange(r=>$(this,null,function(){this.plugin.settings.suggester=r,yield this.plugin.saveSettings()}))}),new me.Setting(n).setName("Replace emoji shortcode with emoji character").setDesc("If this is turned on, emoji shortcodes will be immediately replaced by emoji after typing. Otherwise they are still stored as a shortcode and you only see the Emoji in Preview Mode.").addToggle(i=>{i.setValue(this.plugin.settings.codeemoji).onChange(r=>$(this,null,function(){this.plugin.settings.codeemoji=r,yield this.plugin.saveSettings()}))}),new me.Setting(n).setName("Trigger with trailing space").setDesc("only trigger suggester if there is a trailing space before the colon").addToggle(i=>{i.setValue(this.plugin.settings.triggerWithTrailingSpace).onChange(r=>$(this,null,function(){this.plugin.settings.triggerWithTrailingSpace=r,yield this.plugin.saveSettings()}))}),new me.Setting(n).setName("Add space after inserted shortcode").addToggle(i=>{i.setValue(this.plugin.settings.spaceAfterSC).onChange(r=>$(this,null,function(){this.plugin.settings.spaceAfterSC=r,yield this.plugin.saveSettings()}))}),this.skipIconPack(),new me.Setting(n).setName("Icon Packs").setDesc("Browse and download icon packs").addButton(i=>i.setButtonText("Browser").onClick(()=>new Qt(this.plugin).open()));let a=createDiv({cls:["isc-settings-custom-icon","installed-plugins-container"]});new me.Setting(this.containerEl).setHeading().setName("Custom Icons").addExtraButton(i=>i.setIcon("sheets-in-box").setTooltip("Backup icons").onClick(()=>this.plugin.packManager.backupIcons())).addExtraButton(i=>i.setIcon("restore-file-glyph").setTooltip("Restore backup").onClick(()=>$(this,null,function(){this.plugin.packManager.importIconsFromFileList(yield ui({multiple:!,accept:".zip"}),!),yield this.plugin.packManager.loadIcons(),this.manageCustomIcons(a)}))).addExtraButton(i=>i.setIcon("switch").setTooltip("Reload custom icons").onClick(()=>$(this,null,function(){yield this.plugin.packManager.loadIcons(),this.manageCustomIcons(a),new me.Notice("Custom icons reloaded")}))).then(i=>me.Platform.isDesktopApp&&i.addExtraButton(r=>r.setIcon("folder").setTooltip("Open Icons Folder").onClick(()=>this.app.openWithDefaultApp(this.plugin.packManager.customIconsDir)))),this.containerEl.appendChild(a),this.manageCustomIcons(a)}_setDisabledPack(n,a){return a.addToggle(i=>{i.setValue(!this.plugin.settings.disabledPacks.has(n)).onChange(r=>$(this,null,function(){r?this.plugin.settings.disabledPacks.delete(n):this.plugin.settings.disabledPacks.add(n),yield this.plugin.saveSettings()})),i.toggleEl.setAttr("aria-label",`Enable/Disable ${n} Icon Pack`)})}skipIconPack(){let{containerEl:n}=this,a=(i,r,o)=>this._setDisabledPack(i,new me.Setting(n).setName(r).setDesc(createFragment(o)));new me.Setting(this.containerEl).setHeading().setName("Icon Packs"),a("luc","Lucide",i=>i.createEl("a",{href:"https://lucide.dev",text:"official website"})),a("obs","Obsidian's built-in icons",i=>i.appendText("Obsidian's built-in icons are mostly used for UI components. "))}manageCustomIcons(n){n.hasChildNodes()&&n.empty();let a=i=>!/^[A-Za-z-]+$/.test(i)||this.plugin.packManager.isPacknameExists(i);new me.Setting(n).setName("Add new icon pack").setDesc("Reserved names: "+vt.join(", ")).then(i=>{let r=null,o=null;i.addText(s=>{s.setPlaceholder("Enter name").onChange(p=>{let l=a(p);s.inputEl.toggleClass("invalid",!!p&&l),r==null||r.setDisabled(l)}).then(p=>p.inputEl.addClass("isc-add-pack-input")),o=s}).addButton(s=>(s.setCta().setIcon("plus-with-circle").onClick(()=>{let p=o==null?void :o.getValue();if(!!p){if(a(p)){new me.Notice("This name is invalid.");return}this.addNewCustomIconEntry(p,n).settingEl.scrollIntoView(),o==null||o.setValue("")}}),r=s))}),this.plugin.packManager.customPacknames.forEach(i=>this.addNewCustomIconEntry(i,n))}addNewCustomIconEntry(n,a){let i=new me.Setting(a).setName(n).setDesc(createFragment(r=>{r.appendText("Drag files in to import custom icons"),r.createEl("br"),r.appendText("Supported format: "),hn.forEach((o,s,p)=>{r.createEl("code",{text:o}),p.length-!==s&&r.appendText(", ")})})).addButton(r=>r.setIcon("sheets-in-box").setTooltip("Backup icons").onClick(()=>this.plugin.packManager.backupIcons(n))).addButton(r=>r.setIcon("go-to-file").setTooltip("select files to import").onClick(()=>$(this,null,function(){return this.plugin.packManager.addFromFiles(n,yield ui({multiple:!,accept:hn}))}))).addButton(r=>r.setIcon("trash").setTooltip("delete").setWarning().onClick(()=>{this.plugin.packManager.filter((o,s)=>s.pack!==n),a.removeChild(i.settingEl)})).addButton(r=>r.setIcon("popup-open").setTooltip("manage icons").setCta().onClick(()=>new an(this.plugin,n).open())).then(r=>t(r.settingEl,o=>$(this,null,function(){if(!o.dataTransfer){new me.Notice("Failed to get dropped items");return}this.plugin.packManager.addFromFiles(n,o.dataTransfer.files)})));return this._setDisabledPack(n,i),i}},t=(e,t)=>{let n="dragover";e.addEventListener("dragover",a=>{a.preventDefault(),a.currentTarget.addClass(n)}),e.addEventListener("drop",a=>{a.preventDefault(),a.currentTarget.removeClass(n),t(a)}),e.addEventListener("dragleave",a=>{a.preventDefault(),a.currentTarget.removeClass(n)})};var ep="IconSCAPIv",Jn=class extends tp.Plugin{constructor(){super(...arguments);this.settings=Ql;this.packManager=new $t(this);this._nodeProcessor=si(this);this._mdProcessor=ci(this);this.shortcodePosField=Ns(this);this.api=cc(this.packManager,this);this.fileIconCache=new Vt(this)}postProcessor(n,a){if(typeof n=="string"&&a)return this._mdProcessor(n,a);if(n instanceof HTMLElement)return this._nodeProcessor(n);throw new TypeError("Invalid args given to postProcessor")}onload(){return $(this,null,function(){console.log("loading Icon Shortcodes"),yield this.loadSettings(),yield jc(this),yield this.packManager.loadIcons(),(window[ep]=this.api)&&this.register(()=>window[ep]=void ),this.registerEditorSuggest(new Mn(this)),Ic(this),rr(this),this.addSettingTab(new Xn(this.app,this))})}loadSettings(){return $(this,null,function(){let n=yield this.loadData();n&&(n.iconpack&&delete n.iconpack,this.settings=et(Me(Me({},this.settings),n),{disabledPacks:n.disabledPacks?new Set(n.disabledPacks):this.settings.disabledPacks}))})}saveSettings(){return $(this,null,function(){yield this.saveData(et(Me({},this.settings),{disabledPacks:[...this.settings.disabledPacks]}))})}};
/!

JSZip v.. - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) - Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
/
/!
  Copyright (c)  Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
/
/!
  mime-db
  Copyright(c)  Jonathan Ong
  Copyright(c) - Douglas Christopher Wilson
  MIT Licensed
 /
/!
  mime-types
  Copyright(c)  Jonathan Ong
  Copyright(c)  Douglas Christopher Wilson
  MIT Licensed
 /
// sourceMappingURL=data:application/json;base,ewogICJZXJzaWuIjogMywKICAiccmNlcyIIFsiLivbmkZVtbRbGVzLywbnBtLpbWUtZGJAMSMiwLvZGVfbWkdWxlcytaWlLWRiLluZGVLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwYXRoLWJybdzZXJpZnlAMSwLjEvbmkZVtbRbGVzLBhdGgtYnJvdNlcmlmeSpbmRleCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbWltZSeXBlcAyLjEuMzUvbmkZVtbRbGVzLpbWUtdHlwZXMvaWkZXguanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXZyZWVHbGiYWwuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXJvbQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXNbWJvbCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfYweUFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLnZXRSYXdUYWcuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXiamVjdFRvURyaWnLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLiYXNlRVVGFnLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLlzTJqZWNLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLlzRnVuYRpbuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXNvcmVKcRhdGEuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXlzTWFzaVkLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLbNvdXJjZSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfYmFzZUlzTmFaXZlLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLnZXRWYWxZSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfZVTmFaXZlLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLEYXRhVmlldyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfTWFwLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLQcmtaXNlLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLTZXQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXdlYWtNYXAuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXdldFRhZyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCpcxlbmdaCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCpcFycmFTGlrZSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCpcFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLlzTJqZWNTGlrZSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCpcNcmluZyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfaXRlcmFbJUbFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLtYXBUbFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLzZXRUbFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLhcNpaVRvQXJyYXkuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXhhcVuaWNvZGUuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXVuaWNvZGVUbFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLzdHJpbmdUbFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLhcnJheUhcCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfYmFzZVZhbHVlcyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfYmFzZVRpbWVzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLiYXNlSXNBcmdbWVudHMuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvaXNBcmdbWVudHMuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvcRYkZhbHNlLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLlzQnVmZmVyLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLpcluZGVLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLiYXNlSXNUeXBlZEFycmFLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLiYXNlVWhcnkuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXvZGVVdGlsLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLlzVHlwZWRBcnJheSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfYXJyYXlMaWtlSVcyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvbGkYXNoQDQuMTcuMjEvbmkZVtbRbGVzLxvZGFzaCfaXNQcmbRcGUuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXZXJBcmcuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXhdGlZUtleXMuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvXJhcVLZXlzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLtleXMuanMiLCAiLivbmkZVtbRbGVzLywbnBtLxvZGFzaEALjELjIxLvZGVfbWkdWxlcysbRhcgvdmFsdWVzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSsbRhchANCxNyyMSubRlXvZHVsZXMvbGkYXNoLRvQXJyYXkuanMiLCAiLivbmkZVtbRbGVzLywbnBtLdpdGhYijbrcmhcQrbmkZSlbWqaUAMTQwOGNiNTgNzUMGIZTkMmQMDEODEZjIYWQyNJlOTYLvZGVfbWkdWxlcyubRlLWVtbppLxpYilbWqaSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvZlaHViLmNvbStyaHlzZCtubRlLWVtbppQDQxNDAYIODUNTkwYjZlOTQyZDQwMTUMTRmMjZhZDIYmUNjQvbmkZVtbRbGVzLvZGUtZWvamkvaWkZXguanMiLCAiLivbmkZVtbRbGVzLywbnBtLNsYXNzbmFtZXNAMizLjEvbmkZVtbRbGVzLNsYXNzbmFtZXMvaWkZXguanMiLCAiLivbmkZVtbRbGVzLywbnBtLFzcVydCuZXZlckAxLjIuMSubRlXvZHVsZXMvYXNzZXJLWldmVyLluZGVLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSqcppcEAzLjEwLjAvbmkZVtbRbGVzLpzemlwLRpcQvanNaXAubWluLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbStaWpLXNZykYXRhLXVyaUAxLjQuNCubRlXvZHVsZXMvbWluaSzdmctZGFYScmkvchvcnRlcijcMtYsbItbmFtZXMuanMiLCAiLivbmkZVtbRbGVzLywbnBtLpbmktcZnLWRhdGEtdXJpQDEuNCLvZGVfbWkdWxlcytaWpLXNZykYXRhLXVyaSpbmRleCqcyIsICIuLizcmMvaXNjLWhaWudHMiLCAiLivcJjLljbtaWtZWRpdGyLZpZXctcGxZluLnRzIiwgIiuLNyYypYuLWluLWVkaXRvcikZWNvLnRzIiwgIiuLNyYypYuLWluLWVkaXRvciaWRnZXQudHMiLCAiLivcJjLljbtaWtZWRpdGyLdldCtZWLnRzIiwgIiuLNyYypYuLWluLWVkaXRvcipbmRleCcyIsICIuLizcmMvaWNvbipbilZGlbIvcRhdGUudHMiLCAiLivcJjLljbtcGFjaMvdXRpbHMudHMiLCAiLivbmkZVtbRbGVzLywbnBtLlzLXJlZVcEAzLjEuMCubRlXvZHVsZXMvaXMtcmVnZXhwLluZGVLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSjbGuZSyZWdleHBAMywLjAvbmkZVtbRbGVzLNsblLXJlZVcCpbmRleCqcyIsICIuLizcmMvbWkdWxlcybmlvbicyIsICIuLizcmMvaWNvbiwYWNrcypYuLWNhYhlLnRzIiwgIiuLNyYypYuLXBhYtzLBhYstbWFuYWdlcicyIsICIuLiubRlXvZHVsZXMvLnBucGvZnVzZSqcALjYuMiubRlXvZHVsZXMvZnVzZSqcykaXNLZcUuZXNtLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSjbwYXJlLXZlcnNpbzQDQuMSzLvZGVfbWkdWxlcyjbwYXJlLXZlcnNpbzLluZGVLmqcyIsICIuLizcmMvdHlwaWncyhcGkudHMiLCAiLivcJjLvZHVsZXMvcVnZVzdGVyLnRzIiwgIiuLNyYypYuLXBhYtzLJaWxLWlucycyIsICIuLizcmMvaWNvbiwYWNrcylbWqaScyIsICIuLizcmMvaWNvbiwYWNrcymaWxlLWljbudHMiLCAiLivcJjLljbtcGFjaMvdHlwZXMudHMiLCAiLivcJjLvZHVsZXMvanNvbibyzdmcudHMiLCAiLivcJjLvZHVsZXMvZGlhbGnLnRzIiwgIiuLNyYywbNLXBzLNhbGxvdXQtaWNvbicyIsICIuLizcmMvcGzdCwcyZXhLnRzIiwgIiuLNyYywbNLXBzLluZGVLnRzIiwgIiuLvZGVfbWkdWxlcyucGwbSmaWxlLXNlbGVjdCkaWFsbdAMSLjQvbmkZVtbRbGVzLZpbGUtcVsZWNLWRpYWxvZyzcmMvZXJybIudHMiLCAiLivbmkZVtbRbGVzLywbnBtLZpbGUtcVsZWNLWRpYWxvZAxLjUuNCubRlXvZHVsZXMvZmlsZSzZWxlYQtZGlhbGnLNyYydGlsLnRzIiwgIiuLvZGVfbWkdWxlcyucGwbSmaWxlLXNlbGVjdCkaWFsbdAMSLjQvbmkZVtbRbGVzLZpbGUtcVsZWNLWRpYWxvZyzcmMvZmlsZSkaWFsbcudHMiLCAiLivcJjLNldHRpbmdzLnRzIiwgIiuLNyYyjbwblbnQvYnJvdNlciwYWNrcycgiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvYucRhbnRzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvcJjLVaWwuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvbBaWucyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNyYyjcmVhdGUtZWxlbWVudCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNyYyjbwblbnQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvYJlYXRlLWNvbnRleHQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvZGlmZijaGlsZHJlbiqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNyYykaWZmLBybBzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvcJjLRpZmYvaWkZXguanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvcmVuZGVyLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvcJjLNsblLWVsZWlbnQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCzcmMvZGlmZijYXRjaClcnJvciqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLhvbtzLNyYypbmRleCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNvbXBhdCzcmMvdXRpbCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNvbXBhdCzcmMvUHVyZUNvbXBvbmVudCqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNvbXBhdCzcmMvbWVtbyqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNvbXBhdCzcmMvZmydFyZFJlZiqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcHJlYWNQDEwLjguMCubRlXvZHVsZXMvcHJlYWNLNvbXBhdCzcmMvQhpbGRyZWuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCjbwYXQvcJjLNcBlbnNlLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvYtcGFLNyYyzdXNwZWzZSsaXNLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvYtcGFLNyYywbJYWxzLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSwcmVhYRAMTAuOCwLvZGVfbWkdWxlcywcmVhYQvYtcGFLNyYyyZWkZXIuanMiLCAiLivbmkZVtbRbGVzLywbnBtLByZWFjdEAxMCLjAvbmkZVtbRbGVzLByZWFjdCjbwYXQvcJjLluZGVLmpzIiwgIiuLvZGVfbWkdWxlcyucGwbSyZWFjdCpYucALjQuMFAcHJlYWNKNvbXBhdEAxNyxLjEvbmkZVtbRbGVzLJlYWNLWljbzLxpYilcvaWNvbkNvbnRleHQuanMiLCAiLivbmkZVtbRbGVzLywbnBtLJlYWNLWljbzQDQuNCwXBwcmVhYQrYtcGFQDELjEuMSubRlXvZHVsZXMvcmVhYQtaWNvbnMvbGliLVzbSpYuQmFzZSqcyIsICIuLiubRlXvZHVsZXMvLnBucGvcmVhYQtaWNvbnNANCLjBfQHByZWFjdCtjbwYXRAMTcuMSxLvZGVfbWkdWxlcyyZWFjdCpYucymaSpbmRleClcuanMiLCAiLivbmkZVtbRbGVzLywbnBtLpzLWJhcUNEAzLjcuMiubRlXvZHVsZXMvanMtYmFzZTYLJhcUNCtanMiLCAiLivcJjLvZHVsZXMvaWNvbiwYWNrcycyIsICIuLiubRlXvZHVsZXMvLnBucGvcmVhYQtbGhZGluZAyLjAuMAcHJlYWNKNvbXBhdEAxNyxLjEvbmkZVtbRbGVzLJlYWNLWxvYWRpbmcvbGliLNZypbmRleCqcyIsICIuLizcmMvYtcGuZWLxvYWRpbmcudHNIiwgIiuLvZGVfbWkdWxlcyucGwbSpbWlckALjAuMTUvbmkZVtbRbGVzLltbWVyLNyYydGlscylcnJvcnMudHMiLCAiLivbmkZVtbRbGVzLywbnBtLltbWVyQDkuMCxNSubRlXvZHVsZXMvaWtZXIvcJjLVaWxzLNvbWvbicyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvdXRpbHMvcGxZlucycyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvYyZSzYwZScyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvYyZSmaWhbGlZScyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvYyZSwcmeScyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvYyZSpbWlckNsYXNzLnRzIiwgIiuLvZGVfbWkdWxlcyucGwbSpbWlckALjAuMTUvbmkZVtbRbGVzLltbWVyLNyYyjbJlLNcnJlbnQudHMiLCAiLivbmkZVtbRbGVzLywbnBtLltbWVyQDkuMCxNSubRlXvZHVsZXMvaWtZXIvcJjLBsdWdpbnMvZXMLnRzIiwgIiuLvZGVfbWkdWxlcyucGwbSpbWlckALjAuMTUvbmkZVtbRbGVzLltbWVyLNyYywbHVnaWzLBhdGNoZXMudHMiLCAiLivbmkZVtbRbGVzLywbnBtLltbWVyQDkuMCxNSubRlXvZHVsZXMvaWtZXIvcJjLBsdWdpbnMvbWFwcVLnRzIiwgIiuLvZGVfbWkdWxlcyucGwbSpbWlckALjAuMTUvbmkZVtbRbGVzLltbWVyLNyYywbHVnaWzLFsbCcyIsICIuLiubRlXvZHVsZXMvLnBucGvaWtZXJAOSwLjELvZGVfbWkdWxlcypbWlcizcmMvaWtZXIudHMiLCAiLivbmkZVtbRbGVzLywbnBtLltbWVyQDkuMCxNSubRlXvZHVsZXMvaWtZXIvcJjLVaWxzLVudicyIsICIuLizcmMvYtcGuZWLljbtbWFuYWdlcicgiLCAiLivbmkZVtbRbGVzLywbnBtLVzZSpbWlckAwLjYuMFrbYdRbGYZzcZxNQydWRcZSubRlXvZHVsZXMvdXNlLWltbWVyLNyYypbmRleCcyIsICIuLizcmMvYtcGuZWLljbtcHJldmlldycgiXSwKICAiccmNlcNvbnRlbnQiOiBbIiqIVxuICogbWltZSkYlxuICogQweXJpZhKGMpIDIwMTQgSmuYXRoYWgTnXGgKiBDbBcmlnaHQoYykgMjAxNSyMDIyIERvdWdsYXMgQhyaXNbBoZXIgVlscuXGgKiBNSVQgTGljZWzZWRcbiAqLxuXGvKipcbiAqIEvZHVsZSBleHBvcnRzLlxuICovXGcbmvZHVsZSleHBvcnRzIDgcmVxdWlyZSgnLikYiqcuJylcbiIsICIvLyAncGFaCcgbWkdWxlIGVdHJhYRlZCBmcmtIEvZGUuanMgdjguMTEuMSAobseSBaGUgcGzaXggcGFydClcbivIHRyYWzcGxpdGVkIHdpdGggQmFiZWxcblxuLygQweXJpZhIEpveWVudCwgSWjLiBhbmQgbRoZXIgTmkZSBjbcmlidXRvcnMuXGvLxuLygUGVybWlzclvbiBpcyBoZXJlYnkgZJhbnRlZCwgZnJlZSBvZiBjaGFyZUsIHRvIGFueSBwZXJzbgbJYWluaWnIGFcbivIGNvcHkgbYgdGhpcyBzbZdFyZSBhbmQgYXNzbNpYXRlZCBkbNbWVudGFaWuIGZpbGVzIChaGVcbivIFwiUmdHdhcmVcIiksIHRvIGRlYWwgaWgdGhlIFNvZnRYXJlIHdpdGhvdXQgcmVzdHJpYRpbsIGluYxZGluZxuLygdlaGdCBsaWpdGFaWuIHRoZSByaWdodHMgdGgdXNlLCBjbBLCBtbRpZnksIGlcmdlLCBwdWJsaXNoLFxuLygZGlzdHJpYnVZSwgcVibGljZWzZSwgYWkLyIHNlbGwgYwaWVzIGmIHRoZSBTbZdFyZSwgYWkIHRvIHBlcmpdFxuLygcGVycucyBbyBaGtIHRoZSBTbZdFyZSBpcyBmdXJuaXNoZWQgdGgZGgcsIHNYmplYQgdGgdGhlXGvLyBmbxsbdpbmcgYuZGlaWuczpcbivXGvLyBUaGUgYWJvdmUgYweXJpZhIGvdGljZSBhbmQgdGhpcyBwZXJtaXNzaWuIGvdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLygaWgYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwbJaWucyBvZiBaGUgUmdHdhcmUuXGvLxuLygVEhFIFNPRlRXQVJFIElTIFBSTZJREVEIFwiQVMgSVNcIiwgVlUSEVVCBXQVJSQUUWSBPRiBBTlkgSlORCwgRVhQUkVTUxuLygTIgSUQTElFRCwgSUDTFVESUHIEJVVCBOTQgTElNSVRFRCBUTyBUSEUgVFSUkFOVElFUyBPRlxuLygTUVSQhBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQVMQVIgUFVSUETRSBBTkQgTkOSUGUklORVNRUULiBJTlxuLygTkgRVZFTlQgUhBTEwgVEhFIEFVVEhPUlMgTIgQQWVJJRhUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQxBSUsXGvLyBEQUBRVTIESIEUSEVSIExJQUJJTElUWSwgVhFVEhFUiBJTiBBTiBBQRJTgTYgQOVFJBQQsIFRPUlQgTJcbivIEUSEVSVlTRSwgQVJJUlORyBGUkNLCBPVVQgTYgTIgSUgQOTkVDVElPTiBXSVRIIFRIRSBTTZUVFSRSBPUiBUSEVcbivIFVTRSBPUiBPVEhFUiBERUFMSUHUyBJTiBUSEUgUGVFdBUkUuXGcbidcUgcRyaWNJztcblxuZnVuYRpbgYXNzZXJUGFaChwYXRoKSBXGgIGlmICheXBlbYgcGFaCAhPTgJNcmluZycpIHtcbiAgICBaHJvdyBuZXcgVHlwZUVycmyKCdQYXRoIGcQgYmUgYSBzdHJpbmcuIFJlYVpdmVkICcgKyBKUOLnNcmluZlmeShwYXRoKSkXGgIHcbncblxuLygUmVzbxZXMgLiBhbmQgLigZWxlbWVudHMgaWgYSBwYXRoIHdpdGggZGlyZWNbJIGhbWVzXGmdWjdGlvbiBubJtYWxpemVTdHJpbmdQbNpeChwYXRoLCBhbGxvdFibZlUmvdCkgexuICBYXIgcmVzIDgJycXGgIHZhciBsYXNUVnbWVudExlbmdaCAIDAXGgIHZhciBsYXNUxhcggPSAtMTtcbiAgdmFyIGRvdHMgPSAwOxuICBYXIgYkZTtcbiAgZmyIChYXIgaSAIDAIGkgPDgcGFaCsZWndGgICsraSkgexuICAgIGlmIChpIDwgcGFaCsZWndGgpXGgICAgICBjbRlIDgcGFaCjaGFyQkZUFKGkpOxuICAgIGVscUgaWYgKGNvZGUgPTIDQICqLyovKVxuICAgICAgYnJlYWsXGgICAgZWxzZVxuICAgICAgYkZSAIDQICqLyovOxuICAgIGlmIChjbRlIDPSANyAvKiqLykgexuICAgICAgaWYgKGxhcRTbGFzaCAPTgaSAtIDEgfHwgZGcyAPTgMSkgexuICAgICAgICAvLyBOTQXGgICAgICBIGVscUgaWYgKGxhcRTbGFzaCAhPTgaSAtIDEgJiYgZGcyAPTgMikgexuICAgICAgICBpZiAocmVzLmxlbmdaCAIDIgfHwgbGFzdFNlZlbnRMZWndGggITIDIgfHwgcmVzLmNoYXJDbRlQXQocmVzLmxlbmdaCAtIDEpICEPSANiAvKiqLyBfCByZXMuYhhckNvZGVBdChyZXMubGVuZRoICgMikgITIDQICqLiovKSBXGgICAgICAgICAgaWYgKHJlcysZWndGggPiAyKSBXGgICAgICAgICAgICBYXIgbGFzdFNsYXNoSWkZXggPSByZXMubGFzdEluZGVTYoJynKTtcbiAgICAgICAgICAgIGlmIChsYXNUxhchJbmRleCAhPTgcmVzLmxlbmdaCAtIDEpIHtcbiAgICAgICAgICAgICAgaWYgKGxhcRTbGFzaEluZGVIDPSAtMSkgexuICAgICAgICAgICAgICAgIHJlcyAICcnOxuICAgICAgICAgICAgICAgIGxhcRTZWdtZWTGVuZRoIDgMDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXMgPSByZXMucxpYUoMCwgbGFzdFNsYXNoSWkZXgpOxuICAgICAgICAgICAgICAgIGxhcRTZWdtZWTGVuZRoIDgcmVzLmxlbmdaCAtIDEgLSByZXMubGFzdEluZGVTYoJynKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBsYXNUxhcggPSBpOxuICAgICAgICAgICAgICBkbRzIDgMDtcbiAgICAgICAgICAgICAgYudGludWUXGgICAgICAgICAgICBXGgICAgICAgICAgfSBlbHNlIGlmIChyZXMubGVuZRoIDPSAyIHxIHJlcysZWndGggPTIDEpIHtcbiAgICAgICAgICAgIHJlcyAICcnOxuICAgICAgICAgICAgbGFzdFNlZlbnRMZWndGggPSAwOxuICAgICAgICAgICAgbGFzdFNsYXNoIDgaTtcbiAgICAgICAgICAgIGRvdHMgPSAwOxuICAgICAgICAgICAgYudGludWUXGgICAgICAgICAgfVxuICAgICAgICBXGgICAgICAgIGlmIChhbGxvdFibZlUmvdCkgexuICAgICAgICAgIGlmIChyZXMubGVuZRoIDgMClcbiAgICAgICAgICAgIHJlcyArPSAnLyuJztcbiAgICAgICAgICBlbHNlXGgICAgICAgICAgICByZXMgPSAnLinOxuICAgICAgICAgIGxhcRTZWdtZWTGVuZRoIDgMjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHJlcysZWndGggPiAwKVxuICAgICAgICAgIHJlcyArPSAnLycgKyBwYXRoLnNsaWNlKGxhcRTbGFzaCArIDEsIGkpOxuICAgICAgICBlbHNlXGgICAgICAgICAgcmVzIDgcGFaCzbGljZShsYXNUxhcggKyAxLCBpKTtcbiAgICAgICAgbGFzdFNlZlbnRMZWndGggPSBpICgbGFzdFNsYXNoICgMTtcbiAgICAgIHcbiAgICAgIGxhcRTbGFzaCAIGkXGgICAgICBkbRzIDgMDtcbiAgICBIGVscUgaWYgKGNvZGUgPTIDQICqLiovICYmIGRvdHMgITICxKSBXGgICAgICArKRvdHMXGgICAgfSBlbHNlIHtcbiAgICAgIGRvdHMgPSAtMTtcbiAgICBXGgIHcbiAgcmVdXJuIHJlcztcbncblxuZnVuYRpbgXZvcmhdChzZXAsIHBhdGhPYmplYQpIHtcbiAgdmFyIGRpciAIHBhdGhPYmplYQuZGlyIHxIHBhdGhPYmplYQucmvdDtcbiAgdmFyIGJhcUgPSBwYXRoTJqZWNLmJhcUgfHwgKHBhdGhPYmplYQubmFtZSBfCAnJykgKyAocGFaEiamVjdCleHQgfHwgJycpOxuICBpZiAoIWRpcikgexuICAgIHJldHVybiBiYXNlOxuICBXGgIGlmIChkaXIgPTIHBhdGhPYmplYQucmvdCkgexuICAgIHJldHVybiBkaXIgKyBiYXNlOxuICBXGgIHJldHVybiBkaXIgKyBzZXAgKyBiYXNlOxufVxuXGYXIgcGzaXggPSBXGgICvIHBhdGgucmVzbxZShbZnJvbSAuLidLCBbylcbiAgcmVzbxZTogZnVuYRpbgcmVzbxZSgpIHtcbiAgICBYXIgcmVzbxZWRQYXRoIDgJycXGgICAgdmFyIHJlcsdmVkQWJzbxdGUgPSBmYWxzZTtcbiAgICBYXIgYdkOxuXGgICAgZmyIChYXIgaSAIGFyZVtZWcysZWndGggLSAxOyBpIDICxICYmICFyZXNvbHZlZEFicsdXRlOyBpLSpIHtcbiAgICAgIHZhciBwYXRoOxuICAgICAgaWYgKGkgPjgMClcbiAgICAgICAgcGFaCAIGFyZVtZWctpXTtcbiAgICAgIGVscUgexuICAgICAgICBpZiAoYdkIDPSBbmRlZmluZWQpXGgICAgICAgICAgYdkIDgcHJvYVzcyjdQoKTtcbiAgICAgICAgcGFaCAIGNZDtcbiAgICAgIHcblxuICAgICAgYXNzZXJUGFaChwYXRoKTtcblxuICAgICAgLygUtpcCBlbXBeSBlbnRyaWVzXGgICAgICBpZiAocGFaCsZWndGggPTIDApIHtcbiAgICAgICAgYudGludWUXGgICAgICBXGcbiAgICAgIHJlcsdmVkUGFaCAIHBhdGggKyAnLycgKyByZXNvbHZlZFBhdGgXGgICAgICByZXNvbHZlZEFicsdXRlIDgcGFaCjaGFyQkZUFKDApIDPSANyAvKiqLztcbiAgICBXGcbiAgICAvLyBBdCBaGlzIHBvaWIHRoZSBwYXRoIHNobVsZCBiZSByZXNvbHZlZCBbyBhIGZbGwgYWJzbxdGUgcGFaCwgYnVXGgICAgLygaGFuZGxlIHJlbGFaXZlIHBhdGhzIHRvIGJlIHNhZmUgKGpZhIGhhcHBlbiBaGVuIHBybNlcMuYdkKCkgZmFpbHMpXGcbiAgICAvLyBObJtYWxpemUgdGhlIHBhdGhcbiAgICByZXNvbHZlZFBhdGggPSBubJtYWxpemVTdHJpbmdQbNpeChyZXNvbHZlZFBhdGgsICFyZXNvbHZlZEFicsdXRlKTtcblxuICAgIGlmIChyZXNvbHZlZEFicsdXRlKSBXGgICAgICBpZiAocmVzbxZWRQYXRoLmxlbmdaCA+IDApXGgICAgICAgIHJldHVybiAnLycgKyByZXNvbHZlZFBhdGgXGgICAgICBlbHNlXGgICAgICAgIHJldHVybiAnLycXGgICAgfSBlbHNlIGlmIChyZXNvbHZlZFBhdGgubGVuZRoIDgMCkgexuICAgICAgcmVdXJuIHJlcsdmVkUGFaDtcbiAgICBIGVscUgexuICAgICAgcmVdXJuICcuJztcbiAgICBXGgIHsXGcbiAgbmybWFsaXplOiBmdWjdGlvbiBubJtYWxpemUocGFaCkgexuICAgIGFzcVydFBhdGgocGFaCkXGcbiAgICBpZiAocGFaCsZWndGggPTIDApIHJldHVybiAnLicXGcbiAgICBYXIgaXNBYnNvbHVZSAIHBhdGguYhhckNvZGVBdCgwKSAPTgNDcgLyovKiXGgICAgdmFyIHRyYWlsaWnUVwYXJhdGyIDgcGFaCjaGFyQkZUFKHBhdGgubGVuZRoICgMSkgPTIDQICqLyovOxuXGgICAgLygTmybWFsaXplIHRoZSBwYXRoXGgICAgcGFaCAIGvcmhbGlZVNcmluZBvclKHBhdGgsICFpcFicsdXRlKTtcblxuICAgIGlmIChwYXRoLmxlbmdaCAPTgMCAmJiAhaXNBYnNvbHVZSkgcGFaCAICcuJztcbiAgICBpZiAocGFaCsZWndGggPiAwICYmIHRyYWlsaWnUVwYXJhdGyKSBwYXRoICsICcvJztcblxuICAgIGlmIChpcFicsdXRlKSByZXRcmgJynICsgcGFaDtcbiAgICByZXRcmgcGFaDtcbiAgfSxcblxuICBpcFicsdXRlOiBmdWjdGlvbiBpcFicsdXRlKHBhdGgpIHtcbiAgICBhcNlcnRQYXRoKHBhdGgpOxuICAgIHJldHVybiBwYXRoLmxlbmdaCA+IDAgJiYgcGFaCjaGFyQkZUFKDApIDPSANyAvKiqLztcbiAgfSxcblxuICBqbluOiBmdWjdGlvbiBqbluKCkgexuICAgIGlmIChhcmdbWVudHMubGVuZRoIDPSAwKVxuICAgICAgcmVdXJuICcuJztcbiAgICBYXIgampbmVkOxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndWlbnRzLmxlbmdaDsgKytpKSBXGgICAgICBYXIgYXJnIDgYXJndWlbnRzWldOxuICAgICAgYXNzZXJUGFaChhcmcpOxuICAgICAgaWYgKGFyZysZWndGggPiAwKSBXGgICAgICAgIGlmIChqbluZWQgPTIHVuZGVmaWlZClcbiAgICAgICAgICBqbluZWQgPSBhcmcXGgICAgICAgIGVscVcbiAgICAgICAgICBqbluZWQgKzgJynICsgYXJnOxuICAgICAgfVxuICAgIHcbiAgICBpZiAoampbmVkIDPSBbmRlZmluZWQpXGgICAgICByZXRcmgJynOxuICAgIHJldHVybiBwbNpeCubJtYWxpemUoampbmVkKTtcbiAgfSxcblxuICByZWxhdGlZTogZnVuYRpbgcmVsYXRpdmUoZnJvbSwgdGpIHtcbiAgICBhcNlcnRQYXRoKGZybpOxuICAgIGFzcVydFBhdGgodGpOxuXGgICAgaWYgKGZybgPTIHRvKSByZXRcmgJycXGcbiAgICBmcmtIDgcGzaXgucmVzbxZShmcmtKTtcbiAgICBbyAIHBvclLnJlcsdmUodGpOxuXGgICAgaWYgKGZybgPTIHRvKSByZXRcmgJycXGcbiAgICAvLyBUcmltIGFueSBsZWFkaWnIGJhYtzbGFzaGVzXGgICAgdmFyIGZybTdGFydCAIDEXGgICAgZmyICgIGZybTdGFydCAIGZybubGVuZRoOyArKZybTdGFydCkgexuICAgICAgaWYgKGZybuYhhckNvZGVBdChmcmtURhcnQpICEPSANyAvKiqLylcbiAgICAgICAgYnJlYWsXGgICAgfVxuICAgIHZhciBmcmtRWkIDgZnJvbSsZWndGgXGgICAgdmFyIGZybMZWgPSBmcmtRWkICgZnJvbVNYXJOxuXGgICAgLygVHJpbSBhbnkgbGVhZGluZyBiYWNrcxhchlcxuICAgIHZhciBbNYXJIDgMTtcbiAgICBmbIgKDsgdGTdGFydCAIHRvLmxlbmdaDsgKytbNYXJKSBXGgICAgICBpZiAodGuYhhckNvZGVBdChbNYXJKSAhPTgNDcgLyovKipXGgICAgICAgIGJyZWFrOxuICAgIHcbiAgICBYXIgdGFbmQgPSBbysZWndGgXGgICAgdmFyIHRvTGVuIDgdGFbmQgLSBbNYXJOxuXGgICAgLygQtcGFyZSBwYXRocyBbyBmaWkIHRoZSBsbnZXNIGNvbWvbiBwYXRoIGZybgcmvdFxuICAgIHZhciBsZWndGggPSBmcmtTGVuIDwgdGMZWgPyBmcmtTGVuIDogdGMZWXGgICAgdmFyIGxhcRDbtbTZXAgPSAtMTtcbiAgICBYXIgaSAIDAXGgICAgZmyICgIGkgPDgbGVuZRoOyArKkpIHtcbiAgICAgIGlmIChpIDPSBsZWndGgpIHtcbiAgICAgICAgaWYgKHRvTGVuIDgbGVuZRoKSBXGgICAgICAgICAgaWYgKHRvLmNoYXJDbRlQXQodGTdGFydCArIGkpIDPSANyAvKiqLykgexuICAgICAgICAgICAgLygVUgZVIGhlcmUgaWYgYGZybgIGlzIHRoZSBleGFjdCBiYXNlIHBhdGggZmyIGBbAuXGgICAgICAgICAgICAvLyBGbIgZXhhbXBsZTogZnJvbTnLZvbyiYXInOyBbznLZvbyiYXIvYmFJxuICAgICAgICAgICAgcmVdXJuIHRvLnNsaWNlKHRvURhcnQgKyBpICsgMSkXGgICAgICAgICAgfSBlbHNlIGlmIChpIDPSAwKSBXGgICAgICAgICAgICAvLyBXZSBnZXQgaGVyZSBpZiBgZnJvbWAgaXMgdGhlIHJvbRcbiAgICAgICAgICAgICvIEZvciBleGFtcGxlOiBmcmtPScvJzsgdGJymbnXGgICAgICAgICAgICByZXRcmgdGucxpYUodGTdGFydCArIGkpOxuICAgICAgICAgIHcbiAgICAgICAgfSBlbHNlIGlmIChmcmtTGVuIDgbGVuZRoKSBXGgICAgICAgICAgaWYgKGZybuYhhckNvZGVBdChmcmtURhcnQgKyBpKSAPTgNDcgLyovKipIHtcbiAgICAgICAgICAgICvIFdlIGdldCBoZXJlIGlmIGBbAgaXMgdGhlIGVYWNIGJhcUgcGFaCBmbIgYGZybgLlxuICAgICAgICAgICAgLygRmyIGVYWwbGUIGZybJymbvYmFyLJheicIHRvPScvZmvLJhcidcbiAgICAgICAgICAgIGxhcRDbtbTZXAgPSBpOxuICAgICAgICAgIHgZWxzZSBpZiAoaSAPTgMCkgexuICAgICAgICAgICAgLygVUgZVIGhlcmUgaWYgYHRvYCBpcyBaGUgcmvdCcbiAgICAgICAgICAgICvIEZvciBleGFtcGxlOiBmcmtPScvZmvJzsgdGJynXGgICAgICAgICAgICBsYXNQtbWuUVwIDgMDtcbiAgICAgICAgICBXGgICAgICAgIHcbiAgICAgICAgYnJlYWsXGgICAgICBXGgICAgICBYXIgZnJvbUNvZGUgPSBmcmtLmNoYXJDbRlQXQoZnJvbVNYXJICsgaSkXGgICAgICBYXIgdGDbRlIDgdGuYhhckNvZGVBdChbNYXJICsgaSkXGgICAgICBpZiAoZnJvbUNvZGUgITIHRvQkZSlcbiAgICAgICAgYnJlYWsXGgICAgICBlbHNlIGlmIChmcmtQkZSAPTgNDcgLyovKipXGgICAgICAgIGxhcRDbtbTZXAgPSBpOxuICAgIHcblxuICAgIHZhciBvdXQgPSAnJztcbiAgICAvLyBHZWlcmFZSBaGUgcmVsYXRpdmUgcGFaCBiYXNlZCBvbiBaGUgcGFaCBkaWZmZXJlbmNlIGJldHdlZWgYHRvYFxuICAgICvIGFuZCBgZnJvbWBcbiAgICBmbIgKGkgPSBmcmtURhcnQgKyBsYXNQtbWuUVwICsgMTsgaSAPSBmcmtRWkOyArKkpIHtcbiAgICAgIGlmIChpIDPSBmcmtRWkIHxIGZybuYhhckNvZGVBdChpKSAPTgNDcgLyovKipIHtcbiAgICAgICAgaWYgKGdCsZWndGggPTIDApXGgICAgICAgICAgbVICsICcuLicXGgICAgICAgIGVscVcbiAgICAgICAgICBvdXQgKzgJyuLicXGgICAgICBXGgICAgfVxuXGgICAgLygTGFzdGxLCBhcHBlbmQgdGhlIHJlcQgbYgdGhlIGRlcRpbmFaWuIChgdGgKSBwYXRoIHRoYXQgYtZXMgYWZZXJcbiAgICAvLyBaGUgYtbWuIHBhdGggcGFydHNcbiAgICBpZiAobVLmxlbmdaCA+IDApXGgICAgICByZXRcmgbVICsgdGucxpYUodGTdGFydCArIGxhcRDbtbTZXApOxuICAgIGVscUgexuICAgICAgdGTdGFydCArPSBsYXNQtbWuUVwOxuICAgICAgaWYgKHRvLmNoYXJDbRlQXQodGTdGFydCkgPTIDQICqLyovKVxuICAgICAgICArKRvURhcnQXGgICAgICByZXRcmgdGucxpYUodGTdGFydCkXGgICAgfVxuICBLFxuXGgIFtYWtlTGuZzogZnVuYRpbgXhaVMbnKHBhdGgpIHtcbiAgICByZXRcmgcGFaDtcbiAgfSxcblxuICBkaXJuYWlOiBmdWjdGlvbiBkaXJuYWlKHBhdGgpIHtcbiAgICBhcNlcnRQYXRoKHBhdGgpOxuICAgIGlmIChwYXRoLmxlbmdaCAPTgMCkgcmVdXJuICcuJztcbiAgICBYXIgYkZSAIHBhdGguYhhckNvZGVBdCgwKTtcbiAgICBYXIgaGFzUmvdCAIGNvZGUgPTIDQICqLyovOxuICAgIHZhciBlbmQgPSAtMTtcbiAgICBYXIgbWFYhlZFNsYXNoIDgdHJZTtcbiAgICBmbIgKHZhciBpIDgcGFaCsZWndGggLSAxOyBpIDIDEICtaSkgexuICAgICAgYkZSAIHBhdGguYhhckNvZGVBdChpKTtcbiAgICAgIGlmIChjbRlIDPSANyAvKiqLykgexuICAgICAgICAgIGlmICghbWFYhlZFNsYXNoKSBXGgICAgICAgICAgICBlbmQgPSBpOxuICAgICAgICAgICAgYnJlYWsXGgICAgICAgICAgfVxuICAgICAgICBIGVscUgexuICAgICAgICAvLyBXZSBzYXcgdGhlIGZpcnNIGvbiwYXRoIHNlcGFyYXRvclxuICAgICAgICBtYXRjaGVkUxhcggPSBmYWxzZTtcbiAgICAgIHcbiAgICBXGcbiAgICBpZiAoZWkIDPSAtMSkgcmVdXJuIGhhcJvbQgPyAnLycgOiAnLicXGgICAgaWYgKGhhcJvbQgJiYgZWkIDPSAxKSByZXRcmgJyvJztcbiAgICByZXRcmgcGFaCzbGljZSgwLCBlbmQpOxuICBLFxuXGgIGJhcVuYWlOiBmdWjdGlvbiBiYXNlbmFtZShwYXRoLCBleHQpIHtcbiAgICBpZiAoZXhICEPSBbmRlZmluZWQgJiYgdHlwZWmIGVdCAhPTgJNcmluZycpIHRocmIGldyBUeXBlRXJybIoJwiZXhXCIgYXJndWlbnQgbXVzdCBiZSBhIHNcmluZycpOxuICAgIGFzcVydFBhdGgocGFaCkXGcbiAgICBYXIgcRhcnQgPSAwOxuICAgIHZhciBlbmQgPSAtMTtcbiAgICBYXIgbWFYhlZFNsYXNoIDgdHJZTtcbiAgICBYXIgaTtcblxuICAgIGlmIChleHQgITIHVuZGVmaWlZCAmJiBleHQubGVuZRoIDgMCAmJiBleHQubGVuZRoIDwIHBhdGgubGVuZRoKSBXGgICAgICBpZiAoZXhLmxlbmdaCAPTgcGFaCsZWndGggJiYgZXhIDPSBwYXRoKSByZXRcmgJycXGgICAgICBYXIgZXhSWRIDgZXhLmxlbmdaCAtIDEXGgICAgICBYXIgZmlycRObTbGFzaEVuZCAICxOxuICAgICAgZmyIChpIDgcGFaCsZWndGggLSAxOyBpIDIDAICtaSkgexuICAgICAgICBYXIgYkZSAIHBhdGguYhhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGNvZGUgPTIDQICqLyovKSBXGgICAgICAgICAgICAvLyBJZiBZSByZWFjaGVkIGEgcGFaCBzZXBhcmFbIgdGhhdCBYXMgbmIHBhcnQgbYgYSBzZXQgbYgcGFaFxuICAgICAgICAgICAgLygcVwYXJhdGycyBhdCBaGUgZWkIGmIHRoZSBzdHJpbmcsIHNbAgbmXGgICAgICAgICAgICBpZiAoIWhdGNoZWRTbGFzaCkgexuICAgICAgICAgICAgICBzdGFydCAIGkgKyAxOxuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIHcbiAgICAgICAgICBIGVscUgexuICAgICAgICAgIGlmIChmaXJzdEvblNsYXNoRWkIDPSAtMSkgexuICAgICAgICAgICAgLygVUgcFIHRoZSBmaXJzdCBubtcGFaCBzZXBhcmFbIsIHJlbWVtYmVyIHRoaXMgaWkZXggaWgYFzZVxuICAgICAgICAgICAgLygdUgbmVlZCBpdCBpZiBaGUgZXhZWzaWuIGVuZHMgdXAgbmIGhdGNoaWnXGgICAgICAgICAgICBtYXRjaGVkUxhcggPSBmYWxzZTtcbiAgICAgICAgICAgIGZpcnNTmuUxhchFbmQgPSBpICsgMTtcbiAgICAgICAgICBXGgICAgICAgICAgaWYgKGVdElkeCA+PSAwKSBXGgICAgICAgICAgICAvLyBUcnkgdGgbWFYggdGhlIGVcGxpYlIGVdGVuclvblxuICAgICAgICAgICAgaWYgKGNvZGUgPTIGVdCjaGFyQkZUFKGVdElkeCkpIHtcbiAgICAgICAgICAgICAgaWYgKCtZXhSWRIDPSAtMSkgexuICAgICAgICAgICAgICAgICvIFdlIGhdGNoZWQgdGhlIGVdGVuclvbiwgcgbWFyayBaGlzIGFzIHRoZSBlbmQgbYgbVyIHBhdGhcbiAgICAgICAgICAgICAgICAvLyBjbwblbnRcbiAgICAgICAgICAgICAgICBlbmQgPSBpOxuICAgICAgICAgICAgICBXGgICAgICAgICAgICBIGVscUgexuICAgICAgICAgICAgICAvLyBFeHRlbnNpbgZGlcyBubQgbWFYgsIHNvIGciByZXNbHQgaXMgdGhlIGVudGlyZSBwYXRoXGgICAgICAgICAgICAgICvIGNvbXBvbmVudFxuICAgICAgICAgICAgICBleHRJZHggPSAtMTtcbiAgICAgICAgICAgICAgZWkIDgZmlycRObTbGFzaEVuZDtcbiAgICAgICAgICAgIHcbiAgICAgICAgICBXGgICAgICAgIHcbiAgICAgIHcblxuICAgICAgaWYgKHNYXJIDPSBlbmQpIGVuZCAIGZpcnNTmuUxhchFbmQZWxzZSBpZiAoZWkIDPSAtMSkgZWkIDgcGFaCsZWndGgXGgICAgICByZXRcmgcGFaCzbGljZShzdGFydCwgZWkKTtcbiAgICBIGVscUgexuICAgICAgZmyIChpIDgcGFaCsZWndGggLSAxOyBpIDIDAICtaSkgexuICAgICAgICBpZiAocGFaCjaGFyQkZUFKGkpIDPSANyAvKiqLykgexuICAgICAgICAgICAgLygSWYgdUgcmVhYhlZCBhIHBhdGggcVwYXJhdGyIHRoYXQgdFzIGvdCBwYXJIGmIGEgcVIGmIHBhdGhcbiAgICAgICAgICAgICvIHNlcGFyYXRvcnMgYXQgdGhlIGVuZCBvZiBaGUgcRyaWnLCBzdGwIGvdxuICAgICAgICAgICAgaWYgKCFtYXRjaGVkUxhcgpIHtcbiAgICAgICAgICAgICAgcRhcnQgPSBpICsgMTtcbiAgICAgICAgICAgICAgYnJlYWsXGgICAgICAgICAgICBXGgICAgICAgICAgfSBlbHNlIGlmIChlbmQgPTICxKSBXGgICAgICAgICAgLygVUgcFIHRoZSBmaXJzdCBubtcGFaCBzZXBhcmFbIsIGhcmsgdGhpcyBhcyBaGUgZWkIGmIGclxuICAgICAgICAgICvIHBhdGggYtcGuZWXGgICAgICAgICAgbWFYhlZFNsYXNoIDgZmFscUXGgICAgICAgICAgZWkIDgaSArIDEXGgICAgICAgIHcbiAgICAgIHcblxuICAgICAgaWYgKGVuZCAPTgLTEpIHJldHVybiAnJztcbiAgICAgIHJldHVybiBwYXRoLnNsaWNlKHNYXJLCBlbmQpOxuICAgIHcbiAgfSxcblxuICBleHRuYWlOiBmdWjdGlvbiBleHRuYWlKHBhdGgpIHtcbiAgICBhcNlcnRQYXRoKHBhdGgpOxuICAgIHZhciBzdGFydERvdCAICxOxuICAgIHZhciBzdGFydFBhcnQgPSAwOxuICAgIHZhciBlbmQgPSAtMTtcbiAgICBYXIgbWFYhlZFNsYXNoIDgdHJZTtcbiAgICAvLyBUcmFjayBaGUgcRhdGUgbYgYhhcmFjdGVycyAoaWYgYWKSBZSBzZWUgYmVmbJlIGciBmaXJzdCBkbQgYWkXGgICAgLygYWZZXIgYWIHBhdGggcVwYXJhdGyIHdlIGZpbmRcbiAgICBYXIgcHJlRGURhdGUgPSAwOxuICAgIGZvciAodmFyIGkgPSBwYXRoLmxlbmdaCAtIDEIGkgPjgMDsgLSpKSBXGgICAgICBYXIgYkZSAIHBhdGguYhhckNvZGVBdChpKTtcbiAgICAgIGlmIChjbRlIDPSANyAvKiqLykgexuICAgICAgICAgICvIElmIHdlIHJlYWNoZWQgYSBwYXRoIHNlcGFyYXRvciBaGFIHdhcyBubQgcGFydCBvZiBhIHNldCBvZiBwYXRoXGgICAgICAgICAgLygcVwYXJhdGycyBhdCBaGUgZWkIGmIHRoZSBzdHJpbmcsIHNbAgbmXGgICAgICAgICAgaWYgKCFtYXRjaGVkUxhcgpIHtcbiAgICAgICAgICAgIHNYXJUGFydCAIGkgKyAxOxuICAgICAgICAgICAgYnJlYWsXGgICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlOxuICAgICAgICBXGgICAgICBpZiAoZWkIDPSAtMSkgexuICAgICAgICAvLyBXZSBzYXcgdGhlIGZpcnNIGvbiwYXRoIHNlcGFyYXRvciwgbWFyayBaGlzIGFzIHRoZSBlbmQgbYgbVyXGgICAgICAgICvIGVdGVuclvblxuICAgICAgICBtYXRjaGVkUxhcggPSBmYWxzZTtcbiAgICAgICAgZWkIDgaSArIDEXGgICAgICBXGgICAgICBpZiAoYkZSAPTgNDYgLyouKipIHtcbiAgICAgICAgICAvLyBJZiBaGlzIGlzIGciBmaXJzdCBkbQsIGhcmsgaXQgYXMgdGhlIHNYXJIGmIGciBleHRlbnNpbcbiAgICAgICAgICBpZiAocRhcnREbQgPTICxKVxuICAgICAgICAgICAgcRhcnREbQgPSBpOxuICAgICAgICAgIGVscUgaWYgKHByZURvdFNYXRlICEPSAxKVxuICAgICAgICAgICAgcHJlRGURhdGUgPSAxOxuICAgICAgfSBlbHNlIGlmIChzdGFydERvdCAhPTgLTEpIHtcbiAgICAgICAgLygVUgcFIGEgbmuLWRvdCBhbmQgbmuLXBhdGggcVwYXJhdGyIGJlZmyZSBvdXIgZGLCBzbyBZSBzaGbGRcbiAgICAgICAgLygaGFZSBhIGdvbQgYhhbmNlIGFIGhhdmluZyBhIGvbilbXBeSBleHRlbnNpbcbiAgICAgICAgcHJlRGURhdGUgPSAtMTtcbiAgICAgIHcbiAgICBXGcbiAgICBpZiAocRhcnREbQgPTICxIHxIGVuZCAPTgLTEgfHxcbiAgICAgICAgLygVUgcFIGEgbmuLWRvdCBjaGFyYWNZXIgaWtZWRpYXRlbHkgYmVmbJlIHRoZSBkbRcbiAgICAgICAgcHJlRGURhdGUgPTIDAgfHxcbiAgICAgICAgLygVGhlIChyaWdodCtbNKSBcmltbWVkIHBhdGggYtcGuZWIGlzIGVYWNbHkgJyuJxuICAgICAgICBwcmVEbRTdGFZSAPTgMSAmJiBzdGFydERvdCAPTgZWkICgMSAmJiBzdGFydERvdCAPTgcRhcnRQYXJICsgMSkgexuICAgICAgcmVdXJuICcnOxuICAgIHcbiAgICByZXRcmgcGFaCzbGljZShzdGFydERvdCwgZWkKTtcbiAgfSxcblxuICBmbJtYXQIGZbmNaWuIGZvcmhdChwYXRoTJqZWNKSBXGgICAgaWYgKHBhdGhPYmplYQgPTIGbGwgfHwgdHlwZWmIHBhdGhPYmplYQgITICdvYmplYQnKSBXGgICAgICBaHJvdyBuZXcgVHlwZUVycmyKCdUaGUgXCJwYXRoTJqZWNXCIgYXJndWlbnQgbXVzdCBiZSBvZiBeXBlIEiamVjdCgUmVjZWlZWQgdHlwZSAnICsgdHlwZWmIHBhdGhPYmplYQpOxuICAgIHcbiAgICByZXRcmgXZvcmhdCgnLycsIHBhdGhPYmplYQpOxuICBLFxuXGgIHBhcnNlOiBmdWjdGlvbiBwYXJzZShwYXRoKSBXGgICAgYXNzZXJUGFaChwYXRoKTtcblxuICAgIHZhciByZXQgPSBIHJvbQICcnLCBkaXIICcnLCBiYXNlOiAnJywgZXhOiAnJywgbmFtZTogJycgfTtcbiAgICBpZiAocGFaCsZWndGggPTIDApIHJldHVybiByZXQXGgICAgdmFyIGNvZGUgPSBwYXRoLmNoYXJDbRlQXQoMCkXGgICAgdmFyIGlzQWJzbxdGUgPSBjbRlIDPSANyAvKiqLztcbiAgICBYXIgcRhcnQXGgICAgaWYgKGlzQWJzbxdGUpIHtcbiAgICAgIHJldCybIDgJynOxuICAgICAgcRhcnQgPSAxOxuICAgIHgZWxzZSBXGgICAgICBzdGFydCAIDAXGgICAgfVxuICAgIHZhciBzdGFydERvdCAICxOxuICAgIHZhciBzdGFydFBhcnQgPSAwOxuICAgIHZhciBlbmQgPSAtMTtcbiAgICBYXIgbWFYhlZFNsYXNoIDgdHJZTtcbiAgICBYXIgaSAIHBhdGgubGVuZRoICgMTtcblxuICAgICvIFRyYWNrIHRoZSBzdGFZSBvZiBjaGFyYWNZXJzIChpZiBhbnkpIHdlIHNlZSBiZWZvcmUgbVyIGZpcnNIGRvdCBhbmRcbiAgICAvLyBhZnRlciBhbnkgcGFaCBzZXBhcmFbIgdUgZmluZFxuICAgIHZhciBwcmVEbRTdGFZSAIDAXGcbiAgICAvLyBHZXQgbmuLWRpciBpbmZvXGgICAgZmyICgIGkgPjgcRhcnQICtaSkgexuICAgICAgYkZSAIHBhdGguYhhckNvZGVBdChpKTtcbiAgICAgIGlmIChjbRlIDPSANyAvKiqLykgexuICAgICAgICAgICvIElmIHdlIHJlYWNoZWQgYSBwYXRoIHNlcGFyYXRvciBaGFIHdhcyBubQgcGFydCBvZiBhIHNldCBvZiBwYXRoXGgICAgICAgICAgLygcVwYXJhdGycyBhdCBaGUgZWkIGmIHRoZSBzdHJpbmcsIHNbAgbmXGgICAgICAgICAgaWYgKCFtYXRjaGVkUxhcgpIHtcbiAgICAgICAgICAgIHNYXJUGFydCAIGkgKyAxOxuICAgICAgICAgICAgYnJlYWsXGgICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlOxuICAgICAgICBXGgICAgICBpZiAoZWkIDPSAtMSkgexuICAgICAgICAvLyBXZSBzYXcgdGhlIGZpcnNIGvbiwYXRoIHNlcGFyYXRvciwgbWFyayBaGlzIGFzIHRoZSBlbmQgbYgbVyXGgICAgICAgICvIGVdGVuclvblxuICAgICAgICBtYXRjaGVkUxhcggPSBmYWxzZTtcbiAgICAgICAgZWkIDgaSArIDEXGgICAgICBXGgICAgICBpZiAoYkZSAPTgNDYgLyouKipIHtcbiAgICAgICAgICAvLyBJZiBaGlzIGlzIGciBmaXJzdCBkbQsIGhcmsgaXQgYXMgdGhlIHNYXJIGmIGciBleHRlbnNpbcbiAgICAgICAgICBpZiAocRhcnREbQgPTICxKSBzdGFydERvdCAIGkZWxzZSBpZiAocHJlRGURhdGUgITIDEpIHByZURvdFNYXRlIDgMTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGFydERvdCAhPTgLTEpIHtcbiAgICAgICAgLygVUgcFIGEgbmuLWRvdCBhbmQgbmuLXBhdGggcVwYXJhdGyIGJlZmyZSBvdXIgZGLCBzbyBZSBzaGbGRcbiAgICAgICAgLygaGFZSBhIGdvbQgYhhbmNlIGFIGhhdmluZyBhIGvbilbXBeSBleHRlbnNpbcbiAgICAgICAgcHJlRGURhdGUgPSAtMTtcbiAgICAgIHcbiAgICBXGcbiAgICBpZiAocRhcnREbQgPTICxIHxIGVuZCAPTgLTEgfHxcbiAgICAvLyBXZSBzYXcgYSBubtZGIGNoYXJhYRlciBpbWlZGlhdGVseSBiZWZvcmUgdGhlIGRvdFxuICAgIHByZURvdFNYXRlIDPSAwIHxXGgICAgLygVGhlIChyaWdodCtbNKSBcmltbWVkIHBhdGggYtcGuZWIGlzIGVYWNbHkgJyuJxuICAgIHByZURvdFNYXRlIDPSAxICYmIHNYXJRGIDPSBlbmQgLSAxICYmIHNYXJRGIDPSBzdGFydFBhcnQgKyAxKSBXGgICAgICBpZiAoZWkICEPSAtMSkgexuICAgICAgICBpZiAocRhcnRQYXJIDPSAwICYmIGlzQWJzbxdGUpIHJldCiYXNlIDgcmVLmhbWUgPSBwYXRoLnNsaWNlKDEsIGVuZCkZWxzZSByZXQuYmFzZSAIHJldCuYWlIDgcGFaCzbGljZShzdGFydFBhcnQsIGVuZCkXGgICAgICBXGgICAgfSBlbHNlIHtcbiAgICAgIGlmIChzdGFydFBhcnQgPTIDAgJiYgaXNBYnNvbHVZSkgexuICAgICAgICByZXQubmFtZSAIHBhdGgucxpYUoMSwgcRhcnREbQpOxuICAgICAgICByZXQuYmFzZSAIHBhdGgucxpYUoMSwgZWkKTtcbiAgICAgIHgZWxzZSBXGgICAgICAgIHJldCuYWlIDgcGFaCzbGljZShzdGFydFBhcnQsIHNYXJRGKTtcbiAgICAgICAgcmVLmJhcUgPSBwYXRoLnNsaWNlKHNYXJUGFydCwgZWkKTtcbiAgICAgIHcbiAgICAgIHJldCleHQgPSBwYXRoLnNsaWNlKHNYXJRGLCBlbmQpOxuICAgIHcblxuICAgIGlmIChzdGFydFBhcnQgPiAwKSByZXQuZGlyIDgcGFaCzbGljZSgwLCBzdGFydFBhcnQgLSAxKTtlbHNlIGlmIChpcFicsdXRlKSByZXQuZGlyIDgJynOxuXGgICAgcmVdXJuIHJldDtcbiAgfSxcblxuICBzZXAICcvJyxcbiAgZGVsaWpdGVyOiAnOicsXGgIHdpbjMyOiBudWxsLFxuICBwbNpeDogbnVsbFxufTtcblxucGzaXgucGzaXggPSBwbNpeDtcblxubWkdWxlLmVcGydHMgPSBwbNpeDtcbiIsICIvKiFcbiAqIGpbWUtdHlwZXNcbiAqIENvcHlyaWdodChjKSAyMDEIEpvbmFaGFuIEuZxuICogQweXJpZhKGMpIDIwMTUgRGZxhcyBDaHJpcRvcGhlciBXaWxzbcbiAqIEJVCBMaWNlbnNlZFxuICovXGcbidcUgcRyaWNJxuXGvKipcbiAqIEvZHVsZSBkZXBlbmRlbmNpZXMuXGgKiBAcHJpdmFZVxuICovXGcbnZhciBkYiAIHJlcXVpcmUoJpbWUtZGInKVxudmFyIGVdGhbWUgPSByZXFaXJlKCdwYXRoJykuZXhbmFtZVxuXGvKipcbiAqIEvZHVsZSBYXJpYWJsZXMuXGgKiBAcHJpdmFZVxuICovXGcbnZhciBFWFRSQUNUXRZUEVfUkVHRVhQIDgLcXHMqKFteOxccqKSg/OjtXFxzfCQpLxudmFyIFRFWFRfVFlQRVSRUdFWFAgPSAvXnRleHRcXCvaVxuXGvKipcbiAqIEvZHVsZSBleHBvcnRzLlxuICogQHBYmxpYxuICovXGcbmVcGydHMuYhhcnNldCAIGNoYXJzZXRcbmVcGydHMuYhhcnNldHMgPSBIGxvbtcDogYhhcnNldCBXGleHBvcnRzLmNvbnRlbnRUeXBlIDgYudGVudFRcGVcbmVcGydHMuZXhZWzaWuIDgZXhZWzaWuXGleHBvcnRzLmVdGVuclvbnMgPSBPYmplYQuYJlYXRlKGbGwpXGleHBvcnRzLmxvbtcCAIGxvbtcFxuZXhwbJcyeXBlcyAIEiamVjdCjcmVhdGUobnVsbClcblxuLygUGwdWxhdGUgdGhlIGVdGVuclvbnMvdHlwZXMgbWFwcxucGwdWxhdGVNYXBzKGVcGydHMuZXhZWzaWucywgZXhwbJcyeXBlcylcblxuLyoqXGgKiBHZXQgdGhlIGRlZmFbHQgYhhcnNldCBmbIgYSBNSUFIHRcGUuXGgKlxuICogQHBhcmFtIHtzdHJpbmdIHRcGVcbiAqIEByZXRcmgeJvbxlYWcRyaWnfVxuICovXGcbmZbmNaWuIGNoYXJzZXQgKHRcGUpIHtcbiAgaWYgKCFeXBlIHxIHRcGVvZiBeXBlICEPSAncRyaWnJykgexuICAgIHJldHVybiBmYWxzZVxuICBXGcbiAgLygVEETzogdXNlIGlZGlhLXRcGVyXGgIHZhciBtYXRjaCAIEVYVFJBQRfVFlQRVSRUdFWFAuZXhlYyheXBlKVxuICBYXIgbWltZSAIGhdGNoICYmIGRiWhdGNoWzFdLnRvTGZXJDYXNlKCldXGcbiAgaWYgKGpbWUgJiYgbWltZSjaGFycVKSBXGgICAgcmVdXJuIGpbWUuYhhcnNldFxuICBXGcbiAgLygZGVmYXVsdCBZXhLyogdGgdXRmLThcbiAgaWYgKGhdGNoICYmIFRFWFRfVFlQRVSRUdFWFAudGVzdChtYXRjaFsxXSkpIHtcbiAgICByZXRcmgJVURiJxuICBXGcbiAgcmVdXJuIGZhbHNlXGXGcbiqKlxuICogQJlYXRlIGEgZnVsbCBDbZWLVRcGUgaGVhZGVyIGdpdmVuIGEgTUlNRSBeXBlIGyIGVdGVuclvbicbiAqXGgKiBAcGFyYWgeNcmluZgcRyXGgKiBAcmVdXJuIHtibsZWFufHNcmluZcbiAqLxuXGmdWjdGlvbiBjbZWVHlwZSAocRyKSBXGgICvIFRPREIHNobVsZCBaGlzIGVZWgYmUgaWgdGhpcyBtbRbGU/XGgIGlmICghcRyIHxIHRcGVvZiBzdHIgITICdzdHJpbmcnKSBXGgICAgcmVdXJuIGZhbHNlXGgIHcblxuICBYXIgbWltZSAIHNcipbmRleEmKCcvJykgPTICxXGgICAgPyBleHBvcnRzLmxvbtcChzdHIpXGgICAgOiBzdHJcblxuICBpZiAoIWpbWUpIHtcbiAgICByZXRcmgZmFscVcbiAgfVxuXGgICvIFRPREIHVzZSBjbZWLXRcGUgbIgbRoZXIgbWkdWxlXGgIGlmIChtaWlLmluZGVTYoJNoYXJzZXQnKSAPTgLTEpIHtcbiAgICBYXIgYhhcnNldCAIGVcGydHMuYhhcnNldChtaWlKVxuICAgIGlmIChjaGFycVKSBtaWlICsICcIGNoYXJzZXQJyArIGNoYXJzZXQudGMbdlckNhcUoKVxuICBXGcbiAgcmVdXJuIGpbWVcbncblxuLyoqXGgKiBHZXQgdGhlIGRlZmFbHQgZXhZWzaWuIGZvciBhIEJTUUgdHlwZScbiAqXGgKiBAcGFyYWgeNcmluZgdHlwZVxuICogQHJldHVybiBYmvbGVhbnxzdHJpbmdXGgKicblxuZnVuYRpbgZXhZWzaWuICheXBlKSBXGgIGlmICghdHlwZSBfCBeXBlbYgdHlwZSAhPTgJNcmluZycpIHtcbiAgICByZXRcmgZmFscVcbiAgfVxuXGgICvIFRPREIHVzZSBtZWRpYSeXBlclxuICBYXIgbWFYggPSBFWFRSQUNUXRZUEVfUkVHRVhQLmVZWModHlwZSlcblxuICAvLyBnZXQgZXhZWzaWucxuICBYXIgZXhcyAIGhdGNoICYmIGVcGydHMuZXhZWzaWucttYXRjaFsxXSbxvdVyQFzZSgpXVxuXGgIGlmICghZXhcyBfCAhZXhcysZWndGgpIHtcbiAgICByZXRcmgZmFscVcbiAgfVxuXGgIHJldHVybiBleHRzWzBdXGXGcbiqKlxuICogTGvaVwIHRoZSBNSUFIHRcGUgZmyIGEgZmlsZSBwYXRoLVdGVuclvbicbiAqXGgKiBAcGFyYWgeNcmluZgcGFaFxuICogQHJldHVybiBYmvbGVhbnxzdHJpbmdXGgKicblxuZnVuYRpbgbGvaVwIChwYXRoKSBXGgIGlmICghcGFaCBfCBeXBlbYgcGFaCAhPTgJNcmluZycpIHtcbiAgICByZXRcmgZmFscVcbiAgfVxuXGgICvIGdldCBaGUgZXhZWzaWuIChcImVdFwiIGyIFwiLmVdFwiIGyIGZbGwgcGFaClcbiAgdmFyIGVdGVuclvbiAIGVdGhbWUoJguJyArIHBhdGgpXGgICAgLnRvTGZXJDYXNlKClcbiAgICAucVicRyKDEpXGcbiAgaWYgKCFleHRlbnNpbpIHtcbiAgICByZXRcmgZmFscVcbiAgfVxuXGgIHJldHVybiBleHBvcnRzLnRcGVzWVdGVuclvblgfHwgZmFscVcbncblxuLyoqXGgKiBQbBbGFZSBaGUgZXhZWzaWucyBhbmQgdHlwZXMgbWFwcycbiAqIEBwcmlYXRlXGgKicblxuZnVuYRpbgcGwdWxhdGVNYXBzIChleHRlbnNpbzLCBeXBlcykgexuICAvLyBzbVyYUgcHJlZmVyZWjZSAobGVhcQgLTgbWzdClcbiAgdmFyIHByZWZlcmVuYUgPSBbJnaWJywgJFwYWNoZScsIHVuZGVmaWlZCwgJlhbmEnXVxuXGgIEiamVjdCrZXlzKGRiKSmbJFYWNoKGZbmNaWuIGZvckVhYhNaWlVHlwZSAodHlwZSkgexuICAgIHZhciBtaWlIDgZGJbdHlwZVcbiAgICBYXIgZXhcyAIGpbWUuZXhZWzaWucxuXGgICAgaWYgKCFleHRzIHxICFleHRzLmxlbmdaCkgexuICAgICAgcmVdXJuXGgICAgfVxuXGgICAgLygbWltZSAtPiBleHRlbnNpbzXGgICAgZXhZWzaWucteXBlXSAIGVdHNcblxuICAgICvIGVdGVuclvbiAtPiBtaWlXGgICAgZmyIChYXIgaSAIDAIGkgPCBleHRzLmxlbmdaDsgaSsrKSBXGgICAgICBYXIgZXhZWzaWuIDgZXhctpXVxuXGgICAgICBpZiAodHlwZXNbZXhZWzaWuXSkgexuICAgICAgICBYXIgZnJvbSAIHByZWZlcmVuYUuaWkZXhPZihkYlteXBlctleHRlbnNpbdXSzbVyYUpXGgICAgICAgIHZhciBbyAIHByZWZlcmVuYUuaWkZXhPZihtaWlLnNvdXJjZSlcblxuICAgICAgICBpZiAodHlwZXNbZXhZWzaWuXSAhPTgJFwcGxpYFaWuLjdGVLXNcmVhbScgJiZcbiAgICAgICAgICAoZnJvbSA+IHRvIHxIChmcmtIDPSBbyAmJiBeXBlctleHRlbnNpbdLnNYnNcigwLCAxMikgPTICdhcHBsaWNhdGlvbinKSkpIHtcbiAgICAgICAgICAvLyBzalwIHRoZSByZWhcHBpbmdcbiAgICAgICAgICBjbaWZVxuICAgICAgICBXGgICAgICBXGcbiAgICAgICvIHNldCBaGUgZXhZWzaWuIC+IGpbWVcbiAgICAgIHRcGVzWVdGVuclvblgPSBeXBlXGgICAgfVxuICBKVxufVxuIiwgIiqKiBEZXRlYQgZnJlZSBYXJpYWJsZSBgZxvYmFsYCBmcmtIEvZGUuanMuICovXGYXIgZnJlZUdsbJhbCAIHRcGVvZiBnbGiYWwgPTgJiamVjdCcgJiYgZxvYmFsICYmIGdsbJhbCPYmplYQgPTIEiamVjdCAmJiBnbGiYWwXGcbmvZHVsZSleHBvcnRzIDgZnJlZUdsbJhbDtcbiIsICJYXIgZnJlZUdsbJhbCAIHJlcXVpcmUoJyvXZyZWVHbGiYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYCgKicbnZhciBmcmVlUVsZiAIHRcGVvZiBzZWxmIDICdvYmplYQnICYmIHNlbGYgJiYgcVsZiPYmplYQgPTIEiamVjdCAmJiBzZWxmOxuXGvKiogVXNlZCBhcyBhIHJlZmVyZWjZSBbyBaGUgZxvYmFsIGiamVjdCgKicbnZhciBybIDgZnJlZUdsbJhbCBfCBmcmVlUVsZiBfCBGdWjdGlvbigncmVdXJuIHRoaXMnKSgpOxuXGtbRbGUuZXhwbJcyAIHJvbQXGiLCAidmFyIHJvbQgPSByZXFaXJlKCcuLybJykXGcbiqKiBCdWlsdCpbiBYWxZSByZWZlcmVuYVzLiAqLxudmFyIFNbWJvbCAIHJvbQuUltYmsOxuXGtbRbGUuZXhwbJcyAIFNbWJvbDtcbiIsICIvKipcbiAqIENvcGllcyBaGUgdmFsdWVzIGmIGBzbVyYVgIHRvIGBhcnJheWAuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBQXJyYXlIHNvdXJjZSBUaGUgYXJyYXkgdGgYweSBYWxZXMgZnJvbScbiAqIEBwYXJhbSBQXJyYXlIFthcnJheTbXVgVGhlIGFycmFIHRvIGNvcHkgdmFsdWVzIHRvLlxuICogQHJldHVybnMgeFycmFfSBSZXRcmzIGBhcnJheWAuXGgKicbmZbmNaWuIGNvcHlBcnJheShzbVyYUsIGFycmFKSBXGgIHZhciBpbmRleCAICxLFxuICAgICAgbGVuZRoIDgccmNlLmxlbmdaDtcblxuICBhcnJheSBfCAoYXJyYXkgPSBBcnJheShsZWndGgpKTtcbiAgdhpbGUgKCsraWkZXggPCBsZWndGgpIHtcbiAgICBhcnJheVtpbmRleFgPSBzbVyYVbaWkZXhdOxuICBXGgIHJldHVybiBhcnJheTtcbncblxubWkdWxlLmVcGydHMgPSBjbBQXJyYXkXGiLCAidmFyIFNbWJvbCAIHJlcXVpcmUoJyvXNbWJvbCcpOxuXGvKiogVXNlZCBmbIgYnVpbHQtaWgbWVaGkIHJlZmVyZWjZXMuICovXGYXIgbJqZWNUHJvdGgPSBPYmplYQucHJvdGeXBlOxuXGvKiogVXNlZCBbyBjaGVjayBvYmplYRzIGZvciBvdgcHJvcGVydGllcygKicbnZhciBoYXNPdQcmwZXJeSAIGiamVjdFBybRvLmhhcblBybBlcnROxuXGvKipcbiAqIFVzZWQgdGgcmVzbxZSBaGVcbiAqIFtgdGTdHJpbmdUYWdgXShodHRwOivZWNtYSpbnRlcmhdGlvbmFsLmyZylYhLTIMiLjAvINlYyvYmplYQucHJvdGeXBlLnRvcRyaWnKVxuICogbYgdmFsdWVzLlxuICovXGYXIgbmFaXZlTJqZWNVGTdHJpbmcgPSBvYmplYRQcmbybNcmluZztcblxuLyoqIEJaWxLWluIHZhbHVlIHJlZmVyZWjZXMuICovXGYXIgcltVGTdHJpbmdUYWcgPSBTeWibwgPyBTeWibwudGTdHJpbmdUYWcgOiBbmRlZmluZWQXGcbiqKlxuICogQSBzcGVjaWFsaXplZCBZXJzaWuIGmIGBiYXNlRVVGFnYCBaGljaCBpZvcmVzIGBTeWibwudGTdHJpbmdUYWdgIHZhbHVlcycbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgcXVlcnkuXGgKiBAcmVdXJucyBcRyaWnfSBSZXRcmzIHRoZSByYXcgYHRvURyaWnVGFnYCcbiAqLxuZnVuYRpbgZVUmFVGFnKHZhbHVlKSBXGgIHZhciBpcbiAIGhhcblBybBlcnRLmNhbGwodmFsdWUsIHNbVRvURyaWnVGFnKSxcbiAgICAgIHRhZyAIHZhbHVlWNbVRvURyaWnVGFnXTtcblxuICBcnkgexuICAgIHZhbHVlWNbVRvURyaWnVGFnXSAIHVuZGVmaWlZDtcbiAgICBYXIgdWtYXNrZWQgPSBcnVlOxuICBIGNhdGNoIChlKSBfVxuXGgIHZhciByZXNbHQgPSBuYXRpdmVPYmplYRUbNcmluZyjYWxsKHZhbHVlKTtcbiAgaWYgKHVubWFzaVkKSBXGgICAgaWYgKGlzTduKSBXGgICAgICBYWxZVtzeWUbNcmluZRhZgPSBYWcXGgICAgfSBlbHNlIHtcbiAgICAgIGRlbGVZSBYWxZVtzeWUbNcmluZRhZXGgICAgfVxuICBXGgIHJldHVybiByZXNbHQXGXGcbmvZHVsZSleHBvcnRzIDgZVUmFVGFnOxuIiwgIiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBvYmplYRQcmbyAIEiamVjdCwcmbRcGUXGcbiqKlxuICogVXNlZCBbyByZXNvbHZlIHRoZVxuICogWBbNcmluZRhZBdKGhdHALylYhLWludGVybmFaWuYWwubJnLVjbWEtMjYyLzcuMCjcVjLWiamVjdCwcmbRcGUudGzdHJpbmcpXGgKiBvZiBYWxZXMuXGgKicbnZhciBuYXRpdmVPYmplYRUbNcmluZyAIGiamVjdFBybRvLnRvURyaWnOxuXGvKipcbiAqIENvbnZlcnRzIGBYWxZWAgdGgYSBzdHJpbmcgdXNpbmcgYEiamVjdCwcmbRcGUudGTdHJpbmdgLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeypIHZhbHVlIFRoZSBYWxZSBbyBjbZXJLlxuICogQHJldHVybnMgeNcmluZgUmVdXJucyBaGUgYudmVydGVkIHNcmluZycbiAqLxuZnVuYRpbgbJqZWNVGTdHJpbmcodmFsdWUpIHtcbiAgcmVdXJuIGhdGlZUiamVjdFRvURyaWnLmNhbGwodmFsdWUpOxufVxuXGtbRbGUuZXhwbJcyAIGiamVjdFRvURyaWnOxuIiwgInZhciBTeWibwgPSByZXFaXJlKCcuLTeWibwnKSxcbiAgICBnZXRSYXdUYWcgPSByZXFaXJlKCcuLnZXRSYXdUYWcnKSxcbiAgICBvYmplYRUbNcmluZyAIHJlcXVpcmUoJyvXiamVjdFRvURyaWnJykXGcbiqKiBgTJqZWNIRvURyaWnYCByZXNbHQgcmVmZXJlbmNlcygKicbnZhciBudWxsVGFnIDgJtvYmplYQgTnVsbFnLFxuICAgIHVuZGVmaWlZFRhZyAICdbbJqZWNIFVuZGVmaWlZFnOxuXGvKiogQnVpbHQtaWgdmFsdWUgcmVmZXJlbmNlcygKicbnZhciBzeWUbNcmluZRhZyAIFNbWJvbCA/IFNbWJvbCbNcmluZRhZyAIHVuZGVmaWlZDtcblxuLyoqXGgKiBUaGUgYmFzZSBpbXBsZWlbnRhdGlvbiBvZiBgZVVGFnYCBaXRobVIGZhbGxiYWNrcyBmbIgYnVnZkgZWaXJvbmlbnRzLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeypIHZhbHVlIFRoZSBYWxZSBbyBxdWVyeScbiAqIEByZXRcmzIHtzdHJpbmdIFJldHVybnMgdGhlIGBbNcmluZRhZAuXGgKicbmZbmNaWuIGJhcVHZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlIDIGbGwpIHtcbiAgICByZXRcmgdmFsdWUgPTIHVuZGVmaWlZCA/IHVuZGVmaWlZFRhZyAIGbGxUYWcXGgIHcbiAgcmVdXJuIChzeWUbNcmluZRhZyAmJiBzeWUbNcmluZRhZyBpbiBPYmplYQodmFsdWUpKVxuICAgIDgZVUmFVGFnKHZhbHVlKVxuICAgIDogbJqZWNVGTdHJpbmcodmFsdWUpOxufVxuXGtbRbGUuZXhwbJcyAIGJhcVHZXRUYWcXGiLCAiLyoqXGgKiBDaGVjaMgaWYgYHZhbHVlYCBpcyBaGVcbiAqIFtsYWndWFnZSBeXBlXShodHRwOivddLmVjbWEtaWZXJuYXRpbhbCvcmcvZWNtYSyNjIvNywLyNzZWMtZWNtYXNjcmlwdCsYWndWFnZSeXBlcylcbiAqIGmIGBPYmplYRgLiAoZSnLiBhcnJheXMsIGZbmNaWucywgbJqZWNcywgcmVnZXhlcywgYGldyBOdWiZXIoMClgLCBhbmQgYGldyBTdHJpbmcoJycpYClcbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDAuMSwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhbiBvYmplYQsIGVscUgYGZhbHNlYCcbiAqIEBleGFtcGxlXGgKlxuICogXypciamVjdChfSkXGgKiAvLyAPiBcnVlXGgKlxuICogXypciamVjdChbMSwgMiwgMpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNPYmplYQoXyubwKTtcbiAqICvID+IHRydWVcbiAqXGgKiBfLmlzTJqZWNKGbGwpOxuICogLygPTgZmFscVcbiAqLxuZnVuYRpbgaXNPYmplYQodmFsdWUpIHtcbiAgdmFyIHRcGUgPSBeXBlbYgdmFsdWUXGgIHJldHVybiBYWxZSAhPSBudWxsICYmICheXBlIDICdvYmplYQnIHxIHRcGUgPTgJZbmNaWuJykXGXGcbmvZHVsZSleHBvcnRzIDgaXNPYmplYQXGiLCAidmFyIGJhcVHZXRUYWcgPSByZXFaXJlKCcuLiYXNlRVVGFnJyksXGgICAgaXNPYmplYQgPSByZXFaXJlKCcuLlzTJqZWNJykXGcbiqKiBgTJqZWNIRvURyaWnYCByZXNbHQgcmVmZXJlbmNlcygKicbnZhciBhcluYRhZyAICdbbJqZWNIEFzeWjRnVuYRpbdJyxcbiAgICBmdWjVGFnIDgJtvYmplYQgRnVuYRpbdJyxcbiAgICBnZWUYWcgPSAnWiamVjdCBHZWlcmFbJGdWjdGlvblnLFxuICAgIHBybhVGFnIDgJtvYmplYQgUHJveHldJztcblxuLyoqXGgKiBDaGVjaMgaWYgYHZhbHVlYCBpcyBjbGFzclmaWVkIGFzIGEgYEZbmNaWuYCBvYmplYQuXGgKlxuICogQHNYXRpYxuICogQGlbWJlckmIFcbiAqIEBzaWjZSAwLjEuMFxuICogQGNhdGVnbJIExhbmdcbiAqIEBwYXJhbSBKngdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBYWxZWAgaXMgYSBmdWjdGlvbiwgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzRnVuYRpboXykXGgKiAvLyAPiBcnVlXGgKlxuICogXypcZbmNaWuKChYmMvKTtcbiAqICvID+IGZhbHNlXGgKicbmZbmNaWuIGlzRnVuYRpbodmFsdWUpIHtcbiAgaWYgKCFpciamVjdChYWxZSkpIHtcbiAgICByZXRcmgZmFscUXGgIHcbiAgLygVGhlIHVzZSBvZiBgTJqZWNIRvURyaWnYCBhdmpZHMgaXNzdWVzIHdpdGggdGhlIGBeXBlbZgIGwZXJhdGyXGgICvIGluIFNhZmFyaSAIHdoaWNoIHJldHVybnMgJiamVjdCcgZmyIHRcGVkIGFycmFcyBhbmQgbRoZXIgYucRydWNbJzLlxuICBYXIgdGFnIDgYmFzZUdldFRhZyhYWxZSkXGgIHJldHVybiBYWcgPTgZnVuYRhZyBfCBYWcgPTgZVuVGFnIHxIHRhZyAPSBhcluYRhZyBfCBYWcgPTgcHJveHlUYWcXGXGcbmvZHVsZSleHBvcnRzIDgaXNGdWjdGlvbjtcbiIsICJYXIgcmvdCAIHJlcXVpcmUoJyvXJvbQnKTtcblxuLyoqIFVzZWQgdGgZGVZWNIGZXJyZWFjaGluZyBjbJlLWpzIHNoaWzLiAqLxudmFyIGNvcmVKcRhdGEgPSBybWydfXNvcmUtanNfchhcmVkXnXTtcblxubWkdWxlLmVcGydHMgPSBjbJlSnNEYXRhOxuIiwgInZhciBjbJlSnNEYXRhIDgcmVxdWlyZSgnLifYyZUpzRGFYScpOxuXGvKiogVXNlZCBbyBkZXRlYQgbWVaGkcyBtYXNxdWVyYWRpbmcgYXMgbmFaXZlLiAqLxudmFyIGhctTcmNLZXkgPSAoZnVuYRpboKSBXGgIHZhciBaWQgPSAvWuXSskLyleGVjKGNvcmVKcRhdGEgJiYgYyZUpzRGFYSrZXlzICYmIGNvcmVKcRhdGEuaVcyJRVQUkUTyBfCAnJykXGgIHJldHVybiBaWQgPyAoJNbWJvbChzcmMpXzEuJyArIHVpZCkgOiAnJztcbnoKSkXGcbiqKlxuICogQhlYtzIGlmIGBmdWjYCBoYXMgaXRzIHNvdXJjZSBtYXNrZWQuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBRnVuYRpbIGZbmMgVGhlIGZbmNaWuIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBmdWjYCBpcyBtYXNrZWQsIGVscUgYGZhbHNlYCcbiAqLxuZnVuYRpbgaXNNYXNrZWQoZnVuYykgexuICByZXRcmgISFtYXNrUJjSVICYmIChtYXNrUJjSVIGluIGZbmMpOxufVxuXGtbRbGUuZXhwbJcyAIGlzTWFzaVkOxuIiwgIiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBmdWjUHJvdGgPSBGdWjdGlvbiwcmbRcGUXGcbiqKiBVcVkIHRvIHJlcsdmUgdGhlIGRlYtcGlsZWQgccmNlIGmIGZbmNaWucygKicbnZhciBmdWjVGTdHJpbmcgPSBmdWjUHJvdGudGTdHJpbmcXGcbiqKlxuICogQudmVydHMgYGZbmNgIHRvIGlcyBzbVyYUgYkZScbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtGdWjdGlvbngZnVuYyBUaGUgZnVuYRpbgdGgYudmVydCcbiAqIEByZXRcmzIHtzdHJpbmdIFJldHVybnMgdGhlIHNvdXJjZSBjbRlLlxuICovXGmdWjdGlvbiBbNvdXJjZShmdWjKSBXGgIGlmIChmdWjICEIGbGwpIHtcbiAgICBcnkgexuICAgICAgcmVdXJuIGZbmNUbNcmluZyjYWxsKGZbmMpOxuICAgIHgYFYggKGUpIHtXGgICAgdHJIHtcbiAgICAgIHJldHVybiAoZnVuYyArICcnKTtcbiAgICBIGNhdGNoIChlKSBfVxuICBXGgIHJldHVybiAnJztcbncblxubWkdWxlLmVcGydHMgPSBbNvdXJjZTtcbiIsICJYXIgaXNGdWjdGlvbiAIHJlcXVpcmUoJyvaXNGdWjdGlvbicpLFxuICAgIGlzTWFzaVkIDgcmVxdWlyZSgnLifaXNNYXNrZWQnKSxcbiAgICBpciamVjdCAIHJlcXVpcmUoJyvaXNPYmplYQnKSxcbiAgICBbNvdXJjZSAIHJlcXVpcmUoJyvXRvUcmNlJykXGcbiqKlxuICogVXNlZCBbyBtYXRjaCBgUmVnRXhwYFxuICogWNbnRheCBjaGFyYWNZXJzXShodHRwOivZWNtYSpbnRlcmhdGlvbmFsLmyZylYhLTIMiLjAvINlYywYXRZXJucykuXGgKicbnZhciByZVJlZVcENoYXIgPSAvWxcXFxeJCqKzoKVtcXFfXxdLcXGcbiqKiBVcVkIHRvIGRldGVjdCBobNIGNvbnNcnVjdGycyAoUFmYXJpKSgKicbnZhciByZUlzSGzdENbIgPSAvXlxcWiamVjdCAuKzDbzdHJYRvclxcXSQvOxuXGvKiogVXNlZCBmbIgYnVpbHQtaWgbWVaGkIHJlZmVyZWjZXMuICovXGYXIgZnVuYBybRvIDgRnVuYRpbucHJvdGeXBlLFxuICAgIGiamVjdFBybRvIDgTJqZWNLnBybRvdHlwZTtcblxuLyoqIFVzZWQgdGgcmVzbxZSBaGUgZGVjbwaWxlZCBzbVyYUgbYgZnVuYRpbzLiAqLxudmFyIGZbmNUbNcmluZyAIGZbmNQcmbybNcmluZztcblxuLyoqIFVzZWQgdGgYhlYsgbJqZWNcyBmbIgbduIHBybBlcnRpZXMuICovXGYXIgaGFzTduUHJvcGVydHkgPSBvYmplYRQcmbyoYXNPdQcmwZXJeTtcblxuLyoqIFVzZWQgdGgZGVZWNIGlmIGEgbWVaGkIGlzIGhdGlZSgKicbnZhciByZUlzTmFaXZlIDgUmVnRXhwKCdeJyArXGgIGZbmNUbNcmluZyjYWxsKGhhcblBybBlcnRKSyZXBsYWNlKHJlUmVnRXhwQhhciwgJxcXFwkJicpXGgICyZXBsYWNlKCoYXNPdQcmwZXJeXwoZnVuYRpbpLio/KDXFxcXFxcKClIGZvciAuKzoPzcXFxcXFxdKSnLCAnJDEuKjnKSArICckJxuKTtcblxuLyoqXGgKiBUaGUgYmFzZSBpbXBsZWlbnRhdGlvbiBvZiBgXypchdGlZWAgdlaGdCBiYWQgchpbSBjaGVjaMuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBKngdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBYWxZWAgaXMgYSBuYXRpdmUgZnVuYRpbsXGgKiAgZWxzZSBgZmFscVgLlxuICovXGmdWjdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpciamVjdChYWxZSkgfHwgaXNNYXNrZWQodmFsdWUpKSBXGgICAgcmVdXJuIGZhbHNlOxuICBXGgIHZhciBwYXRZXJuIDgaXNGdWjdGlvbihYWxZSkgPyByZUlzTmFaXZlIDogcmVJchvcRDdGyOxuICByZXRcmgcGFdGVybiZXNKHRvUcmNlKHZhbHVlKSkXGXGcbmvZHVsZSleHBvcnRzIDgYmFzZUlzTmFaXZlOxuIiwgIiqKlxuICogRVcyBaGUgdmFsdWUgYXQgYGtleWAgbYgYGiamVjdGAuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBTJqZWNfSBbbJqZWNXSBUaGUgbJqZWNIHRvIHFZXJLlxuICogQHBhcmFtIHtzdHJpbmdIGtleSBUaGUgaVIGmIHRoZSBwcmwZXJeSBbyBnZXQuXGgKiBAcmVdXJucyBKngUmVdXJucyBaGUgcHJvcGVydHkgdmFsdWUuXGgKicbmZbmNaWuIGdldFZhbHVlKGiamVjdCwgaVKSBXGgIHJldHVybiBvYmplYQgPTgbnVsbCA/IHVuZGVmaWlZCAIGiamVjdFtrZXldOxufVxuXGtbRbGUuZXhwbJcyAIGdldFZhbHVlOxuIiwgInZhciBiYXNlSXNOYXRpdmUgPSByZXFaXJlKCcuLiYXNlSXNOYXRpdmUnKSxcbiAgICBnZXRWYWxZSAIHJlcXVpcmUoJyvXdldFZhbHVlJykXGcbiqKlxuICogRVcyBaGUgbmFaXZlIGZbmNaWuIGFIGBrZXlgIGmIGBvYmplYRgLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeiamVjdHgbJqZWNIFRoZSBvYmplYQgdGgcXVlcnkuXGgKiBAcGFyYWgeNcmluZgaVIFRoZSBrZXkgbYgdGhlIGldGhvZCBbyBnZXQuXGgKiBAcmVdXJucyBKngUmVdXJucyBaGUgZnVuYRpbgaWYgaXQncyBuYXRpdmUsIGVscUgYHVuZGVmaWlZGAuXGgKicbmZbmNaWuIGdldEhdGlZShvYmplYQsIGtleSkgexuICBYXIgdmFsdWUgPSBnZXRWYWxZShvYmplYQsIGtleSkXGgIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpIDgdmFsdWUgOiBbmRlZmluZWQXGXGcbmvZHVsZSleHBvcnRzIDgZVTmFaXZlOxuIiwgInZhciBnZXROYXRpdmUgPSByZXFaXJlKCcuLnZXROYXRpdmUnKSxcbiAgICBybIDgcmVxdWlyZSgnLifcmvdCcpOxuXGvKiBCdWlsdCpbiBtZXRobQgcmVmZXJlbmNlcyBaGFIGFyZSBZXJpZmllZCBbyBiZSBuYXRpdmUuICovXGYXIgRGFYVZpZXcgPSBnZXROYXRpdmUocmvdCwgJRhdGFWaWVJykXGcbmvZHVsZSleHBvcnRzIDgRGFYVZpZXcXGiLCAidmFyIGdldEhdGlZSAIHJlcXVpcmUoJyvXdldEhdGlZScpLFxuICAgIHJvbQgPSByZXFaXJlKCcuLybJykXGcbiqIEJaWxLWluIGldGhvZCByZWZlcmVuYVzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIGhdGlZSgKicbnZhciBNYXAgPSBnZXROYXRpdmUocmvdCwgJhcCcpOxuXGtbRbGUuZXhwbJcyAIEhcDtcbiIsICJYXIgZVTmFaXZlIDgcmVxdWlyZSgnLifZVTmFaXZlJyksXGgICAgcmvdCAIHJlcXVpcmUoJyvXJvbQnKTtcblxuLyogQnVpbHQtaWgbWVaGkIHJlZmVyZWjZXMgdGhhdCBhcmUgdmVyaWZpZWQgdGgYmUgbmFaXZlLiAqLxudmFyIFBybpcUgPSBnZXROYXRpdmUocmvdCwgJBybpcUnKTtcblxubWkdWxlLmVcGydHMgPSBQcmtaXNlOxuIiwgInZhciBnZXROYXRpdmUgPSByZXFaXJlKCcuLnZXROYXRpdmUnKSxcbiAgICBybIDgcmVxdWlyZSgnLifcmvdCcpOxuXGvKiBCdWlsdCpbiBtZXRobQgcmVmZXJlbmNlcyBaGFIGFyZSBZXJpZmllZCBbyBiZSBuYXRpdmUuICovXGYXIgUVIDgZVTmFaXZlKHJvbQsICdTZXQnKTtcblxubWkdWxlLmVcGydHMgPSBTZXQXGiLCAidmFyIGdldEhdGlZSAIHJlcXVpcmUoJyvXdldEhdGlZScpLFxuICAgIHJvbQgPSByZXFaXJlKCcuLybJykXGcbiqIEJaWxLWluIGldGhvZCByZWZlcmVuYVzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIGhdGlZSgKicbnZhciBXZWFrTWFwIDgZVTmFaXZlKHJvbQsICdXZWFrTWFwJykXGcbmvZHVsZSleHBvcnRzIDgVVhahcDtcbiIsICJYXIgRGFYVZpZXcgPSByZXFaXJlKCcuLEYXRhVmlldycpLFxuICAgIEhcCAIHJlcXVpcmUoJyvXhcCcpLFxuICAgIFBybpcUgPSByZXFaXJlKCcuLQcmtaXNlJyksXGgICAgUVIDgcmVxdWlyZSgnLifUVJyksXGgICAgVVhahcCAIHJlcXVpcmUoJyvXdlYWtNYXAnKSxcbiAgICBiYXNlRVVGFnIDgcmVxdWlyZSgnLifYmFzZUdldFRhZycpLFxuICAgIHRvUcmNlIDgcmVxdWlyZSgnLifdGTbVyYUnKTtcblxuLyoqIGBPYmplYQjdGTdHJpbmdgIHJlcVsdCByZWZlcmVuYVzLiAqLxudmFyIGhcFRhZyAICdbbJqZWNIEhcFnLFxuICAgIGiamVjdFRhZyAICdbbJqZWNIEiamVjdFnLFxuICAgIHBybpcVUYWcgPSAnWiamVjdCBQcmtaXNlXScsXGgICAgcVVGFnIDgJtvYmplYQgUVXScsXGgICAgdVhahcFRhZyAICdbbJqZWNIFdlYWtNYXBdJztcblxudmFyIGRhdGFWaWVVGFnIDgJtvYmplYQgRGFYVZpZXddJztcblxuLyoqIFVzZWQgdGgZGVZWNIGhcHMsIHNldHMsIGFuZCBZWFrbWFwcygKicbnZhciBkYXRhVmlldNbJTdHJpbmcgPSBbNvdXJjZShEYXRhVmlldyksXGgICAgbWFwQRvclNcmluZyAIHRvUcmNlKEhcCksXGgICAgcHJvbWlzZUNbJTdHJpbmcgPSBbNvdXJjZShQcmtaXNlKSxcbiAgICBzZXRDdGyURyaWnIDgdGTbVyYUoUVKSxcbiAgICBZWFrTWFwQRvclNcmluZyAIHRvUcmNlKFdlYWtNYXApOxuXGvKipcbiAqIEdldHMgdGhlIGBbNcmluZRhZAgbYgYHZhbHVlYCcbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgcXVlcnkuXGgKiBAcmVdXJucyBcRyaWnfSBSZXRcmzIHRoZSBgdGTdHJpbmdUYWdgLlxuICovXGYXIgZVVGFnIDgYmFzZUdldFRhZztcblxuLygRmFsbGJhYsgZmyIGRhdGEgdmlldMsIGhcHMsIHNldHMsIGFuZCBZWFrIGhcHMgaWgSUUgMTEgYWkIHBybpcVzIGluIEvZGUuanMgPCALlxuaWYgKChEYXRhVmlldyAmJiBnZXRUYWcobmVIERhdGFWaWVKGldyBBcnJheUJZmZlcigxKSkpICEIGRhdGFWaWVVGFnKSBfFxuICAgIChNYXAgJiYgZVVGFnKGldyBNYXApICEIGhcFRhZykgfHxcbiAgICAoUHJvbWlzZSAmJiBnZXRUYWcoUHJvbWlzZSyZXNvbHZlKCkpICEIHBybpcVUYWcpIHxXGgICAgKFNldCAmJiBnZXRUYWcobmVIFNldCkgITgcVVGFnKSBfFxuICAgIChXZWFrTWFwICYmIGdldFRhZyhuZXcgVVhahcCkgITgdVhahcFRhZykpIHtcbiAgZVVGFnIDgZnVuYRpbodmFsdWUpIHtcbiAgICBYXIgcmVzdWxIDgYmFzZUdldFRhZyhYWxZSksXGgICAgICAgIENbIgPSByZXNbHQgPTgbJqZWNVGFnIDgdmFsdWUuYucRydWNbIgOiBbmRlZmluZWQsXGgICAgICAgIGNbJTdHJpbmcgPSBDdGyIDgdGTbVyYUoQRvcikgOiAnJztcblxuICAgIGlmIChjdGyURyaWnKSBXGgICAgICBzdlYggKGNbJTdHJpbmcpIHtcbiAgICAgICAgYFzZSBkYXRhVmlldNbJTdHJpbmcIHJldHVybiBkYXRhVmlldRhZztcbiAgICAgICAgYFzZSBtYXBDdGyURyaWnOiByZXRcmgbWFwVGFnOxuICAgICAgICBjYXNlIHBybpcVDdGyURyaWnOiByZXRcmgcHJvbWlzZVRhZztcbiAgICAgICAgYFzZSBzZXRDdGyURyaWnOiByZXRcmgcVVGFnOxuICAgICAgICBjYXNlIHdlYWtNYXBDdGyURyaWnOiByZXRcmgdVhahcFRhZztcbiAgICAgIHcbiAgICBXGgICAgcmVdXJuIHJlcVsdDtcbiAgfTtcbncblxubWkdWxlLmVcGydHMgPSBnZXRUYWcXGiLCAiLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmbIgdmFyaWcyBgTnVtYmVyYCBjbzdGFudHMuICovXGYXIgTUFYXNBRkVfSUURUdFUiAIDkwMDcxOTkyNTQNDAOTEXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgYSBYWxpZCBhcnJheSsaWtlIGxlbmdaCcbiAqXGgKiAqKkvdGUKiogVGhpcyBtZXRobQgaXMgbGvcVseSBiYXNlZCBvblxuICogWBUbxlbmdaGBdKGhdHALylYhLWludGVybmFaWuYWwubJnLVjbWEtMjYyLzcuMCjcVjLXRvbGVuZRoKScbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDQuMCwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmdaCwgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzTGVuZRoKDMpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNMZWndGgoTnVtYmVyLkJTlWQUxVRSkXGgKiAvLyAPiBmYWxzZVxuICpcbiAqIFuaXNMZWndGgoSWmaWpdHkpOxuICogLygPTgZmFscVcbiAqXGgKiBfLmlzTGVuZRoKCczJykXGgKiAvLyAPiBmYWxzZVxuICovXGmdWjdGlvbiBpcxlbmdaChYWxZSkgexuICByZXRcmgdHlwZWmIHZhbHVlIDICdudWiZXInICYmXGgICAgdmFsdWUgPiAtMSAmJiBYWxZSAlIDEgPTgMCAmJiBYWxZSAPSBNQVhfUFGRVJTlRFRVSOxufVxuXGtbRbGUuZXhwbJcyAIGlzTGVuZRoOxuIiwgInZhciBpcZbmNaWuIDgcmVxdWlyZSgnLipcZbmNaWuJyksXGgICAgaXNMZWndGggPSByZXFaXJlKCcuLlzTGVuZRoJykXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgYXJyYXktbGlrZSgQSBYWxZSBpcyBjbzaWRlcmVkIGFycmFLWxpaUgaWYgaXQncxuICogbmIGEgZnVuYRpbgYWkIGhhcyBhIGBYWxZSsZWndGhgIHRoYXQncyBhbiBpbnRlZVyIGdyZWFZXIgdGhhbiBvclxuICogZXFYWwgdGgYDBgIGFuZCBsZXNzIHRoYWgbIgZXFYWwgdGgYEbWJlciNQVhfUFGRVJTlRFRVSYCcbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDQuMCwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhcnJheSsaWtlLCBlbHNlIGBmYWxzZWAuXGgKiBAZXhhbXBsZVxuICpcbiAqIFuaXNBcnJheUxpaUoWzEsIDIsIDNdKTtcbiAqICvID+IHRydWVcbiAqXGgKiBfLmlzQXJyYXlMaWtlKGRvYVtZWLmJvZHkuYhpbGRyZWpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNBcnJheUxpaUoJFiYycpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNBcnJheUxpaUoXyubwKTtcbiAqICvID+IGZhbHNlXGgKicbmZbmNaWuIGlzQXJyYXlMaWtlKHZhbHVlKSBXGgIHJldHVybiBYWxZSAhPSBudWxsICYmIGlzTGVuZRoKHZhbHVlLmxlbmdaCkgJiYgIWlzRnVuYRpbodmFsdWUpOxufVxuXGtbRbGUuZXhwbJcyAIGlzQXJyYXlMaWtlOxuIiwgIiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgYxhcNpZmllZCBhcyBhbiBgQXJyYXlgIGiamVjdCcbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDAuMSwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTtcbiAqICvID+IHRydWVcbiAqXGgKiBfLmlzQXJyYXkoZGjdWlbnQuYmkeSjaGlsZHJlbikXGgKiAvLyAPiBmYWxzZVxuICpcbiAqIFuaXNBcnJheSgnYWJjJykXGgKiAvLyAPiBmYWxzZVxuICpcbiAqIFuaXNBcnJheShfLmvbApOxuICogLygPTgZmFscVcbiAqLxudmFyIGlzQXJyYXkgPSBBcnJheSpcFycmFOxuXGtbRbGUuZXhwbJcyAIGlzQXJyYXkXGiLCAiLyoqXGgKiBDaGVjaMgaWYgYHZhbHVlYCBpcyBvYmplYQtbGlrZSgQSBYWxZSBpcyBvYmplYQtbGlrZSBpZiBpdCdzIGvdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZWmYCByZXNbHQgbYgXCJvYmplYRcIicbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDQuMCwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBvYmplYQtbGlrZSwgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzTJqZWNTGlrZShfSkXGgKiAvLyAPiBcnVlXGgKlxuICogXypciamVjdExpaUoWzEsIDIsIDNdKTtcbiAqICvID+IHRydWVcbiAqXGgKiBfLmlzTJqZWNTGlrZShfLmvbApOxuICogLygPTgZmFscVcbiAqXGgKiBfLmlzTJqZWNTGlrZShudWxsKTtcbiAqICvID+IGZhbHNlXGgKicbmZbmNaWuIGlzTJqZWNTGlrZShYWxZSkgexuICByZXRcmgdmFsdWUgITgbnVsbCAmJiBeXBlbYgdmFsdWUgPTgJiamVjdCcXGXGcbmvZHVsZSleHBvcnRzIDgaXNPYmplYRMaWtlOxuIiwgInZhciBiYXNlRVVGFnIDgcmVxdWlyZSgnLifYmFzZUdldFRhZycpLFxuICAgIGlzQXJyYXkgPSByZXFaXJlKCcuLlzQXJyYXknKSxcbiAgICBpciamVjdExpaUgPSByZXFaXJlKCcuLlzTJqZWNTGlrZScpOxuXGvKiogYEiamVjdCNbNcmluZAgcmVzdWxIHJlZmVyZWjZXMuICovXGYXIgcRyaWnVGFnIDgJtvYmplYQgURyaWnXScXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgYxhcNpZmllZCBhcyBhIGBTdHJpbmdgIHByaWpdGlZSBvciBvYmplYQuXGgKlxuICogQHNYXRpYxuICogQHNpbmNlIDAuMSwXGgKiBAbWVtYmVyTYgXxuICogQGNhdGVnbJIExhbmdcbiAqIEBwYXJhbSBKngdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBYWxZWAgaXMgYSBzdHJpbmcsIGVscUgYGZhbHNlYCcbiAqIEBleGFtcGxlXGgKlxuICogXypcNcmluZygnYWJjJykXGgKiAvLyAPiBcnVlXGgKlxuICogXypcNcmluZygxKTtcbiAqICvID+IGZhbHNlXGgKicbmZbmNaWuIGlzURyaWnKHZhbHVlKSBXGgIHJldHVybiBeXBlbYgdmFsdWUgPTgJNcmluZycgfHxcbiAgICAoIWlzQXJyYXkodmFsdWUpICYmIGlzTJqZWNTGlrZShYWxZSkgJiYgYmFzZUdldFRhZyhYWxZSkgPTgcRyaWnVGFnKTtcbncblxubWkdWxlLmVcGydHMgPSBpcNcmluZztcbiIsICIvKipcbiAqIENvbnZlcnRzIGBpdGVyYXRvcmAgdGgYWgYXJyYXkuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBTJqZWNfSBpdGVyYXRvciBUaGUgaXRlcmFbIgdGgYudmVydCcbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgYudmVydGVkIGFycmFLlxuICovXGmdWjdGlvbiBpdGVyYXRvclRvQXJyYXkoaXRlcmFbIpIHtcbiAgdmFyIGRhdGEsXGgICAgICByZXNbHQgPSBbXTtcblxuICBaGlsZSAoIShkYXRhIDgaXRlcmFbIubmVdCgpKSkblKSBXGgICAgcmVzdWxLnBcgoZGFYSYWxZSkXGgIHcbiAgcmVdXJuIHJlcVsdDtcbncblxubWkdWxlLmVcGydHMgPSBpdGVyYXRvclRvQXJyYXkXGiLCAiLyoqXGgKiBDbZXJcyBgbWFwYCBbyBpdHMgaVLXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeiamVjdHgbWFwIFRoZSBtYXAgdGgYudmVydCcbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgaVLXZhbHVlIHBhaXJzLlxuICovXGmdWjdGlvbiBtYXBUbFycmFKGhcCkgexuICBYXIgaWkZXggPSAtMSxcbiAgICAgIHJlcVsdCAIEFycmFKGhcCzaXplKTtcblxuICBtYXAuZmyRWFjaChmdWjdGlvbihYWxZSwgaVKSBXGgICAgcmVzdWxWysraWkZXhdIDgWtleSwgdmFsdWVdOxuICBKTtcbiAgcmVdXJuIHJlcVsdDtcbncblxubWkdWxlLmVcGydHMgPSBtYXBUbFycmFOxuIiwgIiqKlxuICogQudmVydHMgYHNldGAgdGgYWgYXJyYXkgbYgaXRzIHZhbHVlcycbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtPYmplYRIHNldCBUaGUgcVIHRvIGNvbnZlcnQuXGgKiBAcmVdXJucyBQXJyYXlIFJldHVybnMgdGhlIHZhbHVlcycbiAqLxuZnVuYRpbgcVVGBcnJheShzZXQpIHtcbiAgdmFyIGluZGVIDgLTEsXGgICAgICByZXNbHQgPSBBcnJheShzZXQuclZSkXGcbiAgcVLmZvckVhYgoZnVuYRpbodmFsdWUpIHtcbiAgICByZXNbHRbKytpbmRleFgPSBYWxZTtcbiAgfSkXGgIHJldHVybiByZXNbHQXGXGcbmvZHVsZSleHBvcnRzIDgcVVGBcnJheTtcbiIsICIvKipcbiAqIENvbnZlcnRzIGFuIEFTQlJIGBzdHJpbmdgIHRvIGFuIGFycmFLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeNcmluZgcRyaWnIFRoZSBzdHJpbmcgdGgYudmVydCcbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgYudmVydGVkIGFycmFLlxuICovXGmdWjdGlvbiBhcNpaVRvQXJyYXkocRyaWnKSBXGgIHJldHVybiBzdHJpbmcucBsaXQoJycpOxufVxuXGtbRbGUuZXhwbJcyAIGFzYlpVGBcnJheTtcbiIsICIvKiogVXNlZCBbyBjbwbNlIHVuaWNvZGUgYhhcmFjdGVyIGNsYXNzZXMuICovXGYXIgcnNBcRyYWxSYWnZSAICdcXFxcdWQMDAtXFxcXHVkZmZmJyxcbiAgICBycNvbWJvTWFyaNSYWnZSAICdcXFxcdTAzMDAtXFxcXHUwMzZmJyxcbiAgICByZUNvbWJvSGFsZkhcmtzUmFuZUgPSAnXFxcXHVmZTIwLVxcXFxZmUyZicsXGgICAgcnNDbibNbWJvbHNSYWnZSAICdcXFxcdTIwZDAtXFxcXHUyMGZmJyxcbiAgICBycNvbWJvUmFuZUgPSBycNvbWJvTWFyaNSYWnZSArIHJlQtYmIYWxmTWFyaNSYWnZSArIHJzQtYmTeWibxzUmFuZUsXGgICAgcnNWYXJSYWnZSAICdcXFxcdWZlMGVcXFxcdWZlMGYnOxuXGvKiogVXNlZCBbyBjbwbNlIHVuaWNvZGUgYFwdHVyZSBncmcHMuICovXGYXIgcnNaVogPSAnXFxcXHUyMDBkJztcblxuLyoqIFVzZWQgdGgZGVZWNIHNcmluZMgdlaCBbemVybyaWRaCBqbluZXJzIGyIGNvZGUgcGpbnRzIGZybgdGhlIGFzdHJhbCBwbGFuZXNdKGhdHALylZXYuZWUvYmxvZyyMDELzALzEyLRhcmstYybmVycyvZibmljbRlLykuICovXGYXIgcmVIYXNVbmljbRlIDgUmVnRXhwKCdbJyArIHJzWldKICsgcnNBcRyYWxSYWnZSAgKyBycNvbWJvUmFuZUgKyBycZhclJhbmdlICsgJnKTtcblxuLyoqXGgKiBDaGVjaMgaWYgYHNcmluZAgYudGFpbnMgVWpYkZSBzeWibxzLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeNcmluZgcRyaWnIFRoZSBzdHJpbmcgdGgaWzcGVjdCcbiAqIEByZXRcmzIHtibsZWFufSBSZXRcmzIGBcnVlYCBpZiBhIHNbWJvbCBpcyBmbVuZCwgZWxzZSBgZmFscVgLlxuICovXGmdWjdGlvbiBoYXNVbmljbRlKHNcmluZykgexuICByZXRcmgcmVIYXNVbmljbRlLnRlcQocRyaWnKTtcbncblxubWkdWxlLmVcGydHMgPSBoYXNVbmljbRlOxuIiwgIiqKiBVcVkIHRvIGNvbXBvcUgdWpYkZSBjaGFyYWNZXIgYxhcNlcygKicbnZhciBycFzdHJhbFJhbmdlIDgJxcXFxZDgwMCcXFxcdWRmZmYnLFxuICAgIHJzQtYmNYXJrcJhbmdlIDgJxcXFxMDMwMCcXFxcdTAzNmYnLFxuICAgIHJlQtYmIYWxmTWFyaNSYWnZSAICdcXFxcdWZlMjAtXFxcXHVmZTJmJyxcbiAgICBycNvbWJvUltYmscJhbmdlIDgJxcXFxMjBkMCcXFxcdTIwZmYnLFxuICAgIHJzQtYmSYWnZSAIHJzQtYmNYXJrcJhbmdlICsgcmVDbibhhbGZNYXJrcJhbmdlICsgcnNDbibNbWJvbHNSYWnZSxcbiAgICBycZhclJhbmdlIDgJxcXFxZmUwZVxcXFxZmUwZicXGcbiqKiBVcVkIHRvIGNvbXBvcUgdWpYkZSBjYXBdXJlIGdybVwcygKicbnZhciBycFzdHJhbCAICdbJyArIHJzQXNcmFsUmFuZUgKyAnXScsXGgICAgcnNDbibyAICdbJyArIHJzQtYmSYWnZSArICddJyxcbiAgICBycZpdHogPSAnXFxcXHVkODNjWxcXFxZGZmYicXFxcdWRmZmZdJyxcbiAgICBycvZGlmaWVyIDgJyg/OicgKyBycNvbWJvICsgJwnICsgcnNGaXRICsgJyknLFxuICAgIHJzTmuQXNcmFsIDgJteJyArIHJzQXNcmFsUmFuZUgKyAnXScsXGgICAgcnNSZWdpbhbCAICcoPzpcXFxcdWQMNbXFxcXHVkZGULVxcXFxZGRmZlpezJJyxcbiAgICBycNcnJQYWlyIDgJtcXFxcdWQMDAtXFxcXHVkYmZmXVtcXFxcdWRjMDAtXFxcXHVkZmZmXScsXGgICAgcnNaVogPSAnXFxcXHUyMDBkJztcblxuLyoqIFVzZWQgdGgYtcGzZSBbmljbRlIHJlZVZXMuICovXGYXIgcmVPcHRNbQgPSBycvZGlmaWVyICsgJznLFxuICAgIHJzTBVmFyIDgJsnICsgcnNWYXJSYWnZSArICddPycsXGgICAgcnNPcHRKbluIDgJyg/OicgKyBycpXSiArICcoPzonICsgWJzTmuQXNcmFsLCBycJlZlvbmFsLCBycNcnJQYWlyXSqbluKCdJykgKyAnKScgKyBycwdFZhciArIHJlTBTWkICsgJykqJyxcbiAgICBycNlcSAIHJzTBVmFyICsgcmVPcHRNbQgKyBycwdEpvaWsXGgICAgcnNTeWibwgPSAnKDJyArIFtycvbkFzdHJhbCArIHJzQtYmgKyAnPycsIHJzQtYmsIHJzUmVnaWuYWwsIHJzUVyclBhaXIsIHJzQXNcmFsXSqbluKCdJykgKyAnKScXGcbiqKiBVcVkIHRvIGhdGNoIFtzdHJpbmcgcltYmscoaHRcHMLytYXRoaWFzYnluZWzLmJlLvdGVzLphdmFzYJpcHQtdWpYkZSkuICovXGYXIgcmVVbmljbRlIDgUmVnRXhwKHJzRmleiArICcoPznICsgcnNGaXRICsgJylJyArIHJzUltYmsICsgcnNTZXEsICdnJykXGcbiqKlxuICogQudmVydHMgYSBVbmljbRlIGBzdHJpbmdgIHRvIGFuIGFycmFLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeNcmluZgcRyaWnIFRoZSBzdHJpbmcgdGgYudmVydCcbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgYudmVydGVkIGFycmFLlxuICovXGmdWjdGlvbiBbmljbRlVGBcnJheShzdHJpbmcpIHtcbiAgcmVdXJuIHNcmluZytYXRjaChyZVVuaWNvZGUpIHxIFtdOxufVxuXGtbRbGUuZXhwbJcyAIHVuaWNvZGVUbFycmFOxuIiwgInZhciBhcNpaVRvQXJyYXkgPSByZXFaXJlKCcuLhcNpaVRvQXJyYXknKSxcbiAgICBoYXNVbmljbRlIDgcmVxdWlyZSgnLifaGFzVWpYkZScpLFxuICAgIHVuaWNvZGVUbFycmFIDgcmVxdWlyZSgnLifdWpYkZVRvQXJyYXknKTtcblxuLyoqXGgKiBDbZXJcyBgcRyaWnYCBbyBhbiBhcnJheScbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtzdHJpbmdIHNcmluZyBUaGUgcRyaWnIHRvIGNvbnZlcnQuXGgKiBAcmVdXJucyBQXJyYXlIFJldHVybnMgdGhlIGNvbnZlcnRlZCBhcnJheScbiAqLxuZnVuYRpbgcRyaWnVGBcnJheShzdHJpbmcpIHtcbiAgcmVdXJuIGhhcVuaWNvZGUocRyaWnKVxuICAgIDgdWpYkZVRvQXJyYXkocRyaWnKVxuICAgIDogYXNjaWlUbFycmFKHNcmluZykXGXGcbmvZHVsZSleHBvcnRzIDgcRyaWnVGBcnJheTtcbiIsICIvKipcbiAqIEEgcBlYlhbGlZWQgdmVyclvbiBvZiBgXytYXBgIGZvciBhcnJheXMgdlaGdCBzdXBwbJIGZvciBpdGVyYXRlZVxuICogchvcnRoYWkcycbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtBcnJheXgWFycmFXSBUaGUgYXJyYXkgdGgaXRlcmFZSBvdmVyLlxuICogQHBhcmFtIHtGdWjdGlvbngaXRlcmFZWUgVGhlIGZbmNaWuIGludmrZWQgcGVyIGlZXJhdGlvbicbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgbmVIGhcHBlZCBhcnJheScbiAqLxuZnVuYRpbgYXJyYXlNYXAoYXJyYXksIGlZXJhdGVlKSBXGgIHZhciBpbmRleCAICxLFxuICAgICAgbGVuZRoIDgYXJyYXkgPTgbnVsbCA/IDAgOiBhcnJheSsZWndGgsXGgICAgICByZXNbHQgPSBBcnJheShsZWndGgpOxuXGgIHdoaWxlICgrKluZGVIDwgbGVuZRoKSBXGgICAgcmVzdWxWluZGVXSAIGlZXJhdGVlKGFycmFWluZGVXSwgaWkZXgsIGFycmFKTtcbiAgfVxuICByZXRcmgcmVzdWxOxufVxuXGtbRbGUuZXhwbJcyAIGFycmFTWFwOxuIiwgInZhciBhcnJheUhcCAIHJlcXVpcmUoJyvXFycmFTWFwJykXGcbiqKlxuICogVGhlIGJhcUgaWwbGVtZWYXRpbgbYgYFudmFsdWVzYCBhbmQgYFudmFsdWVzSWgIHdoaWNoIGNyZWFZXMgYWcbiAqIGFycmFIGmIGBvYmplYRgIHBybBlcnRIHZhbHVlcyBjbJyZXNwbkaWnIHRvIHRoZSBwcmwZXJeSBuYWlcxuICogbYgYHBybBzYCcbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtPYmplYRIGiamVjdCBUaGUgbJqZWNIHRvIHFZXJLlxuICogQHBhcmFtIHtBcnJheXgcHJvcHMgVGhlIHBybBlcnRIGhbWVzIHRvIGdldCBYWxZXMgZmyLlxuICogQHJldHVybnMgeiamVjdHgUmVdXJucyBaGUgYXJyYXkgbYgcHJvcGVydHkgdmFsdWVzLlxuICovXGmdWjdGlvbiBiYXNlVmFsdWVzKGiamVjdCwgcHJvcHMpIHtcbiAgcmVdXJuIGFycmFTWFwKHBybBzLCBmdWjdGlvbihrZXkpIHtcbiAgICByZXRcmgbJqZWNWtleVXGgIHpOxufVxuXGtbRbGUuZXhwbJcyAIGJhcVWYWxZXMXGiLCAiLyoqXGgKiBUaGUgYmFzZSBpbXBsZWlbnRhdGlvbiBvZiBgXyaWlcAgdlaGdCBzdXBwbJIGZvciBpdGVyYXRlZSBzaGydGhhbmRzXGgKiBvciBtYXggYXJyYXkgbGVuZRoIGNoZWNrcycbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtudWiZXJIGgVGhlIGbWJlciBvZiBaWlcyBbyBpbnZvaUgYGlZXJhdGVlYCcbiAqIEBwYXJhbSBRnVuYRpbIGlZXJhdGVlIFRoZSBmdWjdGlvbiBpbnZvaVkIHBlciBpdGVyYXRpbuXGgKiBAcmVdXJucyBQXJyYXlIFJldHVybnMgdGhlIGFycmFIGmIHJlcVsdHMuXGgKicbmZbmNaWuIGJhcVUaWlcyhuLCBpdGVyYXRlZSkgexuICBYXIgaWkZXggPSAtMSxcbiAgICAgIHJlcVsdCAIEFycmFKGpOxuXGgIHdoaWxlICgrKluZGVIDwgbikgexuICAgIHJlcVsdFtpbmRleFgPSBpdGVyYXRlZShpbmRleCkXGgIHcbiAgcmVdXJuIHJlcVsdDtcbncblxubWkdWxlLmVcGydHMgPSBiYXNlVGltZXMXGiLCAidmFyIGJhcVHZXRUYWcgPSByZXFaXJlKCcuLiYXNlRVVGFnJyksXGgICAgaXNPYmplYRMaWtlIDgcmVxdWlyZSgnLipciamVjdExpaUnKTtcblxuLyoqIGBPYmplYQjdGTdHJpbmdgIHJlcVsdCByZWZlcmVuYVzLiAqLxudmFyIGFyZNUYWcgPSAnWiamVjdCBBcmdbWVudHNdJztcblxuLyoqXGgKiBUaGUgYmFzZSBpbXBsZWlbnRhdGlvbiBvZiBgXypcFyZVtZWcAuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBKngdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBYWxZWAgaXMgYWgYGFyZVtZWcAgbJqZWNLFxuICovXGmdWjdGlvbiBiYXNlSXNBcmdbWVudHModmFsdWUpIHtcbiAgcmVdXJuIGlzTJqZWNTGlrZShYWxZSkgJiYgYmFzZUdldFRhZyhYWxZSkgPTgYXJncRhZztcbncblxubWkdWxlLmVcGydHMgPSBiYXNlSXNBcmdbWVudHMXGiLCAidmFyIGJhcVJcFyZVtZWcyAIHJlcXVpcmUoJyvXJhcVJcFyZVtZWcycpLFxuICAgIGlzTJqZWNTGlrZSAIHJlcXVpcmUoJyvaXNPYmplYRMaWtlJykXGcbiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBvYmplYRQcmbyAIEiamVjdCwcmbRcGUXGcbiqKiBVcVkIHRvIGNoZWNrIGiamVjdHMgZmyIGbiBwcmwZXJaWVzLiAqLxudmFyIGhhcblBybBlcnRIDgbJqZWNUHJvdGuaGFzTduUHJvcGVydHkXGcbiqKiBCdWlsdCpbiBYWxZSByZWZlcmVuYVzLiAqLxudmFyIHBybBlcnRSXNFbnVtZXJhYmxlIDgbJqZWNUHJvdGucHJvcGVydHlJcVudWlcmFibGUXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgbGlrZWxIGFuIGBhcmdbWVudHNgIGiamVjdCcbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDAuMSwXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndWlbnRzYCBvYmplYQsXGgKiAgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzQXJndWlbnRzKGZbmNaWuKCkgeyByZXRcmgYXJndWlbnRzOyBKCkpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNBcmdbWVudHMoWzEsIDIsIDNdKTtcbiAqICvID+IGZhbHNlXGgKicbnZhciBpcFyZVtZWcyAIGJhcVJcFyZVtZWcyhmdWjdGlvbigpIHsgcmVdXJuIGFyZVtZWczsgfSgpKSA/IGJhcVJcFyZVtZWcyAIGZbmNaWuKHZhbHVlKSBXGgIHJldHVybiBpciamVjdExpaUodmFsdWUpICYmIGhhcblBybBlcnRLmNhbGwodmFsdWUsICdjYWxsZWUnKSAmJlxuICAgICFwcmwZXJeUlzRWbWVyYWJsZSjYWxsKHZhbHVlLCAnYFsbGVlJykXGOxuXGtbRbGUuZXhwbJcyAIGlzQXJndWlbnRzOxuIiwgIiqKlxuICogVGhpcyBtZXRobQgcmVdXJucyBgZmFscVgLlxuICpcbiAqIEBzdGFaWNcbiAqIEBtZWiZXJPZiBfXGgKiBAcluYUgNCxMywXGgKiBAYFZWdvcnkgVXRpbFxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYGZhbHNlYCcbiAqIEBleGFtcGxlXGgKlxuICogXyaWlcygyLCBfLnNdWJGYWxzZSkXGgKiAvLyAPiBbZmFscUsIGZhbHNlXVxuICovXGmdWjdGlvbiBzdHViRmFscUoKSBXGgIHJldHVybiBmYWxzZTtcbncblxubWkdWxlLmVcGydHMgPSBzdHViRmFscUXGiLCAidmFyIHJvbQgPSByZXFaXJlKCcuLybJyksXGgICAgcRYkZhbHNlIDgcmVxdWlyZSgnLizdHViRmFscUnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYCgKicbnZhciBmcmVlRXhwbJcyAIHRcGVvZiBleHBvcnRzIDICdvYmplYQnICYmIGVcGydHMgJiYgIWVcGydHMubmkZVRcGUgJiYgZXhwbJcztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtbRbGVgLiAqLxudmFyIGZyZWVNbRbGUgPSBmcmVlRXhwbJcyAmJiBeXBlbYgbWkdWxlIDICdvYmplYQnICYmIGvZHVsZSAmJiAhbWkdWxlLmvZGVUeXBlICYmIGvZHVsZTtcblxuLyoqIERldGVjdCBaGUgcGwdWxhciBDbtbKUyBleHRlbnNpbgYGvZHVsZSleHBvcnRzYCgKicbnZhciBtbRbGVFeHBvcnRzIDgZnJlZUvZHVsZSAmJiBmcmVlTWkdWxlLmVcGydHMgPTIGZyZWVFeHBvcnRzOxuXGvKiogQnVpbHQtaWgdmFsdWUgcmVmZXJlbmNlcygKicbnZhciBCdWZmZXIgPSBtbRbGVFeHBvcnRzIDgcmvdCCdWZmZXIgOiBbmRlZmluZWQXGcbiqIEJaWxLWluIGldGhvZCByZWZlcmVuYVzIGZvciBaGzZSBaXRoIHRoZSBzYWlIGhbWUgYXMgbRoZXIgYGxvZGFzaGAgbWVaGkcygKicbnZhciBuYXRpdmVJcJZmZlciAIEJZmZlciA/IEJZmZlcipcJZmZlciAIHVuZGVmaWlZDtcblxuLyoqXGgKiBDaGVjaMgaWYgYHZhbHVlYCBpcyBhIGJZmZlcicbiAqXGgKiBAcRhdGljXGgKiBAbWVtYmVyTYgXxuICogQHNpbmNlIDQuMywXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhIGJZmZlciwgZWxzZSBgZmFscVgLlxuICogQGVYWwbGVcbiAqXGgKiBfLmlzQnVmZmVyKGldyBCdWZmZXIoMikpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNCdWZmZXIobmVIFVpbnQQXJyYXkoMikpOxuICogLygPTgZmFscVcbiAqLxudmFyIGlzQnVmZmVyIDgbmFaXZlSXNCdWZmZXIgfHwgcRYkZhbHNlOxuXGtbRbGUuZXhwbJcyAIGlzQnVmZmVyOxuIiwgIiqKiBVcVkIGFzIHJlZmVyZWjZXMgZmyIHZhcmlvdXMgYEbWJlcmAgYucRhbnRzLiAqLxudmFyIEBWFTQUZFXlOVEVHRVIgPSAMDAMTkMjUNzQwOTkxOxuXGvKiogVXNlZCBbyBkZXRlYQgdWzaWduZWQgaWZWdlciBYWxZXMuICovXGYXIgcmVJcVpbnQgPSAvXig/OjBWzEtOVcXGQqKSQvOxuXGvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBpbmRleCcbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcGFyYWgebWJlcngWxlbmdaDNQVhfUFGRVJTlRFRVSXSBUaGUgdXBwZXIgYmbmRzIGmIGEgdmFsaWQgaWkZXguXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGluZGVLCBlbHNlIGBmYWxzZWAuXGgKicbmZbmNaWuIGlzSWkZXgodmFsdWUsIGxlbmdaCkgexuICBYXIgdHlwZSAIHRcGVvZiBYWxZTtcbiAgbGVuZRoIDgbGVuZRoIDIGbGwgPyBNQVhfUFGRVJTlRFRVSIDogbGVuZRoOxuXGgIHJldHVybiAhIWxlbmdaCAmJlxuICAgICheXBlIDICdudWiZXInIHxXGgICAgICAodHlwZSAhPSAncltYmsJyAmJiByZUlzVWludCZXNKHZhbHVlKSkpICYmXGgICAgICAgIChYWxZSA+ICxICYmIHZhbHVlICUgMSAPSAwICYmIHZhbHVlIDwgbGVuZRoKTtcbncblxubWkdWxlLmVcGydHMgPSBpcluZGVOxuIiwgInZhciBiYXNlRVVGFnIDgcmVxdWlyZSgnLifYmFzZUdldFRhZycpLFxuICAgIGlzTGVuZRoIDgcmVxdWlyZSgnLipcxlbmdaCcpLFxuICAgIGlzTJqZWNTGlrZSAIHJlcXVpcmUoJyvaXNPYmplYRMaWtlJykXGcbiqKiBgTJqZWNIRvURyaWnYCByZXNbHQgcmVmZXJlbmNlcygKicbnZhciBhcmdzVGFnIDgJtvYmplYQgQXJndWlbnRzXScsXGgICAgYXJyYXlUYWcgPSAnWiamVjdCBBcnJheVnLFxuICAgIGJvbxUYWcgPSAnWiamVjdCBCbsZWFuXScsXGgICAgZGFZVRhZyAICdbbJqZWNIERhdGVdJyxcbiAgICBlcnJvclRhZyAICdbbJqZWNIEVycmyXScsXGgICAgZnVuYRhZyAICdbbJqZWNIEZbmNaWuXScsXGgICAgbWFwVGFnIDgJtvYmplYQgTWFwXScsXGgICAgbnVtYmVyVGFnIDgJtvYmplYQgTnVtYmVyXScsXGgICAgbJqZWNVGFnIDgJtvYmplYQgTJqZWNXScsXGgICAgcmVnZXhwVGFnIDgJtvYmplYQgUmVnRXhwXScsXGgICAgcVVGFnIDgJtvYmplYQgUVXScsXGgICAgcRyaWnVGFnIDgJtvYmplYQgURyaWnXScsXGgICAgdVhahcFRhZyAICdbbJqZWNIFdlYWtNYXBdJztcblxudmFyIGFycmFQnVmZmVyVGFnIDgJtvYmplYQgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlldRhZyAICdbbJqZWNIERhdGFWaWVXScsXGgICAgZmxvYXQzMlRhZyAICdbbJqZWNIEZsbFMzJBcnJheVnLFxuICAgIGZsbFNjRUYWcgPSAnWiamVjdCBGbGhdDYQXJyYXldJyxcbiAgICBpbnQVGFnIDgJtvYmplYQgSWOEFycmFXScsXGgICAgaWMTZUYWcgPSAnWiamVjdCBJbnQxNkFycmFXScsXGgICAgaWMzJUYWcgPSAnWiamVjdCBJbnQzMkFycmFXScsXGgICAgdWludDhUYWcgPSAnWiamVjdCBVaWOEFycmFXScsXGgICAgdWludDhDbGFtcGVkVGFnIDgJtvYmplYQgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICBaWMTZUYWcgPSAnWiamVjdCBVaWMTZBcnJheVnLFxuICAgIHVpbnQzMlRhZyAICdbbJqZWNIFVpbnQzMkFycmFXScXGcbiqKiBVcVkIHRvIGlkZWaWZIGBbNcmluZRhZAgdmFsdWVzIGmIHRcGVkIGFycmFcygKicbnZhciBeXBlZEFycmFVGFncyAIHtOxudHlwZWRBcnJheVRhZNbZmxvYXQzMlRhZgPSBeXBlZEFycmFVGFnctmbGhdDYVGFnXSAXGeXBlZEFycmFVGFnctpbnQVGFnXSAIHRcGVkQXJyYXlUYWdzWludDEVGFnXSAXGeXBlZEFycmFVGFnctpbnQzMlRhZgPSBeXBlZEFycmFVGFnctaWOFRhZgPVxudHlwZWRBcnJheVRhZNbdWludDhDbGFtcGVkVGFnXSAIHRcGVkQXJyYXlUYWdzWVpbnQxNlRhZgPVxudHlwZWRBcnJheVRhZNbdWludDMyVGFnXSAIHRydWUXGeXBlZEFycmFVGFncthcmdzVGFnXSAIHRcGVkQXJyYXlUYWdzWFycmFVGFnXSAXGeXBlZEFycmFVGFncthcnJheUJZmZlclRhZgPSBeXBlZEFycmFVGFnctibsVGFnXSAXGeXBlZEFycmFVGFnctkYXRhVmlldRhZgPSBeXBlZEFycmFVGFnctkYXRlVGFnXSAXGeXBlZEFycmFVGFnctlcnJvclRhZgPSBeXBlZEFycmFVGFnctmdWjVGFnXSAXGeXBlZEFycmFVGFncttYXBUYWddIDgdHlwZWRBcnJheVRhZNbbnVtYmVyVGFnXSAXGeXBlZEFycmFVGFnctvYmplYRUYWddIDgdHlwZWRBcnJheVRhZNbcmVnZXhwVGFnXSAXGeXBlZEFycmFVGFnctzZXRUYWddIDgdHlwZWRBcnJheVRhZNbcRyaWnVGFnXSAXGeXBlZEFycmFVGFnctZWFrTWFwVGFnXSAIGZhbHNlOxuXGvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGFaWuIGmIGBfLmlzVHlwZWRBcnJheWAgdlaGdCBObRlLmpzIGwdGltaXphdGlvbnMuXGgKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSBKngdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMgeJvbxlYWIFJldHVybnMgYHRydWVgIGlmIGBYWxZWAgaXMgYSBeXBlZCBhcnJheSwgZWxzZSBgZmFscVgLlxuICovXGmdWjdGlvbiBiYXNlSXNUeXBlZEFycmFKHZhbHVlKSBXGgIHJldHVybiBpciamVjdExpaUodmFsdWUpICYmXGgICAgaXNMZWndGgodmFsdWUubGVuZRoKSAmJiAhIXRcGVkQXJyYXlUYWdzWJhcVHZXRUYWcodmFsdWUpXTtcbncblxubWkdWxlLmVcGydHMgPSBiYXNlSXNUeXBlZEFycmFOxuIiwgIiqKlxuICogVGhlIGJhcUgaWwbGVtZWYXRpbgbYgYFudWhcnlgIHdpdGhvdXQgcVwcGydCBmbIgcRvcmluZyBtZXRhZGFYScbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHtGdWjdGlvbngZnVuYyBUaGUgZnVuYRpbgdGgYFwIGFyZVtZWcyBmbIuXGgKiBAcmVdXJucyBRnVuYRpbIFJldHVybnMgdGhlIGldyBjYXBwZWQgZnVuYRpbuXGgKicbmZbmNaWuIGJhcVVbmFyeShmdWjKSBXGgIHJldHVybiBmdWjdGlvbihYWxZSkgexuICAgIHJldHVybiBmdWjKHZhbHVlKTtcbiAgfTtcbncblxubWkdWxlLmVcGydHMgPSBiYXNlVWhcnkXGiLCAidmFyIGZyZWVHbGiYWwgPSByZXFaXJlKCcuLmcmVlRxvYmFsJykXGcbiqKiBEZXRlYQgZnJlZSBYXJpYWJsZSBgZXhwbJcAuICovXGYXIgZnJlZUVcGydHMgPSBeXBlbYgZXhwbJcyAPSAnbJqZWNJyAmJiBleHBvcnRzICYmICFleHBvcnRzLmvZGVUeXBlICYmIGVcGydHMXGcbiqKiBEZXRlYQgZnJlZSBYXJpYWJsZSBgbWkdWxlYCgKicbnZhciBmcmVlTWkdWxlIDgZnJlZUVcGydHMgJiYgdHlwZWmIGvZHVsZSAPSAnbJqZWNJyAmJiBtbRbGUgJiYgIWvZHVsZSubRlVHlwZSAmJiBtbRbGUXGcbiqKiBEZXRlYQgdGhlIHBvcHVsYXIgQtbWuSlMgZXhZWzaWuIGBtbRbGUuZXhwbJcAuICovXGYXIgbWkdWxlRXhwbJcyAIGZyZWVNbRbGUgJiYgZnJlZUvZHVsZSleHBvcnRzIDPSBmcmVlRXhwbJcztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBwcmjZXNzYCBmcmtIEvZGUuanMuICovXGYXIgZnJlZVBybNlcMgPSBtbRbGVFeHBvcnRzICYmIGZyZWVHbGiYWwucHJvYVzcztcblxuLyoqIFVzZWQgdGgYWNjZXNzIGZhcRlciBObRlLmpzIGhlbHBlcnMuICovXGYXIgbmkZVVaWwgPSAoZnVuYRpboKSBXGgIHRyeSBXGgICAgLygVXNlIGBdGlsLnRcGVzYCBmbIgTmkZSqcyAxMCsuXGgICAgdmFyIHRcGVzIDgZnJlZUvZHVsZSAmJiBmcmVlTWkdWxlLnJlcXVpcmUgJiYgZnJlZUvZHVsZSyZXFaXJlKCddGlsJykudHlwZXMXGcbiAgICBpZiAodHlwZXMpIHtcbiAgICAgIHJldHVybiBeXBlcztcbiAgICBXGcbiAgICAvLyBMZWdhYkgYHBybNlcMuYmluZGluZygndXRpbCcpYCBmbIgTmkZSqcyAIDEwLlxuICAgIHJldHVybiBmcmVlUHJvYVzcyAmJiBmcmVlUHJvYVzcyiaWkaWnICYmIGZyZWVQcmjZXNzLmJpbmRpbmcoJVaWwnKTtcbiAgfSBjYXRjaCAoZSkgecbnoKSkXGcbmvZHVsZSleHBvcnRzIDgbmkZVVaWwXGiLCAidmFyIGJhcVJcRcGVkQXJyYXkgPSByZXFaXJlKCcuLiYXNlSXNUeXBlZEFycmFJyksXGgICAgYmFzZVVuYXJIDgcmVxdWlyZSgnLifYmFzZVVuYXJJyksXGgICAgbmkZVVaWwgPSByZXFaXJlKCcuLubRlVXRpbCcpOxuXGvKiBObRlLmpzIGhlbHBlciByZWZlcmVuYVzLiAqLxudmFyIGvZGVJcRcGVkQXJyYXkgPSBubRlVXRpbCAmJiBubRlVXRpbCpcRcGVkQXJyYXkXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgYxhcNpZmllZCBhcyBhIHRcGVkIGFycmFLlxuICpcbiAqIEBzdGFaWNcbiAqIEBtZWiZXJPZiBfXGgKiBAcluYUgMywLjBcbiAqIEBjYXRlZyeSBMYWnXGgKiBAcGFyYWgeypIHZhbHVlIFRoZSBYWxZSBbyBjaGVjaycbiAqIEByZXRcmzIHtibsZWFufSBSZXRcmzIGBcnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVscUgYGZhbHNlYCcbiAqIEBleGFtcGxlXGgKlxuICogXypcRcGVkQXJyYXkobmVIFVpbnQQXJyYXkpOxuICogLygPTgdHJZVxuICpcbiAqIFuaXNUeXBlZEFycmFKFtdKTtcbiAqICvID+IGZhbHNlXGgKicbnZhciBpcRcGVkQXJyYXkgPSBubRlSXNUeXBlZEFycmFIDgYmFzZVVuYXJKGvZGVJcRcGVkQXJyYXkpIDogYmFzZUlzVHlwZWRBcnJheTtcblxubWkdWxlLmVcGydHMgPSBpcRcGVkQXJyYXkXGiLCAidmFyIGJhcVUaWlcyAIHJlcXVpcmUoJyvXJhcVUaWlcycpLFxuICAgIGlzQXJndWlbnRzIDgcmVxdWlyZSgnLipcFyZVtZWcycpLFxuICAgIGlzQXJyYXkgPSByZXFaXJlKCcuLlzQXJyYXknKSxcbiAgICBpcJZmZlciAIHJlcXVpcmUoJyvaXNCdWZmZXInKSxcbiAgICBpcluZGVIDgcmVxdWlyZSgnLifaXNJbmRleCcpLFxuICAgIGlzVHlwZWRBcnJheSAIHJlcXVpcmUoJyvaXNUeXBlZEFycmFJykXGcbiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBvYmplYRQcmbyAIEiamVjdCwcmbRcGUXGcbiqKiBVcVkIHRvIGNoZWNrIGiamVjdHMgZmyIGbiBwcmwZXJaWVzLiAqLxudmFyIGhhcblBybBlcnRIDgbJqZWNUHJvdGuaGFzTduUHJvcGVydHkXGcbiqKlxuICogQJlYXRlcyBhbiBhcnJheSBvZiBaGUgZWbWVyYWJsZSBwcmwZXJeSBuYWlcyBvZiBaGUgYXJyYXktbGlrZSBgdmFsdWVgLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeypIHZhbHVlIFRoZSBYWxZSBbyBxdWVyeScbiAqIEBwYXJhbSBYmvbGVhbngaWoZXJpdGVkIFNwZWNpZnkgcmVdXJuaWnIGluaGVyaXRlZCBwcmwZXJeSBuYWlcycbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgYXJyYXkgbYgcHJvcGVydHkgbmFtZXMuXGgKicbmZbmNaWuIGFycmFTGlrZUtleXModmFsdWUsIGluaGVyaXRlZCkgexuICBYXIgaXNBcnIgPSBpcFycmFKHZhbHVlKSxcbiAgICAgIGlzQXJnIDgIWlzQXJyICYmIGlzQXJndWlbnRzKHZhbHVlKSxcbiAgICAgIGlzQnVmZiAICFpcFyciAmJiAhaXNBcmcgJiYgaXNCdWZmZXIodmFsdWUpLFxuICAgICAgaXNUeXBlIDgIWlzQXJyICYmICFpcFyZyAmJiAhaXNCdWZmICYmIGlzVHlwZWRBcnJheShYWxZSksXGgICAgICBzalwSWkZXhlcyAIGlzQXJyIHxIGlzQXJnIHxIGlzQnVmZiBfCBpcRcGUsXGgICAgICByZXNbHQgPSBzalwSWkZXhlcyA/IGJhcVUaWlcyhYWxZSsZWndGgsIFNcmluZykgOiBbXSxcbiAgICAgIGxlbmdaCAIHJlcVsdCsZWndGgXGcbiAgZmyIChYXIgaVIGluIHZhbHVlKSBXGgICAgaWYgKChpbmhlcmlZWQgfHwgaGFzTduUHJvcGVydHkuYFsbChYWxZSwgaVKSkgJiZcbiAgICAgICAgIShzalwSWkZXhlcyAmJiAoXGgICAgICAgICAgICvIFNhZmFyaSAIGhhcyBlbnVtZXJhYmxlIGBhcmdbWVudHMubGVuZRoYCBpbiBzdHJpYQgbWkZScbiAgICAgICAgICAgaVIDICdsZWndGgnIHxXGgICAgICAgICAgICvIEvZGUuanMgMCxMCBoYXMgZWbWVyYWJsZSBubtaWkZXggcHJvcGVydGllcyBvbiBidWZmZXJzLlxuICAgICAgICAgICAoaXNCdWZmICYmIChrZXkgPTgJmZnNldCcgfHwgaVIDICdwYXJlbnQnKSkgfHxcbiAgICAgICAgICAgLygUGhhbnRvbUpTIDIgaGFzIGVudWlcmFibGUgbmuLWluZGVIHBybBlcnRpZXMgbgdHlwZWQgYXJyYXlzLlxuICAgICAgICAgICAoaXNUeXBlICYmIChrZXkgPTgJJZmZlcicgfHwgaVIDICdieXRlTGVuZRoJyBfCBrZXkgPTgJJdGVPZmZzZXQnKSkgfHxcbiAgICAgICAgICAgLygUtpcCBpbmRleCBwcmwZXJaWVzLlxuICAgICAgICAgICBpcluZGVKGtleSwgbGVuZRoKVxuICAgICAgICApKSkgexuICAgICAgcmVzdWxLnBcgoaVKTtcbiAgICBXGgIHcbiAgcmVdXJuIHJlcVsdDtcbncblxubWkdWxlLmVcGydHMgPSBhcnJheUxpaVLZXlzOxuIiwgIiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBvYmplYRQcmbyAIEiamVjdCwcmbRcGUXGcbiqKlxuICogQhlYtzIGlmIGBYWxZWAgaXMgbGlrZWxIGEgcHJvdGeXBlIGiamVjdCcbiAqXGgKiBAcHJpdmFZVxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYhlYsuXGgKiBAcmVdXJucyBYmvbGVhbngUmVdXJucyBgdHJZWAgaWYgYHZhbHVlYCBpcyBhIHBybRvdHlwZSwgZWxzZSBgZmFscVgLlxuICovXGmdWjdGlvbiBpcBybRvdHlwZShYWxZSkgexuICBYXIgQRvciAIHZhbHVlICYmIHZhbHVlLmNvbnNcnVjdGyLFxuICAgICAgcHJvdGgPSAodHlwZWmIENbIgPTgJZbmNaWuJyAmJiBDdGyLnBybRvdHlwZSkgfHwgbJqZWNUHJvdGXGcbiAgcmVdXJuIHZhbHVlIDPSBwcmbztcbncblxubWkdWxlLmVcGydHMgPSBpcBybRvdHlwZTtcbiIsICIvKipcbiAqIENyZWFZXMgYSBbmFyeSBmdWjdGlvbiBaGFIGludmrZXMgYGZbmNgIHdpdGggaXRzIGFyZVtZWIHRyYWzZmybWVkLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeZbmNaWufSBmdWjIFRoZSBmdWjdGlvbiBbyBcmFwLlxuICogQHBhcmFtIHtGdWjdGlvbngdHJhbnNmbJtIFRoZSBhcmdbWVudCBcmFucZvcmuXGgKiBAcmVdXJucyBRnVuYRpbIFJldHVybnMgdGhlIGldyBmdWjdGlvbicbiAqLxuZnVuYRpbgbZlckFyZyhmdWjLCBcmFucZvcmpIHtcbiAgcmVdXJuIGZbmNaWuKGFyZykgexuICAgIHJldHVybiBmdWjKHRyYWzZmybShhcmcpKTtcbiAgfTtcbncblxubWkdWxlLmVcGydHMgPSBvdmVyQXJnOxuIiwgInZhciBvdmVyQXJnIDgcmVxdWlyZSgnLifbZlckFyZycpOxuXGvKiBCdWlsdCpbiBtZXRobQgcmVmZXJlbmNlcyBmbIgdGhvcUgdlaCBaGUgcFtZSBuYWlIGFzIGaGVyIGBsbRhchgIGldGhvZHMuICovXGYXIgbmFaXZlSVcyAIGZXJBcmcoTJqZWNLmtleXMsIEiamVjdCkXGcbmvZHVsZSleHBvcnRzIDgbmFaXZlSVcztcbiIsICJYXIgaXNQcmbRcGUgPSByZXFaXJlKCcuLpcBybRvdHlwZScpLFxuICAgIGhdGlZUtleXMgPSByZXFaXJlKCcuLuYXRpdmVLZXlzJykXGcbiqKiBVcVkIGZvciBidWlsdCpbiBtZXRobQgcmVmZXJlbmNlcygKicbnZhciBvYmplYRQcmbyAIEiamVjdCwcmbRcGUXGcbiqKiBVcVkIHRvIGNoZWNrIGiamVjdHMgZmyIGbiBwcmwZXJaWVzLiAqLxudmFyIGhhcblBybBlcnRIDgbJqZWNUHJvdGuaGFzTduUHJvcGVydHkXGcbiqKlxuICogVGhlIGJhcUgaWwbGVtZWYXRpbgbYgYFuaVcAgdhpYggZGlcndCBcmVhdCBzcGFycUgYXJyYXlzIGFzIGRlbnNlLlxuICpcbiAqIEBwcmlYXRlXGgKiBAcGFyYWgeiamVjdHgbJqZWNIFRoZSBvYmplYQgdGgcXVlcnkuXGgKiBAcmVdXJucyBQXJyYXlIFJldHVybnMgdGhlIGFycmFIGmIHBybBlcnRIGhbWVzLlxuICovXGmdWjdGlvbiBiYXNlSVcyhvYmplYQpIHtcbiAgaWYgKCFpcBybRvdHlwZShvYmplYQpKSBXGgICAgcmVdXJuIGhdGlZUtleXMobJqZWNKTtcbiAgfVxuICBYXIgcmVzdWxIDgWXGgIGZvciAodmFyIGtleSBpbiBPYmplYQobJqZWNKSkgexuICAgIGlmIChoYXNPdQcmwZXJeSjYWxsKGiamVjdCwgaVKSAmJiBrZXkgITgJNvbnNcnVjdGyJykgexuICAgICAgcmVzdWxLnBcgoaVKTtcbiAgICBXGgIHcbiAgcmVdXJuIHJlcVsdDtcbncblxubWkdWxlLmVcGydHMgPSBiYXNlSVcztcbiIsICJYXIgYXJyYXlMaWtlSVcyAIHJlcXVpcmUoJyvXFycmFTGlrZUtleXMnKSxcbiAgICBiYXNlSVcyAIHJlcXVpcmUoJyvXJhcVLZXlzJyksXGgICAgaXNBcnJheUxpaUgPSByZXFaXJlKCcuLlzQXJyYXlMaWtlJykXGcbiqKlxuICogQJlYXRlcyBhbiBhcnJheSBvZiBaGUgbduIGVudWlcmFibGUgcHJvcGVydHkgbmFtZXMgbYgYGiamVjdGAuXGgKlxuICogKipObRlOioqIEvbivYmplYQgdmFsdWVzIGFyZSBjbVyYVkIHRvIGiamVjdHMuIFNlZSBaGVcbiAqIFtFUyBzcGVjXShodHRwOivZWNtYSpbnRlcmhdGlvbmFsLmyZylYhLTIMiLjAvINlYyvYmplYQuaVcylcbiAqIGZvciBtbJlIGRldGFpbHMuXGgKlxuICogQHNYXRpYxuICogQHNpbmNlIDAuMSwXGgKiBAbWVtYmVyTYgXxuICogQGNhdGVnbJIEiamVjdFxuICogQHBhcmFtIHtPYmplYRIGiamVjdCBUaGUgbJqZWNIHRvIHFZXJLlxuICogQHJldHVybnMgeFycmFfSBSZXRcmzIHRoZSBhcnJheSBvZiBwcmwZXJeSBuYWlcycbiAqIEBleGFtcGxlXGgKlxuICogZnVuYRpbgRmvKCkgexuICogICBaGlzLmEgPSAxOxuICogICBaGlzLmIgPSAyOxuICogfVxuICpcbiAqIEZvbywcmbRcGUuYyAIDMXGgKlxuICogXyrZXlzKGldyBGbpOxuICogLygPTgWydhJywgJInXSAoaXRlcmFaWuIGyZGVyIGlzIGvdCBndWFyYWZWVkKVxuICpcbiAqIFuaVcygnaGknKTtcbiAqICvID+IFsnMCcsICcxJcbiAqLxuZnVuYRpbgaVcyhvYmplYQpIHtcbiAgcmVdXJuIGlzQXJyYXlMaWtlKGiamVjdCkgPyBhcnJheUxpaVLZXlzKGiamVjdCkgOiBiYXNlSVcyhvYmplYQpOxufVxuXGtbRbGUuZXhwbJcyAIGtleXMXGiLCAidmFyIGJhcVWYWxZXMgPSByZXFaXJlKCcuLiYXNlVmFsdWVzJyksXGgICAgaVcyAIHJlcXVpcmUoJyvaVcycpOxuXGvKipcbiAqIENyZWFZXMgYWgYXJyYXkgbYgdGhlIGbiBlbnVtZXJhYmxlIHNcmluZyBrZXllZCBwcmwZXJeSBYWxZXMgbYgYGiamVjdGAuXGgKlxuICogKipObRlOioqIEvbivYmplYQgdmFsdWVzIGFyZSBjbVyYVkIHRvIGiamVjdHMuXGgKlxuICogQHNYXRpYxuICogQHNpbmNlIDAuMSwXGgKiBAbWVtYmVyTYgXxuICogQGNhdGVnbJIEiamVjdFxuICogQHBhcmFtIHtPYmplYRIGiamVjdCBUaGUgbJqZWNIHRvIHFZXJLlxuICogQHJldHVybnMgeFycmFfSBSZXRcmzIHRoZSBhcnJheSBvZiBwcmwZXJeSBYWxZXMuXGgKiBAZXhhbXBsZVxuICpcbiAqIGZbmNaWuIEZvbygpIHtcbiAqICAgdGhpcyhIDgMTtcbiAqICAgdGhpcyiIDgMjtcbiAqIHcbiAqXGgKiBGbucHJvdGeXBlLmMgPSAzOxuICpcbiAqIFudmFsdWVzKGldyBGbpOxuICogLygPTgWzEsIDJdIChpdGVyYXRpbgbJkZXIgaXMgbmIGdYXJhbnRlZWQpXGgKlxuICogXyYWxZXMoJhpJykXGgKiAvLyAPiBbJgnLCAnaSddXGgKicbmZbmNaWuIHZhbHVlcyhvYmplYQpIHtcbiAgcmVdXJuIGiamVjdCAPSBudWxsIDgWgOiBiYXNlVmFsdWVzKGiamVjdCwgaVcyhvYmplYQpKTtcbncblxubWkdWxlLmVcGydHMgPSBYWxZXMXGiLCAidmFyIFNbWJvbCAIHJlcXVpcmUoJyvXNbWJvbCcpLFxuICAgIGNvcHlBcnJheSAIHJlcXVpcmUoJyvXNvcHlBcnJheScpLFxuICAgIGdldFRhZyAIHJlcXVpcmUoJyvXdldFRhZycpLFxuICAgIGlzQXJyYXlMaWtlIDgcmVxdWlyZSgnLipcFycmFTGlrZScpLFxuICAgIGlzURyaWnIDgcmVxdWlyZSgnLipcNcmluZycpLFxuICAgIGlZXJhdGyVGBcnJheSAIHJlcXVpcmUoJyvXlZXJhdGyVGBcnJheScpLFxuICAgIGhcFRvQXJyYXkgPSByZXFaXJlKCcuLtYXBUbFycmFJyksXGgICAgcVVGBcnJheSAIHJlcXVpcmUoJyvXNldFRvQXJyYXknKSxcbiAgICBzdHJpbmdUbFycmFIDgcmVxdWlyZSgnLifcRyaWnVGBcnJheScpLFxuICAgIHZhbHVlcyAIHJlcXVpcmUoJyvdmFsdWVzJykXGcbiqKiBgTJqZWNIRvURyaWnYCByZXNbHQgcmVmZXJlbmNlcygKicbnZhciBtYXBUYWcgPSAnWiamVjdCBNYXBdJyxcbiAgICBzZXRUYWcgPSAnWiamVjdCBTZXRdJztcblxuLyoqIEJaWxLWluIHZhbHVlIHJlZmVyZWjZXMuICovXGYXIgcltSXRlcmFbIgPSBTeWibwgPyBTeWibwuaXRlcmFbIgOiBbmRlZmluZWQXGcbiqKlxuICogQudmVydHMgYHZhbHVlYCBbyBhbiBhcnJheScbiAqXGgKiBAcRhdGljXGgKiBAcluYUgMCxLjBcbiAqIEBtZWiZXJPZiBfXGgKiBAYFZWdvcnkgTGFuZxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgYudmVydCcbiAqIEByZXRcmzIHtBcnJheXgUmVdXJucyBaGUgYudmVydGVkIGFycmFLlxuICogQGVYWwbGVcbiAqXGgKiBfLnRvQXJyYXkoeyAnYScIDEsICdiJzogMiBKTtcbiAqICvID+IFsxLCAyXVxuICpcbiAqIFudGBcnJheSgnYWJjJykXGgKiAvLyAPiBbJEnLCAnYicsICdjJcbiAqXGgKiBfLnRvQXJyYXkoMSkXGgKiAvLyAPiBbXVxuICpcbiAqIFudGBcnJheShudWxsKTtcbiAqICvID+IFtdXGgKicbmZbmNaWuIHRvQXJyYXkodmFsdWUpIHtcbiAgaWYgKCFYWxZSkgexuICAgIHJldHVybiBbXTtcbiAgfVxuICBpZiAoaXNBcnJheUxpaUodmFsdWUpKSBXGgICAgcmVdXJuIGlzURyaWnKHZhbHVlKSA/IHNcmluZRvQXJyYXkodmFsdWUpIDogYweUFycmFKHZhbHVlKTtcbiAgfVxuICBpZiAocltSXRlcmFbIgJiYgdmFsdWVbcltSXRlcmFbJdKSBXGgICAgcmVdXJuIGlZXJhdGyVGBcnJheShYWxZVtzeWJdGVyYXRvcloKSkXGgIHcbiAgdmFyIHRhZyAIGdldFRhZyhYWxZSksXGgICAgICBmdWjIDgdGFnIDIGhcFRhZyA/IGhcFRvQXJyYXkgOiAodGFnIDIHNldFRhZyA/IHNldFRvQXJyYXkgOiBYWxZXMpOxuXGgIHJldHVybiBmdWjKHZhbHVlKTtcbncblxubWkdWxlLmVcGydHMgPSBbFycmFOxuIiwgIiqanNsaWIGvZGUIHRydWUqLxudmFyIHRvQXJyYXkgPSByZXFaXJlKCdsbRhcgvdGBcnJheScpOxudmFyIGVtbppQnlOYWlIDgcmVxdWlyZSgnLilbWqaSqcuJykXGcblwidXNlIHNcmljdFwiOxuXGvKipcbiAqIHJlZVIHRvIHBhcnNlIGVtbppIGluIGEgcRyaWnICgZmluZHMgZWvamksIGUuZygOmNvZmZlZTpcbiAqLxudmFyIGVtbppTmFtZVJlZVIDgLzooWEtekEtWjAtOVcXCcXCtdKykLcXGcbiqKlxuICogcmVnZXggdGgdHJpbSBaGlZXNwYWNlXGgKiBcUgaWzdGVhZCBvZiBTdHJpbmcucHJvdGeXBlLnRyaWoKSBmbIgSUUIHNcHBvcnRcbiAqLxudmFyIHRyaWTcGFjZVJlZVIDgLbXFxzXFxRkVGRlxceEEwXStWxccxcdUZFRkZcXHhBMFrJCnOxuXGvKipcbiAqIFJlbWZXMgYsbzIGuIGVpdGhlciBzaWRlXGgKiBvZiBaGUgcRyaWnIGlmIHByZXNlbnRcbiAqIEBwYXJhbSAgeNcmluZgcRyXGgKiBAcmVdXJuIHtzdHJpbmdXGgKicbmZbmNaWuIHNcmlwQsbzIChzdHIpIHtcbiAgdmFyIGNvbGuSWkZXggPSBzdHIuaWkZXhPZignOicpOxuICBpZiAoYsbJbmRleCA+ICxKSBXGgICAgLygOmVtbppOiAoaHRcDovLddylbWqaSjaGVhdCzaGVldCjbvKVxuICAgIGlmIChjbxvbkluZGVIDPSBzdHIubGVuZRoICgMSkgexuICAgICAgcRyIDgcRyLnNYnNcmluZygwLCBjbxvbkluZGVKTtcbiAgICAgIHJldHVybiBzdHJpcENvbGucyhzdHIpOxuICAgIHgZWxzZSBXGgICAgICBzdHIgPSBzdHIucVicRyKGNvbGuSWkZXggKyAxKTtcbiAgICAgIHJldHVybiBzdHJpcENvbGucyhzdHIpOxuICAgIHcbiAgfVxuXGgIHJldHVybiBzdHIXGXGcbiqKlxuICogQWRkcyBjbxvbnMgdGgZWlaGVyIHNpZGVcbiAqIGmIHRoZSBzdHJpbmdcbiAqIEBwYXJhbSBcRyaWnfSBzdHJcbiAqIEByZXRcmgeNcmluZcbiAqLxuZnVuYRpbgdJhcENvbGucyAocRyKSBXGgIHJldHVybiAodHlwZWmIHNciAPTgJNcmluZycgJiYgcRyLmxlbmdaCA+IDApIDgJzonICsgcRyICsgJzonIDogcRyOxufVxuXGvKipcbiAqIEVucVyZSBaGFIHRoZSBbJkIGlzIHdyYXBwZWQgaWgYsbzXGgKiBieSBvbmxIGFkZGluZyBaGVtLCBpZiBaGVIGFyZSBubQgdGhlcmUuXGgKiBAcGFyYWgeNcmluZgcRyXGgKiBAcmVdXJuIHtzdHJpbmdXGgKicbmZbmNaWuIGVucVyZUNvbGucyAocRyKSBXGgIHJldHVybiAodHlwZWmIHNciAPTgJNcmluZycgJiYgcRyWzBdICEPSAnOicpIDgdJhcENvbGucyhzdHIpIDogcRyOxufVxuXGvLyBObgcBhYluZyBtYXJrLCBzblIGVtbRpYucyBoYXZlIHRoZWuIElJMgdGhlICdWYXJpYWIEZvcmnLFxuLygdhpYggcHJvdmlkZXMgbWyZSBpbmZvcmhdGlvbiBzbyBaGFIGVtbRpYucyBjYWgYmUgcmVuZGVyZWQgYXNcbivIGvcmUgYsbJmdWwgZJhcGhpYMuIEZFMEUgaXMgYSBbmljbRlIHRleHQgdmVyclvbiwgdhlcmUgYXMgRkUwRlxuLygchvdWxkIGJlIHJlbmRlcmVkIGFzIGEgZJhcGhpYFsIHZlcnNpbuIFRoZSBjbRlIGdyYWNlZnVsbHkgZGVncmFkZXMuXGYXIgTkOXNQQUNJTkdfTUFSSyAIFNcmluZymcmtQhhckNvZGUoNjUwMzkpOyAvLyANTAzOSAtICdcdUZFMEYnICgMHhGRTBGOxudmFyIGvblNwYWNpbmdSZWdleCAIGldyBSZWdFeHAoTkOXNQQUNJTkdfTUFSSywgJcnKVxuXGvLyBSZWvdmUgdGhlIGvbizcGFjaWnLWhcmsgZnJvbSBaGUgYkZSwgbmVZXIgcVuZCBhIHNcmlwcGVkIHZlcnNpbcbivIHRvIHRoZSBjbGllbnQsIGFzIGlIGtpbGxzIGdyYXBoaWNhbCBlbWaWNvbnMuXGmdWjdGlvbiBzdHJpcETQiAoYkZSkgexuICByZXRcmgYkZSyZXBsYWNlKGvblNwYWNpbmdSZWdleCwgJycpOxufTtcblxuLygUmVZXJzZWQgaGFzaCBYWJsZSwgdhlcmUgYXMgZWvamlCeUhbWUgYudGFpbnMgYSBIGhlYXJOiAnXHUyNzYJyBXGvLyBkaWNaWuYXJIGVtbppQnlDbRlIGNvbnRhaWzIHsgXHUyNzYOiAnaGVhcnQnIHuIFRoZSBjbRlcyBhcmUgbmybWFsaXplZFxuLygdGgdGhlIHRleHQgdmVyclvbicbnZhciBlbWqaUJQkZSAIEiamVjdCrZXlzKGVtbppQnlOYWlKSyZWRYUoZnVuYRpboaCxrKSBXGgIGhbcRyaXBOUIoZWvamlCeUhbWVbapXSAIGsXGgIHJldHVybiBoOxufSwgepOxuXGvKipcbiAqIEVtbppIGhbWVzcGFjZVxuICovXGYXIgRWvamkgPSBXGgIGVtbppOiBlbWqaUJTmFtZSxcbnXGcbiqKlxuICogZVIGVtbppIGNvZGUgZnJvbSBuYWlLiByZXRcmgZWvamkgYkZSBiYWNrIGlmIGNvZGUgaXMgcGFzcVkIGluLlxuICogQHBhcmFtICBcRyaWnfSBlbWqaVxuICogQHJldHVybiBcRyaWnfVxuICovXGFbWqaSfZVIDgZnVuYRpbgXdldCAoZWvamkpIHtcbiAgaWYgKGVtbppQnlDbRlWNcmlwTlNCKGVtbppKVpIHtcbiAgICByZXRcmgZWvamkXGgIHgZWxzZSBpZiAoZWvamlCeUhbWUuaGFzTduUHJvcGVydHkoZWvamkpKSBXGgICAgcmVdXJuIGVtbppQnlOYWlWVtbppXTtcbiAgfVxuXGgIHJldHVybiBlbnNcmVDbxvbnMoZWvamkpOxufTtcblxuLyoqXGgKiBnZXQgZWvamkgYkZSBmcmtIDplbWqaTogcRyaWnIGyIGhbWVcbiAqIEBwYXJhbSAgeNcmluZgZWvamlcbiAqIEByZXRcmgeNcmluZcbiAqLxuRWvamkuZVIDgZnVuYRpbgZVIChlbWqaSkgexuICBlbWqaSAIHNcmlwQsbzKGVtbppKTtcblxuICByZXRcmgRWvamkuXdldChlbWqaSkXGOxuXGvKipcbiAqIGZpbmQgdGhlIGVtbppIGJIGVpdGhlciBjbRlIGyIGhbWVcbiAqIEBwYXJhbSBcRyaWnfSBuYWlTJDbRlIFRoZSBlbWqaSBbyBmaWkLCBlaXRoZXIgYGNvZmZlZWAsIGAYmZmVlOmAgbIgYFxMjYxNWAXGgKiBAcmVdXJuIHtvYmplYRXGgKicbkVtbppLmZpbmQgPSBmdWjdGlvbiBmaWkIChuYWlTJDbRlKSBXGgIHJldHVybiBFbWqaSmaWkQnlOYWlKGhbWVPckNvZGUpIHxIEVtbppLmZpbmRCeUNvZGUobmFtZUyQkZSkXGOxuXGvKipcbiAqIGZpbmQgdGhlIGVtbppIGJIGhbWVcbiAqIEBwYXJhbSBcRyaWnfSBuYWlIFRoZSBlbWqaSBbyBmaWkIGVpdGhlciBgYmZmVlYCBvciBgOmNvZmZlZTpgOxuICogQHJldHVybiBbJqZWNfVxuICovXGFbWqaSmaWkQnlOYWlIDgZnVuYRpbgZmluZEJTmFtZSAobmFtZSkgexuICBYXIgcRyaXBwZWQgPSBzdHJpcENvbGucyhuYWlKTtcbiAgdmFyIGVtbppIDgZWvamlCeUhbWVbcRyaXBwZWRdOxuXGgIHJldHVybiBlbWqaSA/IChIGVtbppOiBlbWqaSwgaVOiBzdHJpcHBlZCBKSAIHVuZGVmaWlZDtcbnXGcbiqKlxuICogZmluZCBaGUgZWvamkgYnkgYkZSAoZWvamkpXGgKiBAcGFyYWgeNcmluZgYkZSBUaGUgZWvamkgdGgZmluZDsgZmyIGVYWwbGUgYFxMjYxNWAgbIgYFxMjYxNGBcbiAqIEByZXRcmgeiamVjdHcbiAqLxuRWvamkuZmluZEJQkZSAIGZbmNaWuIGZpbmRCeUNvZGUgKGNvZGUpIHtcbiAgdmFyIHNcmlwcGVkIDgcRyaXBOUIoYkZSkXGgIHZhciBuYWlIDgZWvamlCeUNvZGVbcRyaXBwZWRdOxuXGgICvIGxvbtcCBlbWqaSBbyBlbnNcmUgdGhlIFZhcmlhbnQgRmybSBpcyByZXRcmlZFxuICByZXRcmgbmFtZSA/IChIGVtbppOiBlbWqaUJTmFtZVtuYWlXSwgaVOiBuYWlIHpIDogdWkZWZpbmVkOxufTtcblxuXGvKipcbiAqIENoZWNrIGlmIGFuIGVtbppIGlzIGtubduIGJIHRoaXMgbGlicmFyeVxuICogQHBhcmFtIHtzdHJpbmdIGhbWVPckNvZGUgVGhlIGVtbppIHRvIHZhbGlkYXRlLCBlaXRoZXIgYGNvZmZlZWAsIGAYmZmVlOmAgbIgYFxMjYxNWAXGgKiBAcmVdXJuIHtvYmplYRXGgKicbkVtbppLmhhcVtbppIDgZnVuYRpbgaGFzRWvamkgKGhbWVPckNvZGUpIHtcbiAgcmVdXJuIEVtbppLmhhcVtbppQnlOYWlKGhbWVPckNvZGUpIHxIEVtbppLmhhcVtbppQnlDbRlKGhbWVPckNvZGUpOxufTtcblxuLyoqXGgKiBDaGVjayBpZiBhbiBlbWqaSBaXRoIGdpdmVuIGhbWUgaXMgavdgYnkgdGhpcyBsaWJyYXJXGgKiBAcGFyYWgeNcmluZgbmFtZSBUaGUgZWvamkgdGgdmFsaWRhdGUgZWlaGVyIGBjbZmZWVgIGyIGAYmZmVlOmAXGgKiBAcmVdXJuIHtvYmplYRXGgKicbkVtbppLmhhcVtbppQnlOYWlIDgZnVuYRpbgaGFzRWvamlCeUhbWUgKGhbWUpIHtcbiAgdmFyIHJlcVsdCAIEVtbppLmZpbmRCeUhbWUobmFtZSkXGgIHJldHVybiAhIXJlcVsdCAmJiByZXNbHQuaVIDPSBzdHJpcENvbGucyhuYWlKTtcbnXGcbiqKlxuICogQhlYsgaWYgYSBnaXZlbiBlbWqaSBpcyBrbmbiBieSBaGlzIGxpYnJhcnlcbiAqIEBwYXJhbSBcRyaWnfSBjbRlIFRoZSBlbWqaSBbyBYWxpZGFZTsgZmyIGVYWwbGUgYFxMjYxNWAgbIgYFxMjYxNGBcbiAqIEByZXRcmgeiamVjdHcbiAqLxuRWvamkuaGFzRWvamlCeUNvZGUgPSBmdWjdGlvbiBoYXNFbWqaUJQkZSAoYkZSkgexuICBYXIgcmVzdWxIDgRWvamkuZmluZEJQkZShjbRlKTtcbiAgcmVdXJuICEhcmVzdWxICYmIHNcmlwTlNCKHJlcVsdClbWqaSkgPTIHNcmlwTlNCKGNvZGUpOxufTtcblxuLyoqXGgKiBnZXQgZWvamkgbmFtZSBmcmtIGNvZGVcbiAqIEBwYXJhbSAgeNcmluZgZWvamlcbiAqIEBwYXJhbSAgeJvbxlYWIGluYxZGVDbxvbnMgchvdWxkIHRoZSByZXNbHQgaWjbHVkZSBaGUgOjpcbiAqIEByZXRcmgeNcmluZcbiAqLxuRWvamkudhpYggPSBmdWjdGlvbiBaGljaCAoZWvamlfYkZSwgaWjbHVkZUNvbGucykgexuICBYXIgYkZSAIHNcmlwTlNCKGVtbppXNvZGUpOxuICBYXIgdyZCAIGVtbppQnlDbRlWNvZGVdOxuXGgIHJldHVybiBpbmNsdWRlQsbzIDgdJhcENvbGucyhbJkKSAIHdvcmQXGOxuXGvKipcbiAqIGVtbppZnkgYSBzdHJpbmcgKHJlcGxhYUgOmVtbppOiBaXRoIGFuIGVtbppKVxuICogQHBhcmFtICBcRyaWnfSBzdHJcbiAqIEBwYXJhbSAgeZbmNaWufSBvbltaXNzaWnIChnZXRzIGVtbppIGhbWUgdlaGdCAOiBhbmQgcmVdXJucyBhIHBybBlciBlbWqaSBpZiBubyBlbWqaSBYXMgZmbmQpXGgKiBAcGFyYWgIHtmdWjdGlvbngZmybWFIChcmFwIHRoZSByZXRcmlZCBlbWqaSBpbiBhIGNcRvbSBlbGVtZWKVxuICogQHJldHVybiBcRyaWnfVxuICovXGFbWqaSlbWqaWZIDgZnVuYRpbgZWvamlmeSAocRyLCBvbltaXNzaWnLCBmbJtYXQpIHtcbiAgaWYgKCFzdHIpIHJldHVybiAnJztcblxuICByZXRcmgcRyLnNwbGlKGVtbppTmFtZVJlZVKSAvLyBwYXJzZSBlbWqaSBaWEgcmVnZXhcbiAgICAgICAgICAgICtYXAoZnVuYRpbgcGFycVFbWqaShzLCBpKSBXGgICAgICAgICAgICAgICvIGVZXJIHNlYuZCBlbGVtZWIGlzIGFuIGVtbppLCBlLmcuIFwidGVzdCAZmFzdFmbJYXJkOlwiIC+IFsgXCJZXNIFwiLCBcImZhcRfZmydFyZFwiIFcbiAgICAgICAgICAgICAgaWYgKGkgJSAyIDPSAwKSByZXRcmgcztcbiAgICAgICAgICAgICAgdmFyIGVtbppIDgRWvamkuXdldChzKTtcbiAgICAgICAgICAgICAgdmFyIGlzTWlzcluZyAIGVtbppLmluZGVTYoJzonKSA+ICxOxuXGgICAgICAgICAgICAgIGlmIChpcpcNpbmcgJiYgdHlwZWmIGuXpcNpbmcgPTICdmdWjdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXRcmgbfbWlzcluZyhzKTtcbiAgICAgICAgICAgICAgfVxuXGgICAgICAgICAgICAgIGlmICghaXNNaXNzaWnICYmIHRcGVvZiBmbJtYXQgPTICdmdWjdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXRcmgZmybWFKGVtbppLCBzKTtcbiAgICAgICAgICAgICAgfVxuXGgICAgICAgICAgICAgIHJldHVybiBlbWqaTtcbiAgICAgICAgICAgIHpXGgICAgICAgICAgICAuampbignJykgLygYudmVydCBiYWNrIHRvIHNcmluZxuICAXGOxuXGvKipcbiAqIHJldHVybiBhIHJhbmRvbSBlbWqaVxuICogQHJldHVybiBcRyaWnfVxuICovXGFbWqaSyYWkbgPSBmdWjdGlvbiByYWkbgKCkgexuICBYXIgZWvamlLZXlzIDgTJqZWNLmtleXMoZWvamlCeUhbWUpOxuICBYXIgcmFuZGtSWkZXggPSBNYXRoLmZsbyKEhdGgucmFuZGtKCkgKiBlbWqaUtleXMubGVuZRoKTtcbiAgdmFyIGtleSAIGVtbppSVctyYWkbJbmRleFXGgIHZhciBlbWqaSAIEVtbppLlnZXQoaVKTtcbiAgcmVdXJuIHsgaVOiBrZXksIGVtbppOiBlbWqaSBOxufVxuXGvKipcbiAqICByZXRcmgYWgYsbGVjdGlvbiBvZiBwbRlbnRpYWwgZWvamkgbWFYhlcxuICogIEBwYXJhbSBcRyaWnfSBzdHJcbiAqICBAcmVdXJuIHtBcnJheSTJqZWNPncbiAqLxuRWvamkucVhcmNoIDgZnVuYRpbgcVhcmNoIChzdHIpIHtcbiAgdmFyIGVtbppSVcyAIEiamVjdCrZXlzKGVtbppQnlOYWlKTtcbiAgdmFyIGhdGNoZXIgPSBzdHJpcENvbGucyhzdHIpXGgIHZhciBtYXRjaGluZtleXMgPSBlbWqaUtleXMuZmlsdGVyKGZbmNaWuKGtleSkgexuICAgIHJldHVybiBrZXkudGTdHJpbmcoKSpbmRleEmKGhdGNoZXIpIDPSAwOxuICBKTtcbiAgcmVdXJuIGhdGNoaWnSVcytYXAoZnVuYRpboaVKSBXGgICAgcmVdXJuIHtcbiAgICAgIGtleTogaVLFxuICAgICAgZWvamkIEVtbppLlnZXQoaVKSxcbiAgICBOxuICBKTtcbncblxuLyoqXGgKiBbmVtbppZnkgYSBzdHJpbmcgKHJlcGxhYUgZWvamkgdlaCAZWvamkKVxuICogQHBhcmFtICBcRyaWnfSBzdHJcbiAqIEByZXRcmgeNcmluZcbiAqLxuRWvamkudWlbWqaWZIDgZnVuYRpbgdWlbWqaWZIChzdHIpIHtcbiAgaWYgKCFzdHIpIHJldHVybiAnJztcbiAgdmFyIHdvcmRzIDgdGBcnJheShzdHIpOxuXGgIHJldHVybiBbJkcytYXAoZnVuYRpbodyZCkgexuICAgIHJldHVybiBFbWqaSaGljaChbJkLCBcnVlKSBfCBbJkOxuICBKSqbluKCcnKTtcbnXGcbiqKlxuICogcmVwbGFjZSBlbWqaXMgdlaCByZXBsYWNlbWVudCBYWxZVxuICogQHBhcmFtIHtzdHJpbmdIHNclxuICogQHBhcmFtIHtmdWjdGlvbnxzdHJpbmdIHRoZSBzdHJpbmcgbIgYFsbGJhYsgZnVuYRpbgdGgcmVwbGFjZSBaGUgZWvamkgdlaFxuICogQHBhcmFtIHtibsZWFufSBzaGbGQgdHJhaWxpbmcgdhpdGVzcGFjZXMgYmUgYxlYWlZDgRGVmYXVsdHMgZmFscVcbiAqIEByZXRcmgeNcmluZcbiAqLxuRWvamkucmVwbGFjZSAIGZbmNaWuIHJlcGxhYUgKHNciwgcmVwbGFjZWlbnQsIGNsZWFuUBhYVzKSBXGgIGlmICghcRyKSByZXRcmgJycXGcbiAgdmFyIHJlcGxhYUgPSBeXBlbYgcmVwbGFjZWlbnQgPTICdmdWjdGlvbicgPyByZXBsYWNlbWVudCAIGZbmNaWuKCkgeyByZXRcmgcmVwbGFjZWlbnQIHXGgIHZhciBbJkcyAIHRvQXJyYXkocRyKTtcblxuICBYXIgcmVwbGFjZWQgPSBbJkcytYXAoZnVuYRpbodyZCwgaWRKSBXGgICAgdmFyIGVtbppIDgRWvamkuZmluZEJQkZShbJkKTtcblxuICAgIGlmIChlbWqaSAmJiBjbGVhblNwYWNlcyAmJiBbJkctpZHggKyAxXSAPTgJyAnKSBXGgICAgICBbJkctpZHggKyAxXSAICcnOxuICAgIHcblxuICAgIHJldHVybiBlbWqaSA/IHJlcGxhYUoZWvamkpIDogdyZDtcbiAgfSkuampbignJykXGcbiAgcmVdXJuIGNsZWFuUBhYVzIDgcmVwbGFjZWQucmVwbGFjZShcmltUBhYVSZWdleCwgJycpIDogcmVwbGFjZWQXGOxuXGcbiqKlxuICogcmVtbZlIGFsbCBlbWqaXMgZnJvbSBhIHNcmluZxuICogQHBhcmFtIHtzdHJpbmdIHNclxuICogQHJldHVybiBcRyaWnfVxuICovXGFbWqaSzdHJpcCAIGZbmNaWuIHNcmlwIChzdHIpIHtcbiAgcmVdXJuIEVtbppLnJlcGxhYUocRyLCAnJywgdHJZSkXGOxuXGtbRbGUuZXhwbJcyAIEVtbppOxuIiwgImvZHVsZSleHBvcnRzIDgcmVxdWlyZSgnLisaWIvZWvamknKTsiLCAiLyohXGgIENvcHlyaWdodCAoYykgMjAxOCBKZWQgVFcuLlxuICBMaWNlbnNlZCBbmRlciBaGUgTUlUIExpYVucUgKEJVCksIHNlZVxuICBodHRwOivamVkdFcuLmdpdGhYipbyjbGFzchbWVzXGqLxuLyogZxvYmFsIGRlZmluZSAqLxuXGoZnVuYRpbgKCkgexuXHQndXNlIHNcmljdCcXGcblxdmFyIGhhcbiAIHtLmhhcblBybBlcnROxuXGcdGZbmNaWuIGNsYXNzTmFtZXMoKSBXGcdFxdmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndWlbnRzLmxlbmdaDsgaSsrKSBXGcdFxXHRYXIgYXJnIDgYXJndWlbnRzWldOxuXHRcdFxaWYgKCFhcmcpIGNvbnRpbnVlOxuXGcdFxXHRYXIgYXJnVHlwZSAIHRcGVvZiBhcmcXGcblxXHRcdGlmIChhcmdUeXBlIDPSAncRyaWnJyBfCBhcmdUeXBlIDPSAnbnVtYmVyJykgexuXHRcdFxXHRjbGFzcVzLnBcgoYXJnKTtcblxXHRcdHgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSBXGcdFxXHRcdGlmIChhcmcubGVuZRoKSBXGcdFxXHRcdFxdmFyIGlubmVyIDgYxhcNOYWlcyhcHBseShudWxsLCBhcmcpOxuXHRcdFxXHRcdGlmIChpbmlcikgexuXHRcdFxXHRcdFxYxhcNlcywdXNoKGlubmVyKTtcblxXHRcdFxXHRXGcdFxXHRcdHcblxXHRcdHgZWxzZSBpZiAoYXJnVHlwZSAPTgJiamVjdCcpIHtcblxXHRcdFxaWYgKGFyZybNcmluZyAPTgTJqZWNLnBybRvdHlwZSbNcmluZykgexuXHRcdFxXHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblxXHRcdFxXHRcdGlmIChoYXNPduYFsbChhcmcsIGtleSkgJiYgYXJnWtleVpIHtcblxXHRcdFxXHRcdFxYxhcNlcywdXNoKGtleSkXGcdFxXHRcdFxXHRXGcdFxXHRcdFxfVxuXHRcdFxXHRIGVscUgexuXHRcdFxXHRcdGNsYXNzZXMucHVzaChhcmcudGTdHJpbmcoKSkXGcdFxXHRcdHcblxXHRcdHcblxXHRXGcblxXHRyZXRcmgYxhcNlcyqbluKCcgJykXGcdHcblxuXHRpZiAodHlwZWmIGvZHVsZSAhPTgJVuZGVmaWlZCcgJiYgbWkdWxlLmVcGydHMpIHtcblxXHRjbGFzchbWVzLmRlZmFbHQgPSBjbGFzchbWVzOxuXHRcdGvZHVsZSleHBvcnRzIDgYxhcNOYWlcztcblxfSBlbHNlIGlmICheXBlbYgZGVmaWlIDPSAnZnVuYRpbnICYmIHRcGVvZiBkZWZpbmUuYWkIDPSAnbJqZWNJyAmJiBkZWZpbmUuYWkKSBXGcdFxLygcmVnaXNZXIgYXMgJNsYXNzbmFtZXMnLCBjbzaXNZWIHdpdGggbnBtIHBhYthZUgbmFtZVxuXHRcdGRlZmluZSgnYxhcNuYWlcycsIFtdLCBmdWjdGlvbiAoKSBXGcdFxXHRyZXRcmgYxhcNOYWlcztcblxXHRKTtcblxfSBlbHNlIHtcblxXHRaWkbcuYxhcNOYWlcyAIGNsYXNzTmFtZXMXGcdHcbnoKSkXGiLCAiXCJcUgcRyaWNXCIXGPYmplYQuZGVmaWlUHJvcGVydHkoZXhwbJcywgXCJfXVzTWkdWxlXCIsIHsgdmFsdWUIHRydWUgfSkXGvKipcbiAqIEhlbHBlciBmdWjdGlvbiBmbIgZXhoYXVzdGlZSBjaGVjaMgbYgZGlzYJpbWluYXRlZCBbmlvbnMuXGgKiBodHRwczovLJhcFyYXQuZlYmvaMuaWvdHlwZXNjcmlwdCkbNzLRcGVzLRpcNyaWpbmFZWQtdWpbzLmhbWxcbiAqXGgKiBAZXhhbXBsZVxuICpcbiAqICAgIHRcGUgQSAIHteXBlOiAnYSdOxuICogICAgdHlwZSBCIDgeRcGUICdiJXGgKiAgICBeXBlIFVuaWuIDgQSBIEIXGgKlxuICogICAgZnVuYRpbgZGTbldGhpbmcoYXJnOiBVbmlvbikgexuICogICAgICBpZiAoYXJnLnRcGUgPTICdhJykgexuICogICAgICAgIHJldHVybiBzbldGhpbmcXGgKiAgICAgIHcbiAqXGgKiAgICAgIGlmIChhcmcudHlwZSAPTgJInKSBXGgKiAgICAgICAgcmVdXJuIHNvbWVaGluZVscUXGgKiAgICAgIHcbiAqXGgKiAgICAgICvIFRTIHdpbGwgZXJybIgaWYgdGhlcmUgYXJlIGaGVyIHRcGVzIGluIHRoZSBbmlvblxuICogICAgICAvLyBXaWxsIHRocmIGFuIEVycmyIHdoZWgYFsbGVkIGFIHJbnRpbWUuXGgKiAgICAgICvIFVzZSBgYXNzZXJTmVZXIoYXJnLCBcnVlKWAgaWzdGVhZCBbyBmYWlsIHNpbGVudGxLlxuICogICAgICByZXRcmgYXNzZXJTmVZXIoYXJnKTtcbiAqICAgIHcbiAqLxuZnVuYRpbgYXNzZXJTmVZXIodmFsdWUsIGvVGhybcpIHtcbiAgICBpZiAobmUaHJvdykgexuICAgICAgICByZXRcmgdmFsdWUXGgICAgfVxuICAgIHRocmIGldyBFcnJvcihcIlVuaGFuZGxlZCBkaXNjcmltaWhdGVkIHVuaWuIGlbWJlcjogXCIgKyBKUOLnNcmluZlmeShYWxZSkpOxufVxuZXhwbJcyhcNlcnROZXZlciAIGFzcVydEldmVyOxuZXhwbJcykZWZhdWxIDgYXNzZXJTmVZXIXGiLCAiLyohXGcbkpTWmlwIHYzLjEwLjAgLSBBIEphdmFTYJpcHQgYxhcMgZmyIGdlbmVyYXRpbmcgYWkIHJlYWRpbmcgemlwIGZpbGVzXGaHRcDovLNdWFydGsuYtLpzemlwPlxuXGoYykgMjAwOSyMDEIFNdWFydCBLbmlnaHRsZXkgPHNdWFydCBbYXRdIHNdWFydGsuYtPlxuRHVhbCBsaWNlbmNlZCBbmRlciBaGUgTUlUIGxpYVucUgbIgRBMdjMuIFNlZSBodHRwczovLJhdynaXRodWIuYtLNdWsvanNaXAvbWFpbiMSUNFTlNFLmhcmtkbduLlxuXGKUppcCBcVzIHRoZSBsaWJyYXJIHBhagcmVsZWFzZWQgdWkZXIgdGhlIEJVCBsaWNlbnNlIDpcbmhdHBzOivZlaHViLmNvbSubRlYEvcGFrbyibGiLhaWvTElDRUTRVxuKicblxuIWZbmNaWuKGUpelmKFwibJqZWNXCIPXRcGVvZiBleHBvcnRzJiZcInVuZGVmaWlZFwiITeXBlbYgbWkdWxlKWvZHVsZSleHBvcnRzPWUoKTtlbHNlIGlmKFwiZnVuYRpbcIjdHlwZWmIGRlZmluZSYmZGVmaWlLmFtZClkZWZpbmUoWsZSkZWxzZXsoXCJbmRlZmluZWRcIiEdHlwZWmIHdpbmRvdzaWkbcXCJbmRlZmluZWRcIiEdHlwZWmIGdsbJhbDnbGiYWwXCJbmRlZmluZWRcIiEdHlwZWmIHNlbGY/cVsZjpaGlzKSKUppcDlKClfShmdWjdGlvbigpeJldHVybiBmdWjdGlvbiBzKGEsbyxoKXtmdWjdGlvbiBKHIsZSlaWYoIWbclpelmKCFhWJdKXtYXIgdDcImZbmNaWuXCIPXRcGVvZiByZXFaXJlJiZyZXFaXJlOlmKCFlJiZKXJldHVybiBKHIsITApOlmKGwpcmVdXJuIGwociwhMCkdmFyIGbmVIEVycmyKFwiQFubmIGZpbmQgbWkdWxlICdcIityKwiJwiKTtaHJvdyBuLmNvZGUXCJNTRVTEVfTkUXZPVUEXCIsbnYXIgaTvWJdPXtleHBvcnRzOntfTthWJdWzBdLmNhbGwoaSleHBvcnRzLGZbmNaWuKGUpeZhciBPWFbclbMVbZVcmVdXJuIHUodHxZSlLGksaSleHBvcnRzLHMsYSxvLGgpfXJldHVybiBvWJdLmVcGydHNZmyKHZhciBsPVwiZnVuYRpbcIjdHlwZWmIHJlcXVpcmUmJnJlcXVpcmUsZTwOUaCsZWndGgZSsrKXUoaFtlXSkcmVdXJuIHVKHsxOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGQZShcIivdXRpbHNcIiksYzlKFwiLizdXBwbJXCIpLHAXCJBQkNERUZHSElKSxNTkQUVJTVFVWVhZWmFiYRlZmdoaWprbGubBxcnNdXZeHlMDEyMzQNjcOSsvPVwiOIuZWjbRlPWZbmNaWuKGUpeZvcihYXIgdCxyLGsaSxzLGEsbyxoPVtdLHUMCxsPWUubGVuZRoLGYbCxjPVwicRyaWnXCIhPTkLmdldFRcGVPZihlKTtPGUubGVuZRoOylmPWwtdSxuPWM/KHQZVtKytdLHIdTxsPVbdSsrXTowLHUbDlWUrKMCkKHQZSjaGFyQkZUFKHUrKykscjPGw/ZSjaGFyQkZUFKHUrKykMCxPGw/ZSjaGFyQkZUFKHUrKykMCksaTPjyLHMKDMmdCkPDRcj+NCxhPTEZjoMTUmcikPDJbj+NjoNCxvPTIZjMyZuOjYLGgucHVzaChwLmNoYXJBdChpKStwLmNoYXJBdChzKStwLmNoYXJBdChhKStwLmNoYXJBdChvKSkcmVdXJuIGguampbihcIlwiKXscikZWNvZGUZnVuYRpboZSldmFyIHQscixuLGkscyxhLGMCxoPTAsdTcImRhdGEXCIaWYoZSzdWJzdHIoMCxLmxlbmdaCkPTKXRocmIGldyBFcnJvcihcIkludmFsaWQgYmFzZTYIGlucHVLCBpdCBsbrcyBsaWtlIGEgZGFYSBcmwuXCIpOZhciBsLGYMyooZTlLnJlcGxhYUoLteQSaYSMCXFwrXFwvXFwXSnLFwiXCIpKSsZWndGgvNDtpZihlLmNoYXJBdChlLmxlbmdaCxKTPXAuYhhckFKDYKSYmZitLGUuYhhckFKGUubGVuZRoLTIpPTcCjaGFyQXQoNjQpJiZmLSsZiUxITwKXRocmIGldyBFcnJvcihcIkludmFsaWQgYmFzZTYIGlucHVLCBiYWQgYudGVudCBsZWndGguXCIpOZvcihsPWMudWludDhhcnJheTuZXcgVWludDhBcnJheSgwfGYpOmldyBBcnJheSgwfGYpOZSsZWndGgKXQcCpbmRleEmKGUuYhhckFKGrKykpPDwyfChpPXAuaWkZXhPZihlLmNoYXJBdChvKyspKSk+PjQscjoMTUmaSkPDRKHMcCpbmRleEmKGUuYhhckFKGrKykpKT+MixuPSgzJnMpPDwfChhPXAuaWkZXhPZihlLmNoYXJBdChvKyspKSksbFtoKytdPXQsNjQhPTzJiYobFtoKytdPXIpLDYITYSYmKGxbaCsrXTuKTtyZXRcmgbHLHtcIivcVwcGydFwiOjMwLFwiLidGlscwiOjMyfVsMjpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLVdGVybmFsXCIpLGkZShcIivcRyZWFtLRhdGFXbJrZXJcIiksczlKFwiLizdHJlYWvQJjMzJQcmiZVwiKSxhPWUoXCIuLNcmVhbSEYXRhTGVuZRoUHJvYmVcIikZnVuYRpbgbyhlLHQscixuLGkpeRoaXMuYtcHJlcNlZFNpemUZSxaGlzLnVuYtcHJlcNlZFNpemUdCxaGlzLmNyYzMyPXIsdGhpcyjbwcmVzclvbjuLHRoaXMuYtcHJlcNlZENvbnRlbnQaXvLnBybRvdHlwZTZVQudGVudFdvcmtlcjpmdWjdGlvbigpeZhciBlPWldyBpKGuUHJvbWlzZSyZXNvbHZlKHRoaXMuYtcHJlcNlZENvbnRlbnQpKSwaXBlKHRoaXMuYtcHJlcNpbudWjbwcmVzcdvcmtlcigpKSwaXBlKGldyBhKFwiZGFYVsZWndGhcIikpLHQdGhpcztyZXRcmgZSvbihcImVuZFwiLGZbmNaWuKClaWYodGhpcyzdHJlYWJbmZvLmRhdGFfbGVuZRoITdCbmNvbXByZXNzZWRTaXplKXRocmIGldyBFcnJvcihcIkJZyAIHVuYtcHJlcNlZCBkYXRhIHNpemUgbWlzbWFYhcIilKSxlfSxnZXRDbwcmVzcVkVyaVyOmZbmNaWuKClcmVdXJuIGldyBpKGuUHJvbWlzZSyZXNvbHZlKHRoaXMuYtcHJlcNlZENvbnRlbnQpKSaXRoURyZWFtSWmbyhcImNvbXByZXNzZWRTaXplXCIsdGhpcyjbwcmVzcVkUlZSkudlaFNcmVhbUluZmoXCJbmNvbXByZXNzZWRTaXplXCIsdGhpcybmNvbXByZXNzZWRTaXplKSaXRoURyZWFtSWmbyhcImNyYzMyXCIsdGhpcyjcmMzMikudlaFNcmVhbUluZmoXCJjbwcmVzclvblwiLHRoaXMuYtcHJlcNpbpfXsbyjcmVhdGVXbJrZXJGcmtPWZbmNaWuKGUsdCxyKXtyZXRcmgZSwaXBlKGldyBzKSwaXBlKGldyBhKFwidWjbwcmVzcVkUlZVwiKSkucGlwZShLmNvbXByZXNzVyaVyKHIpKSwaXBlKGldyBhKFwiYtcHJlcNlZFNpemVcIikpLndpdGhTdHJlYWJbmZvKFwiYtcHJlcNpbcIixKXsdCleHBvcnRzPWLHtcIivZXhZXJuYWxcIjoLFwiLizdHJlYWvQJjMzJQcmiZVwiOjILFwiLizdHJlYWvRGFYUxlbmdaFBybJlXCIMjYsXCIuLNcmVhbSEYXRhVyaVyXCIMjdXSwzOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGZShcIivcRyZWFtLdlbmVyaWNXbJrZXJcIikciTVESRTbWFnaWMXCJcXDBcXDBcIixjbwcmVzcdvcmtlcjpmdWjdGlvbihlKXtyZXRcmgbmVIGoXCJTVESRSBjbwcmVzclvblwiKXsdWjbwcmVzcdvcmtlcjpmdWjdGlvbigpeJldHVybiBuZXcgbihcIlNUTJFIGRlYtcHJlcNpbcIilfSxyLkRFRkxBVEUZShcIivZmxhdGVcIilLHtcIivZmxhdGVcIjoLFwiLizdHJlYWvRVuZXJpYdvcmtlclwiOjIfVsNDpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLVaWxzXCIpOZhciBvPWZbmNaWuKClZmyKHZhciBlLHQWscjwOIMjUOIrKylZTyOZvcihYXIgbjwOODtuKyspZTxJmU/MzkODIMjMNFlPj+MTplPj+MTtWJdPWVcmVdXJuIHRKCkdCleHBvcnRzPWZbmNaWuKGUsdClcmVdXJuIHZvaWQgMCEPWUmJmUubGVuZRoPwicRyaWnXCIhPTuLmdldFRcGVPZihlKTmdWjdGlvbihlLHQscixuKXtYXIgaTvLHMbityOVePSxOZvcihYXIgYTuOEczthKyspZTlPj+OFpWzINSYoZVWFdKVcmVdXJuLTFeZXoMHxLGUsZSsZWndGgsMCkZnVuYRpboZSxLHIsbildmFyIGkbyxzPWrcjtlXjtMTtmbIodmFyIGEbjthPHMYSsrKWUZT+PjheaVsyNTUmKGVedCjaGFyQkZUFKGEpKVcmVdXJuLTFeZXoMHxLGUsZSsZWndGgsMCkMHLHtcIivdXRpbHNcIjozMndLDUWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtyLmJhcUNDhMSxyLmJpbmFyeThMSxyLmRpcjhMSxyLmNyZWFZUZvbGRlcnMITAscikYXRlPWbGwscijbwcmVzclvbjudWxsLHIuYtcHJlcNpbPcHRpbzPWbGwscijbtZWPWbGwscibmlUGVybWlzclvbnMbnVsbCxyLmRvcBlcmpcNpbzPWbGxLHtXSwOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGbnVsbDtuPVwidWkZWZpbmVkXCIhPXRcGVvZiBQcmtaXNlPBybpcUZShcImxpZVwiKSxLmVcGydHMeBybpcUbnLHtsaWUMzdXSwOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGXCJbmRlZmluZWRcIiEdHlwZWmIFVpbnQQXJyYXkmJlwidWkZWZpbmVkXCIhPXRcGVvZiBVaWMTZBcnJheSYmXCJbmRlZmluZWRcIiEdHlwZWmIFVpbnQzMkFycmFLGkZShcInBhacIiksczlKFwiLidGlscwiKSxhPWUoXCIuLNcmVhbSHZWlcmljVyaVyXCIpLGbjcInVpbnQYXJyYXlcIjpcImFycmFXCIZnVuYRpbgaChlLHQpeEuYFsbChaGlzLFwiRmxhdGVXbJrZXIvXCIrZSksdGhpcyfcGFrbzudWxsLHRoaXMuXBhaBYRpbZSxaGlzLlwYWtvTBaWuczLHRoaXMubWVYTfXyLmhZljPVwiXFxiXFwwXCIscypbmhlcmlcyhoLGEpLGgucHJvdGeXBlLnBybNlcNDaHVuazmdWjdGlvbihlKXtaGlzLmldGEZStZXRhLGbGwPTaGlzLlwYWtvJiZaGlzLljcmVhdGVQYWtvKCksdGhpcyfcGFrbywdXNoKHMudHJhbnNmbJtVGobyxlLmRhdGEpLCExKXsaCwcmbRcGUuZmxcgZnVuYRpboKXthLnBybRvdHlwZSmbHVzaCjYWxsKHRoaXMpLGbGwPTaGlzLlwYWtvJiZaGlzLljcmVhdGVQYWtvKCksdGhpcyfcGFrbywdXNoKFtdLCEwKXsaCwcmbRcGUuYxlYWVcDmdWjdGlvbigpeEucHJvdGeXBlLmNsZWFuVXAuYFsbChaGlzKSxaGlzLlwYWtvPWbGxLGgucHJvdGeXBlLljcmVhdGVQYWtvPWZbmNaWuKCldGhpcyfcGFrbzuZXcgaVtaGlzLlwYWtvQWNaWuXShcmFOiEwLGxldmVsOnRoaXMuXBhaPcHRpbzLmxldmVsfHwtMXpOZhciBPXRoaXMdGhpcyfcGFrbyvbkRhdGEZnVuYRpboZSldCwdXNoKHtkYXRhOmUsbWVYTpLmldGFKXLHIuYtcHJlcNXbJrZXIZnVuYRpboZSlcmVdXJuIGldyBoKFwiRGVmbGFZVwiLGUpfSxyLnVuYtcHJlcNXbJrZXIZnVuYRpboKXtyZXRcmgbmVIGgoXCJJbmZsYXRlXCIsepfXsewiLizdHJlYWvRVuZXJpYdvcmtlclwiOjILFwiLidGlscwiOjMyLHBhaMzhXSwOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIZnVuYRpbgQShlLHQpeZhciByLGXCJcIjtmbIocjwOIdDtyKyspbisURyaWnLmZybDaGFyQkZSgyNTUmZSksZT+PjOJldHVybiBufWZbmNaWuIGoZSxLHIsbixpLHMpeZhciBhLGsaDlLmZpbGUsdTlLmNvbXByZXNzaWuLGwcyEPUudXRmOGVuYkZSxmPUkudHJhbnNmbJtVGoXCJzdHJpbmdcIixzKGgubmFtZSkpLGMSScmFucZvcmUbyhcInNcmluZwiLEudXRmOGVuYkZShoLmhbWUpKSxkPWguYtbWVudCxwPUkudHJhbnNmbJtVGoXCJzdHJpbmdcIixzKGQpKSxtPUkudHJhbnNmbJtVGoXCJzdHJpbmdcIixPLnVZjhlbmNvZGUoZCkpLFYysZWndGghPToLmhbWUubGVuZRoLGcbSsZWndGghPTkLmxlbmdaCxiPVwiXCIsdjcIlwiLHkXCJcIixPWguZGlyLGsaCkYXRlLHgeNyYzMyOjAsYtcHJlcNlZFNpemUMCxbmNvbXByZXNzZWRTaXplOjBOQmJiFyfHwoeCjcmMzMjlLmNyYzMyLHguYtcHJlcNlZFNpemUZSjbwcmVzcVkUlZSxLnVuYtcHJlcNlZFNpemUZSbmNvbXByZXNzZWRTaXplKTtYXIgUzwOQmJihTfDKSxsfHwhXyYmIWdfChTfDyMDQKTtYXIgejwLEMMDtJiYoenwMTYpLFwiVUJWFwiPTaToQzOTgsenwZnVuYRpboZSxKXtYXIgcjlOJldHVybiBlfHwocjPzEODkzOjMzMjAKSwoNjUMzUmcikPDEfShoLnVuaXhQZXJtaXNzaWucyxKSkKEMMjAsenwZnVuYRpboZSlcmVdXJuIDYzJihlfHwwKXoaCkbNQZXJtaXNzaWucykpLGEaynZXRVVENIbVycygpLGEPDLGFPWsuZVVVRDTWludXRlcygpLGEPDLGFPWsuZVVVRDUVjbkcygpLzIsbzrLmdldFVUQZbGxZZWFyKCktMTkMCxvPDwNCxvfDrLmdldFVUQvbnRoKCkrMSxvPDwNSxvfDrLmdldFVUQRhdGUoKSxfJiYodjBKDEsMSkrQShCKGYpLDQpKMsYisXCJcFwiKEodisZWndGgsMikrdiksZyYmKHkQSgxLDEpKEoQihwKSwKSttLGIrPVwidWNcIitBKHkubGVuZRoLDIpKkpOZhciBFPVwiXCIcmVdXJuIEUrPVwiXFxuXFwwXCIsRSsQShTLDIpLEUrPXUubWFnaWMsRSsQShhLDIpLEUrPUEobywyKSxFKzBKHguYJjMzIsNCksRSsQShLmNvbXByZXNzZWRTaXplLDQpLEUrPUEoeCbmNvbXByZXNzZWRTaXplLDQpLEUrPUEoZisZWndGgsMiksRSsQShiLmxlbmdaCwyKSxZmlsZVJlYyZDpSLkxPQFMXZJTEVfSEVBREVSKUrZitiLGRpclJlYyZDpSLkNFTlRSQUxfRklMRVIRUFERVIrQShDLDIpKUrQShwLmxlbmdaCwyKStcIlxcMFxcMFxcMFxcMFwiKEoeiwKStBKGsNCkrZitiKBfXZhciBJPWUoXCIuLidGlscwiKSxpPWUoXCIuLizdHJlYWvRVuZXJpYdvcmtlclwiKSxPPWUoXCIuLidGYXCIpLEIZShcIiuLNyYzMyXCIpLFIZShcIiuLNpZhdHVyZVwiKTtmdWjdGlvbiBzKGUsdCxyLGpekuYFsbChaGlzLFwiWmlwRmlsZVdvcmtlclwiKSxaGlzLmJdGVzVJpdHRlbjwLHRoaXMuemlwQtbWVudDLHRoaXMuemlwUGxhdGZvcmcixaGlzLmVuYkZUZpbGVOYWlPWsdGhpcyzdHJlYWGaWxlczlLHRoaXMuYWNjdWbGFZThMSxaGlzLmNvbnRlbnRCdWZmZXIWsdGhpcykaXJSZWNvcmRzPVtdLHRoaXMuYVycmVudFNvdXJjZUmZnNldDwLHRoaXMuZWcmllcNvdWPTAsdGhpcyjdXJyZWRmlsZTudWxsLHRoaXMuXNvdXJjZXMWSSpbmhlcmlcyhzLGkpLHMucHJvdGeXBlLnBcgZnVuYRpboZSldmFyIHQZStZXRhLnBlcmNlbnRfDAscjaGlzLmVudHJpZXNDbVudCxuPXRoaXMuXNvdXJjZXMubGVuZRoORoaXMuYWNjdWbGFZTaGlzLmNvbnRlbnRCdWZmZXIucHVzaChlKToodGhpcyieXRlcdyaXRZWrPWUuZGFYSsZWndGgsaSwcmbRcGUucHVzaCjYWxsKHRoaXMseRhdGEZSkYXRhLGldGEeNcnJlbnRGaWxlOnRoaXMuYVycmVudEZpbGUscGVyYVudDpyPyhKzEwMCoociuLTEpKSyOjEwMHKSlLHMucHJvdGeXBlLmwZWlZFNvdXJjZTmdWjdGlvbihlKXtaGlzLmNcnJlbnRTbVyYVPZmZzZXQdGhpcyieXRlcdyaXRZWsdGhpcyjdXJyZWRmlsZTlLmZpbGUubmFtZTtYXIgdDaGlzLnNcmVhbUZpbGVzJiYhZSmaWxlLmRpcjtpZihKXtYXIgcjuKGUsdCwhMSxaGlzLmNcnJlbnRTbVyYVPZmZzZXQsdGhpcyaXBQbGFZmybSxaGlzLmVuYkZUZpbGVOYWlKTtaGlzLnBcgoeRhdGEcimaWxlUmVjbJkLGldGEeBlcmNlbnQMHKXlbHNlIHRoaXMuYWNjdWbGFZThMHscywcmbRcGUuYxvcVkUcmNlPWZbmNaWuKGUpeRoaXMuYWNjdWbGFZThMTtYXIgdDaGlzLnNcmVhbUZpbGVzJiYhZSmaWxlLmRpcixyPWoZSxLCEwLHRoaXMuYVycmVudFNvdXJjZUmZnNldCxaGlzLnppcFBsYXRmbJtLHRoaXMuZWjbRlRmlsZUhbWUpOlmKHRoaXMuZGlyUmVjbJkcywdXNoKHIuZGlyUmVjbJkKSxKXRoaXMucHVzaChZGFYTpmdWjdGlvbihlKXtyZXRcmgUiEQVRBXRFUNSSVBUTIrQShlLmNyYzMyLDQpKEoZSjbwcmVzcVkUlZSwKStBKGUudWjbwcmVzcVkUlZSwKXoZSksbWVYTpcGVyYVudDoxMDBfSkZWxzZSBmbIodGhpcywdXNoKHtkYXRhOnIuZmlsZVJlYyZCxtZXRhOntwZXJjZWOjBfSkdGhpcyjbZWQnVmZmVyLmxlbmdaDspdGhpcywdXNoKHRoaXMuYudGVudEJZmZlcizaGlmdCgpKTtaGlzLmNcnJlbnRGaWxlPWbGxLHMucHJvdGeXBlLmZsdXNoPWZbmNaWuKClZmyKHZhciBlPXRoaXMuYnlZXNXcmldGVuLHQMDtPHRoaXMuZGlyUmVjbJkcysZWndGgdCsrKXRoaXMucHVzaChZGFYTpaGlzLmRpclJlYyZHNbdFsbWVYTpcGVyYVudDoxMDBfSkdmFyIHIdGhpcyieXRlcdyaXRZWtZSxuPWZbmNaWuKGUsdCxyLGsaSldmFyIHMSScmFucZvcmUbyhcInNcmluZwiLGkobikpOJldHVybiBSLkNFTlRSQUxfRElSRUNUTJZXVORCtcIlxcMFxcMFxcMFxcMFwiKEoZSwyKStBKGUsMikrQShLDQpKEociwKStBKHMubGVuZRoLDIpKNKHRoaXMuZGlyUmVjbJkcysZWndGgscixlLHRoaXMuemlwQtbWVudCxaGlzLmVuYkZUZpbGVOYWlKTtaGlzLnBcgoeRhdGEbixtZXRhOntwZXJjZWOjEwMHKXscywcmbRcGUucHJlcGFyZUleHRTbVyYUZnVuYRpboKXtaGlzLnByZXZpbVzPXRoaXMuXNvdXJjZXMuchpZnQoKSxaGlzLmwZWlZFNvdXJjZShaGlzLnByZXZpbVzLnNcmVhbUluZmpLHRoaXMuaXNQYXVzZWQ/dGhpcywcmVaWcywYXVzZSgpOnRoaXMucHJldmlvdXMucmVzdWlKClLHMucHJvdGeXBlLnJlZlzdGVyUHJldmlvdXMZnVuYRpboZSldGhpcyfccmNlcywdXNoKGUpOZhciBPXRoaXMcmVdXJuIGUuboXCJkYXRhXCIsZnVuYRpboZSldCwcmjZXNzQhbmsoZSlKSxlLmuKFwiZWkXCIsZnVuYRpboKXtLmNsbNlZFNvdXJjZShLnByZXZpbVzLnNcmVhbUluZmpLHQuXNvdXJjZXMubGVuZRoPQucHJlcGFyZUleHRTbVyYUoKTpLmVuZCgpfSksZSvbihcImVycmyXCIsZnVuYRpboZSldClcnJvcihlKXpLHRoaXNLHMucHJvdGeXBlLnJlcVtZTmdWjdGlvbigpeJldHVybiEhaSwcmbRcGUucmVzdWlLmNhbGwodGhpcykmJighdGhpcywcmVaWcyYmdGhpcyfccmNlcysZWndGg/KHRoaXMucHJlcGFyZUleHRTbVyYUoKSwhMCkdGhpcywcmVaWcxdGhpcyfccmNlcysZWndGhfHRoaXMuZVuZXJhdGVkRXJybI/dmpZCAwOihaGlzLmVuZCgpLCEwKSlLHMucHJvdGeXBlLmVycmyPWZbmNaWuKGUpeZhciBPXRoaXMuXNvdXJjZXMaWYoIWkucHJvdGeXBlLmVycmyLmNhbGwodGhpcyxlKSlyZXRcmhMTtmbIodmFyIHIMDtyPHQubGVuZRoOIrKylcnldFtyXSlcnJvcihlKXjYXRjaChlKXtcmVdXJuITBLHMucHJvdGeXBlLmxvYsZnVuYRpboKXtpLnBybRvdHlwZSsbNrLmNhbGwodGhpcykZmyKHZhciBlPXRoaXMuXNvdXJjZXMsdDwOQZSsZWndGgdCsrKWVbdFubGjaygpfSxLmVcGydHMcsewiLivYJjMzJcIjoLFwiLivclnbmFdXJlXCIMjMsXCIuLizdHJlYWvRVuZXJpYdvcmtlclwiOjILFwiLivdXRmOFwiOjMxLFwiLivdXRpbHNcIjozMndLDkWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgdTlKFwiLivYtcHJlcNpbzXCIpLGZShcIivWmlwRmlsZVdvcmtlclwiKTtyLmdlbmVyYXRlVyaVyPWZbmNaWuKGUsYSxKXtYXIgbzuZXcgbihhLnNcmVhbUZpbGVzLHQsYSwbGFZmybSxhLmVuYkZUZpbGVOYWlKSxoPTAdHJeUuZmyRWFjaChmdWjdGlvbihlLHQpegrKztYXIgcjmdWjdGlvbihlLHQpeZhciByPWVfHQsbjWJdOlmKCFuKXRocmIGldyBFcnJvcihyKwiIGlzIGvdCBhIHZhbGlkIGNvbXByZXNzaWuIGldGhvZCAhXCIpOJldHVybiBufShLmwdGlvbnMuYtcHJlcNpbsYSjbwcmVzclvbiksbjLmwdGlvbnMuYtcHJlcNpbPcHRpbzfHxhLmNvbXByZXNzaWuTBaWucxesaTLmRpcixzPXQuZGFZTtLljbwcmVzcdvcmtlcihyLGpLndpdGhTdHJlYWJbmZvKFwiZmlsZVwiLHtuYWlOmUsZGlyOmksZGFZTpzLGNvbWlbnQdCjbtZWfHxcIlwiLHVuaXhQZXJtaXNzaWuczpLnVuaXhQZXJtaXNzaWucyxkbNQZXJtaXNzaWuczpLmRvcBlcmpcNpbzfSkucGlwZShvKXpLGuZWcmllcNvdWPWhYFYgoZSlbylcnJvcihlKXyZXRcmgbLHtcIiuLNvbXByZXNzaWucwiOjMsXCIuLppcEZpbGVXbJrZXJcIjofVsMTAWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtmdWjdGlvbiBuKClaWYoIShaGlzIGlucRhbmNlbYgbikpcmVdXJuIGldyBuOlmKGFyZVtZWcysZWndGgpdGhybcgbmVIEVycmyKFwiVGhlIGNvbnNcnVjdGyIHdpdGggcGFyYWldGVycyBoYXMgYmVlbiByZWvdmVkIGluIEpTWmlwIDMuMCwgcGxlYXNlIGNoZWNrIHRoZSBcGdyYWRlIGdaWRlLlwiKTtaGlzLmZpbGVzPUiamVjdCjcmVhdGUobnVsbCksdGhpcyjbtZWPWbGwsdGhpcyybPVwiXCIsdGhpcyjbGuZTmdWjdGlvbigpeZhciBlPWldyBuOZvcihYXIgdCBpbiBaGlzKVwiZnVuYRpbcIiEdHlwZWmIHRoaXNbdFmJihlWRdPXRoaXNbdFpOJldHVybiBlfXobiwcmbRcGUZShcIivbJqZWNXCIpKSsbFkQXNbmMZShcIivbGhZFwiKSxuLnNcHBvcnQZShcIivcVwcGydFwiKSxuLmRlZmFbHRzPWUoXCIuLRlZmFbHRzXCIpLGudmVyclvbjcIjMuMTAuMFwiLGubGhZEFzeWjPWZbmNaWuKGUsdClcmVdXJuKGldyBuKSsbFkQXNbmMoZSxKXsbileHRlcmhbDlKFwiLileHRlcmhbFwiKSxLmVcGydHMbnsewiLikZWZhdWxcwiOjUsXCIuLVdGVybmFsXCINixcIivbGhZFwiOjExLFwiLivYmplYRcIjoxNSxcIivcVwcGydFwiOjMwfVsMTEWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgdTlKFwiLidGlscwiKSxpPWUoXCIuLVdGVybmFsXCIpLGZShcIivdXRmOFwiKSxzPWUoXCIuLppcEVudHJpZXNcIiksYTlKFwiLizdHJlYWvQJjMzJQcmiZVwiKSxsPWUoXCIuLvZGVqcVaWxzXCIpOZbmNaWuIGYobilcmVdXJuIGldyBpLlBybpcUoZnVuYRpboZSxKXtYXIgcjuLmRlYtcHJlcNlZCnZXRDbZWVyaVyKCkucGlwZShuZXcgYSkcivbihcImVycmyXCIsZnVuYRpboZSldChlKXpLmuKFwiZWkXCIsZnVuYRpboKXtyLnNcmVhbUluZmuYJjMzIhPTuLmRlYtcHJlcNlZCjcmMzMjKGldyBFcnJvcihcIkNvcnJcHRlZCBaXAgOiBDUkMzMiBtaXNtYXRjaFwiKSkZSgpfSkucmVzdWlKClKXLmVcGydHMZnVuYRpboZSxvKXtYXIgaDaGlzOJldHVybiBvPXUuZXhZWkKGfHtLHtiYXNlNjQITEsYhlYtDUkMzMjohMSxvcHRpbWlZWRCaWhcnlTdHJpbmcITEsYJlYXRlRmsZGVyczohMSxkZWNvZGVGaWxlTmFtZTpuLnVZjhkZWNvZGVKSxsLmlzTmkZSYmbCpcNcmVhbShlKTpLlBybpcUucmVqZWNKGldyBFcnJvcihcIkpTWmlwIGNhbidIGFjYVwdCBhIHNcmVhbSBaGVuIGxvYWRpbmcgYSBaXAgZmlsZScIikpOnUucHJlcGFyZUNvbnRlbnQoXCJaGUgbGhZGVkIHppcCBmaWxlXCIsZSwhMCxvLmwdGltaXplZEJpbmFyeVNcmluZyxvLmJhcUNCkudGhlbihmdWjdGlvbihlKXtYXIgdDuZXcgcyhvKTtyZXRcmgdCsbFkKGUpLHRKSaGVuKGZbmNaWuKGUpeZhciBPVtpLlBybpcUucmVzbxZShlKVscjlLmZpbGVzOlmKGuYhlYtDUkMzMilmbIodmFyIGMDtuPHIubGVuZRoOrKylLnBcgoZihyWdKSkcmVdXJuIGkuUHJvbWlzZShbGwodClKSaGVuKGZbmNaWuKGUpeZvcihYXIgdDlLnNoaWZKCkscjLmZpbGVzLGMDtuPHIubGVuZRoOrKyldmFyIGkcltuXSxzPWkuZmlsZUhbWVTdHIsYTLnJlcsdmUoaSmaWxlTmFtZVNcikaCmaWxlKGEsaSkZWNvbXByZXNzZWQseJpbmFyeTohMCxvcHRpbWlZWRCaWhcnlTdHJpbmcITAsZGFZTppLmRhdGUsZGlyOmkuZGlyLGNvbWlbnQaSmaWxlQtbWVudFNcisZWndGg/aSmaWxlQtbWVudFNcjpudWxsLHVuaXhQZXJtaXNzaWuczppLnVuaXhQZXJtaXNzaWucyxkbNQZXJtaXNzaWuczppLmRvcBlcmpcNpbzLGNyZWFZUZvbGRlcnMbyjcmVhdGVGbxkZXJzfSksaSkaXJfChoLmZpbGUoYSkudWzYWZlTJpZluYWxOYWlPXMpfXJldHVybiBLnppcENvbWlbnQubGVuZRoJiYoaCjbtZWPXQuemlwQtbWVudCksaHpfXsewiLileHRlcmhbFwiOjYsXCIuLvZGVqcVaWxzXCIMTQsXCIuLNcmVhbSDcmMzMlBybJlXCIMjUsXCIuLVZjhcIjozMSxcIivdXRpbHNcIjozMixcIivemlwRWcmllcwiOjMzfVsMTIWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgbjlKFwiLivdXRpbHNcIiksaTlKFwiLivcRyZWFtLdlbmVyaWNXbJrZXJcIikZnVuYRpbgcyhlLHQpekuYFsbChaGlzLFwiTmkZWpzIHNcmVhbSBpbnBdCBhZGFwdGVyIGZvciBcIitlKSxaGlzLlcHNcmVhbUVuZGVkPSExLHRoaXMuXJpbmRTdHJlYWodClbipbmhlcmlcyhzLGkpLHMucHJvdGeXBlLliaWkURyZWFtPWZbmNaWuKGUpeZhciBPXRoaXMKHRoaXMuXNcmVhbTlKSwYXVzZSgpLGUuboXCJkYXRhXCIsZnVuYRpboZSldCwdXNoKHtkYXRhOmUsbWVYTpcGVyYVudDowfXpfSkuboXCJlcnJvclwiLGZbmNaWuKGUpeQuaXNQYXVzZWQ/dGhpcynZWlcmFZWRFcnJvcjlOnQuZXJybIoZSlKSvbihcImVuZFwiLGZbmNaWuKCldCpcBhdXNlZDLlcHNcmVhbUVuZGVkPSEwOnQuZWkKClKXscywcmbRcGUucGFcUZnVuYRpboKXtyZXRcmhIWkucHJvdGeXBlLnBhdXNlLmNhbGwodGhpcykmJihaGlzLlzdHJlYWucGFcUoKSwhMClLHMucHJvdGeXBlLnJlcVtZTmdWjdGlvbigpeJldHVybiEhaSwcmbRcGUucmVzdWlLmNhbGwodGhpcykmJihaGlzLlcHNcmVhbUVuZGVkPRoaXMuZWkKCkdGhpcyfcRyZWFtLnJlcVtZSgpLCEwKXsdCleHBvcnRzPXNLHtcIiuLNcmVhbSHZWlcmljVyaVyXCIMjgsXCIuLidGlscwiOjMyfVsMTMWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgaTlKFwicmVhZGFibGUtcRyZWFtXCIpLlJlYWRhYmxlOZbmNaWuIGoZSxLHIpekuYFsbChaGlzLHQpLHRoaXMuXhlbHBlcjlOZhciBuPXRoaXMZSvbihcImRhdGFcIixmdWjdGlvbihlLHQpeucHVzaChlKXxbifaGVscGVyLnBhdXNlKCksciYmcihKXpLmuKFwiZXJybJcIixmdWjdGlvbihlKXtuLmVtaXQoXCJlcnJvclwiLGUpfSkuboXCJlbmRcIixmdWjdGlvbigpeucHVzaChudWxsKXpfWUoXCIuLidGlscwiKSpbmhlcmlcyhuLGkpLGucHJvdGeXBlLlyZWFkPWZbmNaWuKCldGhpcyfaGVscGVyLnJlcVtZSgpfSxLmVcGydHMbnsewiLivdXRpbHNcIjozMixcInJlYWRhYmxlLXNcmVhbVwiOjEfVsMTQWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtLmVcGydHMelzTmkZTpcInVuZGVmaWlZFwiITeXBlbYgQnVmZmVyLGldJZmZlckZybZnVuYRpboZSxKXtpZihCdWZmZXIuZnJvbSYmQnVmZmVyLmZybhPTVaWOEFycmFLmZybpcmVdXJuIEJZmZlcimcmtKGUsdCkaWYoXCJudWiZXJcIjdHlwZWmIGUpdGhybcgbmVIEVycmyKCdUaGUgXCJkYXRhXCIgYXJndWlbnQgbXVzdCBubQgYmUgYSBudWiZXInKTtyZXRcmgbmVIEJZmZlcihlLHQpfSxhbGxvYJZmZlcjpmdWjdGlvbihlKXtpZihCdWZmZXIuYWxsbMpcmVdXJuIEJZmZlcihbGxvYyhlKTtYXIgdDuZXcgQnVmZmVyKGUpOJldHVybiBLmZpbGwoMCksdHsaXNCdWZmZXIZnVuYRpboZSlcmVdXJuIEJZmZlcipcJZmZlcihlKXsaXNTdHJlYWZnVuYRpboZSlcmVdXJuIGUmJlwiZnVuYRpbcIjdHlwZWmIGUubmJlwiZnVuYRpbcIjdHlwZWmIGUucGFcUmJlwiZnVuYRpbcIjdHlwZWmIGUucmVzdWlfXLHtXSwxNTpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZbmNaWuIHMoZSxLHIpeZhciBuLGkdSnZXRUeXBlTYodCksczLmVdGVuZChyfHxfSxmKTtzLmRhdGUcykYXRlfHxuZXcgRGFZSxudWxsITcyjbwcmVzclvbiYmKHMuYtcHJlcNpbcyjbwcmVzclvbibVwcGVyQFzZSgpKSxcInNcmluZwiPTeXBlbYgcybmlUGVybWlzclvbnMmJihzLnVuaXhQZXJtaXNzaWuczwYXJzZUludChzLnVuaXhQZXJtaXNzaWucywKSkscybmlUGVybWlzclvbnMmJjEMzgJnMudWpeFBlcmpcNpbzJiYocykaXIITApLHMuZGzUGVybWlzclvbnMmJjEJnMuZGzUGVybWlzclvbnMmJihzLmRpcjhMCkscykaXImJihlPWcoZSkpLHMuYJlYXRlRmsZGVycyYmKGXyhlKSkmJmIuYFsbChaGlzLGsITApOZhciBhPVwicRyaWnXCIPTpJiYhMTPXMuYmluYXJJiYhMTPXMuYmFzZTYOImJnZvaWQgMCEPXIuYmluYXJfHwocyiaWhcnkIWEpLChIGlucRhbmNlbYgYyYmMDPXQudWjbwcmVzcVkUlZXxcykaXJfCFfHwwPTdCsZWndGgpJiYocyiYXNlNjQITEscyiaWhcnkITAsdDcIlwiLHMuYtcHJlcNpbXCJTVESRVwiLGkXCJzdHJpbmdcIikdmFyIGbnVsbDtvPXQgaWzdGFuYVvZiBjfHxIGlucRhbmNlbYgbDOnAuaXNObRlJiZwLmlzURyZWFtKHQpPldyBtKGUsdCkdSwcmVwYXJlQudGVudChlLHQscyiaWhcnkscyvcHRpbWlZWRCaWhcnlTdHJpbmcscyiYXNlNjQpOZhciBoPWldyBkKGUsbyxzKTtaGlzLmZpbGVzWVdPWhdmFyIGkZShcIivdXRmOFwiKSxPWUoXCIuLVaWxzXCIpLGwZShcIivcRyZWFtLdlbmVyaWNXbJrZXJcIiksYTlKFwiLizdHJlYWvURyZWFtSGVscGVyXCIpLGYZShcIivZGVmYXVsdHNcIiksYzlKFwiLijbwcmVzcVkTJqZWNXCIpLGQZShcIivemlwTJqZWNXCIpLGZShcIivZVuZXJhdGVcIikscDlKFwiLiubRlanNVdGlscwiKSxtPWUoXCIuLvZGVqcyObRlanNTdHJlYWJbnBdEFkYXBZXJcIiksXzmdWjdGlvbihlKXtcIicIjPWUucxpYUoLTEpJiYoZTlLnNYnNcmluZygwLGUubGVuZRoLTEpKTtYXIgdDlLmxhcRJbmRleEmKFwiLwiKTtyZXRcmgMDxPUucVicRyaWnKDAsdCkXCJcInsZzmdWjdGlvbihlKXtyZXRcmcIicIiEPWUucxpYUoLTEpJiYoZSsXCIvXCIpLGVLGIZnVuYRpboZSxKXtyZXRcmgdDblkIDAhPTPQZijcmVhdGVGbxkZXJzLGUZyhlKSxaGlzLmZpbGVzWVdfHxzLmNhbGwodGhpcyxlLGbGwseRpcjohMCxjcmVhdGVGbxkZXJzOnRKSxaGlzLmZpbGVzWVdfTtmdWjdGlvbiBoKGUpeJldHVyblwiWiamVjdCBSZWdFeHBdXCIPTPYmplYQucHJvdGeXBlLnRvURyaWnLmNhbGwoZSldmFyIGexvYWQZnVuYRpboKXtaHJvdyBuZXcgRXJybIoXCJUaGlzIGldGhvZCBoYXMgYmVlbiByZWvdmVkIGluIEpTWmlwIDMuMCwgcGxlYXNlIGNoZWNrIHRoZSBcGdyYWRlIGdaWRlLlwiKXsZmyRWFjaDpmdWjdGlvbihlKXtYXIgdCxyLGZmyKHQgaWgdGhpcymaWxlcyluPXRoaXMuZmlsZXNbdFsKHIdCzbGljZShaGlzLnJvbQubGVuZRoLHQubGVuZRoKSkmJnQucxpYUoMCxaGlzLnJvbQubGVuZRoKTPXRoaXMucmvdCYmZShyLGpfSxmaWxZXIZnVuYRpbocildmFyIGWcmVdXJuIHRoaXMuZmyRWFjaChmdWjdGlvbihlLHQpeIoZSxKSYmbiwdXNoKHQpfSksbnsZmlsZTpmdWjdGlvbihlLHQscilaWYoMSEPWFyZVtZWcysZWndGgpcmVdXJuIGUdGhpcyybKUscyjYWxsKHRoaXMsZSxLHIpLHRoaXMaWYoaChlKSldmFyIGZTtyZXRcmgdGhpcymaWxZXIoZnVuYRpboZSxKXtyZXRcmhdCkaXImJmudGVzdChlKXpfXZhciBpPXRoaXMuZmlsZXNbdGhpcyybKVdOJldHVybiBpJiYhaSkaXI/aTpudWxsfSxmbxkZXIZnVuYRpbocilaWYoIXIpcmVdXJuIHRoaXMaWYoaChyKSlyZXRcmgdGhpcymaWxZXIoZnVuYRpboZSxKXtyZXRcmgdCkaXImJnIudGVzdChlKXpOZhciBlPXRoaXMucmvdCtyLHQYijYWxsKHRoaXMsZSksbjaGlzLmNsblKCkcmVdXJuIGucmvdDLmhbWUsbnscmVtbZlOmZbmNaWuKHIpeIdGhpcyybKIdmFyIGUdGhpcymaWxlctyXTtpZihlfHwoXCIvXCIhPTyLnNsaWNlKCxKSYmKHIrPVwiLwiKSxlPXRoaXMuZmlsZXNbclpLGUmJiFlLmRpcilkZWxldGUgdGhpcymaWxlctyXTtlbHNlIGZvcihYXIgdDaGlzLmZpbHRlcihmdWjdGlvbihlLHQpeJldHVybiBLmhbWUucxpYUoMCxyLmxlbmdaCkPTyfSksbjwOdCsZWndGgbisrKWRlbGVZSBaGlzLmZpbGVzWRbblubmFtZVcmVdXJuIHRoaXNLGdlbmVyYXRlOmZbmNaWuKGUpeRocmIGldyBFcnJvcihcIlRoaXMgbWVaGkIGhhcyBiZWVuIHJlbWZWQgaWgSlNaaXAgMywLCBwbGVhcUgYhlYsgdGhlIHVwZJhZGUgZVpZGUuXCIpfSxnZWlcmFZUludGVybmFsURyZWFtOmZbmNaWuKGUpeZhciBLHIedHJelmKChyPXUuZXhZWkKGVfHtLHtzdHJlYWGaWxlczohMSxjbwcmVzclvbjpcIlNUTJFXCIsYtcHJlcNpbPcHRpbzOmbGwsdHlwZTpcIlwiLHBsYXRmbJtOlwiRETXCIsYtbWVudDpudWxsLGpbWVUeXBlOlwiYXBwbGljYXRpbvemlwXCIsZWjbRlRmlsZUhbWUaSdGYZWjbRlfSkpLnRcGUcieXBlLnRvTGZXJDYXNlKCkscijbwcmVzclvbjyLmNvbXByZXNzaWuLnRvVXBwZXJDYXNlKCksXCJiaWhcnlzdHJpbmdcIjPXIudHlwZSYmKHIudHlwZTcInNcmluZwiKSwhcieXBlKXRocmIGldyBFcnJvcihcIkvIGdHBdCBeXBlIHNwZWNpZmllZCcIikdSjaGVjaNcHBvcnQocieXBlKSxcImRhcndpblwiITciwbGFZmybSYmXCJmcmVlYnNkXCIhPTyLnBsYXRmbJtJiZcImxpbnVXCIhPTyLnBsYXRmbJtJiZcInNbmzXCIhPTyLnBsYXRmbJtfHwociwbGFZmybTcIlVOSVhcIiksXCJaWzMlwiPTciwbGFZmybSYmKHIucGxhdGZvcmXCJETNcIikdmFyIGcijbtZWfHxaGlzLmNvbWlbnRfFwiXCIdDvLmdlbmVyYXRlVyaVyKHRoaXMscixuKXjYXRjaChlKXsodDuZXcgbChcImVycmyXCIpKSlcnJvcihlKXyZXRcmgbmVIGEodCxyLnRcGVfFwicRyaWnXCIscitaWlVHlwZSlLGdlbmVyYXRlQXNbmMZnVuYRpboZSxKXtyZXRcmgdGhpcynZWlcmFZUludGVybmFsURyZWFtKGUpLmFjYVtdWxhdGUodClLGdlbmVyYXRlTmkZVNcmVhbTpmdWjdGlvbihlLHQpeJldHVybihlPWVfHtKSeXBlfHwoZSeXBlPVwibmkZWJZmZlclwiKSxaGlzLmdlbmVyYXRlSWZXJuYWxTdHJlYWoZSkudGObRlanNTdHJlYWodClfTtLmVcGydHMbnsewiLijbwcmVzcVkTJqZWNXCIMixcIivZGVmYXVsdHNcIjoLFwiLinZWlcmFZVwiOjksXCIuLvZGVqcyObRlanNTdHJlYWJbnBdEFkYXBZXJcIjoxMixcIivbmkZWpzVXRpbHNcIjoxNCxcIivcRyZWFtLdlbmVyaWNXbJrZXJcIjoyOCxcIivcRyZWFtLNcmVhbUhlbHBlclwiOjILFwiLidGYXCIMzEsXCIuLVaWxzXCIMzIsXCIuLppcEiamVjdFwiOjMfVsMTYWZbmNaWuKGUsdCxyKXtLmVcGydHMZShcInNcmVhbVwiKXseNcmVhbTpblkIDBXSwxNzpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLRhdGFSZWFkZXJcIikZnVuYRpbgaShlKXtuLmNhbGwodGhpcyxlKTtmbIodmFyIHQMDtPHRoaXMuZGFYSsZWndGgdCsrKWVbdFMjUJmVbdFZShcIiuLVaWxzXCIpLmluaGVyaXRzKGksbiksaSwcmbRcGUuYnlZUFPWZbmNaWuKGUpeJldHVybiBaGlzLmRhdGFbdGhpcyZXJvKVdfSxpLnBybRvdHlwZSsYXNSWkZXhPZlNpZhdHVyZTmdWjdGlvbihlKXtmbIodmFyIHQZSjaGFyQkZUFKDApLHIZSjaGFyQkZUFKDEpLGZSjaGFyQkZUFKDIpLGkZSjaGFyQkZUFKDMpLHMdGhpcysZWndGgtNDswPDzOytcylpZihaGlzLmRhdGFbcPTJiZaGlzLmRhdGFbcysxXTPXImJnRoaXMuZGFYVtzKzJdPTbiYmdGhpcykYXRhWMrMPTpKXJldHVybiBzLXRoaXMuemVybztyZXRcmtMXsaSwcmbRcGUucmVhZEFuZENoZWNrUlnbmFdXJlPWZbmNaWuKGUpeZhciBPWUuYhhckNvZGVBdCgwKSxyPWUuYhhckNvZGVBdCgxKSxuPWUuYhhckNvZGVBdCgyKSxpPWUuYhhckNvZGVBdCgzKSxzPXRoaXMucmVhZERhdGEoNCkcmVdXJuIHQPTzWzBdJiZyPTcsxXSYmbjPXNbMlmJmkPTzWzNdfSxpLnBybRvdHlwZSyZWFkRGFYTmdWjdGlvbihlKXtpZihaGlzLmNoZWNrTZmcVKGUpLDAPTlKXJldHVybltdOZhciBPXRoaXMuZGFYSzbGljZShaGlzLnplcmrdGhpcypbmRleCxaGlzLnplcmrdGhpcypbmRleCtlKTtyZXRcmgdGhpcypbmRleCsZSxfSxLmVcGydHMaXsewiLivdXRpbHNcIjozMixcIivRGFYVJlYWRlclwiOjEfVsMTgWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgbjlKFwiLivdXRpbHNcIikZnVuYRpbgaShlKXtaGlzLmRhdGEZSxaGlzLmxlbmdaDlLmxlbmdaCxaGlzLmluZGVPTAsdGhpcyZXJvPTBaSwcmbRcGUeNoZWNrTZmcVOmZbmNaWuKGUpeRoaXMuYhlYtJbmRleChaGlzLmluZGVKUpfSxjaGVjaluZGVOmZbmNaWuKGUpelmKHRoaXMubGVuZRoPHRoaXMuemVybytlfHxlPDApdGhybcgbmVIEVycmyKFwiRWkIGmIGRhdGEgcmVhYhlZCAoZGFYSBsZWndGggPSBcIitaGlzLmxlbmdaCtcIiwgYXNrZWQgaWkZXggPSBcIitlKwiKSgQycnVwdGVkIHppcCA/XCIpfSxzZXRJbmRleDpmdWjdGlvbihlKXtaGlzLmNoZWNrSWkZXgoZSksdGhpcypbmRleDlfSxzalwOmZbmNaWuKGUpeRoaXMucVSWkZXgodGhpcypbmRleCtlKXsYnlZUFOmZbmNaWuKGUpescmVhZEludDpmdWjdGlvbihlKXtYXIgdCxyPTAZmyKHRoaXMuYhlYtPZmZzZXQoZSksdDaGlzLmluZGVKUtMTtPjaGlzLmluZGVOQtLSlyPShyPDwKStaGlzLmJdGVBdChKTtyZXRcmgdGhpcypbmRleCsZSxyfSxyZWFkURyaWnOmZbmNaWuKGUpeJldHVybiBuLnRyYWzZmybVRvKFwicRyaWnXCIsdGhpcyyZWFkRGFYShlKSlLHJlYWREYXRhOmZbmNaWuKGUpesbGFzdEluZGVTZTaWduYXRcmUZnVuYRpboZSlfSxyZWFkQWkQhlYtTaWduYXRcmUZnVuYRpboZSlfSxyZWFkRGFZTpmdWjdGlvbigpeZhciBlPXRoaXMucmVhZEludCgKTtyZXRcmgbmVIERhdGUoRGFZSVVEMoMTkMCsoZT+MjUmMTIKSwoZT+MjEmMTUpLTEsZT+MTYmMzEsZT+MTEmMzEsZT+NSYMywoMzEmZSkPDEpKXLHQuZXhwbJczpfSxXCIuLidGlscwiOjMyfVsMTkWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgbjlKFwiLiVaWOEFycmFUmVhZGVyXCIpOZbmNaWuIGkoZSlbijYWxsKHRoaXMsZSlZShcIiuLVaWxzXCIpLmluaGVyaXRzKGksbiksaSwcmbRcGUucmVhZERhdGEZnVuYRpboZSldGhpcyjaGVjamZnNldChlKTtYXIgdDaGlzLmRhdGEucxpYUodGhpcyZXJvKRoaXMuaWkZXgsdGhpcyZXJvKRoaXMuaWkZXgrZSkcmVdXJuIHRoaXMuaWkZXgrPWUsdHsdCleHBvcnRzPWlLHtcIiuLVaWxzXCIMzIsXCIuLVpbnQQXJyYXlSZWFkZXJcIjoyMXdLDIwOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGZShcIivRGFYVJlYWRlclwiKTtmdWjdGlvbiBpKGUpeuYFsbChaGlzLGUpfWUoXCIuLidGlscwiKSpbmhlcmlcyhpLGpLGkucHJvdGeXBlLmJdGVBdDmdWjdGlvbihlKXtyZXRcmgdGhpcykYXRhLmNoYXJDbRlQXQodGhpcyZXJvKUpfSxpLnBybRvdHlwZSsYXNSWkZXhPZlNpZhdHVyZTmdWjdGlvbihlKXtyZXRcmgdGhpcykYXRhLmxhcRJbmRleEmKGUpLXRoaXMuemVybsaSwcmbRcGUucmVhZEFuZENoZWNrUlnbmFdXJlPWZbmNaWuKGUpeJldHVybiBlPTdGhpcyyZWFkRGFYSgKXsaSwcmbRcGUucmVhZERhdGEZnVuYRpboZSldGhpcyjaGVjamZnNldChlKTtYXIgdDaGlzLmRhdGEucxpYUodGhpcyZXJvKRoaXMuaWkZXgsdGhpcyZXJvKRoaXMuaWkZXgrZSkcmVdXJuIHRoaXMuaWkZXgrPWUsdHsdCleHBvcnRzPWlLHtcIiuLVaWxzXCIMzIsXCIuLRhdGFSZWFkZXJcIjoxOHdLDIxOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGZShcIivQXJyYXlSZWFkZXJcIikZnVuYRpbgaShlKXtuLmNhbGwodGhpcyxlKXlKFwiLivdXRpbHNcIikuaWoZXJpdHMoaSxuKSxpLnBybRvdHlwZSyZWFkRGFYTmdWjdGlvbihlKXtpZihaGlzLmNoZWNrTZmcVKGUpLDAPTlKXJldHVybiBuZXcgVWludDhBcnJheSgwKTtYXIgdDaGlzLmRhdGEucViYXJyYXkodGhpcyZXJvKRoaXMuaWkZXgsdGhpcyZXJvKRoaXMuaWkZXgrZSkcmVdXJuIHRoaXMuaWkZXgrPWUsdHsdCleHBvcnRzPWlLHtcIiuLVaWxzXCIMzIsXCIuLFycmFUmVhZGVyXCIMTdXSwyMjpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLidGlscwiKSxpPWUoXCIuLizdXBwbJXCIpLHMZShcIivQXJyYXlSZWFkZXJcIiksYTlKFwiLiTdHJpbmdSZWFkZXJcIiksbzlKFwiLiObRlQnVmZmVyUmVhZGVyXCIpLGgZShcIivVWludDhBcnJheVJlYWRlclwiKTtLmVcGydHMZnVuYRpboZSldmFyIHQbinZXRUeXBlTYoZSkcmVdXJuIGuYhlYtTdXBwbJKHQpLFwicRyaWnXCIhPTfHxpLnVpbnQYXJyYXk/XCJubRlYnVmZmVyXCIPTPldyBvKGUpOmkudWludDhhcnJheTuZXcgaChuLnRyYWzZmybVRvKFwidWludDhhcnJheVwiLGUpKTpuZXcgcyhuLnRyYWzZmybVRvKFwiYXJyYXlcIixlKSkbmVIGEoZSlfSxXCIuLizdXBwbJXCIMzAsXCIuLidGlscwiOjMyLFwiLiBcnJheVJlYWRlclwiOjELFwiLiObRlQnVmZmVyUmVhZGVyXCIMTksXCIuLNcmluZJlYWRlclwiOjIwLFwiLiVaWOEFycmFUmVhZGVyXCIMjFXSwyMzpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOIuTEDQUxfRklMRVIRUFERVIXCJQSxMDAwMxMDAwNFwiLHIuQVOVFJBTFGSUxFXhFQURFUjcIlBLXHUwMDAxXHUwMDAyXCIsciDRUUUkFMXRJUkVDVESWVFTkQXCJQSxMDAwNVxMDAwNlwiLHIuWklQNjRfQVOVFJBTFESVJFQRPUllfTEDQVRPUjcIlBLXHUwMDAXHUwMDAXCIsciaSVANFDRUUUkFMXRJUkVDVESWVFTkQXCJQSxMDAwNlxMDAwNlwiLHIuREFUQVERVNDUklQVESPVwiUEtcdTAwMDdcXGJcInsedLDIOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGZShcIivRVuZXJpYdvcmtlclwiKSxpPWUoXCIuLidGlscwiKTtmdWjdGlvbiBzKGUpeuYFsbChaGlzLFwiQudmVydFdvcmtlciBbyBcIitlKSxaGlzLmRlcRUeXBlPWVaSpbmhlcmlcyhzLGpLHMucHJvdGeXBlLnBybNlcNDaHVuazmdWjdGlvbihlKXtaGlzLnBcgoeRhdGEaScmFucZvcmUbyhaGlzLmRlcRUeXBlLGUuZGFYSksbWVYTplLmldGFKXsdCleHBvcnRzPXNLHtcIiuLVaWxzXCIMzIsXCIuLdlbmVyaWNXbJrZXJcIjoyOHdLDIOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGZShcIivRVuZXJpYdvcmtlclwiKSxpPWUoXCIuLijcmMzMlwiKTtmdWjdGlvbiBzKClbijYWxsKHRoaXMsXCJDcmMzMlBybJlXCIpLHRoaXMudlaFNcmVhbUluZmoXCJjcmMzMlwiLDApfWUoXCIuLidGlscwiKSpbmhlcmlcyhzLGpLHMucHJvdGeXBlLnBybNlcNDaHVuazmdWjdGlvbihlKXtaGlzLnNcmVhbUluZmuYJjMzIaShlLmRhdGEsdGhpcyzdHJlYWJbmZvLmNyYzMyfHwwKSxaGlzLnBcgoZSlLHQuZXhwbJczzfSxXCIuLijcmMzMlwiOjQsXCIuLidGlscwiOjMyLFwiLiHZWlcmljVyaVyXCIMjhXSwyNjpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLidGlscwiKSxpPWUoXCIuLdlbmVyaWNXbJrZXJcIikZnVuYRpbgcyhlKXtpLmNhbGwodGhpcyxcIkRhdGFMZWndGhQcmiZSBmbIgXCIrZSksdGhpcywcmwTmFtZTlLHRoaXMudlaFNcmVhbUluZmoZSwwKXuLmluaGVyaXRzKHMsaSkscywcmbRcGUucHJvYVzcNodWrPWZbmNaWuKGUpelmKGUpeZhciBPXRoaXMucRyZWFtSWmbtaGlzLnBybBOYWlXXxMDtaGlzLnNcmVhbUluZmbdGhpcywcmwTmFtZVdCtlLmRhdGEubGVuZRofWkucHJvdGeXBlLnBybNlcNDaHVuayjYWxsKHRoaXMsZSlLHQuZXhwbJczzfSxXCIuLidGlscwiOjMyLFwiLiHZWlcmljVyaVyXCIMjhXSwyNzpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPWUoXCIuLidGlscwiKSxpPWUoXCIuLdlbmVyaWNXbJrZXJcIikZnVuYRpbgcyhlKXtpLmNhbGwodGhpcyxcIkRhdGFXbJrZXJcIikdmFyIHQdGhpcztaGlzLmRhdGFJcJlYWRPSExLHRoaXMuaWkZXgMCxaGlzLmheDwLHRoaXMuZGFYTudWxsLHRoaXMudHlwZTcIlwiLHRoaXMuXRpYtTYhlZHVsZWQITEsZSaGVuKGZbmNaWuKGUpeQuZGFYUlzUmVhZHkITAsdCkYXRhPWUsdCtYXgZSYmZSsZWndGhfDAsdCeXBlPWuZVVHlwZUmKGUpLHQuaXNQYXVzZWRfHQuXRpYtBbmRSZXBlYXQoKXsZnVuYRpboZSldClcnJvcihlKXpfWuaWoZXJpdHMocyxpKSxzLnBybRvdHlwZSjbGVhblVwPWZbmNaWuKClaSwcmbRcGUuYxlYWVcCjYWxsKHRoaXMpLHRoaXMuZGFYTudWxsfSxzLnBybRvdHlwZSyZXNbWUZnVuYRpboKXtyZXRcmhIWkucHJvdGeXBlLnJlcVtZSjYWxsKHRoaXMpJiYoIXRoaXMuXRpYtTYhlZHVsZWQmJnRoaXMuZGFYUlzUmVhZHkmJihaGlzLlaWNrUNoZWRbGVkPSEwLGuZGVsYXkodGhpcyfdGljaFuZFJlcGVhdCxbXSxaGlzKSksITApfSxzLnBybRvdHlwZSfdGljaFuZFJlcGVhdDmdWjdGlvbigpeRoaXMuXRpYtTYhlZHVsZWQITEsdGhpcypcBhdXNlZHxdGhpcypcZpbmlzaGVkfHwodGhpcyfdGljaygpLHRoaXMuaXNGaWpchlZHxKGuZGVsYXkodGhpcyfdGljaFuZFJlcGVhdCxbXSxaGlzKSxaGlzLlaWNrUNoZWRbGVkPSEwKSlLHMucHJvdGeXBlLlaWNrPWZbmNaWuKClaWYodGhpcypcBhdXNlZHxdGhpcypcZpbmlzaGVkKXJldHVybiExOZhciBlPWbGwsdDNYXRoLmpbihaGlzLmheCxaGlzLmluZGVKzEMzgKTtpZihaGlzLmluZGVPjaGlzLmheClyZXRcmgdGhpcylbmQoKTtzdlYgodGhpcyeXBlKXtjYXNlXCJzdHJpbmdcIjplPXRoaXMuZGFYSzdWJzdHJpbmcodGhpcypbmRleCxKTticmVhaztjYXNlXCJaWOGFycmFXCIZTaGlzLmRhdGEucViYXJyYXkodGhpcypbmRleCxKTticmVhaztjYXNlXCJhcnJheVwiOmNhcVcImvZGVidWZmZXJcIjplPXRoaXMuZGFYSzbGljZShaGlzLmluZGVLHQpfXJldHVybiBaGlzLmluZGVPXQsdGhpcywdXNoKHtkYXRhOmUsbWVYTpcGVyYVudDpaGlzLmheDaGlzLmluZGVLRoaXMubWFKjEwMDowfXpfSxLmVcGydHMcsewiLivdXRpbHNcIjozMixcIivRVuZXJpYdvcmtlclwiOjIfVsMjgWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtmdWjdGlvbiBuKGUpeRoaXMubmFtZTlfHxcImRlZmFbHRcIixaGlzLnNcmVhbUluZmesdGhpcynZWlcmFZWRFcnJvcjudWxsLHRoaXMuZXhcmFTdHJlYWJbmZvPXtLHRoaXMuaXNQYXVzZWQITAsdGhpcypcZpbmlzaGVkPSExLHRoaXMuaXNMbNrZWQITEsdGhpcyfbGlzdGVuZXJzPXtkYXRhOltdLGVuZDpbXSxlcnJvcjpbXXsdGhpcywcmVaWczudWxsfWucHJvdGeXBlPXtwdXNoOmZbmNaWuKGUpeRoaXMuZWpdChcImRhdGFcIixlKXsZWkOmZbmNaWuKClaWYodGhpcypcZpbmlzaGVkKXJldHVybiExORoaXMuZmxcgoKTtcnldGhpcylbWlKFwiZWkXCIpLHRoaXMuYxlYWVcCgpLHRoaXMuaXNGaWpchlZDhMHjYXRjaChlKXtaGlzLmVtaXQoXCJlcnJvclwiLGUpfXJldHVybiEwfSxlcnJvcjpmdWjdGlvbihlKXtyZXRcmhdGhpcypcZpbmlzaGVkJiYodGhpcypcBhdXNlZDaGlzLmdlbmVyYXRlZEVycmyPWUKHRoaXMuaXNGaWpchlZDhMCxaGlzLmVtaXQoXCJlcnJvclwiLGUpLHRoaXMucHJldmlvdXMmJnRoaXMucHJldmlvdXMuZXJybIoZSksdGhpcyjbGVhblVwKCkpLCEwKXsbZnVuYRpboZSxKXtyZXRcmgdGhpcyfbGlzdGVuZXJzWVdLnBcgodCksdGhpcsYxlYWVcDpmdWjdGlvbigpeRoaXMucRyZWFtSWmbzaGlzLmdlbmVyYXRlZEVycmyPXRoaXMuZXhcmFTdHJlYWJbmZvPWbGwsdGhpcyfbGlzdGVuZXJzPVtdfSxlbWlOmZbmNaWuKGUsdClaWYodGhpcyfbGlzdGVuZXJzWVdKWZvcihYXIgcjwOIdGhpcyfbGlzdGVuZXJzWVdLmxlbmdaDtyKyspdGhpcyfbGlzdGVuZXJzWVdWJdLmNhbGwodGhpcyxKXscGlwZTpmdWjdGlvbihlKXtyZXRcmgZSyZWdpcRlclByZXZpbVzKHRoaXMpfSxyZWdpcRlclByZXZpbVzOmZbmNaWuKGUpelmKHRoaXMuaXNMbNrZWQpdGhybcgbmVIEVycmyKFwiVGhlIHNcmVhbSAnXCIrdGhpcytcIicgaGFzIGFscmVhZHkgYmVlbiBcVkLlwiKTtaGlzLnNcmVhbUluZmZSzdHJlYWJbmZvLHRoaXMubWVyZVTdHJlYWJbmZvKCksdGhpcywcmVaWczlOZhciBPXRoaXMcmVdXJuIGUuboXCJkYXRhXCIsZnVuYRpboZSldCwcmjZXNzQhbmsoZSlKSxlLmuKFwiZWkXCIsZnVuYRpboKXtLmVuZCgpfSksZSvbihcImVycmyXCIsZnVuYRpboZSldClcnJvcihlKXpLHRoaXNLHBhdXNlOmZbmNaWuKClcmVdXJuIXRoaXMuaXNQYXVzZWQmJiFaGlzLmlzRmluaXNoZWQmJihaGlzLmlzUGFcVkPSEwLHRoaXMucHJldmlvdXMmJnRoaXMucHJldmlvdXMucGFcUoKSwhMClLHJlcVtZTpmdWjdGlvbigpelmKCFaGlzLmlzUGFcVkfHxaGlzLmlzRmluaXNoZWQpcmVdXJuITEdmFyIGUdGhpcypcBhdXNlZDhMTtyZXRcmgdGhpcynZWlcmFZWRFcnJvciYmKHRoaXMuZXJybIodGhpcynZWlcmFZWRFcnJvciksZThMCksdGhpcywcmVaWcyYmdGhpcywcmVaWcyyZXNbWUoKSwhZXsZmxcgZnVuYRpboKXtLHBybNlcNDaHVuazpmdWjdGlvbihlKXtaGlzLnBcgoZSlLHdpdGhTdHJlYWJbmZvOmZbmNaWuKGUsdClcmVdXJuIHRoaXMuZXhcmFTdHJlYWJbmZvWVdPXQsdGhpcytZXJnZVNcmVhbUluZmoKSxaGlzfSxtZXJnZVNcmVhbUluZmZnVuYRpboKXtmbIodmFyIGUgaWgdGhpcyleHRyYVNcmVhbUluZmpdGhpcyleHRyYVNcmVhbUluZmuaGFzTduUHJvcGVydHkoZSkmJihaGlzLnNcmVhbUluZmbZVdGhpcyleHRyYVNcmVhbUluZmbZVpfSxsbNrOmZbmNaWuKClaWYodGhpcypcxvYtlZClaHJvdyBuZXcgRXJybIoXCJUaGUgcRyZWFtICdcIitaGlzKwiJyBoYXMgYWxyZWFkeSBiZWVuIHVzZWQuXCIpORoaXMuaXNMbNrZWQITAsdGhpcywcmVaWcyYmdGhpcywcmVaWcysbNrKClLHRvURyaWnOmZbmNaWuKCldmFyIGUXCJXbJrZXIgXCIrdGhpcyuYWlOJldHVybiBaGlzLnByZXZpbVzPRoaXMucHJldmlvdXMrXCIgLTgXCIrZTplfXsdCleHBvcnRzPWLHtXSwyOTpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBoPWUoXCIuLidGlscwiKSxpPWUoXCIuLNvbnZlcnRXbJrZXJcIiksczlKFwiLiHZWlcmljVyaVyXCIpLHUZShcIiuLJhcUNFwiKSxuPWUoXCIuLizdXBwbJXCIpLGEZShcIiuLVdGVybmFsXCIpLGbnVsbDtpZihuLmvZGVzdHJlYWpdHJeZShcIiuLvZGVqcyObRlanNTdHJlYWPdXRwdXRBZGFwdGVyXCIpfWNhdGNoKGUpemdWjdGlvbiBsKGUsbylcmVdXJuIGldyBhLlBybpcUoZnVuYRpbodCxyKXtYXIgbjbXSxpPWUuXludGVybmFsVHlwZSxzPWUuXdHBdFRcGUsYTlLltaWlVHlwZTtlLmuKFwiZGFYVwiLGZbmNaWuKGUsdClbiwdXNoKGUpLGmJmodClKSvbihcImVycmyXCIsZnVuYRpboZSlbjbXSxyKGUpfSkuboXCJlbmRcIixmdWjdGlvbigpeRyeXtYXIgZTmdWjdGlvbihlLHQscilcdpdGNoKGUpeNhcVcImJsbJcIjpyZXRcmgaCuZXdCbGiKGgudHJhbnNmbJtVGoXCJhcnJheWJZmZlclwiLHQpLHIpONhcVcImJhcUNFwiOnJldHVybiBLmVuYkZShKTtkZWZhdWxOnJldHVybiBoLnRyYWzZmybVRvKGUsdClfShzLGZbmNaWuKGUsdCldmFyIHIsbjwLGkbnVsbCxzPTAZmyKHIMDtyPHQubGVuZRoOIrKylzKzWJdLmxlbmdaDtzdlYgoZSlYFzZVwicRyaWnXCIcmVdXJuIHQuampbihcIlwiKTtjYXNlXCJhcnJheVwiOnJldHVybiBBcnJheSwcmbRcGUuYuYFLmFwcGxKFtdLHQpONhcVcInVpbnQYXJyYXlcIjpmbIoaTuZXcgVWludDhBcnJheShzKSxyPTAcjxLmxlbmdaDtyKyspaSzZXQodFtyXSxuKSxuKzWJdLmxlbmdaDtyZXRcmgaTtjYXNlXCJubRlYnVmZmVyXCIcmVdXJuIEJZmZlcijbjYXQodCkZGVmYXVsdDpaHJvdyBuZXcgRXJybIoXCJjbjYXQgOiBbnNcHBvcnRlZCBeXBlICdcIitlKwiJwiKXKGksbiksYSkdChlKXjYXRjaChlKXtyKGUpfWWKSyZXNbWUoKXpfWZbmNaWuIGYoZSxLHIpeZhciBuPXQcdpdGNoKHQpeNhcVcImJsbJcIjpjYXNlXCJhcnJheWJZmZlclwiOmXCJaWOGFycmFXCIYnJlYWsYFzZVwiYmFzZTYXCIbjcInNcmluZwifXRyeXtaGlzLlpbnRlcmhbFRcGUbixaGlzLlvdXRwdXRUeXBlPXQsdGhpcyfbWltZVRcGUcixoLmNoZWNrUVwcGydChuKSxaGlzLlbJrZXIZSwaXBlKGldyBpKGpKSxlLmxvYsoKXjYXRjaChlKXtaGlzLlbJrZXIbmVIHMoXCJlcnJvclwiKSxaGlzLlbJrZXIuZXJybIoZSlfWYucHJvdGeXBlPXthYNbXVsYXRlOmZbmNaWuKGUpeJldHVybiBsKHRoaXMsZSlLGuOmZbmNaWuKGUsdCldmFyIHIdGhpcztyZXRcmcImRhdGFcIjPWU/dGhpcyfdyaVyLmuKGUsZnVuYRpboZSldCjYWxsKHIsZSkYXRhLGUubWVYSlKTpaGlzLlbJrZXIuboZSxmdWjdGlvbigpeguZGVsYXkodCxhcmdbWVudHMscilKSxaGlzfSxyZXNbWUZnVuYRpboKXtyZXRcmgaCkZWxheShaGlzLlbJrZXIucmVzdWlLFtdLHRoaXMuXdvcmtlciksdGhpcscGFcUZnVuYRpboKXtyZXRcmgdGhpcyfdyaVyLnBhdXNlKCksdGhpcsdGObRlanNTdHJlYWZnVuYRpboZSlaWYoaCjaGVjaNcHBvcnQoXCJubRlcRyZWFtXCIpLFwibmkZWJZmZlclwiITdGhpcyfbVcHVVHlwZSlaHJvdyBuZXcgRXJybIodGhpcyfbVcHVVHlwZStcIiBpcyBubQgcVwcGydGVkIGJIHRoaXMgbWVaGkXCIpOJldHVybiBuZXcgbyhaGlzLHtvYmplYRNbRlOlwibmkZWJZmZlclwiITdGhpcyfbVcHVVHlwZXsZSlfSxLmVcGydHMZnsewiLivYmFzZTYXCIMSxcIiuLVdGVybmFsXCINixcIiuLvZGVqcyObRlanNTdHJlYWPdXRwdXRBZGFwdGVyXCIMTMsXCIuLizdXBwbJXCIMzAsXCIuLidGlscwiOjMyLFwiLiDbZXJVyaVyXCIMjQsXCIuLdlbmVyaWNXbJrZXJcIjoyOHdLDMwOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIaWYociiYXNlNjQITAscihcnJheThMCxyLnNcmluZzhMCxyLmFycmFYnVmZmVyPVwidWkZWZpbmVkXCIhPXRcGVvZiBBcnJheUJZmZlciYmXCJbmRlZmluZWRcIiEdHlwZWmIFVpbnQQXJyYXksciubRlYnVmZmVyPVwidWkZWZpbmVkXCIhPXRcGVvZiBCdWZmZXIsciaWOGFycmFPVwidWkZWZpbmVkXCIhPXRcGVvZiBVaWOEFycmFLFwidWkZWZpbmVkXCIPXRcGVvZiBBcnJheUJZmZlcilyLmJsbIITEZWxzZXtYXIgbjuZXcgQXJyYXlCdWZmZXIoMCkdHJeIuYmxvYjwPTbmVIEJsbIoWdLHteXBlOlwiYXBwbGljYXRpbvemlwXCJKSzaXplfWNhdGNoKGUpeRyeXtYXIgaTuZXcocVsZiCbGiQnVpbGRlcnxcVsZiXZWJLaXRCbGiQnVpbGRlcnxcVsZiNbpCbGiQnVpbGRlcnxcVsZiNUJsbJCdWlsZGVyKTtpLmFwcGVuZChuKSxyLmJsbIMDPWkuZVQmxvYihcImFwcGxpYFaWuLppcFwiKSzaXplfWNhdGNoKGUpeIuYmxvYjhMXfXRyeXtyLmvZGVzdHJlYWISFlKFwicmVhZGFibGUtcRyZWFtXCIpLlJlYWRhYmxlfWNhdGNoKGUpeIubmkZXNcmVhbThMXLHtcInJlYWRhYmxlLXNcmVhbVwiOjEfVsMzEWZbmNaWuKGUsdCxzKXtcInVzZSBzdHJpYRcIjtmbIodmFyIGZShcIivdXRpbHNcIiksaDlKFwiLizdXBwbJXCIpLHIZShcIivbmkZWpzVXRpbHNcIiksbjlKFwiLizdHJlYWvRVuZXJpYdvcmtlclwiKSxPWldyBBcnJheSgyNTYpLGkMDtpPDINjtpKyspdVtpXTyNTIPWk/NjoyNDgPWk/NToyNDAPWk/NDoyMjQPWk/MzoxOTIPWk/MjoxOVbMjUXTWzINFMTtmdWjdGlvbiBhKClbijYWxsKHRoaXMsXCJdGYtOCBkZWNvZGVcIiksdGhpcysZWZTZlcjudWxsfWZbmNaWuIGwoKXtuLmNhbGwodGhpcyxcInVZiIGVuYkZVwiKXzLnVZjhlbmNvZGUZnVuYRpboZSlcmVdXJuIGgubmkZWJZmZlcjyLmldJZmZlckZyboZSxcInVZiXCIpOmZbmNaWuKGUpeZhciBLHIsbixpLHMsYTlLmxlbmdaCxvPTAZmyKGkMDtpPGEaSsrKTUMjkPToNjQMTImKHIZSjaGFyQkZUFKGkpKSkmJmkrMTxhJiYNjMyMDKDYNTEyJihuPWUuYhhckNvZGVBdChpKzEpKSkmJihyPTYNTMKyhyLTUMjkPDwxMCkrKGtNTYzMjApLGkrKyksbyscjwxMjg/MTpyPDIwNDg/MjpyPDYNTMPzMNDtmbIodDoLnVpbnQYXJyYXk/bmVIFVpbnQQXJyYXkobykbmVIEFycmFKGpLGkczwOMbztpKyspNTUyOTYPSgNDUxMiYocjlLmNoYXJDbRlQXQoaSkpKSYmaSsxPGEmJjUMzIwPToNjQMTImKGZSjaGFyQkZUFKGkrMSkpKSYmKHINjUMzYrKHItNTUyOTYPDEwKSsobiNjMyMCksaSsrKSxyPDEyODWMrKcjoocjwyMDQPRbcysrXTxOTJcj+PjYKHINjUMzY/dFtzKytdPTIyNHxyPj+MTIKHRbcysrXTyNDBcj+PjELHRbcysrXTxMjhcj+PjEyJjYzKSxWMrKMTIfHI+PjJjYzKSxWMrKMTIfDYzJnIpOJldHVybiBfShlKXscydGYZGVjbRlPWZbmNaWuKGUpeJldHVybiBoLmvZGVidWZmZXI/bycmFucZvcmUbyhcImvZGVidWZmZXJcIixlKSbNcmluZyhcInVZiXCIpOmZbmNaWuKGUpeZhciBLHIsbixpLHMZSsZWndGgsYTuZXcgQXJyYXkoMipzKTtmbIodDyPTAdDxzOylpZigobjlWQrKpPDEyOClhWIrKbjtlbHNlIGlmKDQKGkdVtuXSkpYVtyKytdPTYNTMzLHQrPWktMTtlbHNleZvcihuJjyPTaTzMTozPTaTxNToOzEaSYmdDxzOyluPWPDZNjMmZVtKytdLGktLTsxPGk/YVtyKytdPTYNTMzOmNjUMzY/YVtyKytdPWKGtPTYNTMLGFbcisrXTNTINnxuPjxMCYxMDIzLGFbcisrXTNjMyMHwxMDIzJmpfXJldHVybiBhLmxlbmdaCEPXImJihhLnNYmFycmFPEYSzdWJhcnJheSgwLHIpOmEubGVuZRoPXIpLGuYXBwbHlGcmtQhhckNvZGUoYSlKGUbycmFucZvcmUbyhoLnVpbnQYXJyYXk/XCJaWOGFycmFXCIXCJhcnJheVwiLGUpKXsbypbmhlcmlcyhhLGpLGEucHJvdGeXBlLnBybNlcNDaHVuazmdWjdGlvbihlKXtYXIgdDvLnRyYWzZmybVRvKGgudWludDhhcnJheTcInVpbnQYXJyYXlcIjpcImFycmFXCIsZSkYXRhKTtpZihaGlzLmxlZnRPdmVyJiZaGlzLmxlZnRPdmVyLmxlbmdaClaWYoaCaWOGFycmFKXtYXIgcjOyhPWldyBVaWOEFycmFKHIubGVuZRoKRoaXMubGVmdEZXIubGVuZRoKSkucVKHRoaXMubGVmdEZXIsMCksdCzZXQocixaGlzLmxlZnRPdmVyLmxlbmdaClZWxzZSBPXRoaXMubGVmdEZXIuYuYFKHQpORoaXMubGVmdEZXIbnVsbHYXIgbjmdWjdGlvbihlLHQpeZhciByOZvcigodDfHxlLmxlbmdaCk+ZSsZWndGgmJihPWUubGVuZRoKSxyPXQtMTswPDyJiYxMjgPSgxOTImZVtyXSkKXItLTtyZXRcmgcjwwPQMDPXI/dDpyKVbZVtyXV+dDyOnRKHQpLGkdDtuITdCsZWndGgmJihoLnVpbnQYXJyYXk/KGkdCzdWJhcnJheSgwLGpLHRoaXMubGVmdEZXIdCzdWJhcnJheShuLHQubGVuZRoKSkKGkdCzbGljZSgwLGpLHRoaXMubGVmdEZXIdCzbGljZShuLHQubGVuZRoKSkpLHRoaXMucHVzaChZGFYTpzLnVZjhkZWNvZGUoaSksbWVYTplLmldGFKXsYSwcmbRcGUuZmxcgZnVuYRpboKXtaGlzLmxlZnRPdmVyJiZaGlzLmxlZnRPdmVyLmxlbmdaCYmKHRoaXMucHVzaChZGFYTpzLnVZjhkZWNvZGUodGhpcysZWZTZlciksbWVYTpfXpLHRoaXMubGVmdEZXIbnVsbClLHMuVXRmOERlYkZVdvcmtlcjhLGuaWoZXJpdHMobCxuKSxsLnBybRvdHlwZSwcmjZXNzQhbmsZnVuYRpboZSldGhpcywdXNoKHtkYXRhOnMudXRmOGVuYkZShlLmRhdGEpLGldGEZStZXRhfSlLHMuVXRmOEVuYkZVdvcmtlcjsfSxXCIuLvZGVqcVaWxzXCIMTQsXCIuLNcmVhbSHZWlcmljVyaVyXCIMjgsXCIuLNcHBvcnRcIjozMCxcIivdXRpbHNcIjozMndLDMyOltmdWjdGlvbihlLHQsYSlXCJcUgcRyaWNXCIdmFyIGZShcIivcVwcGydFwiKSxoPWUoXCIuLJhcUNFwiKSxyPWUoXCIuLvZGVqcVaWxzXCIpLHUZShcIivZXhZXJuYWxcIikZnVuYRpbgbihlKXtyZXRcmgZXmdWjdGlvbiBsKGUsdClZmyKHZhciByPTAcjxlLmxlbmdaDsrKIpdFtyXTyNTUmZSjaGFyQkZUFKHIpOJldHVybiBfWUoXCJzZXRpbWlZGlhdGVcIiksYSuZXdCbGiPWZbmNaWuKHQscilYSjaGVjaNcHBvcnQoXCJibGiXCIpORyeXtyZXRcmgbmVIEJsbIoWRdLHteXBlOnJKXjYXRjaChlKXtcnldmFyIGbmVKHNlbGYuQmxvYkJaWxkZXJfHNlbGYuVViSlQmxvYkJaWxkZXJfHNlbGYuTWQmxvYkJaWxkZXJfHNlbGYuTVNCbGiQnVpbGRlcikcmVdXJuIGuYXBwZWkKHQpLGuZVQmxvYihyKXjYXRjaChlKXtaHJvdyBuZXcgRXJybIoXCJCdWcgOiBjYWndCBjbzdHJYQgdGhlIEJsbIuXCIpfXOZhciBpPXtzdHJpbmdpZnlCeUNodWrOmZbmNaWuKGUsdCxyKXtYXIgbjbXSxpPTAsczlLmxlbmdaDtpZihzPDyKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDbRlLmFwcGxKGbGwsZSkZmyKDtpPHMKVwiYXJyYXlcIjPXRfFwibmkZWJZmZlclwiPTdDuLnBcgoURyaWnLmZybDaGFyQkZShcHBseShudWxsLGUucxpYUoaSxNYXRoLmpbihpKIscykpKSkbiwdXNoKFNcmluZymcmtQhhckNvZGUuYXBwbHkobnVsbCxlLnNYmFycmFKGksTWFaCtaWoaStyLHMpKSkpLGkrPXIcmVdXJuIGuampbihcIlwiKXscRyaWnaWZQnlDaGFyOmZbmNaWuKGUpeZvcihYXIgdDcIlwiLHIMDtyPGUubGVuZRoOIrKylKzTdHJpbmcuZnJvbUNoYXJDbRlKGVbclpOJldHVybiBfSxhcHBseUNhbkJlVXNlZDpdWludDhhcnJheTpmdWjdGlvbigpeRyeXtyZXRcmgbyaWOGFycmFJiYxPTURyaWnLmZybDaGFyQkZShcHBseShudWxsLGldyBVaWOEFycmFKDEpKSsZWndGhYFYgoZSlcmVdXJuITFfSgpLGvZGVidWZmZXIZnVuYRpboKXtcnlcmVdXJuIGubmkZWJZmZlciYmMTPVNcmluZymcmtQhhckNvZGUuYXBwbHkobnVsbCxyLmFsbGjQnVmZmVyKDEpKSsZWndGhYFYgoZSlcmVdXJuITFfSgpfXZnVuYRpbgcyhlKXtYXIgdDNTUzNixyPWEuZVVHlwZUmKGUpLGITAaWYoXCJaWOGFycmFXCIPTyPaShcHBseUNhbkJlVXNlZCaWOGFycmFOlwibmkZWJZmZlclwiPTciYmKGaShcHBseUNhbkJlVXNlZCubRlYnVmZmVyKSxuKWZvcigMTxOylcnlcmVdXJuIGkucRyaWnaWZQnlDaHVuayhlLHIsdClYFYgoZSldDNYXRoLmZsbyKHQvMilcmVdXJuIGkucRyaWnaWZQnlDaGFyKGUpfWZbmNaWuIGYoZSxKXtmbIodmFyIHIMDtyPGUubGVuZRoOIrKylWJdPWVbclcmVdXJuIHRYShcHBseUZybDaGFyQkZTzOZhciBjPXtOMucRyaWnPXtzdHJpbmcbixhcnJheTpmdWjdGlvbihlKXtyZXRcmgbChlLGldyBBcnJheShlLmxlbmdaCkpfSxhcnJheWJZmZlcjpmdWjdGlvbihlKXtyZXRcmgYyzdHJpbmcudWludDhhcnJheShlKSidWZmZXJLHVpbnQYXJyYXkZnVuYRpboZSlcmVdXJuIGwoZSxuZXcgVWludDhBcnJheShlLmxlbmdaCkpfSxubRlYnVmZmVyOmZbmNaWuKGUpeJldHVybiBsKGUscihbGxvYJZmZlcihlLmxlbmdaCkpfXsYyhcnJheTcRyaWnOnMsYXJyYXkbixhcnJheWJZmZlcjpmdWjdGlvbihlKXtyZXRcmgbmVIFVpbnQQXJyYXkoZSkuYnVmZmVyfSxaWOGFycmFOmZbmNaWuKGUpeJldHVybiBuZXcgVWludDhBcnJheShlKXsbmkZWJZmZlcjpmdWjdGlvbihlKXtyZXRcmgciuZXdCdWZmZXJGcmtKGUpfXsYyhcnJheWJZmZlcjcRyaWnOmZbmNaWuKGUpeJldHVybiBzKGldyBVaWOEFycmFKGUpKXsYXJyYXkZnVuYRpboZSlcmVdXJuIGYobmVIFVpbnQQXJyYXkoZSksbmVIEFycmFKGUuYnlZUxlbmdaCkpfSxhcnJheWJZmZlcjpuLHVpbnQYXJyYXkZnVuYRpboZSlcmVdXJuIGldyBVaWOEFycmFKGUpfSxubRlYnVmZmVyOmZbmNaWuKGUpeJldHVybiByLmldJZmZlckZybobmVIFVpbnQQXJyYXkoZSkpfXsYyaWOGFycmFPXtzdHJpbmccyxhcnJheTpmdWjdGlvbihlKXtyZXRcmgZihlLGldyBBcnJheShlLmxlbmdaCkpfSxhcnJheWJZmZlcjpmdWjdGlvbihlKXtyZXRcmgZSidWZmZXJLHVpbnQYXJyYXkbixubRlYnVmZmVyOmZbmNaWuKGUpeJldHVybiByLmldJZmZlckZyboZSlfSxjLmvZGVidWZmZXIeNcmluZzpzLGFycmFOmZbmNaWuKGUpeJldHVybiBmKGUsbmVIEFycmFKGUubGVuZRoKSlLGFycmFYnVmZmVyOmZbmNaWuKGUpeJldHVybiBjLmvZGVidWZmZXIudWludDhhcnJheShlKSidWZmZXJLHVpbnQYXJyYXkZnVuYRpboZSlcmVdXJuIGYoZSxuZXcgVWludDhBcnJheShlLmxlbmdaCkpfSxubRlYnVmZmVyOmLGEudHJhbnNmbJtVGZnVuYRpboZSxKXtpZihPXRfFwiXCIsIWUpcmVdXJuIHQYSjaGVjaNcHBvcnQoZSkdmFyIHIYSnZXRUeXBlTYodCkcmVdXJuIGNbclbZVodClLGEucmVzbxZTmdWjdGlvbihlKXtmbIodmFyIHQZSzcGxpdChcIicIikscjbXSxuPTAbjxLmxlbmdaDtuKyspeZhciBpPXRbblXCIuXCIPTpfHxcIlwiPTaSYmMCEPWmJmhPTLmxlbmdaCxfHwoXCIuLlwiPTaTyLnBvcCgpOnIucHVzaChpKSlcmVdXJuIHIuampbihcIicIilLGEuZVVHlwZUmPWZbmNaWuKGUpeJldHVyblwicRyaWnXCIPXRcGVvZiBlPwicRyaWnXCIXCJbbJqZWNIEFycmFXVwiPTTJqZWNLnBybRvdHlwZSbNcmluZyjYWxsKGUpPwiYXJyYXlcIjpvLmvZGVidWZmZXImJnIuaXNCdWZmZXIoZSk/XCJubRlYnVmZmVyXCIbyaWOGFycmFJiZlIGlucRhbmNlbYgVWludDhBcnJheTcInVpbnQYXJyYXlcIjpvLmFycmFYnVmZmVyJiZlIGlucRhbmNlbYgQXJyYXlCdWZmZXI/XCJhcnJheWJZmZlclwiOnZvaWQgMHsYSjaGVjaNcHBvcnQZnVuYRpboZSlaWYoIWbZSbxvdVyQFzZSgpXSlaHJvdyBuZXcgRXJybIoZStcIiBpcyBubQgcVwcGydGVkIGJIHRoaXMgcGxhdGZvcmcIilLGEuTUFYXZBTFVFXzEQklUUzNTUzNSxhLkBWFWQUxVRVzMkJJVFMLTEsYSwcmVdHkZnVuYRpboZSldmFyIHQscixuPVwiXCIZmyKHIMDtyPChlfHxcIlwiKSsZWndGgcisrKWrPVwiXFxcXHhcIisoKHQZSjaGFyQkZUFKHIpKTwxNjcIjBcIjpcIlwiKStLnRvURyaWnKDEKSbVwcGVyQFzZSgpOJldHVybiBufSxhLmRlbGFPWZbmNaWuKGUsdCxyKXtzZXRJbWlZGlhdGUoZnVuYRpboKXtlLmFwcGxKHJfGbGwsdHxWpfSlLGEuaWoZXJpdHMZnVuYRpboZSxKXtmdWjdGlvbiByKClfXIucHJvdGeXBlPXQucHJvdGeXBlLGUucHJvdGeXBlPWldyByfSxhLmVdGVuZDmdWjdGlvbigpeZhciBlLHQscjfTtmbIoZTwOUYXJndWlbnRzLmxlbmdaDtlKyspZmyKHQgaWgYXJndWlbnRzWVdKWFyZVtZWctlXSoYXNPdQcmwZXJeShKSYmdmpZCAwPTcltXSYmKHJbdFYXJndWlbnRzWVdWRdKTtyZXRcmgcnsYSwcmVwYXJlQudGVudDmdWjdGlvbihyLGUsbixpLHMpeJldHVybiBLlBybpcUucmVzbxZShlKSaGVuKGZbmNaWuKGpeJldHVybiBvLmJsbImJihuIGlucRhbmNlbYgQmxvYnxLTEhPTbXCJbbJqZWNIEZpbGVdXCIsXCJbbJqZWNIEJsbJdXCJdLmluZGVTYoTJqZWNLnBybRvdHlwZSbNcmluZyjYWxsKGpKSkmJlwidWkZWZpbmVkXCIhPXRcGVvZiBGaWxlUmVhZGVyPldyBLlBybpcUoZnVuYRpbodCxyKXtYXIgZTuZXcgRmlsZVJlYWRlcjtlLmubGhZDmdWjdGlvbihlKXtKGUudGFyZVLnJlcVsdClLGUublcnJvcjmdWjdGlvbihlKXtyKGUudGFyZVLmVycmyKXsZSyZWFkQXNBcnJheUJZmZlcihuKXpOmKSaGVuKGZbmNaWuKGUpeZhciBPWEuZVVHlwZUmKGUpOJldHVybiBPyhcImFycmFYnVmZmVyXCIPTPUYScmFucZvcmUbyhcInVpbnQYXJyYXlcIixlKTpcInNcmluZwiPTdCYmKHM/ZToLmRlYkZShlKTpuJiYhMCEPWkmJihlPWZbmNaWuKGUpeJldHVybiBsKGUsbyaWOGFycmFPldyBVaWOEFycmFKGUubGVuZRoKTpuZXcgQXJyYXkoZSsZWndGgpKXoZSkpKSxlKTpLlBybpcUucmVqZWNKGldyBFcnJvcihcIkNhbidIHJlYWQgdGhlIGRhdGEgbYgJwiKIrXCInLiBJcyBpdCBpbiBhIHNcHBvcnRlZCBKYXZhUNyaXBIHRcGUgKFNcmluZywgQmxvYiwgQXJyYXlCdWZmZXIsIGVYykgPwiKSlKXLHtcIivYmFzZTYXCIMSxcIivZXhZXJuYWxcIjoLFwiLiubRlanNVdGlscwiOjELFwiLizdXBwbJXCIMzAscVaWtZWRpYXRlOjUfVsMzMWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgbjlKFwiLiyZWFkZXIvcmVhZGVyRmyXCIpLGkZShcIivdXRpbHNcIiksczlKFwiLizaWduYXRcmVcIiksYTlKFwiLiaXBFbnRyeVwiKSxvPShlKFwiLidGYXCIpLGUoXCIuLNcHBvcnRcIikpOZbmNaWuIGgoZSldGhpcymaWxlczbXSxaGlzLmxvYWRPcHRpbzPWVaCwcmbRcGUeNoZWNrUlnbmFdXJlOmZbmNaWuKGUpelmKCFaGlzLnJlYWRlciyZWFkQWkQhlYtTaWduYXRcmUoZSkpeRoaXMucmVhZGVyLmluZGVLTOZhciBPXRoaXMucmVhZGVyLnJlYWRTdHJpbmcoNCkdGhybcgbmVIEVycmyKFwiQycnVwdGVkIHppcCBvciBidWcIHVuZXhwZWNZWQgclnbmFdXJlIChcIitpLnByZXReShKStcIiwgZXhwZWNZWQgXCIraSwcmVdHkoZSkrXCIpXCIpfXsaXNTaWduYXRcmUZnVuYRpboZSxKXtYXIgcjaGlzLnJlYWRlcipbmRleDtaGlzLnJlYWRlcizZXRJbmRleChlKTtYXIgbjaGlzLnJlYWRlciyZWFkURyaWnKDQpPTdDtyZXRcmgdGhpcyyZWFkZXIucVSWkZXgociksbnscmVhZEJsbNrRWkTZDZWcmFsOmZbmNaWuKCldGhpcykaXNrTnVtYmVyPXRoaXMucmVhZGVyLnJlYWRJbnQoMiksdGhpcykaXNrVlaENlbnRyYWxEaXJTdGFydDaGlzLnJlYWRlciyZWFkSWKDIpLHRoaXMuYVudHJhbERpclJlYyZHNPblRoaXNEaXNrPXRoaXMucmVhZGVyLnJlYWRJbnQoMiksdGhpcyjZWcmFsRGlyUmVjbJkczaGlzLnJlYWRlciyZWFkSWKDIpLHRoaXMuYVudHJhbERpclNpemUdGhpcyyZWFkZXIucmVhZEludCgKSxaGlzLmNlbnRyYWxEaXJPZmZzZXQdGhpcyyZWFkZXIucmVhZEludCgKSxaGlzLnppcENvbWlbnRMZWndGgdGhpcyyZWFkZXIucmVhZEludCgyKTtYXIgZTaGlzLnJlYWRlciyZWFkRGFYShaGlzLnppcENvbWlbnRMZWndGgpLHQbyaWOGFycmFPwidWludDhhcnJheVwiOlwiYXJyYXlcIixyPWkudHJhbnNmbJtVGodCxlKTtaGlzLnppcENvbWlbnQdGhpcysbFkTBaWucykZWNvZGVGaWxlTmFtZShyKXscmVhZEJsbNrWmlwNjRFbmRPZkNlbnRyYWwZnVuYRpboKXtaGlzLnppcDYRWkTZDZWcmFsUlZTaGlzLnJlYWRlciyZWFkSWKDgpLHRoaXMucmVhZGVyLnNraXAoNCksdGhpcykaXNrTnVtYmVyPXRoaXMucmVhZGVyLnJlYWRJbnQoNCksdGhpcykaXNrVlaENlbnRyYWxEaXJTdGFydDaGlzLnJlYWRlciyZWFkSWKDQpLHRoaXMuYVudHJhbERpclJlYyZHNPblRoaXNEaXNrPXRoaXMucmVhZGVyLnJlYWRJbnQoOCksdGhpcyjZWcmFsRGlyUmVjbJkczaGlzLnJlYWRlciyZWFkSWKDgpLHRoaXMuYVudHJhbERpclNpemUdGhpcyyZWFkZXIucmVhZEludCgKSxaGlzLmNlbnRyYWxEaXJPZmZzZXQdGhpcyyZWFkZXIucmVhZEludCgKSxaGlzLnppcDYRXhZWzaWJsZURhdGEeZmyKHZhciBlLHQscixuPXRoaXMuemlwNjRFbmRPZkNlbnRyYWxTaXplLTQOzAbjspZTaGlzLnJlYWRlciyZWFkSWKDIpLHQdGhpcyyZWFkZXIucmVhZEludCgKSxyPXRoaXMucmVhZGVyLnJlYWREYXRhKHQpLHRoaXMuemlwNjRFeHRlbnNpYmxlRGFYVtlXTaWQZSxsZWndGgdCxYWxZTpyfXscmVhZEJsbNrWmlwNjRFbmRPZkNlbnRyYWxMbNhdGyOmZbmNaWuKClaWYodGhpcykaXNrVlaFppcDYQVudHJhbERpclNYXJPXRoaXMucmVhZGVyLnJlYWRJbnQoNCksdGhpcyyZWxhdGlZUmZnNldEVuZEmWmlwNjRDZWcmFsRGlyPXRoaXMucmVhZGVyLnJlYWRJbnQoOCksdGhpcykaXNrcNvdWPXRoaXMucmVhZGVyLnJlYWRJbnQoNCksMTxaGlzLmRpctzQbnQpdGhybcgbmVIEVycmyKFwiTXVsdGktdmsdWlcyBaXAgYXJlIGvdCBzdXBwbJZWRcIilLHJlYWRMbNhbEZpbGVzOmZbmNaWuKCldmFyIGUsdDtmbIoZTwOUdGhpcymaWxlcysZWndGgZSsrKXQdGhpcymaWxlctlXSxaGlzLnJlYWRlcizZXRJbmRleChLmxvYFsSGVhZGVyTZmcVKSxaGlzLmNoZWNrUlnbmFdXJlKHMuTEDQUxfRklMRVIRUFERVIpLHQucmVhZExvYFsUGFydChaGlzLnJlYWRlciksdCoYWkbGVVVEYKCksdCwcmjZXNzQXRcmlidXRlcygpfSxyZWFkQVudHJhbERpcjpmdWjdGlvbigpeZhciBlOZvcihaGlzLnJlYWRlcizZXRJbmRleChaGlzLmNlbnRyYWxEaXJPZmZzZXQpORoaXMucmVhZGVyLnJlYWRBbmRDaGVjaNpZhdHVyZShzLkNFTlRSQUxfRklMRVIRUFERVIpOykoZTuZXcgYShemlwNjQdGhpcyaXANHsdGhpcysbFkTBaWucykpLnJlYWRDZWcmFsUGFydChaGlzLnJlYWRlciksdGhpcymaWxlcywdXNoKGUpOlmKHRoaXMuYVudHJhbERpclJlYyZHMhPTaGlzLmZpbGVzLmxlbmdaCYmMCEPXRoaXMuYVudHJhbERpclJlYyZHMmJjAPTaGlzLmZpbGVzLmxlbmdaClaHJvdyBuZXcgRXJybIoXCJDbJydXBZWQgemlwIGyIGJZzogZXhwZWNZWQgXCIrdGhpcyjZWcmFsRGlyUmVjbJkcytcIiByZWNvcmRzIGluIGNlbnRyYWwgZGlyLCBnbQgXCIrdGhpcymaWxlcysZWndGgpfSxyZWFkRWkTZDZWcmFsOmZbmNaWuKCldmFyIGUdGhpcyyZWFkZXIubGFzdEluZGVTZTaWduYXRcmUocyDRUUUkFMXRJUkVDVESWVFTkQpOlmKGUMClaHJvdyFaGlzLmlzUlnbmFdXJlKDAscyMTNBTFGSUxFXhFQURFUik/bmVIEVycmyKFwiQFuJQgZmluZCBlbmQgbYgYVudHJhbCBkaXJlYRvcnkgOiBpcyBaGlzIGEgemlwIGZpbGUgPyBJZiBpdCBpcywgcVlIGhdHBzOivcRaynaXRodWIuaWvanNaXAvZGjdWlbnRhdGlvbiobdbyyZWFkXppcCodGsXCIpOmldyBFcnJvcihcIkNvcnJcHRlZCBaXAIGNhbidIGZpbmQgZWkIGmIGNlbnRyYWwgZGlyZWNbJXCIpORoaXMucmVhZGVyLnNldEluZGVKGUpOZhciBPWUaWYodGhpcyjaGVjaNpZhdHVyZShzLkNFTlRSQUxfRElSRUNUTJZXVORCksdGhpcyyZWFkQmxvYtFbmRPZkNlbnRyYWwoKSxaGlzLmRpctOdWiZXIPTpLkBWFWQUxVRVxNkJJVFNfHRoaXMuZGlzadpdGhDZWcmFsRGlyURhcnQPTpLkBWFWQUxVRVxNkJJVFNfHRoaXMuYVudHJhbERpclJlYyZHNPblRoaXNEaXNrPTaSNQVhfVkFMVUVfMTZCSVRTfHxaGlzLmNlbnRyYWxEaXJSZWNvcmRzPTaSNQVhfVkFMVUVfMTZCSVRTfHxaGlzLmNlbnRyYWxEaXJTaXplPTaSNQVhfVkFMVUVfMzJCSVRTfHxaGlzLmNlbnRyYWxEaXJPZmZzZXQPTpLkBWFWQUxVRVzMkJJVFMpelmKHRoaXMuemlwNjQITAsKGUdGhpcyyZWFkZXIubGFzdEluZGVTZTaWduYXRcmUocyaSVANFDRUUUkFMXRJUkVDVESWVMTNBVESKSkMClaHJvdyBuZXcgRXJybIoXCJDbJydXBZWQgemlwOiBjYWndCBmaWkIHRoZSBaSVANCBlbmQgbYgYVudHJhbCBkaXJlYRvcnkgbGjYXRvclwiKTtpZihaGlzLnJlYWRlcizZXRJbmRleChlKSxaGlzLmNoZWNrUlnbmFdXJlKHMuWklQNjRfQVOVFJBTFESVJFQRPUllfTEDQVRPUiksdGhpcyyZWFkQmxvYtaaXANEVuZEmQVudHJhbExvYFbIoKSwhdGhpcypcNpZhdHVyZShaGlzLnJlbGFaXZlTZmcVRWkTZaaXANENlbnRyYWxEaXIscyaSVANFDRUUUkFMXRJUkVDVESWVFTkQpJiYodGhpcyyZWxhdGlZUmZnNldEVuZEmWmlwNjRDZWcmFsRGlyPXRoaXMucmVhZGVyLmxhcRJbmRleEmUlnbmFdXJlKHMuWklQNjRfQVOVFJBTFESVJFQRPUllfRUEKSxaGlzLnJlbGFaXZlTZmcVRWkTZaaXANENlbnRyYWxEaXIMCkpdGhybcgbmVIEVycmyKFwiQycnVwdGVkIHppcDogYFuJQgZmluZCBaGUgWklQNjQgZWkIGmIGNlbnRyYWwgZGlyZWNbJXCIpORoaXMucmVhZGVyLnNldEluZGVKHRoaXMucmVsYXRpdmVPZmZzZXRFbmRPZlppcDYQVudHJhbERpciksdGhpcyjaGVjaNpZhdHVyZShzLlpJUDYXNFTlRSQUxfRElSRUNUTJZXVORCksdGhpcyyZWFkQmxvYtaaXANEVuZEmQVudHJhbCgpfXZhciByPXRoaXMuYVudHJhbERpckmZnNldCtaGlzLmNlbnRyYWxEaXJTaXplORoaXMuemlwNjQmJihyKzyMCxyKzxMitaGlzLnppcDYRWkTZDZWcmFsUlZSkdmFyIGdCyOlmKDAbilaGlzLmlzUlnbmFdXJlKHQscyDRUUUkFMXZJTEVfSEVBREVSKXxKHRoaXMucmVhZGVyLnplcmbikZWxzZSBpZihuPDApdGhybcgbmVIEVycmyKFwiQycnVwdGVkIHppcDogbWlzcluZyBcIitNYXRoLmFicyhuKStcIiBieXRlcycIilLHByZXBhcmVSZWFkZXIZnVuYRpboZSldGhpcyyZWFkZXIbihlKXsbGhZDpmdWjdGlvbihlKXtaGlzLnByZXBhcmVSZWFkZXIoZSksdGhpcyyZWFkRWkTZDZWcmFsKCksdGhpcyyZWFkQVudHJhbERpcigpLHRoaXMucmVhZExvYFsRmlsZXMoKXLHQuZXhwbJczofSxXCIuLJlYWRlciyZWFkZXJGbJcIjoyMixcIivclnbmFdXJlXCIMjMsXCIuLNcHBvcnRcIjozMCxcIivdXRmOFwiOjMxLFwiLidGlscwiOjMyLFwiLiaXBFbnRyeVwiOjMfVsMzQWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgbjlKFwiLiyZWFkZXIvcmVhZGVyRmyXCIpLHMZShcIivdXRpbHNcIiksaTlKFwiLijbwcmVzcVkTJqZWNXCIpLGEZShcIivYJjMzJcIiksbzlKFwiLidGYXCIpLGgZShcIivYtcHJlcNpbzXCIpLHUZShcIivcVwcGydFwiKTtmdWjdGlvbiBsKGUsdCldGhpcyvcHRpbzPWUsdGhpcysbFkTBaWuczfWwucHJvdGeXBlPXtpcVuYJcHRlZDpmdWjdGlvbigpeJldHVybiAxPToMSZaGlzLmJpdEZsYWcpfSxcVVVEYOmZbmNaWuKClcmVdXJuIDIwNDgPSgyMDQJnRoaXMuYmlRmxhZylLHJlYWRMbNhbFBhcnQZnVuYRpboZSldmFyIHQscjtpZihlLnNraXAoMjIpLHRoaXMuZmlsZUhbWVMZWndGgZSyZWFkSWKDIpLHIZSyZWFkSWKDIpLHRoaXMuZmlsZUhbWUZSyZWFkRGFYShaGlzLmZpbGVOYWlTGVuZRoKSxlLnNraXAociksLTEPTaGlzLmNvbXByZXNzZWRTaXplfHwtMTPXRoaXMudWjbwcmVzcVkUlZSlaHJvdyBuZXcgRXJybIoXCJCdWcgbIgYycnVwdGVkIHppcCAIGRpZGndCBnZXQgZWvdWdoIGluZmybWFaWuIGZybgdGhlIGNlbnRyYWwgZGlyZWNbJIChjbwcmVzcVkUlZSAPTgLTEgfHwgdWjbwcmVzcVkUlZSAPTgLTEpXCIpOlmKGbGwPTodDmdWjdGlvbihlKXtmbIodmFyIHQgaWgaClpZihoLmhhcblBybBlcnRKHQpJiZoWRdLmhZljPTZSlyZXRcmgaFtXTtyZXRcmgbnVsbHodGhpcyjbwcmVzclvbkldGhvZCkpKXRocmIGldyBFcnJvcihcIkNvcnJcHRlZCBaXAgOiBjbwcmVzclvbiBcIitzLnByZXReShaGlzLmNvbXByZXNzaWuTWVaGkKStcIiBbmtubduIChpbmlciBmaWxlIDogXCIrcycmFucZvcmUbyhcInNcmluZwiLHRoaXMuZmlsZUhbWUpKwiKVwiKTtaGlzLmRlYtcHJlcNlZDuZXcgaShaGlzLmNvbXByZXNzZWRTaXplLHRoaXMudWjbwcmVzcVkUlZSxaGlzLmNyYzMyLHQsZSyZWFkRGFYShaGlzLmNvbXByZXNzZWRTaXplKSlLHJlYWRDZWcmFsUGFydDpmdWjdGlvbihlKXtaGlzLnZlcnNpbNYWRlQnkZSyZWFkSWKDIpLGUuctpcCgyKSxaGlzLmJpdEZsYWcZSyZWFkSWKDIpLHRoaXMuYtcHJlcNpbNZXRobQZSyZWFkURyaWnKDIpLHRoaXMuZGFZTlLnJlYWREYXRlKCksdGhpcyjcmMzMjlLnJlYWRJbnQoNCksdGhpcyjbwcmVzcVkUlZTlLnJlYWRJbnQoNCksdGhpcybmNvbXByZXNzZWRTaXplPWUucmVhZEludCgKTtYXIgdDlLnJlYWRJbnQoMikaWYodGhpcyleHRyYUZpZWxkcxlbmdaDlLnJlYWRJbnQoMiksdGhpcymaWxlQtbWVudExlbmdaDlLnJlYWRJbnQoMiksdGhpcykaXNrTnVtYmVyURhcnQZSyZWFkSWKDIpLHRoaXMuaWZXJuYWxGaWxlQXRcmlidXRlczlLnJlYWRJbnQoMiksdGhpcyleHRlcmhbEZpbGVBdHRyaWJdGVzPWUucmVhZEludCgKSxaGlzLmxvYFsSGVhZGVyTZmcVPWUucmVhZEludCgKSxaGlzLmlzRWjcnlwdGVkKCkpdGhybcgbmVIEVycmyKFwiRWjcnlwdGVkIHppcCBhcmUgbmIHNcHBvcnRlZFwiKTtlLnNraXAodCksdGhpcyyZWFkRXhcmFGaWVsZHMoZSksdGhpcywYXJzZVpJUDYRXhcmFGaWVsZChlKSxaGlzLmZpbGVDbtZWPWUucmVhZERhdGEodGhpcymaWxlQtbWVudExlbmdaClLHBybNlcNBdHRyaWJdGVzOmZbmNaWuKCldGhpcybmlUGVybWlzclvbnMbnVsbCxaGlzLmRvcBlcmpcNpbzPWbGwdmFyIGUdGhpcyZXJzaWuTWFkZUJPjORoaXMuZGlyPSEhKDEJnRoaXMuZXhZXJuYWxGaWxlQXRcmlidXRlcyksMDZSYmKHRoaXMuZGzUGVybWlzclvbnMNjMmdGhpcyleHRlcmhbEZpbGVBdHRyaWJdGVzKSwzPTlJiYodGhpcybmlUGVybWlzclvbnMdGhpcyleHRlcmhbEZpbGVBdHRyaWJdGVzPjxNiYNTUzNSksdGhpcykaXJfFwiLwiITdGhpcymaWxlTmFtZVNcizbGljZSgtMSlfChaGlzLmRpcjhMClLHBhcnNlWklQNjRFeHRyYUZpZWxkOmZbmNaWuKGUpelmKHRoaXMuZXhcmFGaWVsZHNbMVpeZhciBPWodGhpcyleHRyYUZpZWxkcsxXSYWxZSkdGhpcybmNvbXByZXNzZWRTaXplPTcyNQVhfVkFMVUVfMzJCSVRTJiYodGhpcybmNvbXByZXNzZWRTaXplPXQucmVhZEludCgKSksdGhpcyjbwcmVzcVkUlZTPXMuTUFYXZBTFVFXzMyQklUUyYmKHRoaXMuYtcHJlcNlZFNpemUdCyZWFkSWKDgpKSxaGlzLmxvYFsSGVhZGVyTZmcVPTcyNQVhfVkFMVUVfMzJCSVRTJiYodGhpcysbNhbEhlYWRlckmZnNldDLnJlYWRJbnQoOCkpLHRoaXMuZGlzabWJlclNYXJPTcyNQVhfVkFMVUVfMzJCSVRTJiYodGhpcykaXNrTnVtYmVyURhcnQdCyZWFkSWKDQpKXLHJlYWRFeHRyYUZpZWxkczpmdWjdGlvbihlKXtYXIgdCxyLGsaTlLmluZGVKRoaXMuZXhcmFGaWVsZHNMZWndGgZmyKHRoaXMuZXhcmFGaWVsZHNfChaGlzLmVdHJhRmllbGRzPXtKTtlLmluZGVKzQaTspdDlLnJlYWRJbnQoMikscjlLnJlYWRJbnQoMiksbjlLnJlYWREYXRhKHIpLHRoaXMuZXhcmFGaWVsZHNbdFelkOnQsbGVuZRoOnIsdmFsdWUbnZSzZXRJbmRleChpKXsaGFuZGxlVVRGODpmdWjdGlvbigpeZhciBlPXUudWludDhhcnJheTcInVpbnQYXJyYXlcIjpcImFycmFXCIaWYodGhpcycVVVEYKCkpdGhpcymaWxlTmFtZVNcjvLnVZjhkZWNvZGUodGhpcymaWxlTmFtZSksdGhpcymaWxlQtbWVudFNcjvLnVZjhkZWNvZGUodGhpcymaWxlQtbWVudCkZWxzZXtYXIgdDaGlzLmZpbmRFeHRyYUZpZWxkVWpYkZVBhdGgoKTtpZihudWxsITdClaGlzLmZpbGVOYWlURyPXQZWxzZXtYXIgcjzLnRyYWzZmybVRvKGUsdGhpcymaWxlTmFtZSkdGhpcymaWxlTmFtZVNcjaGlzLmxvYWRPcHRpbzLmRlYkZUZpbGVOYWlKHIpfXZhciBuPXRoaXMuZmluZEVdHJhRmllbGRVbmljbRlQtbWVudCgpOlmKGbGwhPTuKXRoaXMuZmlsZUNvbWlbnRTdHIbjtlbHNleZhciBpPXMudHJhbnNmbJtVGoZSxaGlzLmZpbGVDbtZWKTtaGlzLmZpbGVDbtZWURyPXRoaXMubGhZEwdGlvbnMuZGVjbRlRmlsZUhbWUoaSlfXsZmluZEVdHJhRmllbGRVbmljbRlUGFaDpmdWjdGlvbigpeZhciBlPXRoaXMuZXhcmFGaWVsZHNbMjgODldOlmKGUpeZhciBPWoZSYWxZSkcmVdXJuIDEhPTLnJlYWRJbnQoMSk/bnVsbDphKHRoaXMuZmlsZUhbWUpITdCyZWFkSWKDQpPbGwbydGYZGVjbRlKHQucmVhZERhdGEoZSsZWndGgtNSkpfXJldHVybiBudWxsfSxmaWkRXhcmFGaWVsZFVuaWNvZGVDbtZWOmZbmNaWuKCldmFyIGUdGhpcyleHRyYUZpZWxkcsyNTQMVaWYoZSldmFyIHQbihlLnZhbHVlKTtyZXRcmgMSEPXQucmVhZEludCgxKTudWxsOmEodGhpcymaWxlQtbWVudCkhPTLnJlYWRJbnQoNCk/bnVsbDpvLnVZjhkZWNvZGUodCyZWFkRGFYShlLmxlbmdaCKSlcmVdXJuIGbGxfSxLmVcGydHMbHsewiLijbwcmVzcVkTJqZWNXCIMixcIivYtcHJlcNpbzXCIMyxcIivYJjMzJcIjoLFwiLiyZWFkZXIvcmVhZGVyRmyXCIMjIsXCIuLNcHBvcnRcIjozMCxcIivdXRmOFwiOjMxLFwiLidGlscwiOjMyfVsMzUWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtmdWjdGlvbiBuKGUsdCxyKXtaGlzLmhbWUZSxaGlzLmRpcjyLmRpcixaGlzLmRhdGUcikYXRlLHRoaXMuYtbWVudDyLmNvbWlbnQsdGhpcybmlUGVybWlzclvbnMcibmlUGVybWlzclvbnMsdGhpcykbNQZXJtaXNzaWuczyLmRvcBlcmpcNpbzLHRoaXMuXRhdGEdCxaGlzLlkYXRhQmluYXJPXIuYmluYXJLHRoaXMubBaWuczYtcHJlcNpbcijbwcmVzclvbixjbwcmVzclvbkwdGlvbnMcijbwcmVzclvbkwdGlvbnNfXZhciBzPWUoXCIuLNcmVhbSTdHJlYWIZWxwZXJcIiksaTlKFwiLizdHJlYWvRGFYVdvcmtlclwiKSxhPWUoXCIuLVZjhcIiksbzlKFwiLijbwcmVzcVkTJqZWNXCIpLGgZShcIivcRyZWFtLdlbmVyaWNXbJrZXJcIikbiwcmbRcGUeludGVybmFsURyZWFtOmZbmNaWuKGUpeZhciBPWbGwscjcInNcmluZwiORyeXtpZighZSlaHJvdyBuZXcgRXJybIoXCJObyBvdXRwdXQgdHlwZSBzcGVjaWZpZWQuXCIpOZhciBuPVwicRyaWnXCIPTocjlLnRvTGZXJDYXNlKCkpfHxcInRleHRcIjPXIXCJiaWhcnlzdHJpbmdcIiEPXImJlwidGVdFwiITcnxKHIXCJzdHJpbmdcIiksdDaGlzLlkZWNvbXByZXNzVyaVyKCkdmFyIGkIXRoaXMuXRhdGFCaWhcnkaSYmIWmJihPXQucGlwZShuZXcgYSVdGYRWjbRlVyaVyKSksIWkmJmmJihPXQucGlwZShuZXcgYSVdGYRGVjbRlVyaVyKSlYFYgoZSlKHQbmVIGgoXCJlcnJvclwiKSkuZXJybIoZSlcmVdXJuIGldyBzKHQscixcIlwiKXsYXNbmMZnVuYRpboZSxKXtyZXRcmgdGhpcypbnRlcmhbFNcmVhbShlKShYNbXVsYXRlKHQpfSxubRlURyZWFtOmZbmNaWuKGUsdClcmVdXJuIHRoaXMuaWZXJuYWxTdHJlYWoZXxXCJubRlYnVmZmVyXCIpLnRvTmkZWpzURyZWFtKHQpfSxfYtcHJlcNXbJrZXIZnVuYRpboZSxKXtpZihaGlzLlkYXRhIGlucRhbmNlbYgbyYmdGhpcyfZGFYSjbwcmVzclvbitYWdpYzPWUubWFnaWMpcmVdXJuIHRoaXMuXRhdGEuZVQtcHJlcNlZFdvcmtlcigpOZhciByPXRoaXMuXRlYtcHJlcNXbJrZXIoKTtyZXRcmgdGhpcyfZGFYUJpbmFyeXxKHIciwaXBlKGldyBhLlVZjhFbmNvZGVXbJrZXIpKSxvLmNyZWFZVdvcmtlckZybocixlLHQpfSxfZGVjbwcmVzcdvcmtlcjpmdWjdGlvbigpeJldHVybiBaGlzLlkYXRhIGlucRhbmNlbYgbzaGlzLlkYXRhLmdldENvbnRlbnRXbJrZXIoKTpaGlzLlkYXRhIGlucRhbmNlbYgaDaGlzLlkYXRhOmldyBpKHRoaXMuXRhdGEpfXZmyKHZhciBPVtcImFzVGVdFwiLFwiYXNCaWhcnlcIixcImFzTmkZUJZmZlclwiLFwiYXNVaWOEFycmFXCIsXCJhcFycmFQnVmZmVyXCJdLGwZnVuYRpboKXtaHJvdyBuZXcgRXJybIoXCJUaGlzIGldGhvZCBoYXMgYmVlbiByZWvdmVkIGluIEpTWmlwIDMuMCwgcGxlYXNlIGNoZWNrIHRoZSBcGdyYWRlIGdaWRlLlwiKXsZjwOYdSsZWndGgZisrKWucHJvdGeXBlWVbZldPWwdCleHBvcnRzPWLHtcIivYtcHJlcNlZEiamVjdFwiOjIsXCIuLNcmVhbSEYXRhVyaVyXCIMjcsXCIuLNcmVhbSHZWlcmljVyaVyXCIMjgsXCIuLNcmVhbSTdHJlYWIZWxwZXJcIjoyOSxcIivdXRmOFwiOjMxfVsMzYWZbmNaWuKGUsbCxKXsoZnVuYRpbodClXCJcUgcRyaWNXCIdmFyIHIsbixlPXQuTXVYXRpbPYnNlcnZlcnxdCXZWJLaXRNdXRhdGlvbkicVydmVyOlmKGUpeZhciBpPTAsczuZXcgZShKSxhPXQuZGjdWlbnQuYJlYXRlVGVdEvZGUoXCJcIikcyvYnNlcnZlKGEseNoYXJhYRlckRhdGEITBKSxyPWZbmNaWuKClYSkYXRhPWkKytpJTJfWVscUgaWYodCzZXRJbWlZGlhdGVfHZvaWQgMDPXQuTWVzcFnZUNoYWuZWwpcjcImRvYVtZWXCJpbiBJiZcImucmVhZHlzdGFZWNoYWnZVwiaWgdCkbNbWVudCjcmVhdGVFbGVtZWKFwicNyaXBXCIpPZbmNaWuKCldmFyIGUdCkbNbWVudCjcmVhdGVFbGVtZWKFwicNyaXBXCIpOUubyZWFkeXNYXRlYhhbmdlPWZbmNaWuKCldSgpLGUubyZWFkeXNYXRlYhhbmdlPWbGwsZSwYXJlbnRObRlLnJlbWZUNoaWxkKGUpLGUbnVsbHsdCkbNbWVudCkbNbWVudEVsZWlbnQuYXBwZWkQhpbGQoZSlOmZbmNaWuKClcVVGltZWdChLDApfTtlbHNleZhciBvPWldyBLklcNhZVDaGFubmVsOucGydDEubtZXNzYWdlPXUscjmdWjdGlvbigpeucGydDIucGzdElcNhZUoMClfXZhciBoPVtdOZbmNaWuIHUoKXtYXIgZSxOITAZmyKHZhciByPWgubGVuZRoOIKXtmbIodDoLGgWsZTtMTsrKUcjspdFtlXSgpOIaCsZWndGhbjhMXsLmVcGydHMZnVuYRpboZSlMSEPWgucHVzaChlKXxbnxcigpfXpLmNhbGwodGhpcyxcInVuZGVmaWlZFwiITeXBlbYgZxvYmFsPdsbJhbDpcInVuZGVmaWlZFwiITeXBlbYgcVsZjzZWxmOlwidWkZWZpbmVkXCIhPXRcGVvZiBaWkbc/dluZGOntKXsedLDMOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGkZShcImltbWVkaWFZVwiKTtmdWjdGlvbiBKClfXZhciBsPXtLHMWwiUkVKRUNURURcIlsYTbXCJGVUxGSUxMRURcIlsbjbXCJQRUESUHXCJdOZbmNaWuIGoZSlaWYoXCJmdWjdGlvblwiITeXBlbYgZSlaHJvdyBuZXcgVHlwZUVycmyKFwicmVzbxZXIgbXVzdCBiZSBhIGZbmNaWuXCIpORoaXMucRhdGUbixaGlzLnFZXVlPVtdLHRoaXMubVYtZTblkIDAsZSEPXUmJmQodGhpcyxlKXmdWjdGlvbiBoKGUsdCxyKXtaGlzLnBybpcUZSxcImZbmNaWuXCIPXRcGVvZiBJiYodGhpcyvbkZbGZpbGxlZDLHRoaXMuYFsbEZbGZpbGxlZDaGlzLmaGVyQFsbEZbGZpbGxlZCksXCJmdWjdGlvblwiPTeXBlbYgciYmKHRoaXMubSZWplYRlZDyLHRoaXMuYFsbFJlamVjdGVkPXRoaXMubRoZXJDYWxsUmVqZWNZWQpfWZbmNaWuIGYodCxyLGpekoZnVuYRpboKXtYXIgZTtcnlZTyKGpfWNhdGNoKGUpeJldHVybiBsLnJlamVjdChLGUpfWUPTPwucmVqZWNKHQsbmVIFRcGVFcnJvcihcIkNhbmvdCByZXNvbHZlIHBybpcUgdlaCBpdHNlbGZcIikpOmwucmVzbxZShLGUpfSlZnVuYRpbgYyhlKXtYXIgdDlJiZlLnRoZWaWYoZSYmKFwibJqZWNXCIPXRcGVvZiBlfHxcImZbmNaWuXCIPXRcGVvZiBlKSYmXCJmdWjdGlvblwiPTeXBlbYgdClyZXRcmgZnVuYRpboKXtLmFwcGxKGUsYXJndWlbnRzKXZnVuYRpbgZChLGUpeZhciByPSExOZbmNaWuIGoZSlcnxKHIITAsbCyZWplYQodCxlKSlZnVuYRpbgaShlKXtyfHwocjhMCxsLnJlcsdmUodCxlKSldmFyIHMcChmdWjdGlvbigpeUoaSxuKXpOwiZXJybJcIjPXMucRhdHVzJiZuKHMudmFsdWUpfWZbmNaWuIHAoZSxKXtYXIgcjfTtcnlciYWxZTlKHQpLHIucRhdHVzPVwicVjYVzcwifWNhdGNoKGUpeIucRhdHVzPVwiZXJybJcIixyLnZhbHVlPWVcmVdXJuIHJKHQuZXhwbJczvKSwcmbRcGUuZmluYWxseTmdWjdGlvbihKXtpZihcImZbmNaWuXCIhPXRcGVvZiBKXJldHVybiBaGlzOZhciByPXRoaXMuYucRydWNbIcmVdXJuIHRoaXMudGhlbihmdWjdGlvbihlKXtyZXRcmgciyZXNvbHZlKHQoKSkudGhlbihmdWjdGlvbigpeJldHVybiBlfSlLGZbmNaWuKGUpeJldHVybiByLnJlcsdmUodCgpKSaGVuKGZbmNaWuKCldGhybcgZXpfSlLGucHJvdGeXBlLmNhdGNoPWZbmNaWuKGUpeJldHVybiBaGlzLnRoZWobnVsbCxlKXsbywcmbRcGUudGhlbjmdWjdGlvbihlLHQpelmKFwiZnVuYRpbcIiEdHlwZWmIGUmJnRoaXMucRhdGUPThfHxcImZbmNaWuXCIhPXRcGVvZiBJiZaGlzLnNYXRlPTcylyZXRcmgdGhpcztYXIgcjuZXcgdGhpcyjbzdHJYRvcihKTtaGlzLnNYXRlITbjmKHIsdGhpcyzdGFZTPWE/ZTpLHRoaXMubVYtZSkdGhpcyxdWVZSwdXNoKGldyBoKHIsZSxKSkcmVdXJuIHJLGgucHJvdGeXBlLmNhbGxGdWxmaWxsZWQZnVuYRpboZSlbCyZXNvbHZlKHRoaXMucHJvbWlzZSxlKXsaCwcmbRcGUubRoZXJDYWxsRnVsZmlsbGVkPWZbmNaWuKGUpeYodGhpcywcmtaXNlLHRoaXMubGdWxmaWxsZWQsZSlLGgucHJvdGeXBlLmNhbGxSZWplYRlZDmdWjdGlvbihlKXtsLnJlamVjdChaGlzLnBybpcUsZSlLGgucHJvdGeXBlLmaGVyQFsbFJlamVjdGVkPWZbmNaWuKGUpeYodGhpcywcmtaXNlLHRoaXMubSZWplYRlZCxlKXsbCyZXNvbHZlPWZbmNaWuKGUsdCldmFyIHIcChjLHQpOlmKFwiZXJybJcIjPXIucRhdHVzKXJldHVybiBsLnJlamVjdChlLHIudmFsdWUpOZhciBuPXIudmFsdWUaWYobilkKGUsbikZWxzZXtlLnNYXRlPWEsZSvdXRjblPXQZmyKHZhciBpPSxLHMZSxdWVZSsZWndGgKytpPHMKWUucXVldWVbaVuYFsbEZbGZpbGxlZChKXyZXRcmgZXsbCyZWplYQZnVuYRpboZSxKXtlLnNYXRlPXMsZSvdXRjblPXQZmyKHZhciByPSxLGZSxdWVZSsZWndGgKytyPGKWUucXVldWVbcluYFsbFJlamVjdGVkKHQpOJldHVybiBlfSxvLnJlcsdmUZnVuYRpboZSlaWYoZSBpbnNYWjZWmIHRoaXMpcmVdXJuIGUcmVdXJuIGwucmVzbxZShuZXcgdGhpcyhKSxlKXsbyyZWplYQZnVuYRpboZSldmFyIHQbmVIHRoaXModSkcmVdXJuIGwucmVqZWNKHQsZSlLGuYWxsPWZbmNaWuKGUpeZhciByPXRoaXMaWYoXCJbbJqZWNIEFycmFXVwiITTJqZWNLnBybRvdHlwZSbNcmluZyjYWxsKGUpKXJldHVybiBaGlzLnJlamVjdChuZXcgVHlwZUVycmyKFwibXVzdCBiZSBhbiBhcnJheVwiKSkdmFyIGZSsZWndGgsaThMTtpZighbilyZXRcmgdGhpcyyZXNvbHZlKFtdKTtYXIgczuZXcgQXJyYXkobiksYTwLHQLTEsbzuZXcgdGhpcyhKTtmbIoOysrdDxuOyloKGVbdFsdCkcmVdXJuIGZnVuYRpbgaChlLHQpeIucmVzbxZShlKSaGVuKGZbmNaWuKGUpeNbdFZSwrKEhPTufHxpfHwoaThMCxsLnJlcsdmUobyxzKSlLGZbmNaWuKGUpelfChpPSEwLGwucmVqZWNKGsZSkpfSlfSxvLnJhYUZnVuYRpboZSldmFyIHQdGhpcztpZihcIltvYmplYQgQXJyYXldXCIhPTPYmplYQucHJvdGeXBlLnRvURyaWnLmNhbGwoZSkpcmVdXJuIHRoaXMucmVqZWNKGldyBUeXBlRXJybIoXCJtdXNIGJlIGFuIGFycmFXCIpKTtYXIgcjlLmxlbmdaCxuPSExOlmKCFyKXJldHVybiBaGlzLnJlcsdmUoWpOZhciBpPSxLHMbmVIHRoaXModSkZmyKDsrKkcjspYTlWldLHQucmVzbxZShhKSaGVuKGZbmNaWuKGUpefChuPSEwLGwucmVzbxZShzLGUpKXsZnVuYRpboZSlbnxKGITAsbCyZWplYQocyxlKSlKTtYXIgYTtyZXRcmgcLHtpbWlZGlhdGUMzZXSwzODpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBuPXtOygwLGUoXCIuLxpYidGlscyjbtbcIikuYXNzaWduKShuLGUoXCIuLxpYikZWZsYXRlXCIpLGUoXCIuLxpYipbmZsYXRlXCIpLGUoXCIuLxpYibGliLNvbnNYWcwiKSksdCleHBvcnRzPWLHtcIivbGliLRlZmxhdGVcIjozOSxcIivbGliLluZmxhdGVcIjoMCxcIivbGliLVaWxzLNvbWvblwiOjQxLFwiLisaWIvemxpYijbzdGFudHNcIjoNHdLDMOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGEZShcIivemxpYikZWZsYXRlXCIpLGZShcIivdXRpbHMvYtbWuXCIpLGgZShcIivdXRpbHMvcRyaWncwiKSxpPWUoXCIuLpsaWIvbWVzcFnZXNcIiksczlKFwiLibGliLpzdHJlYWcIiksdTPYmplYQucHJvdGeXBlLnRvURyaWnLGwMCxmPSxLGMMCxkPTgZnVuYRpbgcChlKXtpZighKHRoaXMgaWzdGFuYVvZiBwKSlyZXRcmgbmVIHAoZSkdGhpcyvcHRpbzPWuYXNzaWduKHtsZXZlbDpmLGldGhvZDpkLGNodWrUlZToxNjMNCxaWkbdCaXRzOjELGlbUxldmVsOjgscRyYXRlZkYyxbzpcIlwifSxlfHxfSkdmFyIHQdGhpcyvcHRpbzOQucmFJiYwPHQudluZGQmlczLndpbmRvdJpdHMLXQudluZGQmlczpLmdaXAmJjAdCaWkbdCaXRzJiZLndpbmRvdJpdHMMTYmJihLndpbmRvdJpdHMrPTEKSxaGlzLmVycjwLHRoaXMubXNnPVwiXCIsdGhpcylbmRlZDhMSxaGlzLmNodWrczbXSxaGlzLnNcmbmVIHMsdGhpcyzdHJtLmFYWlsXdDwOZhciByPWEuZGVmbGFZUluaXQyKHRoaXMucRybSxLmxldmVsLHQubWVaGkLHQudluZGQmlcyxLmlbUxldmVsLHQucRyYXRlZkpOlmKHIhPTsKXRocmIGldyBFcnJvcihpWJdKTtpZihLmhlYWRlciYmYSkZWZsYXRlUVSGVhZGVyKHRoaXMucRybSxLmhlYWRlciksdCkaWNaWuYXJKXtYXIgbjtpZihuPVwicRyaWnXCIPXRcGVvZiBLmRpYRpbhcnk/aCzdHJpbmcyYnVmKHQuZGljdGlvbmFyeSkXCJbbJqZWNIEFycmFQnVmZmVyXVwiPTdSjYWxsKHQuZGljdGlvbmFyeSk/bmVIFVpbnQQXJyYXkodCkaWNaWuYXJKTpLmRpYRpbhcnksKHIYSkZWZsYXRlUVRGljdGlvbmFyeShaGlzLnNcmsbikpITbClaHJvdyBuZXcgRXJybIoaVtyXSkdGhpcyfZGljdFzZXQITBfWZbmNaWuIGoZSxKXtYXIgcjuZXcgcChKTtpZihyLnBcgoZSwhMCkscilcnIpdGhybcgcitcdfGlbcilcnJdOJldHVybiByLnJlcVsdHwLnBybRvdHlwZSwdXNoPWZbmNaWuKGUsdCldmFyIHIsbixpPXRoaXMucRybSxzPXRoaXMubBaWucyjaHVuaNpemUaWYodGhpcylbmRlZClyZXRcmhMTtuPXQPT+fnQ/dDohMDPXQ/NDowLFwicRyaWnXCIPXRcGVvZiBlPkuaWwdXQaCzdHJpbmcyYnVmKGUpOlwiWiamVjdCBBcnJheUJZmZlclcIjPXUuYFsbChlKTpLmlucHVPWldyBVaWOEFycmFKGUpOmkuaWwdXQZSxpLmleHRfaWMCxpLmFYWlsXluPWkuaWwdXQubGVuZRoORvelmKDAPTpLmFYWlsXdCYmKGkubVcHVPWldyBvLkJZjgocyksaSuZXhXdDwLGkuYXZhaWxfbVPXMpLDEhPTocjhLmRlZmxhdGUoaSxuKSkmJnIhPTsKXJldHVybiBaGlzLmuRWkKHIpLCEodGhpcylbmRlZDhMCkMCEPWkuYXZhaWxfbVJiYoMCEPWkuYXZhaWxfaWfDQhPTuJiYyITbilfChcInNcmluZwiPTdGhpcyvcHRpbzLnRvPRoaXMubEYXRhKGguYnVmMmJpbnNcmluZyhvLnNocmluaJZihpLmdHBdCxpLmleHRfbVKSkpOnRoaXMubEYXRhKGuchyaWrQnVmKGkubVcHVLGkubmVdFvdXQpKSldhpbGUoKDAaShdmFpbFpbnxMDPWkuYXZhaWxfbVKSYmMSEPXIpOJldHVybiAPTbjocjhLmRlZmxhdGVFbmQodGhpcyzdHJtKSxaGlzLmuRWkKHIpLHRoaXMuZWkZWQITAscjPWwpOjIhPTufHwodGhpcyvbkVuZChsKSwhKGkuYXZhaWxfbVPTApKXscCwcmbRcGUubEYXRhPWZbmNaWuKGUpeRoaXMuYhbmtzLnBcgoZSlLHAucHJvdGeXBlLmuRWkPWZbmNaWuKGUpeUPTsJiYoXCJzdHJpbmdcIjPXRoaXMubBaWucybzaGlzLnJlcVsdDaGlzLmNodWrcyqbluKFwiXCIpOnRoaXMucmVzdWxPWuZmxhdHRlbkNodWrcyhaGlzLmNodWrcykpLHRoaXMuYhbmtzPVtdLHRoaXMuZXJyPWUsdGhpcytccdGhpcyzdHJtLmzZsciEZWZsYXRlPXAscikZWZsYXRlPWscikZWZsYXRlUmFPWZbmNaWuKGUsdClcmVdXJuKHQdHxepLnJhdzhMCxuKGUsdClLHIuZppcDmdWjdGlvbihlLHQpeJldHVybihPXRfHtKSnemlwPSEwLGoZSxKXLHtcIivdXRpbHMvYtbWuXCINDEsXCIuLVaWxzLNcmluZNcIjoMixcIivemxpYikZWZsYXRlXCINDYsXCIuLpsaWIvbWVzcFnZXNcIjoMSxcIivemxpYicRyZWFtXCINTNXSwMDpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBjPWUoXCIuLpsaWIvaWmbGFZVwiKSxkPWUoXCIuLVaWxzLNvbWvblwiKSxwPWUoXCIuLVaWxzLNcmluZNcIiksbTlKFwiLibGliLNvbnNYWcwiKSxuPWUoXCIuLpsaWIvbWVzcFnZXNcIiksaTlKFwiLibGliLpzdHJlYWcIiksczlKFwiLibGliLdaGVhZGVyXCIpLFTJqZWNLnBybRvdHlwZSbNcmluZztmdWjdGlvbiBhKGUpelmKCEodGhpcyBpbnNYWjZWmIGEpKXJldHVybiBuZXcgYShlKTtaGlzLmwdGlvbnMZChcNpZoeNodWrUlZToxNjMNCxaWkbdCaXRzOjAsdGXCJcInsZXxepOZhciBPXRoaXMubBaWucztLnJhdyYmMDwdCaWkbdCaXRzJiZLndpbmRvdJpdHMMTYmJihLndpbmRvdJpdHMLXQudluZGQmlcywwPTdCaWkbdCaXRzJiYodCaWkbdCaXRzPSxNSkpLCEoMDwdCaWkbdCaXRzJiZLndpbmRvdJpdHMMTYpfHxlJiZlLndpbmRvdJpdHNfChLndpbmRvdJpdHMrPTMyKSwxNTxLndpbmRvdJpdHMmJnQudluZGQmlczwOCYmMDKDEJnQudluZGQmlcykmJihLndpbmRvdJpdHNPTEKSxaGlzLmVycjwLHRoaXMubXNnPVwiXCIsdGhpcylbmRlZDhMSxaGlzLmNodWrczbXSxaGlzLnNcmbmVIGksdGhpcyzdHJtLmFYWlsXdDwOZhciByPWMuaWmbGFZUluaXQyKHRoaXMucRybSxLndpbmRvdJpdHMpOlmKHIhPTtLlpfTspdGhybcgbmVIEVycmyKGbclpORoaXMuaGVhZGVyPWldyBzLGMuaWmbGFZUdldEhlYWRlcihaGlzLnNcmsdGhpcyoZWFkZXIpfWZbmNaWuIGoZSxKXtYXIgcjuZXcgYShKTtpZihyLnBcgoZSwhMCkscilcnIpdGhybcgcitcdfGbcilcnJdOJldHVybiByLnJlcVsdHhLnBybRvdHlwZSwdXNoPWZbmNaWuKGUsdCldmFyIHIsbixpLHMsYSxvLGgdGhpcyzdHJtLHUdGhpcyvcHRpbzLmNodWrUlZSxsPXRoaXMubBaWucykaWNaWuYXJLGYITEaWYodGhpcylbmRlZClyZXRcmhMTtuPXQPT+fnQ/dDohMDPXQ/bSaXZJTklTSDptLlpfTkfRkxVUgsXCJzdHJpbmdcIjdHlwZWmIGU/aCpbnBdDwLmJpbnNcmluZzJidWYoZSkXCJbbJqZWNIEFycmFQnVmZmVyXVwiPTXyjYWxsKGUpPguaWwdXQbmVIFVpbnQQXJyYXkoZSkaCpbnBdDlLGgubmVdFpbjwLGguYXZhaWxfaWaCpbnBdCsZWndGgZGaWYoMDPWguYXZhaWxfbVJiYoaCvdXRwdXQbmVIGQuQnVmOChKSxoLmleHRfbVPTAsaChdmFpbFvdXQdSksKHIYypbmZsYXRlKGgsbSaXPXZMVVNIKSkPTtLlpfTkVFRFESUNUJiZsJiYobzcInNcmluZwiPTeXBlbYgbDwLnNcmluZzJidWYobCkXCJbbJqZWNIEFycmFQnVmZmVyXVwiPTXyjYWxsKGwpPldyBVaWOEFycmFKGwpOmwscjjLmluZmxhdGVTZXREaWNaWuYXJKHRoaXMucRybSxvKSkscjPWuWlCVUZfRVJSTImJiEwPTZiYmKHIbSaXLLGYITEpLHIhPTtLlpfURSRUFNXVORCYmciEPWuWlPSylyZXRcmgdGhpcyvbkVuZChyKSwhKHRoaXMuZWkZWQITApOgubmVdFvdXQmJigwITaChdmFpbFvdXQmJnIhPTtLlpfURSRUFNXVORCYmKDAhPToLmFYWlsXlufHxuITbSaXZJTklTSCYmbiEPWuWlTWUDXZMVVNIKXxKFwicRyaWnXCIPTaGlzLmwdGlvbnMudG/KGkcCdGYYmyZGVyKGgubVcHVLGgubmVdFvdXQpLHMaCuZXhXdCpLGEcCidWYycRyaWnKGgubVcHVLGkpLGgubmVdFvdXQcyxoLmFYWlsXdDLXMscyYmZChcnJheVNldChoLmdHBdCxoLmdHBdCxpLHMsMCksdGhpcyvbkRhdGEoYSkpOnRoaXMubEYXRhKGQuchyaWrQnVmKGgubVcHVLGgubmVdFvdXQpKSkpLDAPToLmFYWlsXluJiYwPTaChdmFpbFvdXQmJihmPSEwKXaGlsZSgoMDxoLmFYWlsXlufHwwPTaChdmFpbFvdXQpJiZyITbSaXNUUkVBTVFTkQpOJldHVybiByPTbSaXNUUkVBTVFTkQmJihuPWuWlGSUJUgpLGPTtLlpfRklOSVNIPyhyPWMuaWmbGFZUVuZChaGlzLnNcmpLHRoaXMubFbmQociksdGhpcylbmRlZDhMCxyPTbSaXLKTpuITbSaXNZTkNfRkxVUhfChaGlzLmuRWkKGuWlPSyksIShoLmFYWlsXdDwKSlLGEucHJvdGeXBlLmuRGFYTmdWjdGlvbihlKXtaGlzLmNodWrcywdXNoKGUpfSxhLnBybRvdHlwZSvbkVuZDmdWjdGlvbihlKXtlPTbSaXLJiYoXCJzdHJpbmdcIjPXRoaXMubBaWucybzaGlzLnJlcVsdDaGlzLmNodWrcyqbluKFwiXCIpOnRoaXMucmVzdWxPWQuZmxhdHRlbkNodWrcyhaGlzLmNodWrcykpLHRoaXMuYhbmtzPVtdLHRoaXMuZXJyPWUsdGhpcytccdGhpcyzdHJtLmzZsciJbmZsYXRlPWEscipbmZsYXRlPWscipbmZsYXRlUmFPWZbmNaWuKGUsdClcmVdXJuKHQdHxepLnJhdzhMCxvKGUsdClLHIudWnemlwPWLHtcIivdXRpbHMvYtbWuXCINDEsXCIuLVaWxzLNcmluZNcIjoMixcIivemxpYijbzdGFudHNcIjoNCxcIivemxpYinemhlYWRlclwiOjQLFwiLibGliLluZmxhdGVcIjoOSxcIivemxpYitZXNzYWdlcwiOjUxLFwiLibGliLpzdHJlYWcIjoMdLDQxOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGXCJbmRlZmluZWRcIiEdHlwZWmIFVpbnQQXJyYXkmJlwidWkZWZpbmVkXCIhPXRcGVvZiBVaWMTZBcnJheSYmXCJbmRlZmluZWRcIiEdHlwZWmIEludDMyQXJyYXkcihcNpZZnVuYRpboZSlZmyKHZhciBPUFycmFLnBybRvdHlwZSzbGljZSjYWxsKGFyZVtZWcywxKTtLmxlbmdaDspeZhciByPXQuchpZnQoKTtpZihyKXtpZihcImiamVjdFwiITeXBlbYgcilaHJvdyBuZXcgVHlwZUVycmyKHIrXCJtdXNIGJlIGvbivYmplYRcIikZmyKHZhciBuIGluIHIpcioYXNPdQcmwZXJeShuKSYmKGVbblcltuXSlfXJldHVybiBlfSxyLnNocmluaJZjmdWjdGlvbihlLHQpeJldHVybiBlLmxlbmdaDPXQ/ZTplLnNYmFycmFPUucViYXJyYXkoMCxKTooZSsZWndGgdCxlKXdmFyIGkeFycmFUVOmZbmNaWuKGUsdCxyLGsaSlaWYodCzdWJhcnJheSYmZSzdWJhcnJheSllLnNldChLnNYmFycmFKHIscituKSxpKTtlbHNlIGZvcihYXIgczwOMbjtzKyspZVtpKNdPXRbcitzXXsZmxhdHRlbkNodWrczpmdWjdGlvbihlKXtYXIgdCxyLGsaSxzLGEZmyKHQbjwLHIZSsZWndGgdDxyOQrKyluKzlWRdLmxlbmdaDtmbIoYTuZXcgVWludDhBcnJheShuKSxPWkMCxyPWUubGVuZRoOQcjtKyspczlWRdLGEucVKHMsaSksaSscysZWndGgcmVdXJuIGFfSxzPXthcnJheVNldDpmdWjdGlvbihlLHQscixuLGkpeZvcihYXIgczwOMbjtzKyspZVtpKNdPXRbcitzXXsZmxhdHRlbkNodWrczpmdWjdGlvbihlKXtyZXRcmbXSjbjYXQuYXBwbHkoWsZSlfTtyLnNldFRcGVkPWZbmNaWuKGUpeU/KHIuQnVmODVaWOEFycmFLHIuQnVmMTYVWludDEQXJyYXksciCdWYzMjJbnQzMkFycmFLHIuYXNzaWduKHIsaSkpOihyLkJZjgQXJyYXksciCdWYxNjBcnJheSxyLkJZjMyPUFycmFLHIuYXNzaWduKHIscykpfSxyLnNldFRcGVkKGpfSxfVsNDIWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgaDlKFwiLijbtbcIiksaThMCxzPSEwORyeXtTdHJpbmcuZnJvbUNoYXJDbRlLmFwcGxKGbGwsWzBdKXjYXRjaChlKXtpPSExfXRyeXtTdHJpbmcuZnJvbUNoYXJDbRlLmFwcGxKGbGwsbmVIFVpbnQQXJyYXkoMSkpfWNhdGNoKGUpeMITFZmyKHZhciBPWldyBoLkJZjgoMjUKSxuPTAbjwyNTYbisrKXVbblMjUyPDuPzYMjQPDuPzUMjQwPDuPzQMjIPDuPzMMTkyPDuPzIMTtmdWjdGlvbiBsKGUsdClaWYodDwNTUzNyYmKGUucViYXJyYXkmJnNfCFlLnNYmFycmFJiZpKSlyZXRcmgURyaWnLmZybDaGFyQkZShcHBseShudWxsLGguchyaWrQnVmKGUsdCkpOZvcihYXIgcjcIlwiLGMDtuPHQbisrKXIrPVNcmluZymcmtQhhckNvZGUoZVtuXSkcmVdXJuIHJdVsyNTRdPXVbMjUXTxLHIucRyaWnMmJZjmdWjdGlvbihlKXtYXIgdCxyLGsaSxzLGEZSsZWndGgsbzwOZvcihpPTAaTxhOkrKykNTINjKDYNTEyJihyPWUuYhhckNvZGVBdChpKSkpJiZpKzEYSYmNTYzMjAPSgNDUxMiYobjlLmNoYXJDbRlQXQoaSsxKSkpJiYocjNTUzNisociNTINjwMTApKyhuLTUMzIwKSxpKyspLGrPXIMTIPzEcjwyMDQPzIcjwNTUzNjzOjQZmyKHQbmVIGguQnVmOChvKSxpPXMMDtzPGaSsrKTUMjkPToNjQMTImKHIZSjaGFyQkZUFKGkpKSkmJmkrMTxhJiYNjMyMDKDYNTEyJihuPWUuYhhckNvZGVBdChpKzEpKSkmJihyPTYNTMKyhyLTUMjkPDwxMCkrKGtNTYzMjApLGkrKykscjwxMjg/dFtzKytdPXIKHIMjAODWMrKMTkyfHI+PjOihyPDYNTMPRbcysrXTyMjRcj+PjEyOihWMrKMjQwfHI+PjxOCxWMrKMTIfHI+PjxMiYMyksdFtzKytdPTEyOHxyPj+NiYMyksdFtzKytdPTEyOHwMyZyKTtyZXRcmgdHsciidWYyYmlucRyaWnPWZbmNaWuKGUpeJldHVybiBsKGUsZSsZWndGgpfSxyLmJpbnNcmluZzJidWYZnVuYRpboZSlZmyKHZhciBPWldyBoLkJZjgoZSsZWndGgpLHIMCxuPXQubGVuZRoOIbjtyKyspdFtyXTlLmNoYXJDbRlQXQocikcmVdXJuIHRLHIuYnVmMnNcmluZzmdWjdGlvbihlLHQpeZhciByLGsaSxzLGEdHxZSsZWndGgsbzuZXcgQXJyYXkoMiphKTtmbIocjuPTAcjxhOylpZigoaTlWIrKpPDEyOClvWrKaTtlbHNlIGlmKDQKHMdVtpXSkpbtuKytdPTYNTMzLHIrPXMtMTtlbHNleZvcihpJjyPTczzMTozPTczxNToOzEcyYmcjxhOylpPWkPDZNjMmZVtyKytdLHMtLTsxPHM/btuKytdPTYNTMzOmkNjUMzY/btuKytdPWkKGktPTYNTMLGbbisrXTNTINnxpPjxMCYxMDIzLGbbisrXTNjMyMHwxMDIzJmkpfXJldHVybiBsKGsbilLHIudXRmOGJvcmRlcjmdWjdGlvbihlLHQpeZhciByOZvcigodDfHxlLmxlbmdaCk+ZSsZWndGgmJihPWUubGVuZRoKSxyPXQtMTswPDyJiYxMjgPSgxOTImZVtyXSkKXItLTtyZXRcmgcjwwPQMDPXI/dDpyKVbZVtyXV+dDyOnRfSxXCIuLNvbWvblwiOjQxfVsNDMWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtLmVcGydHMZnVuYRpboZSxLHIsbilZmyKHZhciBpPTYNTMJmVMCxzPWU+PjxNiYNTUzNXwwLGEMDswITcjspeZvcihyLThPTJlMzxyPzJlMzpyOMcysoaTpKRbbisrXXwwKXwwLCtYTspOklPTYNTIxLHMlPTYNTIxfXJldHVybiBpfHMPDEfDBfSxfVsNDQWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtLmVcGydHMepfTkfRkxVUgMCxaXBBUlRJQUxfRkxVUgMSxaXNZTkNfRkxVUgMixaXZVTExfRkxVUgMyxaXZJTklTSDoLFpfQkxPQsNSxaXRSRUVTOjYsWlPSzowLFpfURSRUFNXVORDoxLFpfTkVFRFESUNUOjIsWlFUlJOTzotMSxaXNUUkVBTVFUlJPUjotMixaXRBVEFfRVJSTILTMsWlCVUZfRVJSTILTUsWlOTDTQUkVTUlPTjowLFpfQkVTVFTUEVFRDoxLFpfQkVTVFDTQUkVTUlPTjoLFpfREVGQVVMVFDTQUkVTUlPTjotMSxaXZJTFRFUkVEOjEsWlIVUZGTUFOXOTFkMixaXJMRTozLFpfRklYRUQNCxaXRFRkFVTFRfURSQVRFRkMCxaXJJTkFSWTowLFpfVEVYVDoxLFpfVULTkXTjoyLFpfREVGTEFURUQOHLHtXSwNTpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBvPWZbmNaWuKClZmyKHZhciBlLHQWscjwOIMjUOIrKylZTyOZvcihYXIgbjwOODtuKyspZTxJmU/MzkODIMjMNFlPj+MTplPj+MTtWJdPWVcmVdXJuIHRKCkdCleHBvcnRzPWZbmNaWuKGUsdCxyLGpeZhciBpPWsczuKIZVLTEZmyKHZhciBhPWYTxzOErKyllPWU+PjXmlbMjUJihlXnRbYVpXTtyZXRcmtMVlfXsedLDQOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGgsYzlKFwiLivdXRpbHMvYtbWuXCIpLHUZShcIivdHJlZXNcIiksZDlKFwiLihZGxlcjMyXCIpLHAZShcIivYJjMzJcIiksbjlKFwiLitZXNzYWdlcwiKSxsPTAsZjLGMCxfPSyLGcLTEsYjLGkMixPTgseTLHMMjgLGEMzAsbzxOSxPTIqcysxLGsMTUseDzLFMMjULHoUytKzEsQzMixFPTExMyxBPTEsSTyLEMyxCPTQZnVuYRpbgUihlLHQpeJldHVybiBlLmzZzuWRdLHRZnVuYRpbgVChlKXtyZXRcmoZTwMSktKDQZTOjApfWZbmNaWuIEQoZSlZmyKHZhciBPWUubGVuZRoOzAPStdDspZVtXTwfWZbmNaWuIEYoZSldmFyIHQZSzdGFZSxyPXQucGVuZGluZztyPmUuYXZhaWxfbVJiYocjlLmFYWlsXdCksMCEPXImJihjLmFycmFUVKGUubVcHVLHQucGVuZGluZidWYsdCwZWkaWnXdCxyLGUubmVdFvdXQpLGUubmVdFvdXQrPXIsdCwZWkaWnXdCscixlLnRvdGFsXdCscixlLmFYWlsXdCcixLnBlbmRpbmctPXIsMDPXQucGVuZGluZyYmKHQucGVuZGluZvdXQMCkpfWZbmNaWuIEoZSxKXtLlclmbHVzaFibGjayhlLDAPWUuYmxvYtfcRhcnQ/ZSibGjazdGFydDotMSxlLnNcnNYXJLWUuYmxvYtfcRhcnQsdCksZSibGjazdGFydDlLnNcnNYXJLEYoZSzdHJtKXmdWjdGlvbiBVKGUsdClZSwZWkaWnXJZltlLnBlbmRpbmcrKdHmdWjdGlvbiBQKGUsdClZSwZWkaWnXJZltlLnBlbmRpbmcrKdD+PjgmMjULGUucGVuZGluZidWZbZSwZWkaWnKytdPTINSZfWZbmNaWuIEwoZSxKXtYXIgcixuLGkZStYXhfYhhaWfbGVuZRoLHMZSzdHJzdGFydCxhPWUucHJldlsZWndGgsbzlLmpYVfbWFYgsaDlLnNcnNYXJPmUudzaXplLXo/ZSzdHJzdGFydCoZSXNpemUteikMCxPWUudluZGLGwZSXhcssZjlLnByZXYsYzlLnNcnNYXJKMsZDWMrYSxXSxwPXVbcythXTtlLnByZXZfbGVuZRoPjlLmdvbRfbWFYgmJihpPjMiksbzlLmxvbthaGVhZCYmKGZSsbrYWhlYWQpORvelmKHVbKHIdCkrYVPTwJiZWIrYSxXTPWQmJnVbclPTWNdJiZWysrclPTWMrMVpeMrPTIscisrORveaGlsZShWysrcPTWysrclmJnVbKytzXTPXVbKytyXSYmdVsrKNdPTdVsrKJdJiZWysrcPTWysrclmJnVbKytzXTPXVbKytyXSYmdVsrKNdPTdVsrKJdJiZWysrcPTWysrclmJnVbKytzXTPXVbKytyXSYmczxjKTtpZihuPVMtKGMtcyksczjLVMsYTxuKXtpZihlLmhdGNoXNYXJPXQsbzwKGEbikpYnJlYWsZDWMrYSxXSxwPXVbcythXXfXdoaWxlKChPWZbdCZsXSk+aCYmMCELSpKTtyZXRcmgYTwZSsbrYWhlYWQ/YTplLmxvbthaGVhZHmdWjdGlvbiBqKGUpeZhciBLHIsbixpLHMsYSxvLGgsdSxsLGYZSXNpemUZGaWYoaTlLndpbmRvdzaXplLWUubGvaFoZWFkLWUucRycRhcnQsZSzdHJzdGFydDZisoZiKSlZmyKGMuYXJyYXlTZXQoZSaWkbcsZSaWkbcsZixmLDApLGUubWFYhfcRhcnQtPWYsZSzdHJzdGFydCZixlLmJsbNrXNYXJLTmLHQcjlLmhhchfclZTtuPWUuaGVhZFstLXRdLGUuaGVhZFtXTmPDuPtZjowLCtcjspOZvcihPXIZjtuPWUucHJldlstLXRdLGUucHJldltXTmPDuPtZjowLCtcjspOkrPWZaWYoMDPWUucRybShdmFpbFpbilicmVhaztpZihhPWUucRybSxvPWUudluZGLGgZSzdHJzdGFydCtlLmxvbthaGVhZCxPWksbDblkIDAsbDhLmFYWlsXluLHUbCYmKGwdSkscjwPTbDwOihhLmFYWlsXluLTsLGMuYXJyYXlTZXQobyxhLmlucHVLGEubmVdFpbixsLGgpLDEPThLnNYXRlLndyYXA/YShZGxlcjkKGEuYWRsZXIsbyxsLGgpOjIPThLnNYXRlLndyYXAmJihhLmFkbGVyPXAoYShZGxlcixvLGwsaCkpLGEubmVdFpbisbCxhLnRvdGFsXluKzsLGwpLGUubGvaFoZWFkKzyLGUubGvaFoZWFkKUuaWzZXJPjKWZvcihzPWUucRycRhcnQtZSpbnNlcnQsZSpbnNfaDlLndpbmRvdtzXSxlLmlucoPShlLmlucoPDxlLmhhchfchpZnReZSaWkbdbcysxXSkmZSoYXNoXhcsZSpbnNlcnQmJihlLmlucoPShlLmlucoPDxlLmhhchfchpZnReZSaWkbdbcytLTFdKSZlLmhhchfbWFzayxlLnByZXZbcyZlLndfbWFzaZSoZWFkWUuaWzXhdLGUuaGVhZFtlLmlucoXTzLHMrKyxlLmlucVydCtLCEoZSsbrYWhlYWQrZSpbnNlcnQeCkpOykfXdoaWxlKGUubGvaFoZWFkPHomJjAhPTlLnNcmuYXZhaWxfaWpfWZbmNaWuIFooZSxKXtmbIodmFyIHIsbjsKXtpZihlLmxvbthaGVhZDxKXtpZihqKGUpLGUubGvaFoZWFkPHomJnQPTsKXJldHVybiBBOlmKDAPTlLmxvbthaGVhZClicmVhapZihyPTAsZSsbrYWhlYWQ+PXgmJihlLmlucoPShlLmlucoPDxlLmhhchfchpZnReZSaWkbdbZSzdHJzdGFydCtLTFdKSZlLmhhchfbWFzayxyPWUucHJldltlLnNcnNYXJJmUudtYXNrXTlLmhlYWRbZSpbnNfaFsZSoZWFkWUuaWzXhdPWUucRycRhcnQpLDAhPTyJiZlLnNcnNYXJLXIPWUudzaXplLXomJihlLmhdGNoXxlbmdaDMKGUscikpLGUubWFYhfbGVuZRoPjKWlmKGdSfdHJfdGFsbHkoZSxlLnNcnNYXJLWUubWFYhfcRhcnQsZStYXRjaFsZWndGgteCksZSsbrYWhlYWQtPWUubWFYhfbGVuZRoLGUubWFYhfbGVuZRoPDlLmheFsYXpXhdGNoJiZlLmxvbthaGVhZDeClZmyKGUubWFYhfbGVuZRoLSZSzdHJzdGFydCsrLGUuaWzXgKGUuaWzXgPGUuaGFzaFzaGlmdFlLndpbmRvdtlLnNcnNYXJKgtMVpJmUuaGFzaFtYXNrLHIZSwcmVWUucRycRhcnQmZSXhctdPWUuaGVhZFtlLmlucoXSxlLmhlYWRbZSpbnNfaFZSzdHJzdGFydCwwITtLWUubWFYhfbGVuZRoOykZSzdHJzdGFydCsrfWVscUgZSzdHJzdGFydCsZStYXRjaFsZWndGgsZStYXRjaFsZWndGgMCxlLmlucoPWUudluZGWUucRycRhcnRdLGUuaWzXgKGUuaWzXgPGUuaGFzaFzaGlmdFlLndpbmRvdtlLnNcnNYXJKzFdKSZlLmhhchfbWFzaztlbHNlIGdSfdHJfdGFsbHkoZSwwLGUudluZGWUucRycRhcnRdKSxlLmxvbthaGVhZCtLGUucRycRhcnQrKztpZihuJiYoTihlLCExKSwwPTZSzdHJtLmFYWlsXdCkpcmVdXJuIEFcmVdXJuIGUuaWzZXJPWUucRycRhcnQeCxPUucRycRhcnQeCxLHQPTmPyhOKGUsITApLDAPTlLnNcmuYXZhaWxfbVPQikZSsYXNXxpdCYmKEoZSwhMSksMDPWUucRybShdmFpbFvdXQpPESXmdWjdGlvbiBXKGUsdClZmyKHZhciByLGsaTsKXtpZihlLmxvbthaGVhZDxKXtpZihqKGUpLGUubGvaFoZWFkPHomJnQPTsKXJldHVybiBBOlmKDAPTlLmxvbthaGVhZClicmVhapZihyPTAsZSsbrYWhlYWQ+PXgmJihlLmlucoPShlLmlucoPDxlLmhhchfchpZnReZSaWkbdbZSzdHJzdGFydCtLTFdKSZlLmhhchfbWFzayxyPWUucHJldltlLnNcnNYXJJmUudtYXNrXTlLmhlYWRbZSpbnNfaFsZSoZWFkWUuaWzXhdPWUucRycRhcnQpLGUucHJldlsZWndGgZStYXRjaFsZWndGgsZSwcmVXhdGNoPWUubWFYhfcRhcnQsZStYXRjaFsZWndGgeCxLDAhPTyJiZlLnByZXZfbGVuZRoPGUubWFXxhenlfbWFYgmJmUucRycRhcnQtcjwZSXNpemUteiYmKGUubWFYhfbGVuZRoPUwoZSxyKSxlLmhdGNoXxlbmdaDwNSYmKDEPTlLnNcmFZWdfHxlLmhdGNoXxlbmdaDPXgmJjQwOTYZSzdHJzdGFydClLmhdGNoXNYXJKSYmKGUubWFYhfbGVuZRoPXgtMSkpLGUucHJldlsZWndGg+PXgmJmUubWFYhfbGVuZRoPDlLnByZXZfbGVuZRoKXtmbIoaTlLnNcnNYXJKUubGvaFoZWFkLXgsbjLlclYWxseShlLGUucRycRhcnQtMSlLnByZXZfbWFYgsZSwcmVXxlbmdaCKSxlLmxvbthaGVhZCZSwcmVXxlbmdaCxLGUucHJldlsZWndGgtPTIKytlLnNcnNYXJPDpJiYoZSpbnNfaDoZSpbnNfaDwZSoYXNoXNoaWZXmUudluZGWUucRycRhcnQreCxXSkmZSoYXNoXhcsscjlLnByZXZbZSzdHJzdGFydCZlLndfbWFzaZSoZWFkWUuaWzXhdLGUuaGVhZFtlLmlucoXTlLnNcnNYXJKSwwITtLWUucHJldlsZWndGgKTtpZihlLmhdGNoXFYWlsYWJsZTwLGUubWFYhfbGVuZRoPXgtMSxlLnNcnNYXJKyssbiYmKEoZSwhMSksMDPWUucRybShdmFpbFvdXQpKXJldHVybiBBfWVscUgaWYoZStYXRjaFhdmFpbGFibGUpelmKChuPXUuXRyXRhbGxKGUsMCxlLndpbmRvdtlLnNcnNYXJLTFdKSkmJkoZSwhMSksZSzdHJzdGFydCsrLGUubGvaFoZWFkLSsMDPWUucRybShdmFpbFvdXQpcmVdXJuIEFZWxzZSBlLmhdGNoXFYWlsYWJsZTxLGUucRycRhcnQrKyxlLmxvbthaGVhZCtfXJldHVybiBlLmhdGNoXFYWlsYWJsZSYmKGdSfdHJfdGFsbHkoZSwwLGUudluZGWUucRycRhcnQtMVpLGUubWFYhfYXZhaWxhYmxlPTApLGUuaWzZXJPWUucRycRhcnQeCxPUucRycRhcnQeCxLHQPTmPyhOKGUsITApLDAPTlLnNcmuYXZhaWxfbVPQikZSsYXNXxpdCYmKEoZSwhMSksMDPWUucRybShdmFpbFvdXQpPESXmdWjdGlvbiBNKGUsdCxyLGsaSldGhpcynbkXxlbmdaDlLHRoaXMubWFXxhenkdCxaGlzLmpYVfbGVuZRoPXIsdGhpcytYXhfYhhaWbixaGlzLmZbmMaXmdWjdGlvbiBIKCldGhpcyzdHJtPWbGwsdGhpcyzdGFdXMMCxaGlzLnBlbmRpbmdfYnVmPWbGwsdGhpcywZWkaWnXJZlzaXplPTAsdGhpcywZWkaWnXdDwLHRoaXMucGVuZGluZzwLHRoaXMudJhcDwLHRoaXMuZpoZWFkPWbGwsdGhpcynemluZGVPTAsdGhpcytZXRobQdixaGlzLmxhcRfZmxcgLTEsdGhpcyXNpemUMCxaGlzLndfYmlczwLHRoaXMudtYXNrPTAsdGhpcyaWkbcbnVsbCxaGlzLndpbmRvdzaXplPTAsdGhpcywcmVPWbGwsdGhpcyoZWFkPWbGwsdGhpcypbnNfaDwLHRoaXMuaGFzaFzaXplPTAsdGhpcyoYXNoXJpdHMMCxaGlzLmhhchfbWFzazwLHRoaXMuaGFzaFzaGlmdDwLHRoaXMuYmxvYtfcRhcnQMCxaGlzLmhdGNoXxlbmdaDwLHRoaXMucHJldltYXRjaDwLHRoaXMubWFYhfYXZhaWxhYmxlPTAsdGhpcyzdHJzdGFydDwLHRoaXMubWFYhfcRhcnQMCxaGlzLmxvbthaGVhZDwLHRoaXMucHJldlsZWndGgMCxaGlzLmheFjaGFpblsZWndGgMCxaGlzLmheFsYXpXhdGNoPTAsdGhpcysZXZlbDwLHRoaXMucRyYXRlZkMCxaGlzLmdvbRfbWFYgMCxaGlzLmpYVfbWFYgMCxaGlzLmRblsdHJlZTuZXcgYyCdWYxNigyKncpLHRoaXMuZHluXRcmVlPWldyBjLkJZjEKDIqKDIqYSsxKSksdGhpcyibFcmVlPWldyBjLkJZjEKDIqKDIqbysxKSksRChaGlzLmRblsdHJlZSksRChaGlzLmRblkdHJlZSksRChaGlzLmJsXRyZWUpLHRoaXMubFkZXNjPWbGwsdGhpcykXRlcMbnVsbCxaGlzLmJsXRlcMbnVsbCxaGlzLmJsXNvdWPWldyBjLkJZjEKGsrMSksdGhpcyoZWFwPWldyBjLkJZjEKDIqcysxKSxEKHRoaXMuaGVhcCksdGhpcyoZWFwXxlbjwLHRoaXMuaGVhcFtYXgMCxaGlzLmRlcHRoPWldyBjLkJZjEKDIqcysxKSxEKHRoaXMuZGVwdGgpLHRoaXMubFidWYMCxaGlzLmxpdFidWZzaXplPTAsdGhpcysYXNXxpdDwLHRoaXMuZFidWYMCxaGlzLmwdFsZWMCxaGlzLnNYXRpYsZWMCxaGlzLmhdGNoZXMMCxaGlzLmlucVydDwLHRoaXMuYmlfYnVmPTAsdGhpcyiaVYWxpZDwfWZbmNaWuIEcoZSldmFyIHQcmVdXJuIGUmJmUucRhdGU/KGUudGYWxfaWZSbRhbFvdXQMCxlLmRhdGFfdHlwZTpLChPWUucRhdGUpLnBlbmRpbmcMCxLnBlbmRpbmdfbVPTAsdCcmFwPDAmJihLndyYXALXQudJhcCksdCzdGFdXMdCcmFwPMRSxlLmFkbGVyPTIPTLndyYXA/MDoxLHQubGFzdFmbHVzaDsLHUuXRyXluaXQodCksbSkUihlLFpfWZbmNaWuIEsoZSldmFyIHQRyhlKTtyZXRcmgdDPWmJmZbmNaWuKGUpeUudluZGXNpemUMiplLndfclZSxEKGUuaGVhZCksZStYXhfbGFeVtYXRjaDoWUubGVZWxdLmheFsYXpLGUuZvZFtYXRjaDoWUubGVZWxdLmdvbRfbGVuZRoLGUubmljZVtYXRjaDoWUubGVZWxdLmpYVfbGVuZRoLGUubWFXNoYWluXxlbmdaDoWUubGVZWxdLmheFjaGFpbixlLnNcnNYXJPTAsZSibGjazdGFydDwLGUubGvaFoZWFkPTAsZSpbnNlcnQMCxlLmhdGNoXxlbmdaDlLnByZXZfbGVuZRoPXgtMSxlLmhdGNoXFYWlsYWJsZTwLGUuaWzXgMHoZSzdGFZSksdHmdWjdGlvbiBZKGUsdCxyLGsaSxzKXtpZighZSlyZXRcmgXztYXIgYTxOlmKHQPTnJiYodDKSxuPDA/KGEMCxuPSuKToxNTxuJiYoYTyLGtPTEKSxpPDFfHkaXxciEPXZfGOHxMTUbnxdDwwfHwPHRfHMMHxYjxzKXJldHVybiBSKGUsXykODPWmJihuPTkpOZhciBvPWldyBIOJldHVybihlLnNYXRlPWpLnNcmZSxvLndyYXAYSxvLmdaGVhZDudWxsLGudiaXRzPWsbyXNpemUMTwbyXJpdHMsbyXhcsbyXNpemUtMSxvLmhhchfYmlczpKzcsbyoYXNoXNpemUMTwbyoYXNoXJpdHMsbyoYXNoXhcsbyoYXNoXNpemUtMSxvLmhhchfchpZnQfnoKGuaGFzaFiaXRzKgtMSkveCksbyaWkbcbmVIGMuQnVmOCgyKmudzaXplKSxvLmhlYWQbmVIGMuQnVmMTYobyoYXNoXNpemUpLGucHJldjuZXcgYyCdWYxNihvLndfclZSksbysaXRfYnVmclZTxPDxpKzYsbywZWkaWnXJZlzaXplPTQqbysaXRfYnVmclZSxvLnBlbmRpbmdfYnVmPWldyBjLkJZjgobywZWkaWnXJZlzaXplKSxvLmRfYnVmPTEqbysaXRfYnVmclZSxvLmxfYnVmPTMqbysaXRfYnVmclZSxvLmxldmVsPXQsbyzdHJhdGVneTzLGubWVaGkPXIsSyhlKXoPVtuZXcgTSgwLDAsMCwwLGZbmNaWuKGUsdCldmFyIHINjUMzUZmyKHI+ZSwZWkaWnXJZlzaXplLTUmJihyPWUucGVuZGluZidWZfclZSKTsKXtpZihlLmxvbthaGVhZDwMSlaWYoaihlKSwwPTZSsbrYWhlYWQmJnQPTsKXJldHVybiBBOlmKDAPTlLmxvbthaGVhZClicmVhalLnNcnNYXJKzlLmxvbthaGVhZCxlLmxvbthaGVhZDwOZhciBuPWUuYmxvYtfcRhcnQrcjtpZigoMDPWUucRycRhcnRfGUucRycRhcnQ+PWpJiYoZSsbrYWhlYWQZSzdHJzdGFydCuLGUucRycRhcnQbixOKGUsITEpLDAPTlLnNcmuYXZhaWxfbVKSlyZXRcmgQTtpZihlLnNcnNYXJLWUuYmxvYtfcRhcnQ+PWUudzaXplLXomJihOKGUsITEpLDAPTlLnNcmuYXZhaWxfbVKSlyZXRcmgQXyZXRcmgZSpbnNlcnQMCxPTZjoTihlLCEwKSwwPTZSzdHJtLmFYWlsXdDPOkIpOihlLnNcnNYXJPmUuYmxvYtfcRhcnQmJihOKGUsITEpLGUucRybShdmFpbFvdXQpLEEpfSksbmVIEoNCwLDgsNCxaKSxuZXcgTSgLDUsMTYsOCxaKSxuZXcgTSgLDYsMzIsMzIsWiksbmVIEoNCwLDELDELFcpLGldyBNKDgsMTYsMzIsMzIsVyksbmVIEoOCwxNiwxMjgsMTILFcpLGldyBNKDgsMzIsMTILDINixXKSxuZXcgTSgzMiwxMjgsMjULDEwMjQsVyksbmVIEoMzIsMjULDIOCwMDkLFcpXSxyLmRlZmxhdGVJbmlPWZbmNaWuKGUsdClcmVdXJuIFkoZSxLHYsMTUsOCwwKXscikZWZsYXRlSWpdDIWSxyLmRlZmxhdGVSZXNldDLLHIuZGVmbGFZVJlcVSVlcDHLHIuZGVmbGFZVNldEhlYWRlcjmdWjdGlvbihlLHQpeJldHVybiBlJiZlLnNYXRlPzIhPTlLnNYXRlLndyYXA/XzooZSzdGFZSnemhlYWQdCxtKTpffSxyLmRlZmxhdGUZnVuYRpboZSxKXtYXIgcixuLGkscztpZighZXxIWUucRhdGVfDUdHxdDwwKXJldHVybiBlPIoZSxfKTpfOlmKGZSzdGFZSwhZSvdXRwdXRfCFlLmlucHVJiYwITZShdmFpbFpbnxNjYPTbizdGFdXMmJnQhPTmKXJldHVybiBSKGUsMDPWUuYXZhaWxfbVPyOlpOlmKGucRybTlLHIbisYXNXZsdXNoLGubGFzdFmbHVzaDLGucRhdHVzPTQylpZigyPTbicmFwKWUuYWRsZXIMCxVKGsMzEpLFUobiwxMzkpLFUobiwKSxuLmdaGVhZDoVShuLChuLmdaGVhZCZXhPzEMCkrKGuZpoZWFkLmhjcmM/MjowKSsobinemhlYWQuZXhcmE/NDowKSsobinemhlYWQubmFtZTOjApKyhuLmdaGVhZCjbtZWPzEOjApKSxVKGsMjUJmuZpoZWFkLnRpbWUpLFUobixuLmdaGVhZCaWlPjJjINSksVShuLGuZpoZWFkLnRpbWU+PjEJjINSksVShuLGuZpoZWFkLnRpbWU+PjIJjINSksVShuLDkPTuLmxldmVsPzIMjwbizdHJhdGVneXxbisZXZlbDwyPzQMCksVShuLDINSZuLmdaGVhZCvcyksbinemhlYWQuZXhcmEmJmuZpoZWFkLmVdHJhLmxlbmdaCYmKFUobiwyNTUmbinemhlYWQuZXhcmEubGVuZRoKSxVKGsbinemhlYWQuZXhcmEubGVuZRoPjJjINSkpLGuZpoZWFkLmhjcmMmJihlLmFkbGVyPXAoZShZGxlcixuLnBlbmRpbmdfYnVmLGucGVuZGluZywwKSksbinemluZGVPTAsbizdGFdXMNjkpOihVKGsMCksVShuLDApLFUobiwwKSxVKGsMCksVShuLDApLFUobiwPTbisZXZlbDyOjIPWucRyYXRlZlfGubGVZWwMjOjApLFUobiwzKSxuLnNYXRczFKTtlbHNleZhciBhPXYrKGudiaXRzLTgPDQpPDwOFPSgyPDuLnNcmFZWdfHxuLmxldmVsPDI/MDpuLmxldmVsPDY/MToPTbisZXZlbDyOjMpPDwLDAhPTuLnNcnNYXJJiYoYXwMzIpLGErPTMxLWElMzEsbizdGFdXMRSxQKGsYSksMCEPWucRycRhcnQmJihQKGsZShZGxlcj+PjEKSxQKGsNjUMzUmZShZGxlcikpLGUuYWRsZXIMXpZigOTPWucRhdHVzKWlmKGuZpoZWFkLmVdHJhKXtmbIoaTuLnBlbmRpbmcbinemluZGVPCgNTUzNSZuLmdaGVhZCleHRyYSsZWndGgpJiYobiwZWkaWnITbiwZWkaWnXJZlzaXplfHwobinemhlYWQuaGNyYyYmbiwZWkaWnPmkmJihlLmFkbGVyPXAoZShZGxlcixuLnBlbmRpbmdfYnVmLGucGVuZGluZypLGkpKSxGKGUpLGkbiwZWkaWnLGucGVuZGluZyEPWucGVuZGluZidWZfclZSkpOylVKGsMjUJmuZpoZWFkLmVdHJhWuZppbmRleFpLGuZppbmRleCsrOuZpoZWFkLmhjcmMmJmucGVuZGluZzpJiYoZShZGxlcjwKGUuYWRsZXIsbiwZWkaWnXJZixuLnBlbmRpbmctaSxpKSksbinemluZGVPTbinemhlYWQuZXhcmEubGVuZRoJiYobinemluZGVPTAsbizdGFdXMNzMpfWVscUgbizdGFdXMNzMaWYoNzMPTuLnNYXRcylpZihuLmdaGVhZCuYWlKXtpPWucGVuZGluZztkbtpZihuLnBlbmRpbmcPTuLnBlbmRpbmdfYnVmXNpemUmJihuLmdaGVhZCoYJjJiZuLnBlbmRpbmc+aSYmKGUuYWRsZXIcChlLmFkbGVyLGucGVuZGluZidWYsbiwZWkaWnLWksaSkpLEYoZSksaTuLnBlbmRpbmcsbiwZWkaWnPTbiwZWkaWnXJZlzaXplKSlczxOJyZWFrfXMbinemluZGVPGuZpoZWFkLmhbWUubGVuZRoPzINSZuLmdaGVhZCuYWlLmNoYXJDbRlQXQobinemluZGVKyspOjAsVShuLHMpfXdoaWxlKDAhPTzKTtuLmdaGVhZCoYJjJiZuLnBlbmRpbmc+aSYmKGUuYWRsZXIcChlLmFkbGVyLGucGVuZGluZidWYsbiwZWkaWnLWksaSkpLDAPTzJiYobinemluZGVPTAsbizdGFdXMOTEpfWVscUgbizdGFdXMOTEaWYoOTEPTuLnNYXRcylpZihuLmdaGVhZCjbtZWKXtpPWucGVuZGluZztkbtpZihuLnBlbmRpbmcPTuLnBlbmRpbmdfYnVmXNpemUmJihuLmdaGVhZCoYJjJiZuLnBlbmRpbmc+aSYmKGUuYWRsZXIcChlLmFkbGVyLGucGVuZGluZidWYsbiwZWkaWnLWksaSkpLEYoZSksaTuLnBlbmRpbmcsbiwZWkaWnPTbiwZWkaWnXJZlzaXplKSlczxOJyZWFrfXMbinemluZGVPGuZpoZWFkLmNvbWlbnQubGVuZRoPzINSZuLmdaGVhZCjbtZWLmNoYXJDbRlQXQobinemluZGVKyspOjAsVShuLHMpfXdoaWxlKDAhPTzKTtuLmdaGVhZCoYJjJiZuLnBlbmRpbmc+aSYmKGUuYWRsZXIcChlLmFkbGVyLGucGVuZGluZidWYsbiwZWkaWnLWksaSkpLDAPTzJiYobizdGFdXMMTAzKXlbHNlIGucRhdHVzPTEwMztpZigxMDMPTuLnNYXRcyYmKGuZpoZWFkLmhjcmM/KGucGVuZGluZysyPmucGVuZGluZidWZfclZSYmRihlKSxuLnBlbmRpbmcrMjwbiwZWkaWnXJZlzaXplJiYoVShuLDINSZlLmFkbGVyKSxVKGsZShZGxlcj+OCYyNTUpLGUuYWRsZXIMCxuLnNYXRczFKSkbizdGFdXMRSksMCEPWucGVuZGluZylaWYoRihlKSwwPTZShdmFpbFvdXQpcmVdXJuIGubGFzdFmbHVzaDtMSxtfWVscUgaWYoMDPWUuYXZhaWxfaWmJlQodCkPVQocikmJnQhPTmKXJldHVybiBSKGUsLTUpOlmKDYNjPWucRhdHVzJiYwITZShdmFpbFpbilyZXRcmgUihlLCKTtpZigwITZShdmFpbFpbnxMCEPWubGvaFoZWFkfHxITbCYmNjYITbizdGFdXMpeZhciBvPTIPTuLnNcmFZWdPZbmNaWuKGUsdClZmyKHZhciByOzspelmKDAPTlLmxvbthaGVhZCYmKGooZSksMDPWUubGvaFoZWFkKSlaWYodDPWwpcmVdXJuIEEYnJlYWtaWYoZStYXRjaFsZWndGgMCxyPXUuXRyXRhbGxKGUsMCxlLndpbmRvdtlLnNcnNYXJXSksZSsbrYWhlYWQtLSxlLnNcnNYXJKyssciYmKEoZSwhMSksMDPWUucRybShdmFpbFvdXQpKXJldHVybiBBfXJldHVybiBlLmlucVydDwLHQPTmPyhOKGUsITApLDAPTlLnNcmuYXZhaWxfbVPQikZSsYXNXxpdCYmKEoZSwhMSksMDPWUucRybShdmFpbFvdXQpPESXobixKTozPTbizdHJhdGVneTmdWjdGlvbihlLHQpeZvcihYXIgcixuLGkscyxhPWUudluZGOzspelmKGUubGvaFoZWFkPDTKXtpZihqKGUpLGUubGvaFoZWFkPDTJiZPTbClyZXRcmgQTtpZigwPTZSsbrYWhlYWQpYnJlYWtaWYoZStYXRjaFsZWndGgMCxlLmxvbthaGVhZDeCYmMDxlLnNcnNYXJJiYobjhWkZSzdHJzdGFydCxXSkPThWysraVmJmPThWysraVmJmPThWysraVpeMZSzdHJzdGFydCtTORveaGlsZShuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZuPTYVsrKldJiZpPHMpOUubWFYhfbGVuZRoPVMtKHMtaSksZStYXRjaFsZWndGg+ZSsbrYWhlYWQmJihlLmhdGNoXxlbmdaDlLmxvbthaGVhZClaWYoZStYXRjaFsZWndGg+PXg/KHIdSfdHJfdGFsbHkoZSwxLGUubWFYhfbGVuZRoLXgpLGUubGvaFoZWFkLTlLmhdGNoXxlbmdaCxlLnNcnNYXJKzlLmhdGNoXxlbmdaCxlLmhdGNoXxlbmdaDwKToocjLlclYWxseShlLDAsZSaWkbdbZSzdHJzdGFydFpLGUubGvaFoZWFkLSsZSzdHJzdGFydCsrKSxyJiYoTihlLCExKSwwPTZSzdHJtLmFYWlsXdCkpcmVdXJuIEFcmVdXJuIGUuaWzZXJPTAsdDPWY/KEoZSwhMCksMDPWUucRybShdmFpbFvdXQ/TzpCKTplLmxhcRfbGlJiYoTihlLCExKSwwPTZSzdHJtLmFYWlsXdCk/QTpJfShuLHQpOmhbbisZXZlbFuZnVuYyhuLHQpOlmKGhPTPJiZvITQnxKGucRhdHVzPTYNiksbzPUFfGPTPKXJldHVybiAwPTZShdmFpbFvdXQmJihuLmxhcRfZmxcgLTEpLGaWYobzPUkmJigxPTdDLlclhbGlnbihuKToITdCYmKHUuXRyXNbJlZFibGjayhuLDAsMCwhMSksMzPXQmJihEKGuaGVhZCksMDPWubGvaFoZWFkJiYobizdHJzdGFydDwLGuYmxvYtfcRhcnQMCxuLmlucVydDwKSkpLEYoZSksMDPWUuYXZhaWxfbVKSlyZXRcmgbisYXNXZsdXNoPSxLGcmVdXJuIHQhPTmPbicmFwPDwPzEKDIPTuLndyYXA/KFUobiwyNTUmZShZGxlciksVShuLGUuYWRsZXI+PjgmMjUKSxVKGsZShZGxlcj+MTYmMjUKSxVKGsZShZGxlcj+MjQmMjUKSxVKGsMjUJmUudGYWxfaWpLFUobixlLnRvdGFsXluPjJjINSksVShuLGUudGYWxfaW+PjEJjINSksVShuLGUudGYWxfaW+PjIJjINSkpOihQKGsZShZGxlcj+PjEKSxQKGsNjUMzUmZShZGxlcikpLEYoZSksMDxuLndyYXAmJihuLndyYXALWudJhcCksMCEPWucGVuZGluZztOjEpfSxyLmRlZmxhdGVFbmQZnVuYRpboZSldmFyIHQcmVdXJuIGUmJmUucRhdGU/KHQZSzdGFZSzdGFdXMpITQyYmNjkhPTJiYMyEPXQmJjkxITdCYmMTAzITdCYmdCEPUUmJjYNiEPXQ/UihlLFpOihlLnNYXRlPWbGwsdDPUU/UihlLCzKTptKTpffSxyLmRlZmxhdGVTZXREaWNaWuYXJPWZbmNaWuKGUsdCldmFyIHIsbixpLHMsYSxvLGgsdSxsPXQubGVuZRoOlmKCFlfHwhZSzdGFZSlyZXRcmgXztpZigyPTKHMKHIZSzdGFZSkudJhcClfDEPTzJiZyLnNYXRcyEPUNfHIubGvaFoZWFkKXJldHVybiBfOZvcigxPTcyYmKGUuYWRsZXIZChlLmFkbGVyLHQsbCwwKSkscicmFwPTAsbDciXNpemUmJigwPTcyYmKEQocioZWFkKSxyLnNcnNYXJPTAsciibGjazdGFydDwLHIuaWzZXJPTApLHUbmVIGMuQnVmOChyLndfclZSksYyhcnJheVNldChLHQsbCyLndfclZSxyLndfclZSwwKSxPXUsbDyLndfclZSksYTlLmFYWlsXluLGZSuZXhXluLGgZSpbnBdCxlLmFYWlsXluPWwsZSuZXhXluPTAsZSpbnBdDLGoocikcisbrYWhlYWQ+PXgKXtmbIobjyLnNcnNYXJLGkcisbrYWhlYWQtKHgtMSkcipbnNfaDocipbnNfaDwcioYXNoXNoaWZXnIudluZGWreCxXSkmcioYXNoXhcssciwcmVWmciXhctdPXIuaGVhZFtyLmlucoXSxyLmhlYWRbcipbnNfaFbixuKyssLSpOykcizdHJzdGFydDuLHIubGvaFoZWFkPXgtMSxqKHIpfXJldHVybiByLnNcnNYXJKzyLmxvbthaGVhZCxyLmJsbNrXNYXJPXIucRycRhcnQscipbnNlcnQcisbrYWhlYWQscisbrYWhlYWQMCxyLmhdGNoXxlbmdaDyLnByZXZfbGVuZRoPXgtMSxyLmhdGNoXFYWlsYWJsZTwLGUubmVdFpbjvLGUuaWwdXQaCxlLmFYWlsXluPWEscicmFwPXMsbXscikZWZsYXRlSWmbzcInBhagZGVmbGFZSAoZnJvbSBObRlYEgcHJvamVjdClcInsewiLivdXRpbHMvYtbWuXCINDEsXCIuLFkbGVyMzJcIjoMyxcIivYJjMzJcIjoNSxcIivbWVzcFnZXNcIjoMSxcIivdHJlZXNcIjoMndLDQOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdCleHBvcnRzPWZbmNaWuKCldGhpcyZXhPTAsdGhpcyaWlPTAsdGhpcyZmxhZMMCxaGlzLmzPTAsdGhpcyleHRyYTudWxsLHRoaXMuZXhcmFfbGVuPTAsdGhpcyuYWlPVwiXCIsdGhpcyjbtZWPVwiXCIsdGhpcyoYJjPTAsdGhpcykblPSExfXsedLDQOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdCleHBvcnRzPWZbmNaWuKGUsdCldmFyIHIsbixpLHMsYSxvLGgsdSxsLGYsYyxkLHAsbSxfLGcsYixLHksdyxrLHgsUyxLEMcjlLnNYXRlLGZSuZXhXluLHoZSpbnBdCxpPWrKGUuYXZhaWxfaWtNSksczlLmleHRfbVLEMZSvdXRwdXQsYTzLShLWUuYXZhaWxfbVKSxvPXMrKGUuYXZhaWxfbVLTINyksaDyLmRtYXgsdTyLndzaXplLGwciaGFZSxmPXIudleHQsYzyLndpbmRvdyxkPXIuaGsZCxwPXIuYmlcyxtPXIubGVuYkZSxfPXIuZGlzdGNvZGUsZzoMTwcisZWiaXRzKSxLGIKDEPHIuZGlzdGJpdHMpLTEZTpkbtwPDEJiYoZCseltuKytdPDxwLHArPTgsZCseltuKytdPDxwLHArPTgpLHYbVtkJmddOQZmyKDsKXtpZihkPj+PXkdj+PjILHAtPXksMDPShPXY+PjxNiYyNTUpKUNbcysrXTNTUzNSZOVscVaWYoISgxNiZKSlaWYoMDKDYJnkpKXtPWbKDYNTMJnYpKyhkJigxPDxKSxKVYudGludWUgdHpZigzMiZKXtyLmvZGUMTIYnJlYWsgZXlLmzZzcImludmFsaWQgbGlZXJhbCsZWndGggYkZVwiLHIubWkZTzMDticmVhayBlfXcNjUMzUmdiwoeSYMTUpJiYocDxJiYoZCseltuKytdPDxwLHArPTgpLHcrPWQmKDEPHkpLTEsZD+PjLHAtPXkpLHAMTUmJihkKzWrKPHAscCsOCxkKzWrKPHAscCsOCksdjfWQmYlcjpmbIoOzspelmKGQ+PjeTPj+MjQscCeSwhKDEJihPXY+PjxNiYyNTUpKSlaWYoMDKDYJnkpKXtPVbKDYNTMJnYpKyhkJigxPDxKSxKVYudGludWUgcnlLmzZzcImludmFsaWQgZGlzdGFuYUgYkZVwiLHIubWkZTzMDticmVhayBlfWlmKGsNjUMzUmdixwPChJjxNSkmJihkKzWrKPHAsKHArPTgpPHkmJihkKzWrKPHAscCsOCkpLGgKGsrPWQmKDEPHkpLTEpKXtlLmzZzcImludmFsaWQgZGlzdGFuYUgdGvIGZhciBiYWNrXCIscitbRlPTMwOJyZWFrIGVaWYoZD+PjLHAtPXksKHkcyhKTxrKXtpZihsPChPWsteSkmJnIucFuZSlZStccXCJpbnZhbGlkIGRpcRhbmNlIHRvbyBmYXIgYmFjawiLHIubWkZTzMDticmVhayBlfWlmKFMYywoeDwKTPWYpelmKHgrPXUteSxPHcpeZvcihLTONbcysrXTjWgrKsLSOykeDzLWssUzDfXlbHNlIGlmKGYeSlaWYoeCsdStmLXksKHktPWYpPHcpeZvcihLTONbcysrXTjWgrKsLSOykaWYoeDwLGYdylZmyKHctPXkZjtDWMrKYtKytdLCteTspOgcyrLFMQfWVscUgaWYoeCsZiLHkdylZmyKHctPXkQtzKytdPWNbeCsrXSwtLXkKTtPXMtayxTPUNZmyKDsyPHcKUNbcysrXTTWgrKsQtzKytdPVNbeCsrXSxDWMrKUtKytdLHctPTMdyYmKENbcysrXTTWgrKsMTxJiYoQtzKytdPVNbeCsrXSkpfWVscVZmyKHgcyrONbcysrXTDWgrKsQtzKytdPUNbeCsrXSxDWMrKQtKytdLDIKHctPTMpOykdyYmKENbcysrXTDWgrKsMTxJiYoQtzKytdPUNbeCsrXSkpfWJyZWFrfXicmVhadhpbGUobjxpJiZzPGpOtPXccD+MyxkJjoMTwKHAtPXcPDMpKSxLGUubmVdFpbjuLGUubmVdFvdXQcyxlLmFYWlsXluPWaTpLWrNToLShuLWkpLGUuYXZhaWxfbVPXMbzvLXMrMjUOjINyocyvKSxyLmhvbGQZCxyLmJpdHMcHLHtXSwOTpbZnVuYRpboZSxLHIpewidXNlIHNcmljdFwiOZhciBJPWUoXCIuLidGlscyjbtbcIiksTzlKFwiLihZGxlcjMyXCIpLEIZShcIivYJjMzJcIiksUjlKFwiLipbmZmYXNXCIpLFQZShcIivaWmdHJlZXNcIiksRDxLEYMixOPTAsVTtMixQPTEsbjNTIsaTOTIZnVuYRpbgTChlKXtyZXRcmoZT+PjIJjINSkrKGU+PjJjYMjgwKSsoKDYMjgwJmUpPDwKSsoKDINSZlKTwMjQpfWZbmNaWuIHMoKXtaGlzLmvZGUMCxaGlzLmxhcQITEsdGhpcycmFwPTAsdGhpcyoYXZlZGljdDhMSxaGlzLmZsYWdzPTAsdGhpcykbWFPTAsdGhpcyjaGVjazwLHRoaXMudGYWwMCxaGlzLmhlYWQbnVsbCxaGlzLndiaXRzPTAsdGhpcyclZTwLHRoaXMudhhdmUMCxaGlzLnduZXhPTAsdGhpcyaWkbcbnVsbCxaGlzLmhvbGQMCxaGlzLmJpdHMMCxaGlzLmxlbmdaDwLHRoaXMubZmcVPTAsdGhpcyleHRyYTwLHRoaXMubGVuYkZTudWxsLHRoaXMuZGlzdGNvZGUbnVsbCxaGlzLmxlbmJpdHMMCxaGlzLmRpcRiaXRzPTAsdGhpcyuYkZTwLHRoaXMubmxlbjwLHRoaXMubmRpcQMCxaGlzLmhhdmUMCxaGlzLmleHQbnVsbCxaGlzLmxlbnMbmVIEkuQnVmMTYoMzIwKSxaGlzLndvcmsbmVIEkuQnVmMTYoMjgKSxaGlzLmxlbmRbjudWxsLHRoaXMuZGlzdGRbjudWxsLHRoaXMucFuZTwLHRoaXMuYmFjazwLHRoaXMudFzPTBZnVuYRpbgYShlKXtYXIgdDtyZXRcmgZSYmZSzdGFZTodDlLnNYXRlLGUudGYWxfaWZSbRhbFvdXQdCbRhbDwLGUubXNnPVwiXCIsdCcmFwJiYoZShZGxlcjxJnQudJhcCksdCtbRlPVAsdCsYXNPTAsdCoYXZlZGljdDwLHQuZGheDzMjcOCxLmhlYWQbnVsbCxLmhvbGQMCxLmJpdHMMCxLmxlbmNvZGUdCsZWkeWbmVIEkuQnVmMzIobiksdCkaXNYkZTLmRpcRkeWbmVIEkuQnVmMzIoaSksdCzYWlPTEsdCiYWNrPSxLEpOlVZnVuYRpbgbyhlKXtYXIgdDtyZXRcmgZSYmZSzdGFZToKHQZSzdGFZSkudNpemUMCxLndoYXZlPTAsdCbmVdDwLGEoZSkpOlVZnVuYRpbgaChlLHQpeZhciByLGcmVdXJuIGUmJmUucRhdGU/KGZSzdGFZSxPDA/KHIMCxPSKToocjxKyhPjKSxPDQJiYodCYMTUpKSxJiYodDwfHwxNTxKTVOihudWxsITbiaWkbcmJmudJpdHMhPTJiYobiaWkbcbnVsbCksbicmFwPXIsbiYmlczLGoZSkpKTpVfWZbmNaWuIHUoZSxKXtYXIgcixuOJldHVybiBlPyhuPWldyBzLChlLnNYXRlPWpLndpbmRvdzudWxsLChyPWgoZSxKSkhPTOJiYoZSzdGFZTudWxsKSxyKTpVfXZhciBsLGYsYzhMDtmdWjdGlvbiBqKGUpelmKGMpeZhciBOZvcihsPWldyBJLkJZjMyKDUxMiksZjuZXcgSSCdWYzMigzMiksdDwOQMTQOyllLmxlbnNbdCsrXTOZvcigdDwyNTYKWUubGVuctKytdPTkZmyKDtPDIMDspZSsZWzWQrKNztmbIoOQMjgOyllLmxlbnNbdCsrXTOZvcihUKEQsZSsZWzLDAsMjgLGwsMCxlLndvcmsseJpdHMOXpLHQMDtPDMyOyllLmxlbnNbdCsrXTOQoRixlLmxlbnMsMCwzMixmLDAsZSbJrLHtiaXRzOjVKSxjPSExfWUubGVuYkZTsLGUubGVuYmlczLGUuZGlzdGNvZGUZixlLmRpcRiaXRzPTVZnVuYRpbgWihlLHQscixuKXtYXIgaSxzPWUucRhdGUcmVdXJuIGbGwPTzLndpbmRvdyYmKHMudNpemUMTwcyYmlcyxzLnduZXhPTAscyaGFZTwLHMudluZGPWldyBJLkJZjgocyclZSkpLG+PXMudNpemU/KEkuYXJyYXlTZXQocyaWkbcsdCxyLXMudNpemUscyclZSwwKSxzLnduZXhPTAscyaGFZTzLndzaXplKToobjwoaTzLndzaXplLXMudleHQpJiYoaTuKSxJLmFycmFUVKHMudluZGLHQsciuLGkscybmVdCksKGtPWkpPyhJLmFycmFUVKHMudluZGLHQsciuLGsMCkscybmVdDuLHMudhhdmUcyclZSkKHMudleHQrPWkscybmVdDPXMudNpemUmJihzLnduZXhPTApLHMudhhdmUcyclZSYmKHMudhhdmUrPWkpKSksMHyLmluZmxhdGVSZXNldDvLHIuaWmbGFZVJlcVMjoLHIuaWmbGFZVJlcVSVlcDhLHIuaWmbGFZUluaXQZnVuYRpboZSlcmVdXJuIHUoZSwxNSlLHIuaWmbGFZUluaXQyPXUscipbmZsYXRlPWZbmNaWuKGUsdCldmFyIHIsbixpLHMsYSxvLGgsdSxsLGYsYyxkLHAsbSxfLGcsYixLHksdyxrLHgsUyxLEMMCxFPWldyBJLkJZjgoNCksQTbMTYsMTcsMTgsMCwLDcsOSwLDEwLDUsMTEsNCwxMiwzLDEzLDIsMTQsMSwxNVaWYoIWVfCFlLnNYXRlfHwhZSvdXRwdXRfCFlLmlucHVJiYwITZShdmFpbFpbilyZXRcmgVTsxMjPShyPWUucRhdGUpLmvZGUmJihyLmvZGUMTMpLGEZSuZXhXdCxpPWUubVcHVLGgZShdmFpbFvdXQsczlLmleHRfaWsbjlLmlucHVLGZShdmFpbFpbixPXIuaGsZCxsPXIuYmlcyxmPWsYzoLHgTjtlOmZvcigOylzdlYgocitbRlKXtjYXNlIFAaWYoMDPXIudJhcClcitbRlPTEzOJyZWFrfWZvcigbDwxNjspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWlmKDImcicmFwJiYzNTYxNTPXUpeVbcijaGVjazwXTyNTUmdSxFWzFdPXU+PjJjINSxyLmNoZWNrPUIocijaGVjayxFLDIsMCksbDPTAscitbRlPTIYnJlYWtaWYocimbGFnczwLHIuaGVhZCYmKHIuaGVhZCkblPSExKSwhKDEmcicmFwKXxKCgoMjUJnUpPDwKSsodT+OCkpJTMxKXtlLmzZzcImluYycmVjdCBoZWFkZXIgYhlYtcIixyLmvZGUMzAYnJlYWtaWYoOCEKDEJnUpKXtlLmzZzcInVuavdgYtcHJlcNpbgbWVaGkXCIscitbRlPTMwOJyZWFrfWlmKGwtPTQsazKygxNSYodT+PjKSksMDPXIudJpdHMpciYmlczrOVscUgaWYoazyLndiaXRzKXtlLmzZzcImludmFsaWQgdluZGIHNpemVcIixyLmvZGUMzAYnJlYWtcikbWFPTEPGssZShZGxlcjyLmNoZWNrPTEscitbRlPTUxMiZPzEwOjEyLGwdTwOJyZWFrONhcUgMjpmbIoOwMTYKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHpZihyLmZsYWdzPXUsOCEKDINSZyLmZsYWdzKSlZStccXCJbmtubduIGNvbXByZXNzaWuIGldGhvZFwiLHIubWkZTzMDticmVhapZigNzMNCZyLmZsYWdzKXtlLmzZzcInVuavdgaGVhZGVyIGZsYWdzIHNldFwiLHIubWkZTzMDticmVhayLmhlYWQmJihyLmhlYWQudGVdDPjJjEpLDUxMiZyLmZsYWdzJiYoRVswXTyNTUmdSxFWzFdPXU+PjJjINSxyLmNoZWNrPUIocijaGVjayxFLDIsMCkpLGwdTwLHIubWkZTzONhcUgMzpmbIoOwMzIKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHyLmhlYWQmJihyLmhlYWQudGltZTKSwMTImcimbGFncyYmKEVbMFMjUJnUsRVsxXTPj+OCYyNTUsRVsyXTPj+MTYmMjULEVbMdT+PjIJjINSxyLmNoZWNrPUIocijaGVjayxFLDQsMCkpLGwdTwLHIubWkZTONhcUgNDpmbIoOwMTYKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHyLmhlYWQmJihyLmhlYWQueGZsYWdzPTINSZLHIuaGVhZCvczPjKSwMTImcimbGFncyYmKEVbMFMjUJnUsRVsxXTPj+OCYyNTUscijaGVjazCKHIuYhlYssRSwyLDApKSxsPXUMCxyLmvZGUNTtjYXNlIDUaWYoMTAyNCZyLmZsYWdzKXtmbIoOwMTYKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHyLmxlbmdaDLHIuaGVhZCYmKHIuaGVhZCleHRyYVsZWdSksNTEyJnIuZmxhZMmJihFWzBdPTINSZLEVbMVdT+PjgmMjULHIuYhlYsQihyLmNoZWNrLEUsMiwwKSksbDPTBZWxzZSByLmhlYWQmJihyLmhlYWQuZXhcmEbnVsbCkcitbRlPTYYFzZSAOmlmKDEwMjQmcimbGFncyYmKGKGQcisZWndGgpJiYoZDvKSxkJiYocioZWFkJiYoazyLmhlYWQuZXhcmFfbGVuLXIubGVuZRoLHIuaGVhZCleHRyYXxKHIuaGVhZCleHRyYTuZXcgQXJyYXkocioZWFkLmVdHJhXxlbikpLEkuYXJyYXlTZXQocioZWFkLmVdHJhLGscyxkLGspKSwMTImcimbGFncyYmKHIuYhlYsQihyLmNoZWNrLGsZCxzKSksbyZCxzKzkLHIubGVuZRoLTkKSxyLmxlbmdaCkpYnJlYWsgZTtyLmxlbmdaDwLHIubWkZTONhcUgNzppZigyMDQJnIuZmxhZMpelmKDAPTvKWJyZWFrIGUZmyKGQMDtrPWbcytkKytdLHIuaGVhZCYmayYmcisZWndGgNjUMzYmJihyLmhlYWQubmFtZSsURyaWnLmZybDaGFyQkZShrKSksayYmZDxvOykaWYoNTEyJnIuZmxhZMmJihyLmNoZWNrPUIocijaGVjayxuLGQscykpLGtPWQscysZCxrKWJyZWFrIGVZWxzZSByLmhlYWQmJihyLmhlYWQubmFtZTudWxsKTtyLmxlbmdaDwLHIubWkZTONhcUgODppZigMDkJnIuZmxhZMpelmKDAPTvKWJyZWFrIGUZmyKGQMDtrPWbcytkKytdLHIuaGVhZCYmayYmcisZWndGgNjUMzYmJihyLmhlYWQuYtbWVudCsURyaWnLmZybDaGFyQkZShrKSksayYmZDxvOykaWYoNTEyJnIuZmxhZMmJihyLmNoZWNrPUIocijaGVjayxuLGQscykpLGtPWQscysZCxrKWJyZWFrIGVZWxzZSByLmhlYWQmJihyLmhlYWQuYtbWVudDudWxsKTtyLmvZGUOTtjYXNlIDkaWYoNTEyJnIuZmxhZMpeZvcigbDwxNjspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWlmKHUhPToNjUMzUmcijaGVjaykpeUubXNnPVwiaGVhZGVyIGNyYyBtaXNtYXRjaFwiLHIubWkZTzMDticmVhasPXUMHyLmhlYWQmJihyLmhlYWQuaGNyYzyLmZsYWdzPjJjEscioZWFkLmRvbmUITApLGUuYWRsZXIcijaGVjazwLHIubWkZTxMjticmVhaztjYXNlIDEwOmZvcigbDwzMjspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWUuYWRsZXIcijaGVjazMKHUpLGwdTwLHIubWkZTxMTtjYXNlIDExOmlmKDAPTyLmhhdmVkaWNKXJldHVybiBlLmleHRfbVPWEsZShdmFpbFvdXQaCxlLmleHRfaWcyxlLmFYWlsXluPWsciobxkPXUsciiaXRzPWwsMjtlLmFkbGVyPXIuYhlYsMSxyLmvZGUMTIYFzZSAxMjppZigPTdHxNjPXQpYnJlYWsgZTtjYXNlIDEzOmlmKHIubGFzdCldT+PjJmwsbCNyZsLHIubWkZTyNzticmVhambIoOwMzspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfXNaXRjaChyLmxhcQMSZLGwtPTEsMyYodT+PjxKSlYFzZSAwOnIubWkZTxNDticmVhaztjYXNlIDEaWYoaihyKSxyLmvZGUMjAsNiEPXQpYnJlYWsdT+PjyLGwtPTIYnJlYWsgZTtjYXNlIDIcitbRlPTEOJyZWFrONhcUgMzplLmzZzcImludmFsaWQgYmxvYsgdHlwZVwiLHIubWkZTzMHPj+PTIsbCMjticmVhaztjYXNlIDEOmZvcihPj+PTcmbCxsLTJmwbDwzMjspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWlmKCgNTUzNSZKSEKHU+PjxNlNTUzNSkpeUubXNnPVwiaWYWxpZCBzdGyZWQgYmxvYsgbGVuZRocwiLHIubWkZTzMDticmVhapZihyLmxlbmdaDNTUzNSZLGwdTwLHIubWkZTxNSwPTdClicmVhayBlONhcUgMTUcitbRlPTEONhcUgMTYaWYoZDyLmxlbmdaClaWYobzxkJiYoZDvKSxoPGQmJihkPWgpLDAPTkKWJyZWFrIGUSShcnJheVNldChpLGscyxkLGEpLGtPWQscysZCxoLTkLGErPWQscisZWndGgtPWQYnJlYWtcitbRlPTEyOJyZWFrONhcUgMTcZmyKDtsPDEOylaWYoMDPWpYnJlYWsgZTtvLSsdSsbltzKytdPDxsLGwrPThaWYociubGVuPTINysoMzEmdSksdT+PjLGwtPTUsciuZGlzdDxKygzMSZKSxPj+PTUsbCNSxyLmjbRlPTQrKDEJnUpLHU+PjNCxsLTLDINjxyLmsZWfDMwPHIubmRpcQpeUubXNnPVwidGvIGhbnkgbGVuZRoIGyIGRpcRhbmNlIHNbWJvbHNcIixyLmvZGUMzAYnJlYWtcioYXZlPTAscitbRlPTEONhcUgMTgZmyKDtyLmhhdmUciuYkZTspeZvcigbDwzOylaWYoMDPWpYnJlYWsgZTtvLSsdSsbltzKytdPDxsLGwrPThcisZWzWFbcioYXZlKytdXTJnUsdT+PjzLGwtPTNZmyKDtyLmhhdmUMTkKXIubGVuctBWIuaGFZSsrXVMDtpZihyLmxlbmNvZGUcisZWkeWscisZWiaXRzPTcsUzYmlczpyLmxlbmJpdHNLHgVCgwLHIubGVucywwLDELHIubGVuYkZSwwLHIudyayxTKSxyLmxlbmJpdHMUyiaXRzLHgpeUubXNnPVwiaWYWxpZCBjbRlIGxlbmdaHMgcVXCIscitbRlPTMwOJyZWFrfXIuaGFZTwLHIubWkZTxOTtjYXNlIDEOmZvcigcioYXZlPHIubmxlbityLmkaXNOylZmyKDtnPShDPXIubGVuYkZVtJigxPDxyLmxlbmJpdHMpLTFdKT+PjEJjINSxiPTYNTMJkMsISgoXzDPj+MjQpPDsKTspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWlmKGIMTYpdT+PjfLGwtPVscisZWzWIuaGFZSsrXTiOVscVaWYoMTYPTiKXtmbIoejfKzIbDxOylaWYoMDPWpYnJlYWsgZTtvLSsdSsbltzKytdPDxsLGwrPThaWYodT+PjfLGwtPVsMDPXIuaGFZSlZStccXCJpbnZhbGlkIGJpdCBsZWndGggcmVwZWFXCIscitbRlPTMwOJyZWFrfWscisZWzWIuaGFZSxXSxkPTMrKDMmdSksdT+PjyLGwtPTJZWxzZSBpZigxNzPWIpeZvcihPVrMztsPHoKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHsLTfLGsMCxkPTMrKDcmKHU+PjXykpLHU+PjMyxsLTzfWVscVZmyKHoXysOwejspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWwtPVsazwLGQMTErKDEyNyYodT+PjfKSksdT+PjLGwtPTdaWYocioYXZlKQ+ciubGVuKIubmRpcQpeUubXNnPVwiaWYWxpZCBiaXQgbGVuZRoIHJlcGVhdFwiLHIubWkZTzMDticmVhambIoOQtLTspcisZWzWIuaGFZSsrXTrfXpZigzMDPXIubWkZSlicmVhaztpZigwPTcisZWzWzINlpeUubXNnPVwiaWYWxpZCBjbRlICtIGpcNpbmcgZWkLWmLWJsbNrXCIscitbRlPTMwOJyZWFrfWlmKHIubGVuYmlczLFMeJpdHMcisZWiaXRzfSxPVQoRCxyLmxlbnMsMCxyLmsZWscisZWjbRlLDAscibJrLFMpLHIubGVuYmlczTLmJpdHMseClZStccXCJpbnZhbGlkIGxpdGVyYWwvbGVuZRocyBzZXRcIixyLmvZGUMzAYnJlYWtaWYocikaXNYmlczLHIuZGlzdGNvZGUcikaXNZHluLFMeJpdHMcikaXNYmlcseDUKEYscisZWzLHIubmxlbixyLmkaXNLHIuZGlzdGNvZGUsMCxyLndvcmssUykscikaXNYmlczTLmJpdHMseClZStccXCJpbnZhbGlkIGRpcRhbmNlcyBzZXRcIixyLmvZGUMzAYnJlYWtaWYocitbRlPTIwLDYPTKWJyZWFrIGUYFzZSAyMDpyLmvZGUMjEYFzZSAyMTppZigPDvJiYyNTgPWgpeUubmVdFvdXQYSxlLmFYWlsXdDoLGUubmVdFpbjzLGUuYXZhaWxfaWbyxyLmhvbGQdSxyLmJpdHMbCxSKGUsYyksYTlLmleHRfbVLGkZSvdXRwdXQsaDlLmFYWlsXdCxzPWUubmVdFpbixuPWUuaWwdXQsbzlLmFYWlsXluLHUciobxkLGwciiaXRzLDEyPTcitbRlJiYociiYWNrPSxKTticmVhambIociiYWNrPTAZzoQzyLmxlbmNvZGVbdSYoMTwcisZWiaXRzKSxXSk+PjxNiYyNTUsYjNTUzNSZDLCEoKFQz+PjIKTwbCkKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHpZihnJiYwPToMjQwJmcpKXtmbIodjfLHkZyxPWIZzoQzyLmxlbmNvZGVbdysoKHUmKDEPHYreSktMSk+PnYpXSk+PjxNiYyNTUsYjNTUzNSZDLCEodisoXzDPj+MjQpPDsKTspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfXU+PjdixsLTLHIuYmFjaysdnpZihPj+PVsbCXyxyLmJhYsrPVscisZWndGgYiwwPTZylcitbRlPTIOJyZWFrfWlmKDMyJmcpeIuYmFjaztMSxyLmvZGUMTIYnJlYWtaWYoNjQmZylZStccXCJpbnZhbGlkIGxpdGVyYWwvbGVuZRoIGNvZGVcIixyLmvZGUMzAYnJlYWtcileHRyYTxNSZnLHIubWkZTyMjtjYXNlIDIyOmlmKHIuZXhcmEpeZvcihPXIuZXhcmEbDxOylaWYoMDPWpYnJlYWsgZTtvLSsdSsbltzKytdPDxsLGwrPThcisZWndGgrPXUmKDEPHIuZXhcmEpLTEsdT+PjyLmVdHJhLGwtPXIuZXhcmEsciiYWNrKzyLmVdHJhfXIudFzPXIubGVuZRoLHIubWkZTyMztjYXNlIDIzOmZvcigZzoQzyLmRpcRjbRlWUmKDEPHIuZGlzdGJpdHMpLTFdKT+PjEJjINSxiPTYNTMJkMsISgoXzDPj+MjQpPDsKTspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfWlmKDAPSgyNDAmZykpeZvcihPVseTnLHcYjtnPShDPXIuZGlzdGNvZGVbdysoKHUmKDEPHYreSktMSk+PnYpXSk+PjxNiYyNTUsYjNTUzNSZDLCEodisoXzDPj+MjQpPDsKTspelmKDAPTvKWJyZWFrIGUbytLHUrPWbcysrXTwbCxsKzfXU+PjdixsLTLHIuYmFjaysdnpZihPj+PVsbCXyxyLmJhYsrPVsNjQmZylZStccXCJpbnZhbGlkIGRpcRhbmNlIGNvZGVcIixyLmvZGUMzAYnJlYWtcivZmZzZXQYixyLmVdHJhPTEJmcscitbRlPTIONhcUgMjQaWYocileHRyYSlZmyKHocileHRyYTtsPHoKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHyLmmZnNldCsdSYoMTwcileHRyYSktMSxPj+PXIuZXhcmEsbCcileHRyYSxyLmJhYsrPXIuZXhcmFaWYocivZmZzZXQ+cikbWFKXtlLmzZzcImludmFsaWQgZGlzdGFuYUgdGvIGZhciBiYWNrXCIscitbRlPTMwOJyZWFrfXIubWkZTyNTtjYXNlIDIOmlmKDAPToKWJyZWFrIGUaWYoZDjLWgscivZmZzZXQ+ZClaWYoKGQcivZmZzZXQtZCk+ciaGFZSYmcizYWlKXtlLmzZzcImludmFsaWQgZGlzdGFuYUgdGvIGZhciBiYWNrXCIscitbRlPTMwOJyZWFrfXAZDyLnduZXhPyhkLTyLnduZXhLHIudNpemUtZCkcibmVdCkLGQ+cisZWndGgmJihkPXIubGVuZRoKSxtPXIudluZGfWVscUgbTpLHAYSyLmmZnNldCxkPXIubGVuZRoOZvcihoPGQmJihkPWgpLGgtPWQscisZWndGgtPWQaVthKytdPWbcCsrXSwtLWQKTswPTcisZWndGgmJihyLmvZGUMjEpOJyZWFrONhcUgMjYaWYoMDPWgpYnJlYWsgZTtpWErKcisZWndGgsaCtLHIubWkZTyMTticmVhaztjYXNlIDIOmlmKHIudJhcClZmyKDtsPDMyOylaWYoMDPWpYnJlYWsgZTtvLSsdXwbltzKytdPDxsLGwrPThaWYoYyaCxlLnRvdGFsXdCsYyxyLnRvdGFsKzjLGMmJihlLmFkbGVyPXIuYhlYscimbGFnczCKHIuYhlYssaSxjLGEtYykTyhyLmNoZWNrLGksYyxhLWMpKSxjPWgsKHIuZmxhZM/dTpMKHUpKSEPXIuYhlYspeUubXNnPVwiaWjbJyZWNIGRhdGEgYhlYtcIixyLmvZGUMzAYnJlYWtbDPTBcitbRlPTIONhcUgMjgaWYocicmFwJiZyLmZsYWdzKXtmbIoOwMzIKXtpZigwPTbylicmVhayBlOtLSxKzuWMrKPGwsbCsOHpZihITKDQyOTQNjcyOTUmcibRhbCkpeUubXNnPVwiaWjbJyZWNIGxlbmdaCBjaGVjawiLHIubWkZTzMDticmVhasPXUMHyLmvZGUMjkYFzZSAyOTpPTEYnJlYWsgZTtjYXNlIDMwOngLTMYnJlYWsgZTtjYXNlIDMxOnJldHVybiONhcUgMzIZGVmYXVsdDpyZXRcmgVXyZXRcmgZSuZXhXdDhLGUuYXZhaWxfbVPWgsZSuZXhXluPXMsZShdmFpbFpbjvLHIuaGsZDLHIuYmlczsLChyLndzaXplfHxjITZShdmFpbFvdXQmJnIubWkZTwzMCYmKHIubWkZTwyNxNCEPXQpKSYmWihlLGUubVcHVLGUubmVdFvdXQsYylLmFYWlsXdCk/KHIubWkZTzMSwtNCkKGYtPWUuYXZhaWxfaWsYyZShdmFpbFvdXQsZSbRhbFpbisZixlLnRvdGFsXdCsYyxyLnRvdGFsKzjLHIudJhcCYmYyYmKGUuYWRsZXIcijaGVjazyLmZsYWdzPIocijaGVjayxpLGMsZSuZXhXdCjKTpPKHIuYhlYssaSxjLGUubmVdFvdXQtYykpLGUuZGFYVeXBlPXIuYmlcysocisYXNPzYOjApKygxMjPXIubWkZTxMjgMCkrKDIwPTcitbRlfHwxNTPXIubWkZTyNTYMCksKDAPWYmJjAPTjfHwPTdCkmJngPTOJiYoeDtNSkseClLHIuaWmbGFZUVuZDmdWjdGlvbihlKXtpZighZXxIWUucRhdGUpcmVdXJuIFUdmFyIHQZSzdGFZTtyZXRcmgdCaWkbcmJihLndpbmRvdzudWxsKSxlLnNYXRlPWbGwsTnscipbmZsYXRlRVSGVhZGVyPWZbmNaWuKGUsdCldmFyIHIcmVdXJuIGUmJmUucRhdGU/MDKDImKHIZSzdGFZSkudJhcCk/VTooKHIuaGVhZDKSkblPSExLEpOlVLHIuaWmbGFZVNldERpYRpbhcnkZnVuYRpboZSxKXtYXIgcixuPXQubGVuZRoOJldHVybiBlJiZlLnNYXRlPzAhPTocjlLnNYXRlKScmFwJiYxMSEPXIubWkZTVOjExPTcitbRlJiZPKDEsdCxuLDApITcijaGVjaztMzpaKGUsdCxuLGpPyhyLmvZGUMzEsLTQpOihyLmhhdmVkaWNPTEsTikVXscipbmZsYXRlSWmbzcInBhagaWmbGFZSAoZnJvbSBObRlYEgcHJvamVjdClcInsewiLivdXRpbHMvYtbWuXCINDEsXCIuLFkbGVyMzJcIjoMyxcIivYJjMzJcIjoNSxcIivaWmZmFzdFwiOjQLFwiLipbmZcmVlcwiOjUwfVsNTAWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtYXIgRDlKFwiLivdXRpbHMvYtbWuXCIpLEYWzMsNCwLDYsNywLDksMTAsMTEsMTMsMTUsMTcsMTksMjMsMjcsMzEsMzUsNDMsNTEsNTksNjcsODMsOTksMTELDEzMSwxNjMsMTkLDIyNywyNTgsMCwwXSxOPVsxNiwxNiwxNiwxNiwxNiwxNiwxNiwxNiwxNywxNywxNywxNywxOCwxOCwxOCwxOCwxOSwxOSwxOSwxOSwyMCwyMCwyMCwyMCwyMSwyMSwyMSwyMSwxNiwMiwOFsVTbMSwyLDMsNCwLDcsOSwxMywxNywyNSwzMywOSwNSwNywxMjksMTkzLDINywzODUsNTEzLDcOSwxMDILDEMzcsMjAOSwzMDczLDQwOTcsNjENSwMTkzLDEyMjgLDEMzgLDINTcLDAsMFsUDbMTYsMTYsMTYsMTYsMTcsMTcsMTgsMTgsMTksMTksMjAsMjAsMjEsMjEsMjIsMjIsMjMsMjMsMjQsMjQsMjUsMjUsMjYsMjYsMjcsMjcsMjgsMjgsMjksMjksNjQsNjRdOQuZXhwbJczmdWjdGlvbihlLHQscixuLGkscyxhLGpeZhciBoLHUsbCxmLGMsZCxwLGsXyxnPWuYmlcyxiPTAsdjwLHkMCxPTAsazwLHgMCxTPTAsejwLEMMCxFPTAsQTudWxsLEkMCxPPWldyBELkJZjEKDEKSxCPWldyBELkJZjEKDEKSxSPWbGwsVDwOZvcihiPTAYjwMTUYisrKUbYlMDtmbIodjwOYbjtKyspTtWIrdldKysZmyKGsZyxPTEOzEPXcmJjAPTPWddOctLSkaWYodzxrJiYoazKSwwPTdylyZXRcmgaVtzKytdPTIwOTcxNTIwLGlbcysrXTyMDkMTUyMCxvLmJpdHMMSwwOZvcihPTEeTxJiYwPTTtXTtKyspOZvcihrPHkmJihrPXkpLGIejxOIPTEOIrKylpZihPDwMSwoeiTtiXSkMClyZXRcmtMTtpZigwPHomJigwPTZXxMSEPXcpKXJldHVybixOZvcihCWzFdPTAsYjxOIMTUYisrKUJbYisxXTCWJdKbYlZmyKHYMDtPGdisrKTAhPTWIrdlmJihhWJbdFtyKZdXSsrXTKTtpZihkPTAPTlPyhBPVIYSwxOSkMTPWU/KEERixJLTyNTcsUjOLFQtPTINywyNTYpOihBPVUsUjQLCxKSxiPXksYzzLFMdjFPTAsbDtMSxmPShDPTEPChPWspKSxLDEPTlJiYNTIQxMjPWUmJjUMjxDKXJldHVybiAxOZvcigOylZmyKHAYiTLFYVtXTxkPyhtPTAsYVtXSkYVtXTkPyhtPVJbVCthWZdXSxBWkrYVtXVpOihtPTkLDApLGgMTwYiTLHkdTxPDxOlbYysoRT+UykrKHUtPWgpXTwPDwyNHxtPDwxNnxffDAsMCEPXUKTtmbIoaDxPDxiLTERSZoOyloPjMTtpZigwITaDoRSYaCxLEUrPWgpOkUMCxKyssMDLSPWJdKXtpZihiPTdylicmVhaztiPXRbcithWZdXXpZihrPGImJihFJmYpITbClZmyKDAPTTJiYoUzrKSxjKzLHoMTwKHgYiTKTtKMdyYmISgoeiTtKNdKTwMCkKXgrKyxPDwMTtpZihDKzxPDxLDEPTlJiYNTIQxMjPWUmJjUMjxDKXJldHVybiAxOlbbDFJmZdPWsPDIfHgPDEfGMtcwwfXyZXRcmgMCEPUUmJihpWMrRVYiTPDwyNHwNDwMTZMCksbyiaXRzPWssMHLHtcIiuLVaWxzLNvbWvblwiOjQxfVsNTEWZbmNaWuKGUsdCxyKXtcInVzZSBzdHJpYRcIjtLmVcGydHMezIXCJuZWVkIGRpYRpbhcnlcIiwxOlwicRyZWFtIGVuZFwiLDAXCJcIixcIixXCIXCJmaWxlIGVycmyXCIsXCItMlwiOlwicRyZWFtIGVycmyXCIsXCItMwiOlwiZGFYSBlcnJvclwiLFwiLTRcIjpcImlucVmZmljaWVudCBtZWvcnlcIixcIiXCIXCJidWZmZXIgZXJybJcIixcIiXCIXCJpbmNvbXBhdGlibGUgdmVyclvblwifXsedLDUyOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdmFyIGkZShcIiuLVaWxzLNvbWvblwiKSxvPTAsaDxOZbmNaWuIGoZSlZmyKHZhciBPWUubGVuZRoOzAPStdDspZVtXTwfXZhciBzPTAsYTyOSxPTINixsPXUrMSthLGYMzAsYzxOSxfPTIqbCsxLGcMTUsZDxNixwPTcsbTyNTYsYjxNixPTELHkMTgsdzbMCwwLDAsMCwwLDAsMCwwLDEsMSwxLDEsMiwyLDIsMiwzLDMsMywzLDQsNCwLDQsNSwLDUsNSwwXSxrPVswLDAsMCwwLDEsMSwyLDIsMywzLDQsNCwLDUsNiwLDcsNywLDgsOSwLDEwLDEwLDExLDExLDEyLDEyLDEzLDEzXSxPVswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDIsMywXSxTPVsxNiwxNywxOCwwLDgsNywLDYsMTAsNSwxMSwLDEyLDMsMTMsMiwxNCwxLDEXSxPWldyBBcnJheSgyKihsKzIpKTtuKHopOZhciBDPWldyBBcnJheSgyKmYpOoQykdmFyIEUbmVIEFycmFKDUxMikbihFKTtYXIgQTuZXcgQXJyYXkoMjUKTtuKEEpOZhciBJPWldyBBcnJheShhKTtuKEkpOZhciBPLEIsUixUPWldyBBcnJheShmKTtmdWjdGlvbiBEKGUsdCxyLGsaSldGhpcyzdGFaWNfdHJlZTlLHRoaXMuZXhcmFfYmlczLHRoaXMuZXhcmFfYmFzZTyLHRoaXMuZWxlbXMbixaGlzLmheFsZWndGgaSxaGlzLmhhczdHJlZTlJiZlLmxlbmdaHmdWjdGlvbiBGKGUsdCldGhpcykeWfdHJlZTlLHRoaXMubWFXNvZGUMCxaGlzLnNYXRfZGVzYzfWZbmNaWuIEoZSlcmVdXJuIGUMjUPVbZVRVsyNTYrKGU+PjKVZnVuYRpbgVShlLHQpeUucGVuZGluZidWZbZSwZWkaWnKytdPTINSZLGUucGVuZGluZidWZbZSwZWkaWnKytdPXQ+PjJjINXmdWjdGlvbiBQKGUsdCxyKXtlLmJpXZhbGlkPmQtcjoZSiaVidWZPXQPGUuYmlfdmFsaWQmNjUMzUsVShlLGUuYmlfYnVmKSxlLmJpXJZjPjkLWUuYmlfdmFsaWQsZSiaVYWxpZCscikKTooZSiaVidWZPXQPGUuYmlfdmFsaWQmNjUMzUsZSiaVYWxpZCscilZnVuYRpbgTChlLHQscilUChlLHJbMipXSxyWzIqdCsxXSlZnVuYRpbgaihlLHQpeZvcihYXIgcjwOJPTEmZSxlPj+PTEscjwPTEsMDwtLXQKTtyZXRcmgcj+PjFZnVuYRpbgWihlLHQscildmFyIGsaSxzPWldyBBcnJheShnKzEpLGEMDtmbIobjxOPWcbisrKXNbblYThKJbbixXTwMTtmbIoaTwOkPXQaSsrKXtYXIgbzlWzIqaSsxXTswITbyYmKGVbMippXTqKHNbbrKyxvKSlfWZbmNaWuIFcoZSldmFyIHQZmyKHQMDtPGwdCsrKWUuZHluXxcmVlWzIqdFMDtmbIodDwOQZjtKyspZSkeWfZHRyZWVbMipXTwOZvcihPTAdDxjOQrKyllLmJsXRyZWVbMipXTwOUuZHluXxcmVlWzIqbVMSxlLmwdFsZWZSzdGFaWNfbGVuPTAsZSsYXNXxpdDlLmhdGNoZXMMHmdWjdGlvbiBNKGUpezgZSiaVYWxpZDVKGUsZSiaVidWYpOjAZSiaVYWxpZCYmKGUucGVuZGluZidWZbZSwZWkaWnKytdPWUuYmlfYnVmKSxlLmJpXJZjwLGUuYmlfdmFsaWQMHmdWjdGlvbiBIKGUsdCxyLGpeZhciBpPTIqdCxzPTIqcjtyZXRcmgZVtpXTxlWNdfHxlWldPTZVtzXSYmbltXTwbltyXXmdWjdGlvbiBHKGUsdCxyKXtmbIodmFyIGZSoZWFwWJdLGkcjwMTtpPDlLmhlYXBfbGVuJiYoaTxlLmhlYXBfbGVuJiZIKHQsZSoZWFwWkrMVsZSoZWFwWldLGUuZGVwdGgpJiZpKyssIUgodCxuLGUuaGVhcFtpXSxlLmRlcHRoKSkKWUuaGVhcFtyXTlLmhlYXBbaVscjpLGkPDxOUuaGVhcFtyXTufWZbmNaWuIEsoZSxLHIpeZhciBuLGkscyxhLGMDtpZigwITZSsYXNXxpdClmbIoOZSwZWkaWnXJZltlLmRfYnVmKzIqbPDhZSwZWkaWnXJZltlLmRfYnVmKzIqbysxXSxpPWUucGVuZGluZidWZbZSsXJZitvXSxvKyssMDPW/TChlLGksdCkKEwoZSwoczBWldKStKzEsdCksMCEPShhPXdbcpJiZQKGUsaSSVtzXSxhKSxMKGUsczOKCtbiksciksMCEPShhPWtbcpJiZQKGUsbiVFtzXSxhKSksbzxlLmxhcRfbGlOykTChlLGsdClZnVuYRpbgWShlLHQpeZhciByLGsaSxzPXQuZHluXRyZWUsYTLnNYXRfZGVzYyzdGFaWNfdHJlZSxvPXQucRhdFkZXNjLmhhczdHJlZSxoPXQucRhdFkZXNjLmVsZWzLHULTEZmyKGUuaGVhcFsZWMCxlLmhlYXBfbWFPVscjwOIaDtyKyspMCEPXNbMipyXToZSoZWFwWysrZSoZWFwXxlbldTyLGUuZGVwdGhbclMCkcsyKnIrMVMDtmbIoOUuaGVhcFsZWMjspcsyKihpPWUuaGVhcFsrKUuaGVhcFsZWdPXUMjrKUMCldPTEsZSkZXBaFtpXTwLGUubBXxlbitLGmJihlLnNYXRpYsZWtPWFbMippKzFdKTtmbIodCtYXhfYkZTLHIZSoZWFwXxlbj+MTsxPDyOItLSlHKGUscyxyKTtmbIoaToOIZSoZWFwWzFdLGUuaGVhcFsxXTlLmhlYXBbZSoZWFwXxlbitXSxHKGUscywxKSxuPWUuaGVhcFsxXSxlLmhlYXBbLSlLmhlYXBfbWFXTyLGUuaGVhcFstLWUuaGVhcFtYXhdPWscsyKmldPXNbMipyXStzWzIqblsZSkZXBaFtpXToZSkZXBaFtyXTZSkZXBaFtuXTlLmRlcHRoWJdOmUuZGVwdGhbblpKzEscsyKnIrMVcsyKmrMVaSxlLmhlYXBbMVaSsrLEcoZSxzLDEpLDIPWUuaGVhcFsZWKTtlLmhlYXBbLSlLmhlYXBfbWFXTlLmhlYXBbMVsZnVuYRpboZSxKXtYXIgcixuLGkscyxhLGsaDLmRblcmVlLHUdCtYXhfYkZSxsPXQucRhdFkZXNjLnNYXRpYcmVlLGYdCzdGFXRlcMuaGFzXNcmVlLGMdCzdGFXRlcMuZXhcmFfYmlcyxkPXQucRhdFkZXNjLmVdHJhXJhcUscDLnNYXRfZGVzYytYXhfbGVuZRoLGMDtmbIoczwOMPWccysrKWUuYmxfYbnRbcMDtmbIoaFsyKmUuaGVhcFtlLmhlYXBfbWFXSsxXTwLHIZSoZWFwXheCsxOIXztyKyspcDwoczoWzIqaFsyKihuPWUuaGVhcFtyXSkrMVrMVrMSkmJihzPXAsbSsrKSxoWzIqbisxXTzLHUbnxKGUuYmxfYbnRbcrKyxhPTAsZDwbiYmKGEYtuLWRdKSxvPWhbMipuXSxlLmwdFsZWrPWqKHMrYSksZiYmKGUucRhdGljXxlbisbyoobFsyKmrMVrYSkpKTtpZigwITbSlZGZmyKHMcCxOzAPTlLmJsXNvdWWNdOylzLSZSibFjbVudFtzXStLGUuYmxfYbnRbcysxXSsMixlLmJsXNvdWWBdLSsbSMnaGlsZSgwPGpOZvcihzPXAMCEPXMcytKWZvcihuPWUuYmxfYbnRbcMCEPWKXUKGkZSoZWFwWytclpfHwoaFsyKmkrMVhPTzJiYoZSvcHRfbGVuKzocyoWzIqaSsxXSkqaFsyKmldLGhbMippKzFdPXMpLGtLSlfShlLHQpLFoocyxLGUuYmxfYbnQpfWZbmNaWuIFgoZSxLHIpeZhciBuLGkscztMSxhPXRbMVsbzwLGgNyxPTQZmyKDAPThJiYoaDxMzgsdTzKSxWzIqKHIrMSkrMVNjUMzUsbjwOPXIbisrKWkYSxhPXRbMioobisxKSsxXSwrKaCYmaTPWFfChvPHU/ZSibFcmVlWzIqaVrPWMCEPWk/KGkhPTzJiZlLmJsXRyZWVbMippXSsrLGUuYmxfdHJlZVsyKmJdKyspOmPTEwPUuYmxfdHJlZVsyKnZdKysZSibFcmVlWzIqeVrKyxzPWksdTobzwKTPWE/KGgMTMLDMpOmkPThPyhoPTYsMykKGgNywKSlZnVuYRpbgVihlLHQscildmFyIGsaSxzPSxLGEdFsxXSxvPTAsaDLHUNDtmbIoMDPWEmJihoPTEzOCxPTMpLGMDtuPDyOrKylpZihpPWEsYTWzIqKGrMSkrMVsISgrKaCYmaTPWEpKXtpZihvPHUpZmyKDtMKGUsaSxlLmJsXRyZWUpLDAhPStbzspOVscUgMCEPWk/KGkhPTzJiYoTChlLGksZSibFcmVlKSxvLSpLEwoZSxiLGUuYmxfdHJlZSksUChlLGtMywyKSkbzwMTA/KEwoZSxLGUuYmxfdHJlZSksUChlLGtMywzKSkKEwoZSxLGUuYmxfdHJlZSksUChlLGtMTEsNykpOMaSxPShvPTApPTYToaDxMzgsMykaTPWE/KGgNiwzKTooaDLDQpfXuKFQpOZhciBxPSExOZbmNaWuIEooZSxLHIsbilUChlLChzPDwxKSsobjxOjApLDMpLGZbmNaWuKGUsdCxyLGpeoZSksbiYmKFUoZSxyKSxVKGUsfnIpKSxpLmFycmFUVKGUucGVuZGluZidWYsZSaWkbcsdCxyLGUucGVuZGluZyksZSwZWkaWnKzyfShlLHQsciwhMClcifdHJfaWpdDmdWjdGlvbihlKXtxfHwoZnVuYRpboKXtYXIgZSxLHIsbixpLHMbmVIEFycmFKGcrMSkZmyKGcjwOYSxOrKylmbIoSVtuXTyLGUMDtlPDEPHdbblZSsrKUFbcisrXTuOZvcihBWItMVbixuPWkMDtuPDEOrKylmbIoVFtuXTpLGUMDtlPDEPGtbblZSsrKUVbaSsrXTuOZvcihpPjNztuPGYbisrKWZvcihUWdPWkPDcsZTwOUMTwatuXSOUrKylFWzINitpKytdPWZmyKHQMDtPDnOQrKylzWRdPTAZmyKGUMDtlPDxNDMKXpbMiplKzFdPTgsZSsrLHNbOFrKztmbIoOUPTINTspelsyKmUrMVOSxlKysscsXSsrOZvcigZTwMjcOylWzIqZSsxXTLGUrKyxzWzddKysZmyKDtlPDyODcKXpbMiplKzFdPTgsZSsrLHNbOFrKztmbIoWihLGwrMSxzKSxlPTAZTxmOUrKylDWzIqZSsxXTLENbMiplXTqKGUsNSkTzuZXcgRChLHcsdSsxLGwsZyksQjuZXcgRChDLGssMCxmLGcpLFIbmVIEQobmVIEFycmFKDApLHgsMCxjLHApfSgpLHEITApLGUubFkZXNjPWldyBGKGUuZHluXxcmVlLEpLGUuZFkZXNjPWldyBGKGUuZHluXRcmVlLEIpLGUuYmxfZGVzYzuZXcgRihlLmJsXRyZWUsUiksZSiaVidWYMCxlLmJpXZhbGlkPTAsVyhlKXscifdHJfcRvcmVkXJsbNrPUoscifdHJfZmxchfYmxvYsZnVuYRpboZSxLHIsbildmFyIGkscyxhPTAMDxlLmxldmVsPygyPTZSzdHJtLmRhdGFfdHlwZSYmKGUucRybSkYXRhXRcGUZnVuYRpboZSldmFyIHQscjMDkzNjINDQOZvcihPTAdDwMzEdCsrLHI+PjMSlpZigxJnImJjAhPTlLmRblsdHJlZVsyKnRdKXJldHVybiBvOlmKDAhPTlLmRblsdHJlZVsxOFfDAhPTlLmRblsdHJlZVsyMFfDAhPTlLmRblsdHJlZVsyNlpcmVdXJuIGgZmyKHQMzIdDxOQrKylpZigwITZSkeWfbHRyZWVbMipXSlyZXRcmgaDtyZXRcmgboZSkpLFkoZSxlLmxfZGVzYyksWShlLGUuZFkZXNjKSxhPWZbmNaWuKGUpeZhciBOZvcihYKGUsZSkeWfbHRyZWUsZSsXRlcMubWFXNvZGUpLFgoZSxlLmRblkdHJlZSxlLmRfZGVzYytYXhfYkZSksWShlLGUuYmxfZGVzYyksdDjLTEMzwdCYmMDPWUuYmxfdHJlZVsyKlNbdFrMVdCtKTtyZXRcmgZSvcHRfbGVuKzzKihKzEpKzUrNSsLHRKGUpLGkZSvcHRfbGVuKzMrNz+PjMsKHMZSzdGFaWNfbGVuKzMrNz+PjMpPDpJiYoaTzKSkaTzPXIrNSxyKzQPWkmJixITdDKKGUsdCxyLGpOjQPTlLnNcmFZWdfHxzPTaToUChlLDIrKG/MTowKSwzKSxLKGUseixDKSkKFAoZSwKyhuPzEMCksMyksZnVuYRpboZSxLHIsbildmFyIGkZmyKFAoZSxLTINywKSxQKGUscixLDUpLFAoZSxuLTQsNCksaTwOkbjtpKyspUChlLGUuYmxfdHJlZVsyKlNbaVrMVsMykVihlLGUuZHluXxcmVlLHQtMSksVihlLGUuZHluXRcmVlLHItMSlKGUsZSsXRlcMubWFXNvZGUrMSxlLmRfZGVzYytYXhfYkZSsxLGErMSksSyhlLGUuZHluXxcmVlLGUuZHluXRcmVlKSksVyhlKSxuJiZNKGUpfSxyLlclYWxseTmdWjdGlvbihlLHQscilcmVdXJuIGUucGVuZGluZidWZbZSkXJZisyKmUubGFzdFsaXRdPXQ+PjJjINSxlLnBlbmRpbmdfYnVmWUuZFidWYrMiplLmxhcRfbGlKzFdPTINSZLGUucGVuZGluZidWZbZSsXJZitlLmxhcRfbGlXTyNTUmcixlLmxhcRfbGlKyssMDPXQ/ZSkeWfbHRyZWVbMipyXSsrOihlLmhdGNoZXMrKyxLSsZSkeWfbHRyZWVbMiooQVtyXStKzEpXSsrLGUuZHluXRcmVlWzIqTihKVrKyksZSsYXNXxpdDPWUubGlXJZnNpemUtMXscifdHJfYWxpZZnVuYRpboZSlUChlLDIsMyksTChlLGseiksZnVuYRpboZSlMTYPTlLmJpXZhbGlkPyhVKGUsZSiaVidWYpLGUuYmlfYnVmPTAsZSiaVYWxpZDwKToPDlLmJpXZhbGlkJiYoZSwZWkaWnXJZltlLnBlbmRpbmcrKMjUJmUuYmlfYnVmLGUuYmlfYnVmPjOCxlLmJpXZhbGlkLTKXoZSlfSxXCIuLidGlscyjbtbcIjoMXdLDUzOltmdWjdGlvbihlLHQscilXCJcUgcRyaWNXCIdCleHBvcnRzPWZbmNaWuKCldGhpcypbnBdDudWxsLHRoaXMubmVdFpbjwLHRoaXMuYXZhaWxfaWMCxaGlzLnRvdGFsXluPTAsdGhpcyvdXRwdXQbnVsbCxaGlzLmleHRfbVPTAsdGhpcyhdmFpbFvdXQMCxaGlzLnRvdGFsXdDwLHRoaXMubXNnPVwiXCIsdGhpcyzdGFZTudWxsLHRoaXMuZGFYVeXBlPTIsdGhpcyhZGxlcjwfXsedLDUOltmdWjdGlvbihlLHQscilKGZbmNaWuKGUpeyFmdWjdGlvbihyLGpewidXNlIHNcmljdFwiOlmKCFyLnNldEltbWVkaWFZSldmFyIGkscyxLGEsbzxLGgesdThMSxsPXIuZGjdWlbnQsZTPYmplYQuZVUHJvdGeXBlTYmJkiamVjdCnZXRQcmbRcGVPZihyKTtlPWUmJmUucVVGltZWdDlOnIsaTcIltvYmplYQgcHJvYVzccIjPXtLnRvURyaWnLmNhbGwociwcmjZXNzKTmdWjdGlvbihlKXtwcmjZXNzLmleHRUaWNrKGZbmNaWuKClYyhlKXpfTpmdWjdGlvbigpelmKHIucGzdElcNhZUmJiFyLmltcGydFNjcmlwdHMpeZhciBlPSEwLHQcivbmlcNhZUcmVdXJuIHIubtZXNzYWdlPWZbmNaWuKClZThMXsciwbNTWVzcFnZShcIlwiLFwiKlwiKSxyLmubWVzcFnZTLGVfSgpPyhhPVwicVSWtZWRpYXRlJFwiKhdGgucmFuZGtKCkrXCIkXCIscihZGRFdmVudExpcRlbmVyPIuYWRkRXZlbnRMaXNZWlcihcImlcNhZVcIixkLCExKTpyLmFdGFjaEVZWKFwibtZXNzYWdlXCIsZCksZnVuYRpboZSlciwbNTWVzcFnZShhKUsXCIqXCIpfSkciNZXNzYWdlQhhbmlbDoKHQbmVIElcNhZVDaGFubmVsKSwbJMSvbmlcNhZUZnVuYRpboZSlYyhlLmRhdGEpfSxmdWjdGlvbihlKXtLnBvcnQyLnBvcRNZXNzYWdlKGUpfSkbCYmXCJvbnJlYWRcRhdGVjaGFuZVcImluIGwuYJlYXRlRWxlbWVudChcInNjcmlwdFwiKToczsLmRvYVtZWRWxlbWVudCxmdWjdGlvbihlKXtYXIgdDsLmNyZWFZUVsZWlbnQoXCJzYJpcHRcIikdCvbnJlYWRcRhdGVjaGFuZUZnVuYRpboKXtjKGUpLHQubyZWFkeXNYXRlYhhbmdlPWbGwscyyZWvdmVDaGlsZChKSxPWbGxLHMuYXBwZWkQhpbGQodClKTpmdWjdGlvbihlKXtzZXRUaWlbVKGMsMCxlKXsZSzZXRJbWlZGlhdGUZnVuYRpboZSlXCJmdWjdGlvblwiITeXBlbYgZSYmKGUbmVIEZbmNaWuKFwiXCIrZSkpOZvcihYXIgdDuZXcgQXJyYXkoYXJndWlbnRzLmxlbmdaCxKSxyPTAcjxLmxlbmdaDtyKyspdFtyXThcmdbWVudHNbcisxXTtYXIgbjYFsbGJhYsZSxhcmdzOnROJldHVybiBoWdPWsaShvKSxvKytLGUuYxlYXJJbWlZGlhdGUZnmdWjdGlvbiBmKGUpeRlbGVZSBoWVdfWZbmNaWuIGMoZSlaWYodSlzZXRUaWlbVKGMsMCxlKTtlbHNleZhciBPWhbZVaWYodCldThMDtcnlIWZbmNaWuKGUpeZhciBPWUuYFsbGJhYsscjlLmFyZMcdpdGNoKHIubGVuZRoKXtjYXNlIDAdCgpOJyZWFrONhcUgMTpKHJbMFpOJyZWFrONhcUgMjpKHJbMFsclsxXSkYnJlYWsYFzZSAzOnQoclswXSxyWzFdLHJbMlpOJyZWFrORlZmFbHQdChcHBseShuLHIpfXodClZmluYWxseXtmKGUpLHUITFfXZnVuYRpbgZChlKXtlLnNvdXJjZTPXImJlwicRyaWnXCIPXRcGVvZiBlLmRhdGEmJjAPTlLmRhdGEuaWkZXhPZihhKSYmYygrZSkYXRhLnNsaWNlKGEubGVuZRoKSlfShcInVuZGVmaWlZFwiPTeXBlbYgcVsZjblkIDAPTlPRoaXMZTpzZWxmKXpLmNhbGwodGhpcyxcInVuZGVmaWlZFwiITeXBlbYgZxvYmFsPdsbJhbDpcInVuZGVmaWlZFwiITeXBlbYgcVsZjzZWxmOlwidWkZWZpbmVkXCIhPXRcGVvZiBaWkbc/dluZGOntKXsedfSxfSxbMTBdKSgxMClKTsiLCAibWkdWxlLmVcGydHMgPSBXGgIGFxdWEICjMDBmZmZmKGZmKToPyFcXHcpfCMwZmYoZik/KDhXFxKSnaSxcbiAgYXpcmUICjZjBmZmZmKGZmKToPyFcXHcpLdpLFxuICBiZWlnZTogLyNmNWYZGMoZmYpPyg/IVxcdykvZksXGgIGJpcFZTogLyNmZmUYzQoZmYpPyg/IVxcdykvZksXGgIGJsYWNrOiAvIzAwMDAwMChmZik/KDhXFxKXwjMDAwKGYpPyg/IVxcdykvZksXGgIGJsdWUICjMDAwMGZmKGZmKToPyFcXHcpfCMwMGYoZik/KDhXFxKSnaSxcbiAgYnJvdICjYTUyYTJhKGZmKToPyFcXHcpLdpLFxuICBjbJhbDogLyNmZjdmNTAoZmYpPyg/IVxcdykvZksXGgIGNvcmzaWxrOiAvIZmZjhkYyhmZik/KDhXFxKSnaSxcbiAgYJpbXNvbjogLyNkYzEMMoZmYpPyg/IVxcdykvZksXGgIGNYWICjMDBmZmZmKGZmKToPyFcXHcpfCMwZmYoZik/KDhXFxKSnaSxcbiAgZGFyaJsdWUICjMDAwMDhiKGZmKToPyFcXHcpLdpLFxuICBkYXJrYlhbjogLyMwMDhiOGIoZmYpPyg/IVxcdykvZksXGgIGRhcmtncmVOiAvIEYTlhOShmZik/KDhXFxKSnaSxcbiAgZGFyaJlZDogLyMYjAwMDAoZmYpPyg/IVxcdykvZksXGgIGRlZXBwaWrOiAvIZmMTQMyhmZik/KDhXFxKSnaSxcbiAgZGltZJleTogLyMOTYNjkoZmYpPyg/IVxcdykvZksXGgIGdvbGQICjZmZkNzAwKGZmKToPyFcXHcpLdpLFxuICBncmVlbjogLyMwMDgwMDAoZmYpPyg/IVxcdykvZksXGgIGdyZXkICjODAMDgwKGZmKToPyFcXHcpLdpLFxuICBobleWRldzogLyNmMGZmZjAoZmYpPyg/IVxcdykvZksXGgIGhvdHBpbmsICjZmYOWIKGZmKToPyFcXHcpLdpLFxuICBpbmRpZICjNGIwMDgyKGZmKToPyFcXHcpLdpLFxuICBpdmyeTogLyNmZmZmZjAoZmYpPyg/IVxcdykvZksXGgIGtoYWtpOiAvIYwZTYYyhmZik/KDhXFxKSnaSxcbiAgbGFZWkZXIICjZTZlNmZhKGZmKToPyFcXHcpLdpLFxuICBsaWlOiAvIzAwZmYwMChmZik/KDhXFxKXwjMGYwKGYpPyg/IVxcdykvZksXGgIGxpbmVuOiAvIZhZjBlNihmZik/KDhXFxKSnaSxcbiAgbWFybuOiAvIzgwMDAwMChmZik/KDhXFxKSnaSxcbiAgbWjYFzaWICjZmZlNGIKGZmKToPyFcXHcpLdpLFxuICBuYXZOiAvIzAwMDAMChmZik/KDhXFxKSnaSxcbiAgbxkbGFjZTogLyNmZGYZTYoZmYpPyg/IVxcdykvZksXGgIGsaXZlOiAvIzgwODAwMChmZik/KDhXFxKSnaSxcbiAgbJhbmdlOiAvIZmYTUwMChmZik/KDhXFxKSnaSxcbiAgbJjaGlkOiAvIRhNzBkNihmZik/KDhXFxKSnaSxcbiAgcGVydTogLyNjZDgMYoZmYpPyg/IVxcdykvZksXGgIHBpbmsICjZmZjMGNiKGZmKToPyFcXHcpLdpLFxuICBwbHVtOiAvIRkYTBkZChmZik/KDhXFxKSnaSxcbiAgcHVycGxlOiAvIzgwMDAMChmZik/KDhXFxKSnaSxcbiAgcmVkOiAvIZmMDAwMChmZik/KDhXFxKXwjZjAwKGYpPyg/IVxcdykvZksXGgIHNhbGvbjogLyNmYTgwNzIoZmYpPyg/IVxcdykvZksXGgIHNlYWdyZWVuOiAvIzJlOGINyhmZik/KDhXFxKSnaSxcbiAgcVhchlbGwICjZmZmNWVlKGZmKToPyFcXHcpLdpLFxuICBzaWVubmEICjYTAMjJkKGZmKToPyFcXHcpLdpLFxuICBzaWxZXIICjYzBjMGMwKGZmKToPyFcXHcpLdpLFxuICBzalibHVlOiAvIzgYVlYihmZik/KDhXFxKSnaSxcbiAgcvdzogLyNmZmZhZmEoZmYpPyg/IVxcdykvZksXGgIHRhbjogLyNkMmIOGMoZmYpPyg/IVxcdykvZksXGgIHRlYWwICjMDAMDgwKGZmKToPyFcXHcpLdpLFxuICBaGlzdGxlOiAvIQYmZkOChmZik/KDhXFxKSnaSxcbiAgdGtYXRvOiAvIZmNjMNyhmZik/KDhXFxKSnaSxcbiAgdmlvbGVOiAvIVlODJlZShmZik/KDhXFxKSnaSxcbiAgdhlYXQICjZjVkZWIzKGZmKToPyFcXHcpLdpLFxuICBaGlZTogLyNmZmZmZmYoZmYpPyg/IVxcdylIZmZihmKToPyFcXHcpLdpLFxufTtcbiIsICJYXIgchvcnRlckhbWVzIDgcmVxdWlyZSgnLizaGydGVyLWNzcyjbxvciuYWlcycpOxudmFyIFJFRVYIDgexuICBaGlZXNwYWNlOiAvXFxzKynLFxuICBcmxIZXhQYWlyczogLyVbXFxkQSGXXsyfSnLFxuICBxdWZXMICcIinLFxufVxuXGmdWjdGlvbiBjbxsYXBzZVdoaXRlcBhYUocRyKSBXGgIHJldHVybiBzdHIudHJpbSgpLnJlcGxhYUoUkVHRVgudhpdGVzcGFjZSwgJyAnKTtcbncblxuZnVuYRpbgZGFYVVSSVBheWxvYWQocRyaWnKSBXGgIHJldHVybiBlbmNvZGVVUklDbwblbnQocRyaWnKVxuICAgICyZXBsYWNlKFJFRVYLnVybEhleFBhaXJzLCBzcGVjaWFsSGVRWjbRlKTtcbncblxuLygYCNgIGdldHMgYudmVydGVkIHRvIGAlMjNgLCBzbyBxdWlZSBhIGZldyBDUMgbmFtZWQgYsbJzIGFyZSBzaGydGVyIHRoYWcbivIHRoZWlyIGVxdWlYWxlbnQgVVJMLWVuYkZWQgaGVIGNvZGVzLlxuZnVuYRpbgYsbJDbRlVGTaGydGVyTmFtZXMocRyaWnKSBXGgIEiamVjdCrZXlzKHNobJZXJOYWlcykuZmyRWFjaChmdWjdGlvbihrZXkpIHtcbiAgICBpZiAochvcnRlckhbWVzWtleVudGVzdChzdHJpbmcpKSBXGgICAgICBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShzaGydGVyTmFtZXNbaVXSwgaVKTtcbiAgICBXGgIHpOxuXGgIHJldHVybiBzdHJpbmcXGXGcbmZbmNaWuIHNwZWNpYWxIZXhFbmNvZGUobWFYgpIHtcbiAgcdpdGNoIChtYXRjaCkgeyAvLyBCcmcVycyBbxlcmFZSBaGVzZSBjaGFyYWNZXJzLCBhbmQgdGhleSdyZSBmcmVxdWVudFxuICAgIGNhcUgJyUyMCcIHJldHVybiAnICcXGgICAgYFzZSAnJTNEJzogcmVdXJuICcJztcbiAgICBjYXNlICclMEnOiByZXRcmgJzonOxuICAgIGNhcUgJyUyRicIHJldHVybiAnLycXGgICAgZGVmYXVsdDogcmVdXJuIGhdGNoLnRvTGZXJDYXNlKCkICvIGNvbXByZXNzZXMgYmVdGVyXGgIHcbncblxuZnVuYRpbgcZnVGUaWRGFYVVyaShzdmdTdHJpbmcpIHtcbiAgaWYgKHRcGVvZiBzdmdTdHJpbmcgITICdzdHJpbmcnKSBXGgICAgdGhybcgbmVIFRcGVFcnJvcignRXhwZWNZWQgYSBzdHJpbmcsIGJdCByZWNlaXZlZCAnICsgdHlwZWmIHNZNcmluZykXGgIHcbiAgLygURyaXAgdGhlIEJdGUtTJkZXIgTWFyayBpZiBaGUgUZHIGhhcyBvbmVcbiAgaWYgKHNZNcmluZyjaGFyQkZUFKDApIDPSAweGZlZmYpIHsgcZnURyaWnIDgcZnURyaWnLnNsaWNlKDEpIHcblxuICBYXIgYmkeSAIGNvbGyQkZVRvUhvcnRlckhbWVzKGNvbGxhcHNlVhpdGVzcGFjZShzdmdTdHJpbmcpKVxuICAgICyZXBsYWNlKFJFRVYLnFbRlcywgXCInXCIpOxuICByZXRcmgJRhdGEaWhZUvcZnKhtbCwnICsgZGFYVVSSVBheWxvYWQoYmkeSkXGXGcbnNZRvVGlueURhdGFVcmkudGTcmNzZXQgPSBmdWjdGlvbiBbNyYNldChzdmdTdHJpbmcpIHtcbiAgcmVdXJuIHNZRvVGlueURhdGFVcmkocZnURyaWnKSyZXBsYWNlKCgLcsICclMjAnKTtcbncblxubWkdWxlLmVcGydHMgPSBzdmdUbRpbnlEYXRhVXJpOxuIiwgImltcGydCBIFBsdWdpbiwgcVSWNvbiBIGZybgXCJvYnNpZGlhblwiOxuXGpbXBvcnQgYnVpbGRJYuUGxZluIGZybgXCIuLljbtaWtZWRpdGyXCIXGpbXBvcnQgdHlwZSBIFNobJYkZVBvcZpZWxkIHgZnJvbSBcIivaWNvbipbilZGlbIvcRhdGVcIjtcbmltcGydCBnZXRTaGydGNvZGVQbNGaWVsZCBmcmtIFwiLipYuLWluLWVkaXRvcizdGFZVwiOxuaWwbJIEZpbGVJYuQFjaGUgZnJvbSBcIivaWNvbiwYWNrcypYuLWNhYhlXCIXGpbXBvcnQgUGFjahbmFnZXIgZnJvbSBcIivaWNvbiwYWNrcywYWNrLWhbmFnZXJcIjtcbmltcGydCBcnlVcGRhdGVJYucyBmcmtIFwiLitbRbGVzLpzbtdGtcZnXCIXGpbXBvcnQgeyBFbWqaVNZdlcRlciBIGZybgXCIuLvZHVsZXMvcVnZVzdGVyXCIXGpbXBvcnQgeyBnZXRNRFBvcRQcmjZXNzbIsIGdldEvZGVQbNUHJvYVzcyIHgZnJvbSBcIivcGzdCwcwiOxuaWwbJIHsgcVdXBQbNUHJvYVzcycyBIGZybgXCIuLBvcQtcHNcIjtcbmltcGydCBIERFRkFVTFRfUVUVElORMsIEljbTQNldHRpbmdzLCBJYuUNTZXRaWnVGFiIHgZnJvbSBcIivcVdGluZNcIjtcbmltcGydCBIGdldEFwaSBIGZybgXCIuLRcGluZMvYXBpXCIXGpbXBvcnQgQVBJLCBIEFQSVOQUFIHgZnJvbSBcIivdHlwaWncyhcGlcIjtcblxuYucQgQVBJXBTUUIEFQSVOQUFIGVdGVuZHMgaVbYgdHlwZWmIHdpbmRvdyA/IEFQSVOQUFIDogbmVZXIgPVxuICBcIkljbTQFQSXYwXCIgYXMgYucQICvIHRoaXMgbGluZSBaWxsIHRocmIGVycmyIGlmIGhbWUgbVIGmIHNbmNcblxuZXhwbJIGRlZmFbHQgYxhcMgSWNvblNDIGVdGVuZHMgUGxZluIHtcbiAgcVdGluZMIEljbTQNldHRpbmdzIDgREVGQVVMVFTRVRUSUHUztcblxuICBwYWNrTWFuYWdlciAIGldyBQYWNrTWFuYWdlcihaGlzKTtcblxuICBfbmkZVBybNlcNvciAIGdldEvZGVQbNUHJvYVzcyKHRoaXMpOxuICBfbWRQcmjZXNzbIgPSBnZXRNRFBvcRQcmjZXNzbIodGhpcykXGcbiAgchvcnRjbRlUGzRmllbGQIFNobJYkZVBvcZpZWxkIDgZVUhvcnRjbRlUGzRmllbGQodGhpcykXGcbiAgcGzdFBybNlcNvcihpbnBdDogcRyaWnLCByZXBsYWNlcjogKHNobJYkZTogcRyaWnKSAPiBzdHJpbmcpOiBzdHJpbmcXGgIHBvcRQcmjZXNzbIoaWwdXQIEhUTUxFbGVtZWKTogdmpZDtcbiAgcGzdFBybNlcNvcihcbiAgICBpbnBdDogSFRNTEVsZWlbnQgfCBzdHJpbmcsXGgICAgcmVwbGFjZXI/OiAochvcnRjbRlOiBzdHJpbmcpID+IHNcmluZyxcbiAgKTogcRyaWnIHwgdmpZCBXGgICAgaWYgKHRcGVvZiBpbnBdCAPTgXCJzdHJpbmdcIiAmJiByZXBsYWNlcikgexuICAgICAgcmVdXJuIHRoaXMuXkUHJvYVzcyKGlucHVLCByZXBsYWNlcikXGgICAgfSBlbHNlIGlmIChpbnBdCBpbnNYWjZWmIEhUTUxFbGVtZWKSBXGgICAgICByZXRcmgdGhpcyfbmkZVBybNlcNvcihpbnBdCkXGgICAgfSBlbHNlIHtcbiAgICAgIHRocmIGldyBUeXBlRXJybIoXCJJbnZhbGlkIGFyZMgZlZWgdGgcGzdFBybNlcNvclwiKTtcbiAgICBXGgIHcblxuICBhcGkgPSBnZXRBcGkodGhpcywYWNrTWFuYWdlciwgdGhpcykXGgIGZpbGVJYuQFjaGUgPSBuZXcgRmlsZUljbDYWNoZShaGlzKTtcblxuICBhcluYyBvbmxvYWQoKSBXGgICAgYucsZSsbcoXCJsbFkaWnIEljbgUhvcnRjbRlcwiKTtcblxuICAgIGFYWlIHRoaXMubGhZFNldHRpbmdzKCkXGgICAgYXdhaXQgdHJVXBkYXRlSWNvbnModGhpcykXGgICAgYXdhaXQgdGhpcywYWNrTWFuYWdlcisbFkSWNvbnMoKTtcblxuICAgIChaWkbdbQVBJXBTUVdIDgdGhpcyhcGkpICYmXGgICAgICBaGlzLnJlZlzdGVyKCgpID+IChaWkbdbQVBJXBTUVdIDgdWkZWZpbmVkKSkXGcbiAgICBaGlzLnJlZlzdGVyRWRpdGyUVnZVzdChuZXcgRWvamlTdWdnZXNZXIodGhpcykpOxuICAgIHNldHVwUGzdFBybNlcNvcnModGhpcykXGgICAgYnVpbGRJYuUGxZluKHRoaXMpOxuXGgICAgdGhpcyhZGRTZXRaWnVGFiKGldyBJYuUNTZXRaWnVGFiKHRoaXMuYXBwLCBaGlzKSkXGgIHcblxuICAvLyBvbnVubGhZCgpIHtcbiAgLygICBjbzbxlLmxvZyhcInVubGhZGluZyBJYuIFNobJYkZXNcIikXGgICvIHcblxuICBhcluYyBsbFkUVdGluZMoKSBXGgICAgbGVIGxvYWRlZCAIChhdFpdCBaGlzLmxvYWREYXRhKCkpIGFzIEljbTQNldHRpbmdzIHwgdWkZWZpbmVkOxuICAgIGlmIChsbFkZWQpIHtcbiAgICAgIGlmICgobGhZGVkIGFzIGFueSkuaWNvbnBhYspIHtcbiAgICAgICAgZGVsZXRlIChsbFkZWQgYXMgYWKVtcImljbwYWNrXCJdOxuICAgICAgfVxuICAgICAgdGhpcyzZXRaWncyAIHtcbiAgICAgICAgLiudGhpcyzZXRaWncyxcbiAgICAgICAgLiubGhZGVkLFxuICAgICAgICBkaXNhYmxlZFBhYtzOiBsbFkZWQuZGlzYWJsZWRQYWNrcxuICAgICAgICAgIDgbmVIFNldChsbFkZWQuZGlzYWJsZWRQYWNrcylcbiAgICAgICAgICAIHRoaXMucVdGluZMuZGlzYWJsZWRQYWNrcyxcbiAgICAgIHXGgICAgfVxuICBXGcbiAgYXNbmMgcFZVNldHRpbmdzKCkgexuICAgIGFYWlIHRoaXMucFZURhdGEoexuICAgICAgLiudGhpcyzZXRaWncyxcbiAgICAgIGRpcFibGVkUGFjaMIFsuLiaGlzLnNldHRpbmdzLmRpcFibGVkUGFjaNdLFxuICAgIHpOxuICBXGXGiLCAiaWwbJIHtcbiAgRGVjbJhdGlvbixcbiAgRGVjbJhdGlvblNldCxcbiAgRWRpdGyVmlldyxcbiAgVmlldBsdWdpbixcbiAgVmlldVwZGFZSxcbngZnJvbSBcIkBjbRlbWlycmyLZpZXdcIjtcbmltcGydCBIGVkaXRvckxpdmVQcmVaWVRmllbGQgfSBmcmtIFwibJzaWRpYWcIjtcblxuaWwbJIHRcGUgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIGljbzIGZybgXCIuLRlYcIjtcbmltcGydCBnZXRNZWIGZybgXCIuLdldCtZWXCIXGcbmludGVyZmFjZSBJYuUGxZluIHtcbiAgYucRydWNbIodmlldzogRWRpdGyVmlldykIEljbQbHVnaWXGgIHVwZGFZShcGRhdGUIFZpZXdVcGRhdGUpOiBblkOxufVxuXGjbzdCBnZXRJYuTGlZVByZXZpZXdQbHVnaWgPSAocGxZluOiBJYuUMpOiBWaWVUGxZluPEljbQbHVnaW+ID+IHtcbiAgYxhcMgSWNvblBsdWdpbiBXGgICAgZGVjbJhdGlvbnMIERlYyYXRpbTZXQXGgICAgcGxZluOiBJYuUMXGcbiAgICBjbzdHJYRvcihaWVOiBFZGlbJWaWVKSBXGgICAgICBaGlzLnBsdWdpbiAIHBsdWdpbjtcbiAgICAgIHRoaXMuZGVjbJhdGlvbnMgPSBpYucyhaWVLCBaGlzLnBsdWdpbikXGgICAgfVxuXGgICAgdXBkYXRlKHVwZGFZTogVmlldVwZGFZSkgexuICAgICAgYucQgcHJldkvZGUgPSBcGRhdGUucRhcnRTdGFZSmaWVsZChlZGlbJMaXZlUHJldmlldZpZWxkKSxcbiAgICAgICAgYVyckvZGUgPSBcGRhdGUucRhdGUuZmllbGQoZWRpdGyTGlZVByZXZpZXdGaWVsZCkXGgICAgICBpZiAoXGgICAgICAgIHVwZGFZSkbNDaGFuZVkIHxXGgICAgICAgIHVwZGFZSaWVcGydENoYWnZWQgfHxcbiAgICAgICAgcHJldkvZGUgITIGNcnJNbRlXGgICAgICApIHtcbiAgICAgICAgdGhpcykZWNvcmFaWucyAIGljbzKHVwZGFZSaWVLCBwbHVnaWpOxuICAgICAgfVxuICAgIHcbiAgfVxuXGgIHJldHVybiBWaWVUGxZluLmZybDbGFzcyhJYuUGxZluLCBXGgICAgZXZlbnRIYWkbGVyczogexuICAgICAgbWcVkbduOiBJYuQxpYtIYWkbGVyLFxuICAgIHsXGgICAgZGVjbJhdGlvbnMIChKSAPiBLmRlYyYXRpbzLFxuICAgIHBybZpZGUIChwbHVnaWpID+XGgICAgICBFZGlbJWaWVLmFbpYJhbmdlcyvZigodmlldykgPTgexuICAgICAgICBsZXQgdmFsdWUgPSBaWVLnBsdWdpbihwbHVnaWpOxuICAgICAgICByZXRcmgdmFsdWUgPyBYWxZSkZWNvcmFaWucyAIERlYyYXRpbubmuZTtcbiAgICAgIHpLFxuICBKTtcbiAgLyogZXNsaWLWRpcFibGUgcHJlZmVyLWFycmLByZWZlcihcnJvdymdWjdGlvbnMgKicbiAgZnVuYRpbgSWNvbkNsaWNrSGFuZGxlcihcbiAgICBaGlzOiBJYuUGxZluLFxuICAgIGVdDogTWcVFdmVudCxcbiAgICBaWVOiBFZGlbJWaWVLFxuICApIHtcbiAgICBsZXQgdGFyZVIDgZXZLnRhcmdldCBhcyBIVEMRWxlbWVudDtcbiAgICBpZiAodGFyZVLmhdGNoUGFyZWKFwiLmNtLWlzYypYuXCIsIHZpZXcuYudGVudERPTSkpIHtcbiAgICAgIGNvbnNIGVsRnJvbSAIHZpZXcucGzQXRETodGFyZVKTtcbiAgICAgIGxldCBhbmNobIIGbWJlciAICxLFxuICAgICAgICBoZWFkOiBudWiZXIgPSAtMTtcbiAgICAgIHRoaXMuZGVjbJhdGlvbnMuYmVdVlbihlbEZybgLSAxLCBlbEZybgKyAxLCAoZnJvbSwgdGsIHZhbHVlKSAPiBXGgICAgICAgIGlmIChlbEZybgPjgZnJvbSAmJiBlbEZybgPDgdGpIHtcbiAgICAgICAgICBpZiAoZnJvbSAPTgdGpIHtcbiAgICAgICAgICAgIGFuYhvciAIHZhbHVlLnNwZWMuZnJvbTtcbiAgICAgICAgICAgIGhlYWQgPSBYWxZSzcGVjLnRvOxuICAgICAgICAgIHgZWxzZSAoYWjaGyIDgZnJvbSksIChoZWFkIDgdGpOxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfSkXGgICAgICBpZiAoYWjaGyIDwgMCBfCBoZWFkIDwgMCkgexuICAgICAgICBjbzbxlLmVycmyKFwibmgcmFuZUgZmbmQgZmyXCIsIHRhcmdldCkXGgICAgICAgIHJldHVybjtcbiAgICAgIHcbiAgICAgIHdhaXQoMCkudGhlbigoKSAPiBaWVLmRpcBhdGNoKHsgcVsZWNaWuOiBIGFuYhvciwgaGVhZCBIHpKTtcbiAgICAgIGlmIChldnQuYnVdGuIDPSAwIHxIGVdCidXRbgPTIDEpIHtcbiAgICAgICAgYucQgbWVudSAIGdldElbnUoYWjaGyLCBoZWFkLCBwbHVnaWsIHZpZXcpOxuICAgICAgICBYWlKDIwMCkudGhlbigoKSAPiBtZWLnNobdBdEvdXNlRXZlbnQoZXZKSkXGgICAgICBXGgICAgfVxuICBXGOxuXGjbzdCBYWlIDgKGzOiBudWiZXIpID+IGldyBQcmtaXNlKChyZXNvbHZlKSAPiBzZXRUaWlbVKHJlcsdmUsIGzKSkXGleHBvcnQgZGVmYXVsdCBnZXRJYuTGlZVByZXZpZXdQbHVnaWXGiLCAiaWwbJIHRcGUgeyBFZGlbJWaWVIHgZnJvbSBcIkBjbRlbWlycmyLZpZXdcIjtcbmltcGydCBIERlYyYXRpbgfSBmcmtIFwiQGNvZGVtaXJybIvdmlldwiOxuaWwbJIHsgZWRpdGyTGlZVByZXZpZXdGaWVsZCBIGZybgXCJvYnNpZGlhblwiOxuXGpbXBvcnQgdHlwZSBJYuUMgZnJvbSBcIiuLlzYytYWluXCIXGpbXBvcnQgSWNvbldpZGdldCBmcmtIFwiLiaWRnZXRcIjtcblxuYucQgaWNvbnMgPSAodmlldzogRWRpdGyVmlldywgcGxZluOiBJYuUMpID+IHtcbiAgbGVIHJhbmdlczogWljbJZDogcRyaWnLCBmcmtOiBudWiZXIsIHRvOiBudWiZXJdWgPSBbXTtcbiAgYucQgUNJbmZvIDgdmlldyzdGFZSmaWVsZChwbHVnaWuchvcnRjbRlUGzRmllbGQpOxuICBmbIgKGxldCBIGZybsIHRvIHgbYgdmlldyaXNpYmxlUmFuZVzKSBXGgICAgUNJbmZvLmJldHdlZWoZnJvbSwgdGsIChmcmtLCBbywgeyBpYuSWQgfSkgPTgexuICAgICAgcmFuZVzLnBcgoWljbJZCwgZnJvbSwgdGdKTtcbiAgICBKTtcbiAgfVxuICByZXRcmgRGVjbJhdGlvbizZXQoXGgICAgcmFuZVzLmhcCgoWljbJZCwgZnJvbSwgdGdKSAPiBXGgICAgICBjbzdCBaWRnZXQgPSBuZXcgSWNvbldpZGdldChpYuSWQsIHBsdWdpbikXGgICAgICBjbzdCBzcGVjIDgeyBaWRnZXQsIHNpZGUICxLCBmcmtLCBbyBOxuICAgICAgaWYgKHZpZXcucRhdGUuZmllbGQoZWRpdGyTGlZVByZXZpZXdGaWVsZCkpIHtcbiAgICAgICAgcmVdXJuIERlYyYXRpbucmVwbGFjZShzcGVjKSyYWnZShmcmtLCBbykXGgICAgICBIGVscUgexuICAgICAgICByZXRcmgRGVjbJhdGlvbiaWRnZXQocBlYykucmFuZUodGpOxuICAgICAgfVxuICAgIHpLFxuICAgIHRydWUsXGgICkXGOxuXGleHBvcnQgZGVmYXVsdCBpYucztcbiIsICJpbXBvcnQgdHlwZSBIEVkaXRvclZpZXcgfSBmcmtIFwiQGNvZGVtaXJybIvdmlldwiOxuaWwbJIHsgVlkZVVHlwZSBIGZybgXCJAYkZWpcnJvciaWVXCIXGpbXBvcnQgYxzIGZybgXCJjbGFzchbWVzXCIXGcbmltcGydCBeXBlIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcbmVcGydCBkZWZhdWxIGNsYXNzIEljbXaWRnZXQgZXhZWkcyBXaWRnZXRUeXBlIHtcbiAgYucRydWNbIocHVibGljIGlkOiBzdHJpbmcsIHBYmxpYyBwbHVnaWIEljbTQykgexuICAgIHNcGVyKCkXGgIHcblxuICBlcShvdGhlcjogSWNvbldpZGdldCkgexuICAgIHJldHVybiBvdGhlciBpbnNYWjZWmIEljbXaWRnZXQgJiYgbRoZXIuaWQgPTIHRoaXMuaWQXGgIHcblxuICBbRPTShaWVOiBFZGlbJWaWVKSBXGgICAgbGVIHdyYXAgPSBjcmVhdGVTcGFuKHtcbiAgICAgIGNsczogXCJjbSpcMtaWNvblwiLFxuICAgICAgYXRcjogeyBcImFyaWEtbGFiZWxcIjogdGhpcypZCyZXBsYWNlKCfLcsIFwiIFwiKSBLFxuICAgIHpOxuXGgICAgdGhpcywbHVnaWucGFjahbmFnZXIuZVUZHSWNvbihaGlzLmlkKSaGVuKChzcGFuKSAPiBXGgICAgICBpZiAoIXNwYWpIHtcbiAgICAgICAgdJhcChcHBlbmQoYDokeRoaXMuaWROmApOxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcBhbijbGFzcxpcQuZmyRWFjaCgoYxzKSAPiBcmFwLmFkZENsYXNzKGNscykpOxuICAgICAgICBcmFwLnJlcGxhYVDaGlsZHJlbiguLizcGFuLmNoaWxkTmkZXMpOxuICAgICAgfVxuICAgIHpOxuICAgIHJldHVybiBcmFwOxuICBXGcbiAgaWdubJlRXZlbnQoKSBXGgICAgcmVdXJuIGZhbHNlOxuICBXGXGiLCAiaWwbJIHsgRWRpdGyVmlldyBIGZybgXCJAYkZWpcnJvciaWVXCIXGpbXBvcnQgeyBNZWIHgZnJvbSBcImiclkaWFuXCIXGcbmltcGydCBJYuUMgZnJvbSBcIiuLlzYytYWluXCIXGcbmNvbnNIGdldElbnUgPSAoXGgIHNYXJOiBudWiZXIsXGgIGVuZDogbnVtYmVyLFxuICBwbHVnaWIEljbTQyxcbiAgdmlldzogRWRpdGyVmlldyxcbikgPTgexuICByZXRcmgbmVIElbnUoKVxuICAgIChZGRJdGVtKChpdGVtKSAPlxuICAgICAgaXRlbVxuICAgICAgICAucVSWNvbihcImltYWdlLWdseXBoXCIpXGgICAgICAgICzZXRUaXRsZShcIkNoYWnZSBJYuXCIpXGgICAgICAgICvbkNsaWNrKGFzeWjICgpID+IHtcbiAgICAgICAgICBjbzdCBpYuIDgYXdhaXQgcGxZluLmFwaSnZXRJYuRnJvbVVzZXIoKTtcbiAgICAgICAgICBpZiAoIWljbpIHJldHVybjtcbiAgICAgICAgICBaWVLmRpcBhdGNoKHtcbiAgICAgICAgICAgIGNoYWnZXMIHsgZnJvbTogcRhcnQsIHRvOiBlbmQsIGlucVydDogYDokeljbuaWROmAgfSxcbiAgICAgICAgICBKTtcbiAgICAgICAgfSksXGgICAgKVxuICAgIChZGRJdGVtKChpdGVtKSAPlxuICAgICAgaXRlbVxuICAgICAgICAucVSWNvbihcInRyYXNoXCIpXGgICAgICAgICzZXRUaXRsZShcIkRlbGVZSBJYuXCIpXGgICAgICAgICvbkNsaWNrKCgpID+IHtcbiAgICAgICAgICBaWVLmRpcBhdGNoKHtcbiAgICAgICAgICAgIGNoYWnZXMIHsgZnJvbTogcRhcnQsIHRvOiBlbmQsIGlucVydDogXCJcIiBLFxuICAgICAgICAgIHpOxuICAgICAgICBKSxcbiAgICApOxufTtcbmVcGydCBkZWZhdWxIGdldElbnUXGiLCAiaWwbJIHRcGUgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIGdldEljbMaXZlUHJldmlldBsdWdpbiBmcmtIFwiLiaWVLXBsdWdpblwiOxuXGjbzdCBzZXRcEljbQbHVnaWgPSAocGxZluOiBJYuUMpID+IHtcbiAgcGxZluLnJlZlzdGVyRWRpdGyRXhZWzaWuKFtcbiAgICBwbHVnaWuchvcnRjbRlUGzRmllbGQsXGgICAgZVSWNvbkxpdmVQcmVaWVUGxZluKHBsdWdpbiksXGgIFpOxufTtcblxuZXhwbJIGRlZmFbHQgcVdXBJYuUGxZluOxuIiwgImltcGydCBIHNbnRheFRyZWUgfSBmcmtIFwiQGNvZGVtaXJybIvbGFuZVhZVcIjtcbmltcGydCBIHRvaVuQxhcNObRlUHJvcCBIGZybgXCJAYkZWpcnJvcisYWndWFnZVwiOxuaWwbJIHtcbiAgUmFuZUsXGgIFJhbmdlUVLFxuICBSYWnZVNldEJaWxkZXIsXGgIFJhbmdlVmFsdWUsXGIGZybgXCJAYkZWpcnJvcizdGFZVwiOxuaWwbJIHsgRWRpdGyURhdGUsIFNYXRlRmllbGQgfSBmcmtIFwiQGNvZGVtaXJybIvcRhdGVcIjtcbmltcGydCBeXBlIHsgTmkZVRcGUgfSBmcmtIFwiQGxlemVyLNvbWvblwiOxuXGpbXBvcnQgexuICBnZXRHbGiYWxSZWdleHAsXGgIFJFXNITJUQERSxcbiAgcRyaXBDbxvbnMsXGIGZybgXCIuLipYuLXBhYtzLVaWxzXCIXGpbXBvcnQgdHlwZSBJYuUMgZnJvbSBcIiuLlzYytYWluXCIXGpbXBvcnQgVWpbSYWnZXMgZnJvbSBcIiuLvZHVsZXMvdWpbcIjtcblxuYxhcMgUhvcnRjbRlUGzIGVdGVuZHMgUmFuZVWYWxZSBXGgIGNvbnNcnVjdGyKHBYmxpYyBZXhOiBzdHJpbmcpIHtcbiAgICBzdXBlcigpOxuICBXGgIGdldCBpYuSWQoKTogcRyaWnIHtcbiAgICByZXRcmgcRyaXBDbxvbnModGhpcyZXhKTtcbiAgfVxuICBlcShvdGhlcjogUmFuZVWYWxZSkIGJvbxlYWgexuICAgIHJldHVybiBvdGhlciBpbnNYWjZWmIFNobJYkZVBvcyAmJiBvdGhlciZXhIDPSBaGlzLnRleHQXGgIHcbncblxuYucQgYWxsbdlZFRcGVzIDgWxuICBcImxpbmstYWxpYXNcIixcbiAgXCJjbtZWXCIsXGgIFwiaGVhZGVyXCIsXGgIFwicRybnXCIsXGgIFwiZWcIixcbiAgXCJzdHJpaVaHJvdWdoXCIsXGgIFwicXVvdGVcIixcbiAgXCJsaWrXCIsXGgIFwibGlzdCxXCIsXGgIFwibGlzdCyXCIsXGgIFwibGlzdCzXCIsXGgIFwiaGlnaGxpZhXCIsXGgIFwiaGkLWZvbRyZWYyXCIsXGgIFwiZmvdHJlZlwiLFxuXTtcbmNvbnNIGVYxZGVUeXBlcyAIFtcImZvcmhdHRpbmdcIiwgXCJjbtZWLXNYXJXCIsIFwiYtbWVudClbmRcIlXGjbzdCBzaGbGRObRlSGFZUljbgPSAodHlwZTogTmkZVRcGUpID+IHtcbiAgYucQgbmkZVBybBzIDgdHlwZSwcmwKHRvaVuQxhcNObRlUHJvcCkXGgIGlmICghbmkZVBybBzKSByZXRcmgZmFscUXGgIGNvbnNIHBybBzIDgbmVIFNldChubRlUHJvcHM/LnNwbGlKFwiIFwiKSkXGgIHJldHVybiAoXGgICAgZXhjbHVkZVRcGVzLmVZXJKChKSAPiAhcHJvcHMuaGFzKHQpKSAmJlxuICAgIGFsbGZWRUeXBlcyzblKChKSAPiBwcmwcyoYXModCkpXGgICkXGOxuXGjbzdCBnZXRTaGydGNvZGVQbNGaWVsZCAIChwbHVnaWIEljbTQykgPTgexuICBjbzdCBnZXRTaGydGNvZGVSYWnZXMgPSAoXGgICAgcRhdGUIEVkaXRvclNYXRlLFxuICAgIGZybIGbWJlcixcbiAgICBbzogbnVtYmVyLFxuICAgIGFkZFRvUmFuZVBcnIIChmcmtOiBudWiZXIsIHRvOiBudWiZXIsIHZhbHVlOiBTaGydGNvZGVQbMpID+IHZvaWQsXGgICkgPTgexuICAgIGNvbnNIHNhdmVSYWnZSAIChmcmtOiBudWiZXIsIHRvOiBudWiZXIpOiBblkID+IHtcbiAgICAgIGNvbnNIHRleHQgPSBzdGFZSkbMucxpYVTdHJpbmcoZnJvbSwgdGpOxuICAgICAgaWYgKCFZXhLnRyaWoKSkgcmVdXJuOxuICAgICAgZmyIChjbzdCBIDAIHJhdNvZGUsIGluZGVOiBvZmZzZXQgfSBvZiBZXhLmhdGNoQWxsKFxuICAgICAgICBnZXRHbGiYWxSZWdleHAoUkVfUhPUlRDTRFKSxcbiAgICAgICkpIHtcbiAgICAgICAgaWYgKHBsdWdpbiwYWNrTWFuYWdlcioYXNJYuKHNcmlwQsbzKHJhdNvZGUpKSkgexuICAgICAgICAgIGFkZFRvUmFuZVBcnIoXGgICAgICAgICAgICBmcmtICsgbZmcVISxcbiAgICAgICAgICAgIGZybgKyBvZmZzZXQhICsgcmFQkZSsZWndGgsXGgICAgICAgICAgICBuZXcgUhvcnRjbRlUGzKHJhdNvZGUpLFxuICAgICAgICAgICkXGgICAgICAgIHcbiAgICAgIHcbiAgICBOxuICAgIGxldCBwcmVVGgPSBmcmtOxuICAgIHNbnRheFRyZWUocRhdGUpLmlZXJhdGUoexuICAgICAgZnJvbTogZnJvbSAtIDEsXGgICAgICBbzogdGgKyAxLFxuICAgICAgZWZXIIChIHRcGUsIGZybsIHRvIHpID+IHtcbiAgICAgICAgaWYgKHRcGUubmFtZSAPTgXCJEbNbWVudFwiKSByZXRcmXGgICAgICAgIGlmIChmcmtICEPSBwcmVVGpIHNhdmVSYWnZShwcmVVGsIGZybpOxuICAgICAgICBwcmVVGgPSBbztcbiAgICAgICAgaWYgKHNobVsZEvZGVIYXZlSWNvbiheXBlKSkgexuICAgICAgICAgIHNhdmVSYWnZShmcmtLCBbykXGgICAgICAgIHcbiAgICAgIHsXGgICAgfSkXGgICAgaWYgKHByZXZUbyAhPTgdGpIHNhdmVSYWnZShwcmVVGsIHRvKTtcbiAgfTtcbiAgcmVdXJuIFNYXRlRmllbGQuZGVmaWlPFJhbmdlUVPFNobJYkZVBvcz+KHtcbiAgICBjcmVhdGUIChzdGFZSkgPTgexuICAgICAgbGVIHJhbmdlcVIDgbmVIFJhbmdlUVQnVpbGRlcjxTaGydGNvZGVQbM+KCkXGgICAgICBnZXRTaGydGNvZGVSYWnZXMoXGgICAgICAgIHNYXRlLFxuICAgICAgICAwLFxuICAgICAgICBzdGFZSkbMubGVuZRoLFxuICAgICAgICByYWnZXNldChZGQuYmluZChyYWnZXNldCksXGgICAgICApOxuICAgICAgcmVdXJuIHJhbmdlcVLmZpbmlzaCgpOxuICAgIHsXGgICAgdXBkYXRlOiAocmFuZVzZXQsIHRyKSAPiBXGgICAgICBpZiAoIXRyLmRvYNoYWnZWQpIHJldHVybiByYWnZXNldDtcbiAgICAgIHJhbmdlcVIDgcmFuZVzZXQubWFwKHRyLmNoYWnZXMpOxuICAgICAgbGVIGNoYWnZWRMaWlczogWxpbmVTdGFydDogbnVtYmVyLCBsaWlRWkOiBudWiZXJdWgPSBbXTtcbiAgICAgIHRyLmNoYWnZXMuaXRlckNoYWnZWRSYWnZXMoKFmLCBfdCwgZnJvbSwgdGpID+IHtcbiAgICAgICAgLygbGluZXMgdGhhdCBoYXZlIGNoYWnZWRcbiAgICAgICAgYhhbmdlZExpbmVzLnBcgoWxuICAgICAgICAgIHRyLnNYXRlLmRvYysaWlQXQoZnJvbSkubnVtYmVyLFxuICAgICAgICAgIHRyLnNYXRlLmRvYysaWlQXQodGpLmbWJlcixcbiAgICAgICAgXSkXGgICAgICBKTtcbiAgICAgIGxldCBuZXdTaGydGNvZGVSYWnZXMIFJhbmdlPFNobJYkZVBvczbXSAIFtdOxuICAgICAgZmyIChjbzdCBbcRhcnQsIGVuZFgbYgVWpbSYWnZXMoYhhbmdlZExpbmVzKSkgexuICAgICAgICBjbzdCBIGZybgfSAIHRyLnNYXRlLmRvYysaWlKHNYXJKSxcbiAgICAgICAgICBIHRvIHgPSBcizdGFZSkbMubGluZShlbmQpOxuICAgICAgICAvLyBmaWxZXIgbVIHNobJYkZSBwbMgaWgYVycmVudCBsaWlIHJhbmdlXGgICAgICAgIHJhbmdlcVIDgcmFuZVzZXQudXBkYXRlKHtcbiAgICAgICAgICBmaWxZXJGcmtOiBmcmtLFxuICAgICAgICAgIGZpbHRlclRvOiBbyxcbiAgICAgICAgICBmaWxZXIICgpID+IGZhbHNlLFxuICAgICAgICBKTtcbiAgICAgICAgLygcmVjbwdXRlIHNobJYkZSBwbMgaWgYVycmVudCBsaWlIHJhbmdlXGgICAgICAgIGdldFNobJYkZVJhbmdlcyhcizdGFZSwgZnJvbSwgdGsIChmcmtLCBbywgdmFsdWUpID+IHtcbiAgICAgICAgICBuZXdTaGydGNvZGVSYWnZXMucHVzaChYWxZSyYWnZShmcmtLCBbykpOxuICAgICAgICBKTtcbiAgICAgIHcbiAgICAgIHJhbmdlcVIDgcmFuZVzZXQudXBkYXRlKHsgYWRkOiBuZXdTaGydGNvZGVSYWnZXMgfSkXGgICAgICByZXRcmgcmFuZVzZXQXGgICAgfSxcbiAgfSkXGOxuZXhwbJIHRcGUgUhvcnRjbRlUGzRmllbGQgPSBTdGFZUZpZWxkPFJhbmdlUVPFNobJYkZVBvcz+OxuXGleHBvcnQgZGVmYXVsdCBnZXRTaGydGNvZGVQbNGaWVsZDtcbiIsICJpbXBvcnQgeyBleHRlbnNpbsIGxvbtcCBIGZybgXCJtaWlLXRcGVzXCIXGpbXBvcnQgZWvamkgZnJvbSBcImvZGUtZWvamlcIjtcbmltcGydCBIGVdGhbWUgfSBmcmtIFwicGFaFwiOxuXGpbXBvcnQgeyBGaWxlSWNvbkluZmsIEljbJbmZvIHgZnJvbSBcIivdHlwZXNcIjtcblxuZXhwbJIHRcGUgRWcmllcZybSZWNvcmQVDgPSBbaVOiBrZXlvZiBULCBYWxZTogVFtrZXlvZiBUXVbXTtcblxuZXhwbJIGNvbnNIEianRvRWcmllcyAIDxUIGVdGVuZHMgTJqZWNPihvYmoIFQpID+XGgIEiamVjdClbnRyaWVzKGiaikgYXMgRWcmllcZybSZWNvcmQVDXGcbiqKlxuICogUmVtbZlcyBjbxvbnMgbgZWlaGVyIHNpZGVcbiAqIGmIHRoZSBzdHJpbmcgaWYgcHJlcVudFxuICogQHBhcmFtICBcRyaWnfSBzdHJcbiAqIEByZXRcmgeNcmluZcbiAqLxuXGleHBvcnQgYucQgcRyaXBDbxvbnMgPSAocRyOiBzdHJpbmcpOiBzdHJpbmcgPTgexuICBYXIgYsbJbmRleCAIHNcipbmRleEmKFwiOlwiKTtcbiAgaWYgKGNvbGuSWkZXggPiAtMSkgexuICAgICvIDplbWqaTogKGhdHALydcuZWvamktYhlYXQtchlZXQuYtLylcbiAgICBpZiAoYsbJbmRleCAPTgcRyLmxlbmdaCAtIDEpIHtcbiAgICAgIHNciAIHNcizdWJzdHJpbmcoMCwgYsbJbmRleCkXGgICAgICByZXRcmgcRyaXBDbxvbnMocRyKTtcbiAgICBIGVscUgexuICAgICAgcRyIDgcRyLnNYnNcmluZyhjbxvbkluZGVICsgMSkXGgICAgICByZXRcmgcRyaXBDbxvbnMocRyKTtcbiAgICBXGgIHcblxuICByZXRcmgcRyOxufTtcblxuZXhwbJIGNvbnNIFBhYtQcmVmaXhQYXRZXJuIDgLoWEtWmEtejAtOVrPylfLztcblxuZXhwbJIGNvbnNIGdldFBhYtuTmFtZUZybJZCAIChcbiAgaWQIHNcmluZyxcbikIHsgcGFjazogcRyaWnOyBuYWlOiBzdHJpbmcgfSBIGbGwgPTgexuICBpZiAoZWvamkuaGFzRWvamkoaWQpKSByZXRcmgeyBwYWNrOiBcImVtbppXCIsIGhbWUIGlkIHXGgIGNvbnNIGhdGNoIDgaWQubWFYgoUGFjaByZWZpeFBhdHRlcmpOxuICBpZiAoIWhdGNoKSBXGgICAgYucsZSlcnJvcihcIkvIHZhaWxkIHBhYsgaWQgZmbmQgaWIFwiLCBpZCkXGgICAgcmVdXJuIGbGwXGgIHcbiAgYucQgWNciwgcGFjahbWVdIDgbWFYgXGgIHJldHVybiBIHBhYsIHBhYtuYWlLCBuYWlOiBpZCzdWJzdHJpbmcocRyLmxlbmdaCkgfTtcbnXGcbmVcGydCBjbzdCBzYWpdGlZUlkIDgKGlkOiBzdHJpbmcpOiBzdHJpbmcgfCBudWxsID+IHtcbiAgYucQgcmVzdWxIDgZVUGFjaOYWlRnJvbUlkKGlkKTtcbiAgaWYgKCFyZXNbHQpIHtcbiAgICBjbzbxlLmxvZyhcImZhaWxlZCBbyByZWhbWUgaWNvbjogaWQgJXMgaWYWxpZFwiLCBpZCkXGgICAgcmVdXJuIGbGwXGgIHcbiAgcmVdXJuIGAkeJlcVsdCwYWNrfVkeNhbmlaXplTmFtZShyZXNbHQubmFtZSlYDtcbnXGleHBvcnQgYucQgcFuaXRpemVOYWlIDgKGhbWUIHNcmluZykIHNcmluZyAPlxuICBuYWlLnRyaWoKSyZXBsYWNlKCbICdKynLCBcIlcIikucmVwbGFjZSgvXFxzKynLCBcIlwiKSbxvYFsZUxvdVyQFzZSgpOxuXGleHBvcnQgYucQgUVwcGydGVkSWNvbkVdCAIFtcbiAgXCIuYmwXCIsXGgIFwiLnBuZwiLFxuICBcIiqcGdcIixcbiAgXCIuanBlZwiLFxuICBcIinaWZcIixcbiAgXCIucZnXCIsXGgIFwiLndlYnBcIixcblgYXMgYucQXGleHBvcnQgYucQgaWNvbkZpbGVQYXRZXJuIDgLbXFxLVrXFwuKDYmwfHBuZxqcGdanBlZxnaWZcZnfHdlYnApJCXGleHBvcnQgYucQgZXhUGFdGVybiAICcXCoPzpibXBcGnfGpwZxqcGVnfGdpZnxzdmddVicCkkLztcbmNvbnNIGpbWVzIDgUVwcGydGVkSWNvbkVdCtYXAoKGVdCkgPTgbGvaVwKGVdCkpOxuZXhwbJIGNvbnNIGdldEljbzRnJvbUZpbGVMaXNIDgYXNbmMgKFxuICBsaXNOiBGaWxlTGlzdCBIGbGwgfCBbmRlZmluZWQsXGpOiBQcmtaXNlPHsgbmFtZTogcRyaWnOyBleHQIHNcmluZzsgZGFYTogQXJyYXlCdWZmZXIgfVtdIHwgbnVsbDgPTgexuICBpZiAoIWxpcQgfHwgbGlzdCsZWndGggPDgMCkgcmVdXJuIGbGwXGgIGNvbnNIGdldEljbgPSBhcluYyAoZmlsZTogRmlsZSkgPTgKHtcbiAgICBuYWlOiBmaWxlLmhbWUucmVwbGFjZShleHRQYXRZXJuLCBcIlwiKSxcbiAgICBleHQIFwiLlwiICsgKGVdGVuclvbihmaWxlLnRcGUpIGFzIHNcmluZyksXGgICAgZGFYTogYXdhaXQgZmlsZShcnJheUJZmZlcigpLFxuICBKTtcbiAgbGVIHBybpcVzIDgWgYXMgUmVdXJuVHlwZTxeXBlbYgZVSWNvbjbXTtcbiAgZmyIChsZXQgaSAIDAIGkgPCBsaXNLmxlbmdaDsgaSsrKSBXGgICAgYucQgZmlsZSAIGxpcRbaVXGgICAgaWYgKGpbWVzLmluYxZGVzKGZpbGUudHlwZSkpIHtcbiAgICAgIHBybpcVzLnBcgoZVSWNvbihmaWxlKSkXGgICAgfVxuICBXGgIGNvbnNIHJlcVsdCAIGFYWlIFBybpcUuYWxsKHBybpcVzKTtcbiAgcmVdXJuIHJlcVsdCsZWndGggPiAwIDgcmVzdWxIDogbnVsbDtcbnXGcbmltcGydCBjbGFzchbWVzIGZybgXCJjbGFzchbWVzXCIXGpbXBvcnQgYxvbmVSZWdleHAgZnJvbSBcImNsblLXJlZVcFwiOxuXGpbXBvcnQgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuXGleHBvcnQgYucQgUkVfUhPUlRDTRFIDgLzpcXCsxOnwLTEfDpbXFxLVrOiXGleHBvcnQgYucQgZVRxvYmFsUmVnZXhwIDgKHBhdHRlcmIFJlZVcCkgPTcbiAgYxvbmVSZWdleHAocGFdGVybiwgeyBnbGiYWwIHRydWUgfSkXGcbmVcGydCBjbzdCBnZXRDbHNGbJJYuIDgKGljbIEljbJbmZvKSAPlxuICBjbGFzchbWVzKFtcImlzYypYuXCIsIGBpcMtJHtpYuLnBhYtYFpOxuIiwgImNvbnNIHtbNcmluZgPSBPYmplYQucHJvdGeXBlOxuXGleHBvcnQgZGVmYXVsdCBmdWjdGlvbiBpcJlZVcChYWxZSkgexuXHRyZXRcmgdGTdHJpbmcuYFsbChYWxZSkgPTICdbbJqZWNIFJlZVcFnOxufVxuIiwgImltcGydCBpcJlZVcCBmcmtICdpcyyZWdleHAnOxuXGjbzdCBmbGFnTWFwIDgexuXHRnbGiYWwICdnJyxcblxaWdubJlQFzZTogJknLFxuXHRtdWxaWxpbmUICdtJyxcblxZGQWxsOiAncycsXGcdHNaWNreTogJknLFxuXHRbmljbRlOiAndSdcbnXGcbmVcGydCBkZWZhdWxIGZbmNaWuIGNsblZFJlZVcChyZWdleHAsIGwdGlvbnMgPSBfSkgexuXHRpZiAoIWlzUmVnZXhwKHJlZVcCkpIHtcblxXHRaHJvdyBuZXcgVHlwZUVycmyKCdFeHBlYRlZCBhIFJlZVcCBpbnNYWjZScpOxuXHRXGcblxYucQgZmxhZMgPSBPYmplYQuaVcyhmbGFnTWFwKStYXAoZmxhZyAPiAoXGcdFxKHRcGVvZiBvcHRpbzWZsYWddIDPSAnYmvbGVhbicgPyBvcHRpbzWZsYWddIDogcmVnZXhwWZsYWddKSA/IGZsYWdNYXBbZmxhZgOiAnJxuXHQpKSqbluKCcnKTtcblxuXHRjbzdCBjbGuZWRSZWdleHAgPSBuZXcgUmVnRXhwKGwdGlvbnMuccmNlIHxIHJlZVcCzbVyYUsIGZsYWdzKTtcblxuXHRjbGuZWRSZWdleHAubGFzdEluZGVIDgdHlwZWmIGwdGlvbnMubGFzdEluZGVIDPSAnbnVtYmVyJyA/XGcdFxbBaWucysYXNSWkZXggOlxuXHRcdHJlZVcCsYXNSWkZXgXGcblxcmVdXJuIGNsblZFJlZVcDtcbncbiIsICJeXBlIFBvcJhbmdlIDgWNYXJOiBudWiZXIsIGVuZDogbnVtYmVyXTtcblxuYucQgaXNSYWnZUZXJsYXAgPSAoYTogUGzUmFuZUsIGIIFBvcJhbmdlKSAPlxuICBpcdpdGhpblJhbmdlKGEsIGJbMFpIHxIGlzVlaGluUmFuZUoYSwgYlsxXSkXGjbzdCBpcdpdGhpblJhbmdlIDgKHIIFBvcJhbmdlLCBwbMIGbWJlcikgPTgclswXSAIHBvcyAmJiByWzFdIDgcGzOxuXGjbzdCBtZXJnZVJhbmdlcyAIChhOiBQbNSYWnZSwgYjogUGzUmFuZUpID+IHtcbiAgYucQgcRhcnQgPSBpcdpdGhpblJhbmdlKGEsIGJbMFpIDgYVswXSAIGJbMFsXGgICAgZWkIDgaXNXaXRoaWSYWnZShhLCBiWzFdKSA/IGFbMVgOiBiWzFdOxuICByZXRcmgWNYXJLCBlbmRdIGFzIFBvcJhbmdlOxufTtcblxuYucQgVWpbSYWnZXMgPSAocmFuZVzOiBQbNSYWnZVtdKSAPlxuICByYWnZXNcbiAgICAucydCgoYSwgYikgPTgYVswXSAtIGJbMFpXGgICAgLnJlZHVjZSgoYXJyLCByYWnZSkgPTgexuICAgICAgbGVIGluZGVIDgYXJyLmZpbmRJbmRleCgocmFuZVUbNoZWNrKSAPlxuICAgICAgICBpcJhbmdlTZlcmxhcChyYWnZVRvQhlYssIHJhbmdlKSxcbiAgICAgICkXGgICAgICBpZiAoaWkZXggITICxKSBXGgICAgICAgIGFycltpbmRleFgPSBtZXJnZVJhbmdlcyhhcnJbaWkZXhdLCByYWnZSkXGgICAgICBIGVscUgexuICAgICAgICBhcnIucHVzaChyYWnZSkXGgICAgICBXGgICAgICByZXRcmgYXJyOxuICAgIHsIFtdIGFzIFBvcJhbmdlWpOxuXGleHBvcnQgZGVmYXVsdCBVbmlvblJhbmdlcztcbiIsICJpbXBvcnQgeyBTdGFIHgZnJvbSBcImiclkaWFuXCIXGcbmltcGydCBeXBlIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcblxuZGVjbGFyZSBnbGiYWwgexuICBjbzdCBETQdXJpZnkIHRcGVvZiBpbXBvcnQoXCJkbwdXJpZnlcIikXGXGcbmludGVyZmFjZSBJYuQFjaGUgexuICBjdGltZTogbnVtYmVyOxuICBtdGltZTogbnVtYmVyOxuICBzaXplOiBudWiZXIXGgIHNZzogUZHRWxlbWVudDtcbncblxuZXhwbJIGRlZmFbHQgYxhcMgRmlsZUljbDYWNoZSBXGgIGNvbnNcnVjdGyKHBYmxpYyBwbHVnaWIEljbTQykgecbiAgcHJpdmFZSBnZXQgdmFbHQoKSBXGgICAgcmVdXJuIHRoaXMucGxZluLmFwcCYXVsdDtcbiAgfVxuICBwcmlYXRlIGNhYhlIDgbmVIEhcDxzdHJpbmcsIEljbDYWNoZToKTtcbiAgYXNbmMgZVSWNvbihubJtYWxpemVkUGFaDogcRyaWnKTogUHJvbWlzZTxTVkdFbGVtZWIHwgbnVsbDgexuICAgIGNvbnNIHNYXQgPSBhdFpdCBaGlzLnZhdWxLmFkYXBZXIucRhdChubJtYWxpemVkUGFaCkXGgICAgaWYgKCFzdGFIHxIHNYXQudHlwZSAhPTgXCJmaWxlXCIpIHJldHVybiBudWxsOxuICAgIGlmIChaGlzLmNhYhlLmhhcyhubJtYWxpemVkUGFaCkpIHtcbiAgICAgIGNvbnNIGNhYhlIDgdGhpcyjYWNoZSnZXQobmybWFsaXplZFBhdGgpITtcbiAgICAgIGlmIChcbiAgICAgICAgYFjaGUuYRpbWUgPTIHNYXQuYRpbWUgJiZcbiAgICAgICAgYFjaGUubXRpbWUgPTIHNYXQubXRpbWUgJiZcbiAgICAgICAgYFjaGUuclZSAPTgcRhdCzaXplXGgICAgICApIHtcbiAgICAgICAgcmVdXJuIGNhYhlLnNZyjbGuZUvZGUodHJZSkgYXMgUZHRWxlbWVudDtcbiAgICAgIHcbiAgICBXGgICAgYucQgcZnIDgYXdhaXQgdGhpcyyZWFkSWbNhYhlKGvcmhbGlZWRQYXRoLCBzdGFKTtcbiAgICByZXRcmgcZnLmNsblTmkZShcnVlKSBhcyBTVkdFbGVtZWOxuICBXGgIHByaXZhdGUgYXNbmMgcmVhZEludGDYWNoZShcbiAgICBubJtYWxpemVkUGFaDogcRyaWnLFxuICAgIHNYXQIFNYXQsXGgICkIFBybpcUUZHRWxlbWVudDgexuICAgIGNvbnNIGRhdGEgPSBETQdXJpZnkucFuaXRpemUoXGgICAgICAgIGFYWlIHRoaXMudmFbHQuYWRhcHRlciyZWFkKGvcmhbGlZWRQYXRoKSxcbiAgICAgICksXGgICAgICBzdmcgPSBuZXcgRENUGFycVyKCkucGFycVGcmtURyaWnKGRhdGEsIFwiaWhZUvcZnKhtbFwiKVxuICAgICAgICAuZGjdWlbnRFbGVtZWIGFzIHVuavdgYXMgUZHRWxlbWVudDtcbiAgICBaGlzLmNhYhlLnNldChubJtYWxpemVkUGFaCwgeyAuLizdGFLCBzdmcgfSkXGgICAgcmVdXJuIHNZztcbiAgfVxuICByZWZyZXNoKCkgexuICAgIGNvbnNIHJlZnJlcggPSBhcluYyAocGFaDogcRyaWnKSAPiBXGgICAgICBjbzdCBzdGFIDgYXdhaXQgdGhpcyYXVsdChZGFwdGVyLnNYXQocGFaCkXGgICAgICBpZiAoIXNYXQgfHwgcRhdCeXBlICEPSBcImZpbGVcIikgexuICAgICAgICBaGlzLmNhYhlLmRlbGVZShwYXRoKTtcbiAgICAgIHgZWxzZSBXGgICAgICAgIGFYWlIHRoaXMucmVhZEludGDYWNoZShwYXRoLCBzdGFKTtcbiAgICAgIHcbiAgICAgIHJldHVybiBwYXRoOxuICAgIHXGgICAgcmVdXJuIFBybpcUuYWxsUVdGxlZChbLiudGhpcyjYWNoZSrZXlzKCldLmhcChyZWZyZXNoKSkXGgIHcbiAgYxlYXIoKSBXGgICAgdGhpcyjYWNoZSjbGVhcigpOxuICBXGXGiLCAiaWwbJIFwiLipYuLmxlcNcIjtcblxuaWwbJIGFzcVydEldmVyIGZybgXCJhcNlcnQtbmVZXJcIjtcbmltcGydCBGdXNlIGZybgXCJmdXNlLmpzXCIXGpbXBvcnQgSlNaaXAgZnJvbSBcImpzemlwXCIXGpbXBvcnQgZWvamkgZnJvbSBcImvZGUtZWvamlcIjtcbmltcGydCBIEVZWUmVmLCBFdmVudHMsIGvcmhbGlZVBhdGgsIEvdGljZSwgUGxhdGZvcmgfSBmcmtIFwibJzaWRpYWcIjtcbmltcGydCBIGJhcVuYWlLCBqbluIHgZnJvbSBcInBhdGhcIjtcblxuaWwbJIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcbmltcGydCBIGVdFByZWZpeCwgUEFdmVudHMgfSBmcmtIFwiLivdHlwaWncyhcGlcIjtcbmltcGydCBXGgIEJaWxSWJYuSWRzLFxuICBCdWlsdEluSWNvblBhYtuYWlcyxcbiAgQnVpbHRJblNWRljbQYWNrcyxcbngZnJvbSBcIivYnVpbHQtaWzXCIXGpbXBvcnQgRWvamlJYuRGFYSBmcmtIFwiLilbWqaVwiOxuaWwbJIEZpbGVJYuRGFYSBmcmtIFwiLimaWxlLWljbcIjtcbmltcGydCBIEJbHRpSWJYuRGFYSwgSWNvbkRhdGEsIEljbJbmZvLCBpcZpbGVJYuSWmbyBIGZybgXCIuLRcGVzXCIXGpbXBvcnQgexuICBleHRQYXRZXJuLFxuICBnZXRJYucZybGaWxlTGlzdCxcbiAgaWNvbkZpbGVQYXRZXJuLFxuICBzYWpdGlZUlkLFxuICBzdHJpcENvbGucyxcbngZnJvbSBcIivdXRpbHNcIjtcblxuYucQgQVTVENXlDTfUEFUSCAIFwiLljbzLmpzbcIjtcbmNvbnNIENVURPTVJQOXRJUiAIFwiaWNvbnNcIjtcblxuZXhwbJIGRlZmFbHQgYxhcMgUGFjahbmFnZXIgZXhZWkcyBFdmVudHMgexuICBwcmlYXRlIFjdXNbJYucyAIGldyBNYXAcRyaWnLCBGaWxlSWNvbkRhdGE+KCkXGgIHByaXZhdGUgXNdGtcljbQYWNrbmFtZXMIFNldDxzdHJpbmc+IDgbmVIFNldCgpOxuICBnZXQgdmFbHQoKSBXGgICAgcmVdXJuIHRoaXMucGxZluLmFwcCYXVsdDtcbiAgfVxuICBhcluYyByZWhbWVJYuRmlsZShcbiAgICBpZDogcRyaWnLFxuICAgIGVdDogcRyaWnLFxuICAgIGldlkOiBzdHJpbmcsXGgICkIFBybpcUcRyaWnPiBXGgICAgYucQgbmVUGFaCAIGpvaWodGhpcyjdXNbJYucRpciwgbmVSWQgKyBleHQpLFxuICAgICAgcGFaCAIGpvaWodGhpcyjdXNbJYucRpciwgaWQgKyBleHQpOxuICAgIGFYWlIHRoaXMudmFbHQuYWRhcHRlciyZWhbWUocGFaCwgbmVUGFaCkXGgICAgcmVdXJuIGldBhdGgXGgIHcbiAgcmVtbZlSWNvbkZpbGUoaWQIHNcmluZywgZXhOiBzdHJpbmcpIHtcbiAgICBjbzdCBwYXRoIDgampbihaGlzLmNcRvbUljbzRGlyLCBpZCArIGVdCkXGgICAgcmVdXJuIHRoaXMudmFbHQuYWRhcHRlciyZWvdmUocGFaCkXGgIHcbiAgYXNbmMgYWRkSWNvbihpZDogcRyaWnLCBleHQIHNcmluZywgZGFYTogQXJyYXlCdWZmZXIpIHtcbiAgICBjbzdCBwYXRoIDgampbihaGlzLmNcRvbUljbzRGlyLCBpZCArIGVdCkXGgICAgYXdhaXQgdGhpcyYXVsdChZGFwdGVyLndyaXRlQmluYXJKHBhdGgsIGRhdGEpOxuICAgIHJldHVybiBwYXRoOxuICBXGgIGdldCBjdXNbQYWNrbmFtZXMoKTogcRyaWnWgexuICAgIHJldHVybiBbLiudGhpcyfYVbzSWNvblBhYtuYWlcXGgIHcbiAgZVIGNcRvbUljbzRmlsZVBhdGgoKSBXGgICAgcmVdXJuIGvcmhbGlZVBhdGgodGhpcywbHVnaWubWFuaWZlcQuZGlyICsgQVTVENXlDTfUEFUSCkXGgIHcbiAgZVIGNcRvbUljbzRGlyKCkgexuICAgIHJldHVybiBqbluKHRoaXMudmFbHQuYuZmlnRGlyLCBDVVNUTfSUNPTlESVIpOxuICBXGgIGlzUGFjahbWVFeGlzdHMocGFjahbWUIHNcmluZykgexuICAgIHJldHVybiAoXGgICAgICBCdWlsdEluSWNvblBhYtuYWlcypbmNsdWRlcyhwYWNrbmFtZSkgfHxcbiAgICAgIHRoaXMuXNdGtcljbQYWNrbmFtZXMuaGFzKHBhYtuYWlKVxuICAgICkXGgIHcbiAgZVIGVuYWJsZWRQYWNrbmFtZXMoKTogcRyaWnWgexuICAgIHJldHVybiBbLiuQnVpbHRJbkljbQYWNrbmFtZXMsICuLnRoaXMuXNdGtcljbQYWNrbmFtZXNdLmZpbHRlcihcbiAgICAgIChwYWNrKSAPiBaGlzLmlzUGFjaVuYWJsZWQocGFjayksXGgICAgKTtcbiAgfVxuXGgIGhhcljboaWQIHNcmluZykIGJvbxlYWgexuICAgIHJldHVybiBaGlzLlpcJaWxSWoaWQpIHxIHRoaXMuXNcRvbUljbzLmhhcyhpZCkXGgIHcbiAgcHJpdmFZSBfaXNCdWlsdEluKGlkOiBzdHJpbmcpOiBibsZWFuIHtcbiAgICByZXRcmgZWvamkuaGFzRWvamkoaWQpIHxIEJaWxSWTVkdJYuUGFjaMuaGFzKGlkKTtcbiAgfVxuXGgICqKlxuICAgKiBAcGFyYWgaWQgYWNjZXBIHNobJYkZSBaXRoIGNvbGucxuICAgKiBAcGFyYWgcmFIGlmIGdpdmVuLCByZXRcmgcmVzbVyYUgcGFaCBbyBpYuIGZpbGUgaWzdGVhZCBvZiBpbWcgZWxlbWVudFxuICAgKicbiAgZVSWNvbihpZDogcRyaWnLCByYXcIHRydWUpOiBzdHJpbmcgfCBudWxsOxuICBnZXRJYuKGlkOiBzdHJpbmcsIHJhdzIGZhbHNlKTogSFRNTFNwYWFbGVtZWIHwgbnVsbDtcbiAgZVSWNvbihpZDogcRyaWnLCByYXcgPSBmYWxzZSkIHNcmluZyBIEhUTUxTcGFuRWxlbWVudCBIGbGwgexuICAgIGlkIDgcRyaXBDbxvbnMoaWQpOxuICAgIGNvbnNIGRhdGEgPSBaGlzLmdldEljbEYXRhKGlkKTtcbiAgICBpZiAoIWRhdGEpIHJldHVybiBudWxsOxuICAgIGNvbnNIGdldERPTSAICgpID+IGRhdGEuZVRENKGZhbHNlKTtcbiAgICBzdlYggKGRhdGEudHlwZSkgexuICAgICAgYFzZSBcImVtbppXCIXGgICAgICAgIHJldHVybiByYXcgPyBkYXRhLmNoYXIgOiBnZXREToKTtcbiAgICAgIGNhcUgXCJidWxaSpblwiOlxuICAgICAgICByZXRcmgcmFIDgZGFYSkYXRhVXJpIDogZVRENKCkXGgICAgICBjYXNlIFwiZmlsZVwiOlxuICAgICAgICByZXRcmgcmFIDgZGFYSyZXNvdXJjZVBhdGggOiBnZXREToKTtcbiAgICAgIGRlZmFbHQXGgICAgICAgIGFzcVydEldmVyKGRhdGEpOxuICAgIHcbiAgfVxuXGgIGFzeWjIGdldFNWRljboaWQIHNcmluZywgcmFOiBcnVlKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPjtcbiAgYXNbmMgZVUZHSWNvbihpZDogcRyaWnLCByYXc/OiBmYWxzZSkIFBybpcUSFRNTFNwYWFbGVtZWIHwgbnVsbDXGgIGFzeWjIGdldFNWRljboXGgICAgaWQIHNcmluZyxcbiAgICByYXcgPSBmYWxzZSxcbiAgKTogUHJvbWlzZTxzdHJpbmcgfCBIVEMUBhbkVsZWlbnQgfCBudWxsPiBXGgICAgaWQgPSBzdHJpcENvbGucyhpZCkXGgICAgYucQgZGFYSAIHRoaXMuZVSWNvbkRhdGEoaWQpOxuICAgIGlmICghZGFYSkgcmVdXJuIGbGwXGgICAgYucQgZVRENIDgKCkgPTgZGFYSnZXRETodHJZSkXGgICAgaWYgKGRhdGEudHlwZSAPTgXCJlbWqaVwiKSBXGgICAgICByZXRcmgcmFIDgZGFYSjaGFyIDogZVRENKCkXGgICAgfSBlbHNlIGlmIChcbiAgICAgIGRhdGEudHlwZSAPTgXCJidWxaSpblwiIHxXGgICAgICAoZGFYSeXBlIDPSBcImZpbGVcIiAmJiBkYXRhLmlzUZHKVxuICAgICkgexuICAgICAgYucQgZWwgPSBhdFpdCBnZXREToKTtcbiAgICAgIHJldHVybiByYXcgPyBlbCpbmlckhUTUwgOiBlbDtcbiAgICBIGVscUgexuICAgICAgcmVdXJuIHJhdyA/IGRhdGEucmVzbVyYVQYXRoIDogZVRENKCkXGgICAgfVxuICBXGcbiAgZVSWNvbkRhdGEoaWQIHNcmluZykIEljbEYXRhIHwgbnVsbCBXGgICAgaWQgPSBzdHJpcENvbGucyhpZCkXGgICAgbGVIGRhdGEIEljbEYXRhIHwgbnVsbCBIHVuZGVmaWlZDtcbiAgICBpZiAoXGgICAgICAoZGFYSAIEVtbppSWNvbkRhdGEuZVRGFYShpZCkpIHxXGgICAgICAoZGFYSAIEJaWxSWTVkdJYuUGFjaMuZVKGlkKSkgfHxcbiAgICAgIChkYXRhIDgdGhpcyfYVzdGtSWNvbnMuZVKGlkKSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhOxuICAgIHgZWxzZSByZXRcmgbnVsbDtcbiAgfVxuXGgIGlzUGFjaVuYWJsZWQocGFjazogcRyaWnKTogYmvbGVhbiBXGgICAgaWYgKHBhYsgPTIFwiZWvamlcIikgcmVdXJuIHRydWUXGgICAgcmVdXJuICFaGlzLnBsdWdpbizZXRaWncykaXNhYmxlZFBhYtzLmhhcyhwYWNrKTtcbiAgfVxuXGgIHByaXZhdGUgcmVmcmVzaFBhYtOYWlcygpIHtcbiAgICBaGlzLljdXRvbXNJYuUGFjahbWVzLmNsZWFyKCkXGgICAgZmyIChjbzdCBbLCBIHBhYsgfVgbYgdGhpcyfYVzdGtSWNvbnMpIHtcbiAgICAgIHRoaXMuXNdGtcljbQYWNrbmFtZXMuYWRkKHBhYspOxuICAgIHcbiAgfVxuICBjbzdHJYRvcihwdWJsaWMgcGxZluOiBJYuUMpIHtcbiAgICBzdXBlcigpOxuICBXGcbiAgcHJpdmFZSBfbGhZGVkIDgZmFscUXGgIGFzeWjIGxvYWRJYucygpOiBQcmtaXNlPHZvaWQ+IHtcbiAgICBpZiAodGhpcyfbGhZGVkKSBXGgICAgICBaGlzLlmdXNlLnNldENvbGxlYRpboWpOxuICAgICAgdGhpcyfYVzdGtSWNvbnMuYxlYXIoKTtcbiAgICAgIHRoaXMuXNdGtcljbQYWNrbmFtZXMuYxlYXIoKTtcbiAgICAgIHRoaXMuXxvYWRlZCAIGZhbHNlOxuICAgIHcbiAgICBpZiAoIShhdFpdCBaGlzLnZhdWxLmFkYXBZXIuZXhpcRzKHRoaXMuYVzdGtSWNvbnNEaXIpKSkgexuICAgICAgYXdhaXQgdGhpcyYXVsdChZGFwdGVyLmrZGlyKHRoaXMuYVzdGtSWNvbnNEaXIpOxuICAgICAgcmVdXJuOxuICAgIHcbiAgICBjbzdCBpYubGlzdCAIGFYWlIHRoaXMudmFbHQuYWRhcHRlcisaXNKHRoaXMuYVzdGtSWNvbnNEaXIpOxuXGgICAgbGVIGluZmXGgICAgYucQgcXVldWUgPSBpYubGlzdCmaWxlcytYXAoYXNbmMgKHBhdGgpID+IHtcbiAgICAgIGlmICghZXhUGFdGVybiZXNKHBhdGgpKSByZXRcmXGgICAgICBjbzdCBpZCAIGJhcVuYWlKHBhdGgpLnJlcGxhYUoZXhUGFdGVybiwgXCJcIikXGgICAgICBjbzdCBpYuIDgRmlsZUljbEYXRhLmdldERhdGEoaWQsIHBhdGgsIHRoaXMucGxZluKTtcbiAgICAgIGlmICghaWNvbikgexuICAgICAgICBjbzbxlLndhcmoXGgICAgICAgICAgXCJGYWlsZWQgdGgbGhZCBpYuIGRhdGEgKHJhdyBYWxZTogJWpIGZvciBpZCAlcywgctpcHBpbmcuLicIixcbiAgICAgICAgICBwYXRoLFxuICAgICAgICAgIGlkLFxuICAgICAgICApOxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcyfYVzdGtSWNvbnMucVKGlkLCBpYuKTtcbiAgICAgICAgdGhpcyfZnVzZShZGQoaWNvbikXGgICAgICBXGgICAgfSkXGgICAgZmyIChjbzdCByZXNbHQgbYgYXdhaXQgUHJvbWlzZShbGxTZXRbGVkKHFZXVlKSkgexuICAgICAgaWYgKHJlcVsdCzdGFdXMgPTIFwicmVqZWNZWRcIilcbiAgICAgICAgYucsZSlcnJvcihcIkZhaWxlZCBbyBsbFkIGljbcIiwgcmVzdWxLnJlYXNvbikXGgICAgfVxuICAgIHRoaXMuXxvYWRlZCAIHRydWUXGgICAgdGhpcyyZWZyZXNoUGFjahbWVzKCkXGgICAgdGhpcycmlnZVyKFwiaWpdGlhbGlZWRcIiwgdGhpcywbHVnaWuYXBpKTtcbiAgfVxuICBhcluYyBiYWNrdXBJYucyhwYWNrPzogcRyaWnKTogUHJvbWlzZTxblkPiBXGgICAgbGVIHppcCAIGldyBKUppcCgpOxuICAgIGNvbnNIGljbsaXNIDgYXdhaXQgdGhpcyYXVsdChZGFwdGVyLmxpcQodGhpcyjdXNbJYucRpcikXGgICAgZmyIChjbzdCBmaWxlcGFaCBvZiBpYubGlzdCmaWxlcykgexuICAgICAgaWYgKCFwYWNrIHxIGJhcVuYWlKGZpbGVwYXRoKSzdGFydHNXaXRoKHBhYsgKyBcIlcIikpIHtcbiAgICAgICAgemlwLmZpbGUoYmFzZWhbWUoZmlsZXBhdGgpLCBaGlzLnZhdWxLmFkYXBZXIucmVhZEJpbmFyeShmaWxlcGFaCkpOxuICAgICAgfVxuICAgIHcbiAgICBjbzdCBiYWtGaWxlUGFaCAIGAkeBhYsgPzgXCJjdXNbtaWNvbnNcInuemlwYDtcbiAgICBhdFpdCBaGlzLnZhdWxLmNyZWFZUJpbmFyeShcbiAgICAgIGJhaZpbGVQYXRoLFxuICAgICAgYXdhaXQgemlwLmdlbmVyYXRlQXNbmMoeyBeXBlOiBcImFycmFYnVmZmVyXCIgfSksXGgICAgKTtcbiAgICBpZiAoUGxhdGZvcmuaXNEZXNrdGwQXBwKSBXGgICAgICAvLyBvcGVuIHZhdWxIGRpciBpbiBleHBsbJlclxuICAgICAgdGhpcywbHVnaWuYXBwLmwZWXaXRoRGVmYXVsdEFwcChcIlwiKTtcbiAgICBIGVscUgexuICAgICAgbmVIEvdGljZShcbiAgICAgICAgYGljbzIGhhdmUgYmVlbiBzYXZlZCBbyAkeJhaZpbGVQYXRofSwgYCArXGgICAgICAgICAgXCJlbmFibGUgJRldGVjdCBhbGwgZmlsZSBleHRlbnNpbnIGluICdGaWxlcyAmIExpbmtzJyBbyBaXNpdCBpdFwiLFxuICAgICAgKTtcbiAgICBXGgIHcblxuICBhcluYyBpbXBvcnRJYucZybGaWxlTGlzdChsaXNOiBGaWxlTGlzdCwgemlwTmFtZUFzUGFjayAIGZhbHNlKSBXGgICAgbGVIHFZXVlIDgWgYXMgUHJvbWlzZTxzdHJpbmc+WXGgICAgZmyIChsZXQgaSAIDAIGkgPCBsaXNLmxlbmdaDsgaSsrKSBXGgICAgICBjbzdCBmaWxlIDgbGlzdFtpXTtcbiAgICAgIGlmIChmaWxlLnRcGUgITIFwiYXBwbGljYXRpbvemlwXCIpIGNvbnRpbnVlOxuICAgICAgcXVldWUucHVzaChaGlzLmltcGydEljbzKGZpbGUsIHppcEhbWVBcBhYspKTtcbiAgICBXGgICAgcmVdXJuIFBybpcUuYWxsUVdGxlZChxdWVZSkXGgIHcblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGZpbGVzXGgICAqIEBwYXJhbSBaXBOYWlQXNQYWNrIGlmIHRydWUsIHVzZSBaXAgZmlsZWhbWUgYXMgcGFjayBuYWlOyBvdGhlcndpcUsIGdldCBwYWNrIGhbWUgZnJvbSBlYWNoIGljbncyBpZFxuICAgKiBAcmVdXJucxuICAgKicbiAgYXNbmMgaWwbJSWNvbnMoXGgICAgZmlsZTogRmlsZSBIHsgbmFtZTogcRyaWnOyBkYXRhOiBBcnJheUJZmZlciBLFxuICAgIHppcEhbWVBcBhYsIGJvbxlYWsXGgICkIFBybpcUcRyaWnPiBXGgICAgYucQgcGFjahbWVGcmtWmlwIDgZmlsZSuYWlLnJlcGxhYUoLxcLnppcCQvLCBcIlwiKTtcbiAgICBsZXQgemlwOxuICAgIGlmIChmaWxlIGlucRhbmNlbYgRmlsZSkgexuICAgICAgemlwIDgYXdhaXQgSlNaaXAubGhZEFzeWjKGZpbGUpOxuICAgIHgZWxzZSBXGgICAgICBaXAgPSBhdFpdCBKUppcCsbFkQXNbmMoZmlsZSkYXRhKTtcbiAgICBXGgICAgYucQgcXVldWUgPSBaXAuZmlsZShpYuRmlsZVBhdHRlcmpLmhcChhcluYyAoZmlsZSkgPTgexuICAgICAgbGVIHsgbmFtZSBIDgZmlsZTtcbiAgICAgIGlmIChaXBOYWlQXNQYWNrICYmICFuYWlLnNYXJcdpdGgocGFjahbWVGcmtWmlwICsgXCJfXCIpKVxuICAgICAgICBuYWlIDgcGFjahbWVGcmtWmlwICsgXCJfXCIgKyBuYWlOxuICAgICAgYucQgaWQgPSBaGlzLmdldEFYWlsYWJsZUlkKGhbWUpOxuICAgICAgYucQgdJpdGVUbyAIGpvaWodGhpcyjdXNbJYucRpciwgaWQpOxuICAgICAgaWYgKGFYWlIHRoaXMudmFbHQuYWRhcHRlcileGlzdHModJpdGVUbykpIHtcbiAgICAgICAgcmVdXJuIFBybpcUucmVqZWNKGBpYuICRaWRIGFscmVhZHkgZXhpcRzLCBzalwcGluZyuYCkXGgICAgICBXGgICAgICBhdFpdCBaGlzLnZhdWxLmFkYXBZXIudJpdGVCaWhcnkoXGgICAgICAgIHdyaXRlVGsXGgICAgICAgIGFYWlIGZpbGUuYXNbmMoXCJhcnJheWJZmZlclwiKSxcbiAgICAgICkXGgICAgICByZXRcmgaWQXGgICAgfSkXGgICAgYucQgYWRkZWRJYucyAIChhdFpdCBQcmtaXNlLmFsbFNldHRsZWQocXVldWUpKSyZWRYUoXGgICAgICAoYXJyLCByZXNbHQpID+IHtcbiAgICAgICAgaWYgKHJlcVsdCzdGFdXMgPTIFwicmVqZWNZWRcIikgexuICAgICAgICAgIGNvbnNvbGUuZXJybIoXCJGYWlsZWQgdGgaWwbJIGljbcIiwgcmVzdWxLnJlYXNvbikXGgICAgICAgIHgZWxzZSBXGgICAgICAgICAgYXJyLnBcgocmVzdWxLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXRcmgYXJyOxuICAgICAgfSxcbiAgICAgIFtdIGFzIHNcmluZtdLFxuICAgICkXGgICAgbmVIEvdGljZShhZGRlZEljbzLmxlbmdaCArIFwiIGljbzIGltcGydGVkXCIpOxuICAgIHJldHVybiBmaWxlLmhbWUXGgIHcblxuICBhcluYyBhZGRGcmtRmlsZXMocGFjazogcRyaWnLCBmaWxlczogRmlsZUxpcQpIHtcbiAgICBjbzdCBpYucyAIGFYWlIGdldEljbzRnJvbUZpbGVMaXNKGZpbGVzKTtcbiAgICBpZiAoIWljbzKSBXGgICAgICBuZXcgTmaWNlKFwiTmgUZHIGZpbGUgZmbmQgaWgZHJvcHBlZCBpdGVtcwiKTtcbiAgICAgIHJldHVybjtcbiAgICBXGcbiAgICBpZiAoQnVpbHRJbkljbQYWNrbmFtZXMuaWjbHVkZXMocGFjaykpIHtcbiAgICAgIGNvbnNvbGUuZXJybIoXCJmYWlsZWQgdGgYWRkIHBhYsIHBhYsgbmFtZSAlcyByZXNlcnZlZFwiLCBwYWNrKTtcbiAgICAgIHJldHVybjtcbiAgICBXGgICAgYucQgdJpdGVRdWVZSAIGljbzLnJlZHVjZSgoYXJyLCBIGhbWUsIGVdCwgZGFYSBKSAPiBXGgICAgICBsZXQgaWQgPSBzYWpdGlZUlkKGAkeBhYtXyRbmFtZXgKTtcbiAgICAgIGlmICghaWQpIHtcbiAgICAgICAgYucsZSYXJuKFwiZmFpbGVkIHRvIGFkZCBpYuOiBpZCAlcyBpbnZhbGlkLCBzalwcGluZyuLlwiLCBpZCkXGgICAgICAgIHJldHVybiBhcnIXGgICAgICBXGgICAgICBpZCAIHRoaXMuZVQXZhaWxhYmxlSWQoaWQpOxuICAgICAgaWYgKHRoaXMuXNcRvbUljbzLmhhcyhpZCkpIHtcbiAgICAgICAgYXJyLnBcgoUHJvbWlzZSyZWplYQoYGljbgJHtpZHgYWxyZWFkeSBleGlzdHMsIHNraXBwaWnLigKSkXGgICAgICAgIHJldHVybiBhcnIXGgICAgICBXGgICAgICBhcnIucHVzaChcbiAgICAgICAgKGFzeWjICgpID+IHtcbiAgICAgICAgICBcnkgexuICAgICAgICAgICAgYucQgcGFaCAIGFYWlIHRoaXMuYWRkSWNvbihpZCwgZXhLCBkYXRhKTtcbiAgICAgICAgICAgIHRoaXMucVKFxuICAgICAgICAgICAgICBpZCxcbiAgICAgICAgICAgICAgbmVIEZpbGVJYuRGFYShpZCwgbmFtZSwgcGFjaywgcGFaCwgdGhpcywbHVnaWpLFxuICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICkXGgICAgICAgICAgfSBjYXRjaCAoZXJybIpIHtcbiAgICAgICAgICAgIHRocmIGldyBJYuRmlsZUwRXJybIoXCJhZGRcIiwgaWQsIGVycmyKTtcbiAgICAgICAgICBXGgICAgICAgICAgcmVdXJuIGlkOxuICAgICAgICBKSgpLFxuICAgICAgKTtcbiAgICAgIHJldHVybiBhcnIXGgICAgfSwgWgYXMgUHJvbWlzZTxzdHJpbmc+WpOxuICAgIGxldCBhZGRlZElkcyAIFtdIGFzIHNcmluZtdOxuICAgIGZvciAoYucQgcmVzdWxIGmIGFYWlIFBybpcUuYWxsUVdGxlZChcmlZVFZXVlKSkgexuICAgICAgaWYgKHJlcVsdCzdGFdXMgPTIFwicmVqZWNZWRcIikgexuICAgICAgICBjbzbxlLmVycmyKFwiRmFpbGVkIHRvIGFkZCBpYuLCBkZXRhaWxzOiBcIiwgcmVzdWxLnJlYXNvbikXGgICAgICBIGVscUgexuICAgICAgICBhZGRlZElkcywdXNoKHJlcVsdCYWxZSkXGgICAgICBXGgICAgfVxuICAgIHRoaXMucmVmcmVzaFBhYtOYWlcygpOxuICAgIHRoaXMudHJpZdlcihcImNoYWnZWRcIiwgdGhpcywbHVnaWuYXBpLCBhZGRlZElkcykXGgICAgbmVIEvdGljZShhZGRlZElkcysZWndGgudGTdHJpbmcoKSArIFwiIGljbzIGFkZGVkXCIpOxuICBXGgIGFzeWjIGRlbGVZUbHRpcGxlKCuLmlkczogcRyaWnWpOiBQcmtaXNlPHZvaWQ+IHtcbiAgICBaGlzLlmdXNlLnJlbWZSgoaWNvbikgPTgaXNGaWxlSWNvbkluZmoaWNvbikgJiYgaWRzLmluYxZGVzKGljbuaWQpKTtcbiAgICBjbzdCBxdWVZSAIGlkcytYXAoYXNbmMgKGlkKSAPiBXGgICAgICBjbzdCBpbmZvIDgdGhpcyfYVzdGtSWNvbnMuZVKGlkKTtcbiAgICAgIGlmICghaWmbylcbiAgICAgICAgdGhybcgbmVIEljbGaWxlTBFcnJvcihcbiAgICAgICAgICBcImRlbGVZVwiLFxuICAgICAgICAgIGlkLFxuICAgICAgICAgIFwiTmgaWNvbiBmbVuZCBpbiBfYVzdGtSWNvbnNcIixcbiAgICAgICAgKTtcbiAgICAgIHRoaXMuXNcRvbUljbzLmRlbGVZShpZCkXGgICAgICBcnkgexuICAgICAgICBhdFpdCBaGlzLnJlbWZUljbGaWxlKGlkLCBpbmZvLmVdCkXGgICAgICBIGNhdGNoIChlcnJvcikgexuICAgICAgICBaHJvdyBuZXcgSWNvbkZpbGVPcEVycmyKFwiZGVsZXRlXCIsIGlkLCBlcnJvcikXGgICAgICBXGgICAgfSkXGgICAgbGVIGNoYWnZWQgPSBmYWxzZTtcbiAgICBmbIgKGNvbnNIHJlcVsdCBvZiBhdFpdCBQcmtaXNlLmFsbFNldHRsZWQocXVldWUpKSBXGgICAgICBpZiAocmVzdWxLnNYXRcyAPTgXCJyZWplYRlZFwiKSBXGgICAgICAgIGNvbnNvbGUuZXJybIoXCJGYWlsZWQgdGgcmVtbZlIGljbgZmlsZSwgZGVYWlsczogXCIsIHJlcVsdCyZWFzbpOxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYhhbmdlZCBfCAoYhhbmdlZCAIHRydWUpOxuICAgICAgfVxuICAgIHcbiAgICBpZiAoYhhbmdlZCkgexuICAgICAgdGhpcyyZWZyZXNoUGFjahbWVzKCkXGgICAgICBaGlzLnRyaWdnZXIoXCJjaGFuZVkXCIsIHRoaXMucGxZluLmFwaSwgaWRzKTtcbiAgICBXGgIHcbiAgYXNbmMgZmlsdGVyKFxuICAgIHByZWRpYFZTogKGtleTogcRyaWnLCBYWxZTogTpdDxGaWxlSWNvbkRhdGEsIFwiaWRcIjpID+IGJvbxlYWsXGgICkIFBybpcUdmpZDgexuICAgICvIGlkICgcGFaCBtYXBcbiAgICBsZXQgSWNvbnNUbRlbGVZSAIGldyBNYXAcRyaWnLCBzdHJpbmc+KCkXGgICAgZmyIChjbzdCBbaWQsIGRhdGFdIGmIHRoaXMuXNcRvbUljbzKSBXGgICAgICBpZiAoIXByZWRpYFZShpZCwgZGFYSkpIHtcbiAgICAgICAgdGhpcyfYVzdGtSWNvbnMuZGVsZXRlKGlkKTtcbiAgICAgICAgSWNvbnNUbRlbGVZSzZXQoaWQsIGRhdGEucGFaCkXGgICAgICBXGgICAgfVxuICAgIHRoaXMuXZcUucmVtbZlKChpYuKSAPiBJYucRvRGVsZXRlLmhhcyhpYuLmlkKSkXGgICAgaWYgKEljbzVGEZWxldGUuclZSAPTgMCkgcmVdXJuOxuICAgIHRoaXMucmVmcmVzaFBhYtOYWlcygpOxuICAgIHRoaXMudHJpZdlcihcImNoYWnZWRcIiwgdGhpcywbHVnaWuYXBpLCBbLiuSWNvbnNUbRlbGVZSrZXlzKCldKTtcbiAgICBjbzdCBxdWVZSAIFsuLiJYucRvRGVsZXRlLnZhbHVlcygpXStYXAoYXNbmMgKHBhdGgpID+IHtcbiAgICAgIHRyeSBXGgICAgICAgIGFYWlIHRoaXMudmFbHQuYWRhcHRlciyZWvdmUocGFaCkXGgICAgICBIGNhdGNoIChlcnJvcikgexuICAgICAgICBaHJvdyBuZXcgSWNvbkZpbGVPcEVycmyKFwiZGVsZXRlXCIsIGJhcVuYWlKHBhdGgpLCBlcnJvcikXGgICAgICBXGgICAgfSkXGgICAgZmyIChjbzdCByZXNbHQgbYgYXdhaXQgUHJvbWlzZShbGxTZXRbGVkKHFZXVlKSkgexuICAgICAgaWYgKHJlcVsdCzdGFdXMgPTIFwicmVqZWNZWRcIikgexuICAgICAgICBjbzbxlLmVycmyKFwiRmFpbGVkIHRvIHJlbWZSBpYuIGZpbGUsIGRldGFpbHMIFwiLCByZXNbHQucmVhcuKTtcbiAgICAgIHcbiAgICBXGgIHcbiAgYXNbmMgcmVuYWlKGlkOiBzdHJpbmcsIGldlkOiBzdHJpbmcpOiBQcmtaXNlPHNcmluZyBIGbGw+IHtcbiAgICBpZiAodGhpcyoYXNJYuKGldlkKSkgexuICAgICAgYucsZSsbcoXCJmYWlsZWQgdGgcmVuYWlIGljbIGlkICVzIGFscmVhZHkgZXhpcRzXCIsIGldlkKTtcbiAgICAgIHJldHVybiBudWxsOxuICAgIHcbiAgICBsZXQgaWmbyAIHRoaXMuXNcRvbUljbzLmdldChpZCkXGgICAgaWYgKCFpbmZvKSBXGgICAgICBjbzbxlLmxvZyhcImZhaWxlZCBbyByZWhbWUgaWNvbjogaWQgJXMgbmIGZvdWkIGluIGNcRvbSBpYucwiLCBpZCkXGgICAgICByZXRcmgbnVsbDtcbiAgICBXGgICAgYucQgcmVuYWlVGgPSBzYWpdGlZUlkKGldlkKTtcbiAgICBpZiAoIXJlbmFtZVRvKSBXGgICAgICBjbzbxlLmxvZyhcImZhaWxlZCBbyByZWhbWUgaWNvbjogaWQgJXMgaWYWxpZFwiLCBpZCkXGgICAgICByZXRcmgbnVsbDtcbiAgICBXGgICAgdHJIHtcbiAgICAgIGluZmucGFaCAIGFYWlIHRoaXMucmVuYWlSWNvbkZpbGUoaWQsIGluZmuZXhLCBuZXdJZCkXGgICAgfSBjYXRjaCAoZXJybIpIHtcbiAgICAgIHRocmIGldyBJYuRmlsZUwRXJybIoXCJyZWhbWVcIiwgaWQsIGVycmyLCBuZXdJZCkXGgICAgfVxuICAgIHRoaXMucVKHJlbmFtZVRvLCBpbmZvLCBmYWxzZSkXGgICAgdGhpcykZWxldGUoaWQsIGZhbHNlLCBmYWxzZSkXGgICAgdGhpcyyZWZyZXNoUGFjahbWVzKCkXGgICAgdGhpcycmlnZVyKFwiYhhbmdlZFwiLCBaGlzLnBsdWdpbihcGksIFtpZCwgbmVSWRdKTtcbiAgICByZXRcmgbmVSWQXGgIHcbiAgYXNbmMgcRhcihpZDogcRyaWnKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPiBXGgICAgYucQgdGFyZVSWQgPSBpZCyZXBsYWNlKCfXFxkPyQvLCBcIlwiKTtcbiAgICBpZiAodGFyZVSWQgPTIGlkKSBXGgICAgICBjbzbxlLmxvZyhcImZhaWxlZCBbyBzdGFyIGljbIGvIHNZmZpeCBmbVuZCBmbIgaWQgJXNcIiwgaWQpOxuICAgICAgcmVdXJuIGbGwXGgICAgfVxuICAgIGNvbnNIGluZmgPSBaGlzLljdXNbJYucynZXQoaWQpOxuICAgIGlmICghaWmbykgexuICAgICAgYucsZSsbcoXCJmYWlsZWQgdGgcRhciBpYuOiBpZCAlcyBubQgZmbmQgaWgYVzdGtIGljbzXCIsIGlkKTtcbiAgICAgIHJldHVybiBudWxsOxuICAgIHcbiAgICBpZiAodGhpcyfaXNCdWlsdEluKHRhcmdldElkKSkgexuICAgICAgYucsZSsbcoXGgICAgICAgIFwiZmFpbGVkIHRvIHNYXIgaWNvbjogbmVIGlkICVzIGVaXNcyBpbiBidWlsdCpbiBpYucwiLFxuICAgICAgICBYXJnZXRJZCxcbiAgICAgICkXGgICAgICByZXRcmgbnVsbDtcbiAgICBXGcbiAgICBcnkgexuICAgICAgYucQgeyBleHQgfSAIGluZmXGgICAgICBpZiAodGhpcyfYVzdGtSWNvbnMuaGFzKHRhcmdldElkKSkgexuICAgICAgICBjbzdCBZWwIDgdGhpcyfYVzdGtSWNvbnMuZVKHRhcmdldElkKSBhcyBGaWxlSWNvbkRhdGEsXGgICAgICAgICAgeyBleHQIHRhcmdldEVdCBIDgdGVtcDtcbiAgICAgICAgYXdhaXQgdGhpcyyZWhbWVJYuRmlsZShYXJnZXRJZCwgdGFyZVRXhLCBYXJnZXRJZCArIFwiXRlbXBcIikXGgICAgICAgIGluZmucGFaCAIGFYWlIHRoaXMucmVuYWlSWNvbkZpbGUoaWQsIGVdCwgdGFyZVSWQpOxuICAgICAgICBaGlzLnNldChYXJnZXRJZCwgaWmbywgZmFscUpOxuICAgICAgICBZWwLnBhdGggPSBhdFpdCBaGlzLnJlbmFtZUljbGaWxlKFxuICAgICAgICAgIHRhcmdldElkICsgXCJfdGVtcFwiLFxuICAgICAgICAgIHRhcmdldEVdCxcbiAgICAgICAgICBpZCxcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcyzZXQoaWQsIHRlbXAsIGZhbHNlKTtcbiAgICAgIHgZWxzZSBXGgICAgICAgIGluZmucGFaCAIGFYWlIHRoaXMucmVuYWlSWNvbkZpbGUoaWQsIGVdCwgdGFyZVSWQpOxuICAgICAgICBaGlzLnNldChYXJnZXRJZCwgaWmbywgZmFscUpOxuICAgICAgICBaGlzLmRlbGVZShpZCwgZmFscUsIGZhbHNlKTtcbiAgICAgIHcbiAgICBIGNhdGNoIChlcnJvcikgexuICAgICAgbmVIEljbGaWxlTBFcnJvcihcInJlbmFtZVwiLCBpZCwgZXJybIsIHRhcmdldElkKTtcbiAgICBXGcbiAgICBaGlzLnJlZnJlchQYWNrTmFtZXMoKTtcbiAgICBaGlzLnRyaWdnZXIoXCJjaGFuZVkXCIsIHRoaXMucGxZluLmFwaSwgWlkLCBYXJnZXRJZFpOxuICAgIHJldHVybiBYXJnZXRJZDtcbiAgfVxuXGgIHByaXZhdGUgZVQXZhaWxhYmxlSWQoaWQIHNcmluZykIHNcmluZyBXGgICAgaWYgKCFaGlzLmhhcljboaWQpKSByZXRcmgaWQXGgICAgbGVIGkgPSAxLFxuICAgICAgbmVSWQgPSBgJHtpZHfJHtpfWAXGgICAgdhpbGUgKHRoaXMuaGFzSWNvbihuZXdJZCkpIHtcbiAgICAgIGldlkIDgYCRaWRXyRKytpfWAXGgICAgfVxuICAgIHJldHVybiBgJHtpZHfJHtpfWAXGgIHcblxuICAvKiogcVIGluZmgaWgZGFYWJhcUsIGvIGZpbGUgYhhbmdlcyAqLxuICBzZXQoaWQIHNcmluZywgaWmbzogRmlsZUljbEYXRhLCByZWZyZXNoIDgdHJZSkIHZvaWQgexuICAgIGlmIChaGlzLljdXNbJYucynZXQoaWQpIDPSBpbmZvKSByZXRcmXGgICAgdGhpcyfYVzdGtSWNvbnMucVKGlkLCBpbmZvKTtcbiAgICBaGlzLlmdXNlLnJlbWZSgoaWNvbikgPTgaWNvbipZCAPTgaWQpOxuICAgIHRoaXMuXZcUuYWRkKGluZmpOxuICAgIGlmIChyZWZyZXNoKSBXGgICAgICBaGlzLnJlZnJlchQYWNrTmFtZXMoKTtcbiAgICAgIHRoaXMudHJpZdlcihcImNoYWnZWRcIiwgdGhpcywbHVnaWuYXBpLCBbaWRdKTtcbiAgICBXGgIHcblxuICBhcluYyBkZWxldGUoXGgICAgaWQIHNcmluZyxcbiAgICByZWZyZXNoIDgdHJZSxcbiAgICBkZWxldGVGaWxlIDgdHJZSxcbiAgKTogUHJvbWlzZTxibsZWFuPiBXGgICAgYucQgaWmbyAIHRoaXMuXNcRvbUljbzLmdldChpZCkXGgICAgaWYgKCFpbmZvKSByZXRcmgZmFscUXGgICAgaWYgKGRlbGVZUZpbGUpIHtcbiAgICAgIHRyeSBXGgICAgICAgIGFYWlIHRoaXMucmVtbZlSWNvbkZpbGUoaWQsIGluZmuZXhKTtcbiAgICAgIHgYFYggKGVycmyKSBXGgICAgICAgIHRocmIGldyBJYuRmlsZUwRXJybIoXCJkZWxldGVcIiwgaWQsIGVycmyKTtcbiAgICAgIHcbiAgICBXGgICAgYucQgcmVzdWxIDgdGhpcyfYVzdGtSWNvbnMuZGVsZXRlKGlkKTtcbiAgICBaGlzLlmdXNlLnJlbWZSgoaWNvbikgPTgaWNvbipZCAPTgaWQpOxuICAgIGlmIChyZWZyZXNoKSBXGgICAgICBaGlzLnJlZnJlchQYWNrTmFtZXMoKTtcbiAgICAgIHRoaXMudHJpZdlcihcImNoYWnZWRcIiwgdGhpcywbHVnaWuYXBpLCBbaWRdKTtcbiAgICBXGgICAgcmVdXJuIHJlcVsdDtcbiAgfVxuICBhcluYyBjbGVhcigpIHtcbiAgICBjbzdCBxdWVZSAIChcbiAgICAgIGFYWlIHRoaXMudmFbHQuYWRhcHRlcisaXNKHRoaXMuYVzdGtSWNvbnNEaXIpXGgICAgKSmaWxlcytYXAoKHBhdGgpID+IHRoaXMudmFbHQuYWRhcHRlciyZWvdmUocGFaCkpOxuICAgIGZvciAoYucQgcmVzdWxIGmIGFYWlIFBybpcUuYWxsUVdGxlZChxdWVZSkpIHtcbiAgICAgIGlmIChyZXNbHQucRhdHVzIDPSBcInJlamVjdGVkXCIpIHtcbiAgICAgICAgYucsZSlcnJvcihcIkZhaWxlZCBbyByZWvdmUgaWNvbiBmaWxlLCBkZXRhaWxzOiBcIiwgcmVzdWxLnJlYXNvbikXGgICAgICBXGgICAgfVxuICAgIHRoaXMuXNcRvbUljbzLmNsZWFyKCkXGgICAgdGhpcyfZnVzZSyZWvdmUoKGlkKSAPiAhQnVpbHRJbkljbJZHMuaWjbHVkZXMoaWQpKTtcbiAgICBaGlzLnJlZnJlchQYWNrTmFtZXMoKTtcbiAgICBaGlzLnRyaWdnZXIoXCJjaGFuZVkXCIsIHRoaXMucGxZluLmFwaSkXGgIHcblxuICBwcmlYXRlIFmdXNlIDgbmVIEZcUSWNvbkluZm+KEJaWxSWJYuSWRzLCBXGgICAgaVczogWwibmFtZVwiLCBcInBhYtcIlsXGgICAgaWjbHVkZVNjbJlOiBcnVlLFxuICAgICvIGlnbmyZUxvYFaWuOiBcnVlLFxuICAgIGZpbmRBbGxNYXRjaGVzOiBcnVlLFxuICAgIHRocmVzaGsZDogMCLFxuICAgIHNobVsZFNvcnQIHRydWUsXGgICAgaWjbHVkZUhdGNoZXMIHRydWUsXGgICAgdXNlRXhZWkZWRTZWFyYgIHRydWUsXGgIHpOxuICBzZWFyYgocXVlcnkIHNcmluZtdLCBwYWNrczIHNcmluZtdLCBsaWpdDIGbWJlcikgexuICAgIGxldCBleHAgPSBxdWVyeStYXARnVzZSFeHByZXNzaWuPigocykgPTgKHsgbmFtZTogcyBKSkXGgICAgcGFjaMgPSBwYWNrcyA/PyBaGlzLmVuYWJsZWRQYWNrbmFtZXMXGgICAgZXhwLnBcgoeyAkbIIHBhYtzLmhcCgocCkgPTgKHsgcGFjazogYDkeBYCBKSkgfSkXGgICAgcmVdXJuIHRoaXMuXZcUucVhcmNoKHsgJGFuZDogZXhwIHsIHsgbGltaXQIGxpbWlID/IDIwIHpOxuICBXGgIGdldEFsbElkcyhwYWNrczIHNcmluZtdLCBsaWpdDIGbWJlcikgexuICAgIGxldCBleHAgPSAocGFjaMgPzgdGhpcylbmFibGVkUGFjahbWVzKStYXAoKHApID+IChXGgICAgICBwYWNrOiBgPSRcHgLFxuICAgIHpKTtcbiAgICByZXRcmgdGhpcyfZnVzZSzZWFyYgoeyAkbIIGVcCBLCBIGxpbWlOiBsaWpdCA/PyAyMCBKTtcbiAgfVxuXGgIHRyaWdnZXIoLiuYXJnczogUEFdmVudHMpOiBblkIHtcbiAgICBjbzdCBbbmFtZSwgLiucmVzdFgPSBhcmdzOxuICAgIHNcGVyLnRyaWdnZXIobmFtZSwgLiucmVzdCkXGgICAgdGhpcywbHVnaWuYXBwLnZhdWxLnRyaWdnZXIoZXZUHJlZmlICsgbmFtZSwgLiucmVzdCkXGgIHcbiAgboLiuYXJnczogTBcmdzPFBNRXZlbnRzPikIEVZWUmVmIHtcbiAgICAvLyBAdHMtZXhwZWNLWVycmyXGgICAgcmVdXJuIHNcGVyLmuKCuLmFyZMpOxuICBXGXGcbnRcGUgTBcmdzPFQ+IDgVCBleHRlbmRzIFtpbmZlciBBLCAuLipbmZlciBCXVxuICA/IEEgZXhZWkcyBzdHJpbmdcbiAgICA/IFtuYWlOiBBLCBjYWxsYmFjazogKCuLmFyZMIEIpID+IGFueVcbiAgICAIGldmVyXGgIDogbmVZXIXGcbmNsYXNzIEljbGaWxlTBFcnJvciBleHRlbmRzIEVycmyIHtcbiAgYucRydWNbIobAIHNcmluZywgaWQIHNcmluZywgcJjRXJyOiBhbnksIGldlkPzogcRyaWnKSBXGgICAgcVwZXIoXGgICAgICBgRXJybIgdhpbGUgJHtvcHgbgJHtpZHkeldlkIDgXCIPlwiICsgbmVSWQgOiBcIlwifTogJHtcbiAgICAgICAgcJjRXJyIGlucRhbmNlbYgRXJybIgPyBgJHtzcmNFcnIubmFtZXICRcJjRXJyLmlcNhZVYCAIHNyYVyclxuICAgICAgfWAsXGgICAgKTtcbiAgICBjbzbxlLmVycmyKGAkewfSBvbiAkelkfSRbmVSWQgPyBcIj+XCIgKyBuZXdJZCAIFwiXCJYCwgcJjRXJyKTtcbiAgICBaGlzLmhbWUgPSBcIlNhdmVJYuRXJybJcIjtcbiAgfVxufVxuIiwgIiqKlxuICogRnVzZSqcyBNiLjIgLSBMaWdodHdlaWdodCBmdXpeSzZWFyYggKGhdHALymdXNlanMuaWpXGgKlxuICogQweXJpZhIChjKSAyMDIyIEtpcmgUmlzayAoaHRcDovLtpcmubWUpXGgKiBBbGwgUmlnaHRzIFJlcVydmVkLiBBcGFjaGUgUmdHdhcmUgTGljZWzZSAyLjBcbiAqXGgKiBodHRwOivddLmFwYWNoZSvcmcvbGljZWzZXMvTElDRUTRSyLjBcbiAqLxuXGmdWjdGlvbiBpcFycmFKHZhbHVlKSBXGgIHJldHVybiAhQXJyYXkuaXNBcnJheVxuICAgIDgZVVGFnKHZhbHVlKSAPTgJtvYmplYQgQXJyYXldJxuICAgIDogQXJyYXkuaXNBcnJheShYWxZSlcbncblxuLygQWRhcHRlZCBmcmtOiBodHRwczovLdpdGhYijbvbGkYXNoLxvZGFzaCibGiLhcRlciuaWZXJuYWwvYmFzZVRvURyaWnLmpzXGjbzdCBJTkZJTklUWSAIDEgLyAwOxuZnVuYRpbgYmFzZVRvURyaWnKHZhbHVlKSBXGgICvIEVaXQgZWFybHkgZmyIHNcmluZMgdGgYXZvaWQgYSBwZXJmbJtYWjZSBoaXQgaWgctZSBlbnZpcmubWVudHMuXGgIGlmICheXBlbYgdmFsdWUgPTgJNcmluZycpIHtcbiAgICByZXRcmgdmFsdWVcbiAgfVxuICBsZXQgcmVzdWxIDgdmFsdWUgKyAnJztcbiAgcmVdXJuIHJlcVsdCAPSAnMCcgJiYgMSAvIHZhbHVlIDICJTkZJTklUWSA/ICctMCcgOiByZXNbHRcbncblxuZnVuYRpbgdGTdHJpbmcodmFsdWUpIHtcbiAgcmVdXJuIHZhbHVlIDIGbGwgPyAnJyAIGJhcVUbNcmluZyhYWxZSlcbncblxuZnVuYRpbgaXNTdHJpbmcodmFsdWUpIHtcbiAgcmVdXJuIHRcGVvZiBYWxZSAPTgJNcmluZydcbncblxuZnVuYRpbgaXNOdWiZXIodmFsdWUpIHtcbiAgcmVdXJuIHRcGVvZiBYWxZSAPTgJbWJlcidcbncblxuLygQWRhcHRlZCBmcmtOiBodHRwczovLdpdGhYijbvbGkYXNoLxvZGFzaCibGiLhcRlcipcJvbxlYWuanNcbmZbmNaWuIGlzQmvbGVhbihYWxZSkgexuICByZXRcmgKFxuICAgIHZhbHVlIDPSBcnVlIHxXGgICAgdmFsdWUgPTIGZhbHNlIHxXGgICAgKGlzTJqZWNTGlrZShYWxZSkgJiYgZVVGFnKHZhbHVlKSAPSAnWiamVjdCBCbsZWFuXScpXGgIClcbncblxuZnVuYRpbgaXNPYmplYQodmFsdWUpIHtcbiAgcmVdXJuIHRcGVvZiBYWxZSAPTgJiamVjdCdcbncblxuLygQhlYtzIGlmIGBYWxZWAgaXMgbJqZWNLWxpaUuXGmdWjdGlvbiBpciamVjdExpaUodmFsdWUpIHtcbiAgcmVdXJuIGlzTJqZWNKHZhbHVlKSAmJiBYWxZSAhPTgbnVsbFxufVxuXGmdWjdGlvbiBpcRlZmluZWQodmFsdWUpIHtcbiAgcmVdXJuIHZhbHVlICEPSBbmRlZmluZWQgJiYgdmFsdWUgITIGbGxcbncblxuZnVuYRpbgaXNCbGFuayhYWxZSkgexuICByZXRcmgIXZhbHVlLnRyaWoKSsZWndGhcbncblxuLygRVcyBaGUgYHRvURyaWnVGFnYCBvZiBgdmFsdWVgLlxuLygQWRhcHRlZCBmcmtOiBodHRwczovLdpdGhYijbvbGkYXNoLxvZGFzaCibGiLhcRlciuaWZXJuYWwvZVVGFnLmpzXGmdWjdGlvbiBnZXRUYWcodmFsdWUpIHtcbiAgcmVdXJuIHZhbHVlIDIGbGxcbiAgICA/IHZhbHVlIDPSBbmRlZmluZWRcbiAgICAgIDgJtvYmplYQgVWkZWZpbmVkXSdcbiAgICAgIDogJtvYmplYQgTnVsbFnXGgICAgOiBPYmplYQucHJvdGeXBlLnRvURyaWnLmNhbGwodmFsdWUpXGXGcbmNvbnNIEVYVEVOREVEXNFQVJDSFVTkFWQUlMQUJMRSAICdFeHRlbmRlZCBzZWFyYggaXMgbmIGFYWlsYWJsZScXGcbmNvbnNIElOQSUkVDVFJTkRFWFUWVBFIDgXCJJbmNvcnJlYQgJluZGVJyBeXBlXCIXGcbmNvbnNIExPRlDQUxfUVBUkNIXlOVkFMSURfUVVFUllfRkSXtFWSAIChrZXkpID+XGgIGBJbnZhbGlkIHZhbHVlIGZvciBrZXkgJHtrZXlYDtcblxuYucQgUEFUVEVSTlMRUHVEhfVEPXxBUkdFIDgKGheCkgPTcbiAgYFBhdHRlcmgbGVuZRoIGVYVlZHMgbWFIGmICRbWFfSgOxuXGjbzdCBNSVNTSUHXtFWVQUkQRVJUWSAIChuYWlKSAPiBgTWlzcluZyAkehbWVIHBybBlcnRIGluIGtleWAXGcbmNvbnNIElOVkFMSURfSVZXdFSUdIVFWQUxVRSAIChrZXkpID+XGgIGBQcmwZXJeSAndVpZhJyBpbiBrZXkgJyRaVfScgbXVzdCBiZSBhIHBvclaXZlIGludGVnZXJgOxuXGjbzdCBoYXNPdgPSBPYmplYQucHJvdGeXBlLmhhcblBybBlcnROxuXGjbGFzcyBLZXlTdGyZSBXGgIGNvbnNcnVjdGyKGtleXMpIHtcbiAgICBaGlzLlrZXlzIDgWXGgICAgdGhpcyfaVTWFwIDgeXGcbiAgICBsZXQgdGYWxXZWlnaHQgPSAwOxuXGgICAgaVcymbJFYWNoKChrZXkpID+IHtcbiAgICAgIGxldCBvYmogPSBjcmVhdGVLZXkoaVKTtcblxuICAgICAgdGYWxXZWlnaHQgKzgbJqLndlaWdodDtcblxuICAgICAgdGhpcyfaVcywdXNoKGiaikXGgICAgICBaGlzLlrZXlNYXBbbJqLmlkXSAIGiajtcblxuICAgICAgdGYWxXZWlnaHQgKzgbJqLndlaWdodDtcbiAgICBKTtcblxuICAgICvIEvcmhbGlZSBZWlnaHRzIHNvIHRoYXQgdGhlaXIgcVtIGlzIGVxdWFsIHRvIDFcbiAgICBaGlzLlrZXlzLmZvckVhYgoKGtleSkgPTgexuICAgICAgaVLndlaWdodCAvPSBbRhbFdlaWdodDtcbiAgICBKTtcbiAgfVxuICBnZXQoaVSWQpIHtcbiAgICByZXRcmgdGhpcyfaVTWFwWtleUlkXVxuICBXGgIGtleXMoKSBXGgICAgcmVdXJuIHRoaXMuXtleXNcbiAgfVxuICBbpTToKSBXGgICAgcmVdXJuIEpTTucRyaWnaWZKHRoaXMuXtleXMpXGgIHcbncblxuZnVuYRpbgYJlYXRlSVKGtleSkgexuICBsZXQgcGFaCAIGbGwXGgIGxldCBpZCAIGbGwXGgIGxldCBzcmMgPSBudWxsOxuICBsZXQgdVpZhIDgMTtcbiAgbGVIGdldEZuIDgbnVsbDtcblxuICBpZiAoaXNTdHJpbmcoaVKSBfCBpcFycmFKGtleSkpIHtcbiAgICBzcmMgPSBrZXkXGgICAgcGFaCAIGNyZWFZUtleVBhdGgoaVKTtcbiAgICBpZCAIGNyZWFZUtleUlkKGtleSkXGgIHgZWxzZSBXGgICAgaWYgKCFoYXNPduYFsbChrZXksICduYWlJykpIHtcbiAgICAgIHRocmIGldyBFcnJvcihNSVNTSUHXtFWVQUkQRVJUWSgnbmFtZScpKVxuICAgIHcblxuICAgIGNvbnNIGhbWUgPSBrZXkubmFtZTtcbiAgICBzcmMgPSBuYWlOxuXGgICAgaWYgKGhhcbijYWxsKGtleSwgJdlaWdodCcpKSBXGgICAgICBZWlnaHQgPSBrZXkudVpZhOxuXGgICAgICBpZiAodVpZhIDwIDApIHtcbiAgICAgICAgdGhybcgbmVIEVycmyKElOVkFMSURfSVZXdFSUdIVFWQUxVRShuYWlKSlcbiAgICAgIHcbiAgICBXGcbiAgICBwYXRoIDgYJlYXRlSVUGFaChuYWlKTtcbiAgICBpZCAIGNyZWFZUtleUlkKGhbWUpOxuICAgIGdldEZuIDgaVLmdldEZuOxuICBXGcbiAgcmVdXJuIHsgcGFaCwgaWQsIHdlaWdodCwgcJjLCBnZXRGbiBXGXGcbmZbmNaWuIGNyZWFZUtleVBhdGgoaVKSBXGgIHJldHVybiBpcFycmFKGtleSkgPyBrZXkgOiBrZXkucBsaXQoJynKVxufVxuXGmdWjdGlvbiBjcmVhdGVLZXlJZChrZXkpIHtcbiAgcmVdXJuIGlzQXJyYXkoaVKSA/IGtleSqbluKCcuJykgOiBrZXlcbncblxuZnVuYRpbgZVKGiaiwgcGFaCkgexuICBsZXQgbGlzdCAIFtdOxuICBsZXQgYXJyIDgZmFscUXGcbiAgYucQgZGVlcEdldCAIChvYmosIHBhdGgsIGluZGVKSAPiBXGgICAgaWYgKCFpcRlZmluZWQobJqKSkgexuICAgICAgcmVdXJuXGgICAgfVxuICAgIGlmICghcGFaFtpbmRleFpIHtcbiAgICAgICvIElmIHRoZXJlJMgbmgcGFaCBsZWZLCBZSdZSBhcnJpdmVkIGFIHRoZSBvYmplYQgdUgYFyZSBhYmdCcbiAgICAgIGxpcQucHVzaChvYmopOxuICAgIHgZWxzZSBXGgICAgICBsZXQgaVIDgcGFaFtpbmRleFXGcbiAgICAgIGNvbnNIHZhbHVlIDgbJqWtleVXGcbiAgICAgIGlmICghaXNEZWZpbmVkKHZhbHVlKSkgexuICAgICAgICByZXRcmcbiAgICAgIHcblxuICAgICAgLygSWYgdUncmUgYXQgdGhlIGxhcQgdmFsdWUgaWgdGhlIHBhdGgsIGFuZCBpZiBpdCdzIGEgcRyaWnLbWJlciibsLFxuICAgICAgLygYWRkIGlIHRvIHRoZSBsaXNXGgICAgICBpZiAoXGgICAgICAgIGluZGVIDPSBwYXRoLmxlbmdaCAtIDEgJiZcbiAgICAgICAgKGlzURyaWnKHZhbHVlKSBfCBpcbWJlcihYWxZSkgfHwgaXNCbsZWFuKHZhbHVlKSlcbiAgICAgICkgexuICAgICAgICBsaXNLnBcgodGTdHJpbmcodmFsdWUpKTtcbiAgICAgIHgZWxzZSBpZiAoaXNBcnJheShYWxZSkpIHtcbiAgICAgICAgYXJyIDgdHJZTtcbiAgICAgICAgLygUVhcmNoIGVhYggaXRlbSBpbiBaGUgYXJyYXkuXGgICAgICAgIGZvciAobGVIGkgPSAwLCBsZWgPSBYWxZSsZWndGgIGkgPCBsZWIGkgKzgMSkgexuICAgICAgICAgIGRlZXBHZXQodmFsdWVbaVsIHBhdGgsIGluZGVICsgMSkXGgICAgICAgIHcbiAgICAgIHgZWxzZSBpZiAocGFaCsZWndGgpIHtcbiAgICAgICAgLygQWgbJqZWNLiBSZWNcnNlIGZcnRoZXIuXGgICAgICAgIGRlZXBHZXQodmFsdWUsIHBhdGgsIGluZGVICsgMSkXGgICAgICBXGgICAgfVxuICBOxuXGgICvIEJhYtYXJkcyBjbwYXRpYmlsaXRIChzaWjZSBwYXRoIHVzZWQgdGgYmUgYSBzdHJpbmcpXGgIGRlZXBHZXQobJqLCBpcNcmluZyhwYXRoKSA/IHBhdGgucBsaXQoJynKSAIHBhdGgsIDApOxuXGgIHJldHVybiBhcnIgPyBsaXNIDogbGlzdFswXVxufVxuXGjbzdCBNYXRjaEwdGlvbnMgPSBXGgICvIFdoZXRoZXIgdGhlIGhdGNoZXMgchvdWxkIGJlIGluYxZGVkIGluIHRoZSByZXNbHQgcVLiBXaGVuIGBcnVlYCwgZWFjaCByZWNvcmQgaWgdGhlIHJlcVsdFxuICAvLyBzZXQgdlsbCBpbmNsdWRlIHRoZSBpbmRpYVzIGmIHRoZSBtYXRjaGVkIGNoYXJhYRlcnMuXGgICvIFRoZXNlIGNhbiBjbzZXFZWbHkgYmUgdXNlZCBmbIgaGlnaGxpZhaWnIHBcnBvcVzLlxuICBpbmNsdWRlTWFYhlczogZmFscUsXGgICvIFdoZWgYHRydWVgLCBaGUgbWFYhpbmcgZnVuYRpbgdlsbCBjbaWZSBbyBaGUgZWkIGmIGEgcVhcmNoIHBhdHRlcmgZXZlbiBpZlxuICAvLyBhIHBlcmZlYQgbWFYggaGFzIGFscmVhZHkgYmVlbiBsbNhdGVkIGluIHRoZSBzdHJpbmcuXGgIGZpbmRBbGxNYXRjaGVzOiBmYWxzZSxcbiAgLygTWluaWbSBudWiZXIgbYgYhhcmFjdGVycyBaGFIGcQgYmUgbWFYhlZCBiZWZvcmUgYSByZXNbHQgaXMgYuclkZXJlZCBhIGhdGNoXGgIGpbkhdGNoQhhckxlbmdaDogMVxufTtcblxuYucQgQmFzaWNPcHRpbzIDgexuICAvLyBXaGVuIGBcnVlYCwgdGhlIGFsZyaXRobSBjbaWZXMgcVhcmNoaWnIHRvIHRoZSBlbmQgbYgdGhlIGlucHVIGVZWgaWYgYSBwZXJmZWNXGgICvIGhdGNoIGlzIGZvdWkIGJlZmyZSBaGUgZWkIGmIHRoZSBzYWlIGlucHVLlxuICBpcNhcVTZWzaXRpdmUIGZhbHNlLFxuICAvLyBXaGVuIHRydWUsIHRoZSBtYXRjaGluZyBmdWjdGlvbiBaWxsIGNvbnRpbnVlIHRvIHRoZSBlbmQgbYgYSBzZWFyYggcGFdGVybiBldmVuIGlmXGgIGluYxZGVTYyZTogZmFscUsXGgICvIExpcQgbYgcHJvcGVydGllcyBaGFIHdpbGwgYmUgcVhcmNoZWQuIFRoaXMgYWxzbyBzdXBwbJcyBuZXNZWQgcHJvcGVydGllcycbiAgaVczogWsXGgICvIFdoZXRoZXIgdGgcydCBaGUgcmVzdWxIGxpcQsIGJIHNjbJlXGgIHNobVsZFNvcnQIHRydWUsXGgICvIERlZmFbHQgcydCBmdWjdGlvbjogcydCBieSBhcNlbmRpbmcgcNvcmUsIGFzYVuZGluZyBpbmRleFxuICBzbJRmIChhLCBiKSAPlxuICAgIGEucNvcmUgPTIGIucNvcmUgPyAoYSpZHggPCBiLmlkeCA/ICxIDogMSkgOiBhLnNjbJlIDwgYizYyZSA/ICxIDogMVxufTtcblxuYucQgRnVenlPcHRpbzIDgexuICAvLyBBcHBybhpbWFZWxIHdoZXJlIGluIHRoZSBZXhIGlzIHRoZSBwYXRZXJuIGVcGVjdGVkIHRvIGJlIGZvdWkPxuICBsbNhdGlvbjogMCxcbiAgLygQXQgdhhdCBwbludCBkbVzIHRoZSBtYXRjaCBhbGdvcmlaGgZlZSBcCgQSBaHJlchvbGQgbYgJzAuMCcgcmVxdWlyZXMgYSBwZXJmZWNIGhdGNoXGgICvIChvZiBibRoIGxldHRlcnMgYWkIGxvYFaWuKSwgYSBaHJlchvbGQgbYgJzEuMCcgdbGQgbWFYggYWdGhpbmcuXGgIHRocmVzaGsZDogMCLFxuICAvLyBEZXRlcmpbmVzIGhvdyBjbGzZSBaGUgbWFYggbXVzdCBiZSBbyBaGUgZnVenkgbGjYXRpbgKHNwZWNpZmllZCBhYmZSkuXGgICvIEFuIGVYWNIGxldHRlciBtYXRjaCBaGljaCBpcyAnZGlzdGFuYUnIGNoYXJhYRlcnMgYXdheSBmcmtIHRoZSBmdXpeSBsbNhdGlvblxuICAvLyBbVsZCBzYyZSBhcyBhIGNvbXBsZXRlIGpchdGNoLiBBIGRpcRhbmNlIGmICcwJyByZXFaXJlcyBaGUgbWFYggYmUgYXRcbiAgLygdGhlIGVYWNIGxvYFaWuIHNwZWNpZmllZCwgYSBaHJlchvbGQgbYgJzEwMDAnIHdvdWxkIHJlcXVpcmUgYSBwZXJmZWNIGhdGNoXGgICvIHRvIGJlIHdpdGhpbiAMDAgYhhcmFjdGVycyBvZiBaGUgZnVenkgbGjYXRpbgdGgYmUgZmbmQgdXNpbmcgYSAwLjggdGhyZXNobxkLlxuICBkaXNYWjZTogMTAwXGOxuXGjbzdCBBZHZhbmNlZEwdGlvbnMgPSBXGgICvIFdoZWgYHRydWVgLCBpdCBlbmFibGVzIHRoZSBcUgbYgdWpeCsaWtlIHNlYXJjaCBjbtYWkcxuICBcVFeHRlbmRlZFNlYXJjaDogZmFscUsXGgICvIFRoZSBnZXQgZnVuYRpbgdGgdXNlIHdoZWgZmVYhpbmcgYWgbJqZWNJMgcHJvcGVydGllcycbiAgLygVGhlIGRlZmFbHQgdlsbCBzZWFyYggbmVzdGVkIHBhdGhzICppZSBmbuYmFyLmJheipcbiAgZVRmIGdldCxcbiAgLygVhlbiBgdHJZWAsIHNlYXJjaCBaWxsIGlnbmyZSBgbGjYXRpbgIGFuZCBgZGlzdGFuYVgLCBzbyBpdCBbndCBtYXRZXJcbiAgLygdhlcmUgaWgdGhlIHNcmluZyBaGUgcGFdGVybiBhcHBlYXJzLlxuICAvLyBNbJlIGluZmIGhdHBzOivZnVzZWpzLmlvLNvbmNlcHRzLNjbJpbmctdGhlbJLmhbWwjZnVemluZXNzLXNjbJlXGgIGlnbmyZUxvYFaWuOiBmYWxzZSxcbiAgLygVhlbiBgdHJZWAsIHRoZSBjYWxjdWxhdGlvbiBmbIgdGhlIHJlbGVYWjZSBzYyZSAodXNlZCBmbIgcydGluZykgdlsbFxuICAvLyBpZvcmUgdGhlIGZpZWxkLWxlbmdaCBubJtLlxuICAvLyBNbJlIGluZmIGhdHBzOivZnVzZWpzLmlvLNvbmNlcHRzLNjbJpbmctdGhlbJLmhbWwjZmllbGQtbGVuZRoLWvcmcbiAgaWdubJlRmllbGRObJtOiBmYWxzZSxcbiAgLygVGhlIHdlaWdodCBbyBkZXRlcmpbmUgaGIGYggZmllbGQgbGVuZRoIGvcmgZWZmZWNcyBzYyaWnLlxuICBmaWVsZEvcmXZWlnaHQIDFcbnXGcbnZhciBDbmaWcgPSBXGgICuLkJhcljTBaWucyxcbiAgLiuTWFYhPcHRpbzLFxuICAuLiGdXpeUwdGlvbnMsXGgICuLkFkdmFuYVkTBaWucxufTtcblxuYucQgUBBQUgPSAvWgXSsvZztcblxuLygRmllbGQtbGVuZRoIGvcmIHRoZSBzaGydGVyIHRoZSBmaWVsZCwgdGhlIGhpZhlciBaGUgdVpZhLlxuLygUVIHRvIDMgZGVjaWhbHMgdGgcmVkdWNlIGluZGVIHNpemUuXGmdWjdGlvbiBubJtKHdlaWdodCAIDEsIGhbnRpcNhIDgMykgexuICBjbzdCBjYWNoZSAIGldyBNYXAoKTtcbiAgYucQgbSAIEhdGgucGKDEwLCBtYWaXNzYSkXGcbiAgcmVdXJuIHtcbiAgICBnZXQodmFsdWUpIHtcbiAgICAgIGNvbnNIGbVRvaVucyAIHZhbHVlLmhdGNoKFNQQUNFKSsZWndGgXGcbiAgICAgIGlmIChjYWNoZSoYXMobnVtVGrZWzKSkgexuICAgICAgICByZXRcmgYFjaGUuZVKGbVRvaVucylcbiAgICAgIHcblxuICAgICAgLygRGVmYXVsdCBmdWjdGlvbiBpcyAxLNxcnQoeCksIHdlaWdodCBtYWtlcyBaGFIHZhcmlhYmxlXGgICAgICBjbzdCBubJtIDgMSAvIEhdGgucGKGbVRvaVucywgMCICogdVpZhKTtcblxuICAgICAgLygSWgcGxhYUgbYgYHRvRmlZWQobWFudGlzcEpYCwgZmyIGZhcRlciBjbwdXRhdGlvblxuICAgICAgYucQgbiAIHBhcnNlRmxvYXQoTWFaCybVuZChubJtICogbSkgLyBtKTtcblxuICAgICAgYFjaGUucVKGbVRvaVucywgbikXGcbiAgICAgIHJldHVybiBuXGgICAgfSxcbiAgICBjbGVhcigpIHtcbiAgICAgIGNhYhlLmNsZWFyKCkXGgICAgfVxuICBXGXGcbmNsYXNzIEZcVJbmRleCBXGgIGNvbnNcnVjdGyKHtcbiAgICBnZXRGbiAIENvbmZpZynZXRGbixcbiAgICBmaWVsZEvcmXZWlnaHQgPSBDbmaWcuZmllbGRObJtVVpZhXGgIHgPSBfSkgexuICAgIHRoaXMubmybSAIGvcmoZmllbGRObJtVVpZhLCAzKTtcbiAgICBaGlzLmdldEZuIDgZVRmXGgICAgdGhpcypcNyZWFZWQgPSBmYWxzZTtcblxuICAgIHRoaXMucVSWkZXhSZWNvcmRzKCkXGgIHcbiAgcVUcmNlcyhkbNzIDgWpIHtcbiAgICBaGlzLmRvYMgPSBkbNzOxuICBXGgIHNldEluZGVUmVjbJkcyhyZWNvcmRzIDgWpIHtcbiAgICBaGlzLnJlYyZHMgPSByZWNvcmRzOxuICBXGgIHNldEtleXMoaVcyAIFtdKSBXGgICAgdGhpcyrZXlzIDgaVcztcbiAgICBaGlzLlrZXlzTWFwIDgeXGgICAgaVcymbJFYWNoKChrZXksIGlkeCkgPTgexuICAgICAgdGhpcyfaVchcFtrZXkuaWRdIDgaWROxuICAgIHpOxuICBXGgIGNyZWFZSgpIHtcbiAgICBpZiAodGhpcypcNyZWFZWQgfHwgIXRoaXMuZGjcysZWndGgpIHtcbiAgICAgIHJldHVyblxuICAgIHcblxuICAgIHRoaXMuaXNDcmVhdGVkIDgdHJZTtcblxuICAgICvIExpcQgaXMgQXJyYXkURyaWnPlxuICAgIGlmIChpcNcmluZyhaGlzLmRvYNbMFpKSBXGgICAgICBaGlzLmRvYMuZmyRWFjaCgoZGjLCBkbNJbmRleCkgPTgexuICAgICAgICBaGlzLlhZGRTdHJpbmcoZGjLCBkbNJbmRleCkXGgICAgICBKTtcbiAgICBIGVscUgexuICAgICAgLygTGlzdCBpcyBBcnJheTxPYmplYQ+XGgICAgICBaGlzLmRvYMuZmyRWFjaCgoZGjLCBkbNJbmRleCkgPTgexuICAgICAgICBaGlzLlhZGRPYmplYQoZGjLCBkbNJbmRleCkXGgICAgICBKTtcbiAgICBXGcbiAgICBaGlzLmvcmuYxlYXIoKTtcbiAgfVxuICAvLyBBZGRzIGEgZGjIHRvIHRoZSBlbmQgbYgdGhlIGluZGVXGgIGFkZChkbMpIHtcbiAgICBjbzdCBpZHggPSBaGlzLnNpemUoKTtcblxuICAgIGlmIChpcNcmluZyhkbMpKSBXGgICAgICBaGlzLlhZGRTdHJpbmcoZGjLCBpZHgpOxuICAgIHgZWxzZSBXGgICAgICBaGlzLlhZGRPYmplYQoZGjLCBpZHgpOxuICAgIHcbiAgfVxuICAvLyBSZWvdmVzIHRoZSBkbMgYXQgdGhlIHNwZWNpZmllZCBpbmRleCBvZiBaGUgaWkZXhcbiAgcmVtbZlQXQoaWRKSBXGgICAgdGhpcyyZWNvcmRzLnNwbGljZShpZHgsIDEpOxuXGgICAgLygQhhbmdlIHJlZiBpbmRleCBvZiBldmVyeSBzdWJzcXVlbnQgZGjXGgICAgZmyIChsZXQgaSAIGlkeCwgbGVuIDgdGhpcyzaXplKCkIGkgPCBsZWIGkgKzgMSkgexuICAgICAgdGhpcyyZWNvcmRzWldLmkgLTgMTtcbiAgICBXGgIHcbiAgZVVmFsdWVGbJJdGVtQXRLZXlJZChpdGVtLCBrZXlJZCkgexuICAgIHJldHVybiBpdGVtWRoaXMuXtleXNNYXBbaVSWRdXVxuICBXGgIHNpemUoKSBXGgICAgcmVdXJuIHRoaXMucmVjbJkcysZWndGhcbiAgfVxuICBfYWRkURyaWnKGRvYywgZGjSWkZXgpIHtcbiAgICBpZiAoIWlzRGVmaWlZChkbMpIHxIGlzQmxhbmsoZGjKSkgexuICAgICAgcmVdXJuXGgICAgfVxuXGgICAgbGVIHJlYyZCAIHtcbiAgICAgIHYIGRvYyxcbiAgICAgIGkIGRvYluZGVLFxuICAgICAgbjogdGhpcyubJtLmdldChkbMpXGgICAgfTtcblxuICAgIHRoaXMucmVjbJkcywdXNoKHJlYyZCkXGgIHcbiAgXFkZEiamVjdChkbMsIGRvYluZGVKSBXGgICAgbGVIHJlYyZCAIHsgaTogZGjSWkZXgsICQIHtIHXGcbiAgICAvLyBJdGVyYXRlIGZXIgZXZlcnkgaVIChpLmUsIHBhdGgpLCBhbmQgZmVYggdGhlIHZhbHVlIGFIHRoYXQgaVXGgICAgdGhpcyrZXlzLmZvckVhYgoKGtleSwgaVSWkZXgpID+IHtcbiAgICAgIGxldCBYWxZSAIGtleSnZXRGbiA/IGtleSnZXRGbihkbMpIDogdGhpcynZXRGbihkbMsIGtleSwYXRoKTtcblxuICAgICAgaWYgKCFpcRlZmluZWQodmFsdWUpKSBXGgICAgICAgIHJldHVyblxuICAgICAgfVxuXGgICAgICBpZiAoaXNBcnJheShYWxZSkpIHtcbiAgICAgICAgbGVIHNYlJlYyZHMgPSBbXTtcbiAgICAgICAgYucQgcRhYsgPSBbeyBuZXNZWRBcnJJbmRleDogLTEsIHZhbHVlIHdOxuXGgICAgICAgIHdoaWxlIChzdGFjaysZWndGgpIHtcbiAgICAgICAgICBjbzdCBIGlcRlZEFyckluZGVLCBYWxZSBIDgcRhYsucGwKCkXGcbiAgICAgICAgICBpZiAoIWlzRGVmaWlZChYWxZSkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXGgICAgICAgICAgfVxuXGgICAgICAgICAgaWYgKGlzURyaWnKHZhbHVlKSAmJiAhaXNCbGFuayhYWxZSkpIHtcbiAgICAgICAgICAgIGxldCBzdWJSZWNvcmQgPSBXGgICAgICAgICAgICAgIHYIHZhbHVlLFxuICAgICAgICAgICAgICBpOiBuZXNZWRBcnJJbmRleCxcbiAgICAgICAgICAgICAgbjogdGhpcyubJtLmdldChYWxZSlcbiAgICAgICAgICAgIHXGcbiAgICAgICAgICAgIHNYlJlYyZHMucHVzaChzdWJSZWNvcmQpOxuICAgICAgICAgIHgZWxzZSBpZiAoaXNBcnJheShYWxZSkpIHtcbiAgICAgICAgICAgIHZhbHVlLmZvckVhYgoKGlZWsIGspID+IHtcbiAgICAgICAgICAgICAgcRhYsucHVzaChXGgICAgICAgICAgICAgICAgbmVzdGVkQXJySWkZXgIGssXGgICAgICAgICAgICAgICAgdmFsdWUIGlZWcbiAgICAgICAgICAgICAgfSkXGgICAgICAgICAgICBKTtcbiAgICAgICAgICBIGVscUgOxuICAgICAgICBXGgICAgICAgIHJlYyZCkWtleUluZGVXSAIHNYlJlYyZHMXGgICAgICBIGVscUgaWYgKGlzURyaWnKHZhbHVlKSAmJiAhaXNCbGFuayhYWxZSkpIHtcbiAgICAgICAgbGVIHNYlJlYyZCAIHtcbiAgICAgICAgICBOiBYWxZSxcbiAgICAgICAgICBuOiBaGlzLmvcmuZVKHZhbHVlKVxuICAgICAgICBOxuXGgICAgICAgIHJlYyZCkWtleUluZGVXSAIHNYlJlYyZDtcbiAgICAgIHcbiAgICBKTtcblxuICAgIHRoaXMucmVjbJkcywdXNoKHJlYyZCkXGgIHcbiAgdGKUOKCkgexuICAgIHJldHVybiBXGgICAgICBrZXlzOiBaGlzLmtleXMsXGgICAgICByZWNvcmRzOiBaGlzLnJlYyZHNcbiAgICBXGgIHcbncblxuZnVuYRpbgYJlYXRlSWkZXgoXGgIGtleXMsXGgIGRvYMsXGgIHsgZVRmgPSBDbmaWcuZVRmsIGZpZWxkTmybVdlaWdodCAIENvbmZpZymaWVsZEvcmXZWlnaHQgfSAIHtXGpIHtcbiAgYucQgbXlJbmRleCAIGldyBGdXNlSWkZXgoeyBnZXRGbiwgZmllbGRObJtVVpZhIHpOxuICBteUluZGVLnNldEtleXMoaVcytYXAoYJlYXRlSVKSkXGgIGSWkZXgucVUcmNlcyhkbNzKTtcbiAgbXlJbmRleCjcmVhdGUoKTtcbiAgcmVdXJuIGSWkZXhcbncblxuZnVuYRpbgcGFycVJbmRleChcbiAgZGFYSxcbiAgeyBnZXRGbiAIENvbmZpZynZXRGbiwgZmllbGRObJtVVpZhIDgQuZmlnLmZpZWxkTmybVdlaWdodCBIDgecbikgexuICBjbzdCBIGtleXMsIHJlYyZHMgfSAIGRhdGEXGgIGNvbnNIGSWkZXggPSBuZXcgRnVzZUluZGVKHsgZVRmsIGZpZWxkTmybVdlaWdodCBKTtcbiAgbXlJbmRleCzZXRLZXlzKGtleXMpOxuICBteUluZGVLnNldEluZGVUmVjbJkcyhyZWNvcmRzKTtcbiAgcmVdXJuIGSWkZXhcbncblxuZnVuYRpbgYtcHVZVNjbJlJDEoXGgIHBhdHRlcmsXGgIHtcbiAgICBlcnJvcnMgPSAwLFxuICAgIGNcnJlbnRMbNhdGlvbiAIDAsXGgICAgZXhwZWNZWRMbNhdGlvbiAIDAsXGgICAgZGlzdGFuYUgPSBDbmaWcuZGlzdGFuYUsXGgICAgaWdubJlTGjYXRpbgPSBDbmaWcuaWdubJlTGjYXRpbcbiAgfSAIHtXGpIHtcbiAgYucQgYWNjdXJhYkgPSBlcnJvcnMgLyBwYXRZXJuLmxlbmdaDtcblxuICBpZiAoaWdubJlTGjYXRpbpIHtcbiAgICByZXRcmgYWNjdXJhYlcbiAgfVxuXGgIGNvbnNIHBybhpbWleSAIEhdGguYWJzKGVcGVjdGVkTGjYXRpbgLSBjdXJyZWTGjYXRpbpOxuXGgIGlmICghZGlzdGFuYUpIHtcbiAgICAvLyBEbRnZSBkaXZpZGUgYnkgemVybyBlcnJvcicbiAgICByZXRcmgcHJveGltaXRIDgMSwIDogYWNjdXJhYlcbiAgfVxuXGgIHJldHVybiBhYNcmFjeSArIHBybhpbWleSAvIGRpcRhbmNlXGXGcbmZbmNaWuIGNvbnZlcnRNYXNrVGJbmRpYVzKFxuICBtYXRjaGhcsgPSBbXSxcbiAgbWluTWFYhDaGFyTGVuZRoIDgQuZmlnLmpbkhdGNoQhhckxlbmdaFxuKSBXGgIGxldCBpbmRpYVzIDgWXGgIGxldCBzdGFydCAICxOxuICBsZXQgZWkIDgLTEXGgIGxldCBpIDgMDtcblxuICBmbIgKGxldCBsZWgPSBtYXRjaGhcsubGVuZRoOyBpIDwgbGVuOyBpICsIDEpIHtcbiAgICBsZXQgbWFYggPSBtYXRjaGhctbaVXGgICAgaWYgKGhdGNoICYmIHNYXJIDPSAtMSkgexuICAgICAgcRhcnQgPSBpOxuICAgIHgZWxzZSBpZiAoIWhdGNoICYmIHNYXJICEPSAtMSkgexuICAgICAgZWkIDgaSAtIDEXGgICAgICBpZiAoZWkICgcRhcnQgKyAxIDIGpbkhdGNoQhhckxlbmdaCkgexuICAgICAgICBpbmRpYVzLnBcgoWNYXJLCBlbmRdKTtcbiAgICAgIHcbiAgICAgIHNYXJIDgLTEXGgICAgfVxuICBXGcbiAgLygKGktMSAtIHNYXJKSArIDEgPTgaSAtIHNYXJXGgIGlmIChtYXRjaGhctbaSAtIDFdICYmIGkgLSBzdGFydCA+PSBtaWNYXRjaENoYXJMZWndGgpIHtcbiAgICBpbmRpYVzLnBcgoWNYXJLCBpICgMVpOxuICBXGcbiAgcmVdXJuIGluZGljZXNcbncblxuLygTWFjaGluZSBbJkIHNpemVcbmNvbnNIEBWFCSVRTIDgMzIXGcbmZbmNaWuIHNlYXJjaChcbiAgdGVdCxcbiAgcGFdGVybixcbiAgcGFdGVybkFscGhhYmVLFxuICBXGgICAgbGjYXRpbgPSBDbmaWcubGjYXRpbsXGgICAgZGlzdGFuYUgPSBDbmaWcuZGlzdGFuYUsXGgICAgdGhyZXNobxkIDgQuZmlnLnRocmVzaGsZCxcbiAgICBmaWkQWxsTWFYhlcyAIENvbmZpZymaWkQWxsTWFYhlcyxcbiAgICBtaWNYXRjaENoYXJMZWndGggPSBDbmaWcubWluTWFYhDaGFyTGVuZRoLFxuICAgIGluYxZGVNYXRjaGVzIDgQuZmlnLmluYxZGVNYXRjaGVzLFxuICAgIGlnbmyZUxvYFaWuIDgQuZmlnLmlnbmyZUxvYFaWuXGgIHgPSBfVxuKSBXGgIGlmIChwYXRZXJuLmxlbmdaCA+IEBWFCSVRTKSBXGgICAgdGhybcgbmVIEVycmyKFBBVFRFUkfTEVORRIXRPTMQVJHRShNQVhfQklUUykpXGgIHcblxuICBjbzdCBwYXRZXJuTGVuIDgcGFdGVybisZWndGgXGgICvIFNldCBzdGFydGluZyBsbNhdGlvbiBhdCBiZWdpbmpbmcgdGVdCBhbmQgaWpdGlhbGlZSBaGUgYWxwaGFiZXQuXGgIGNvbnNIHRleHRMZWgPSBZXhLmxlbmdaDtcbiAgLygSGFuZGxlIHRoZSBjYXNlIHdoZWgbGjYXRpbgPiBZXhLmxlbmdaFxuICBjbzdCBleHBlYRlZExvYFaWuIDgTWFaCtYXgoMCwgTWFaCtaWobGjYXRpbsIHRleHRMZWpKTtcbiAgLygSGlnaGVzdCBzYyZSBiZXlvbmQgdhpYggdUgZlZSBcCcbiAgbGVIGNcnJlbnRUaHJlchvbGQgPSBaHJlchvbGQXGgICvIElzIHRoZXJlIGEgbmVhcmJIGVYWNIGhdGNoPyAocBlZWRcClcbiAgbGVIGJlcRMbNhdGlvbiAIGVcGVjdGVkTGjYXRpbXGcbiAgLygUGVyZmybWFuYUIGubHkgYtcHVZXIgbWFYhlcyBaGVuIHRoZSBtaWNYXRjaENoYXJMZWndGggPiAxXGgICvIESIGlmIGBpbmNsdWRlTWFYhlcAgaXMgdHJZScbiAgYucQgYtcHVZUhdGNoZXMgPSBtaWNYXRjaENoYXJMZWndGggPiAxIHxIGluYxZGVNYXRjaGVzOxuICAvLyBBIGhcsgbYgdGhlIGhdGNoZXMsIHVzZWQgZmyIGJaWxkaWnIHRoZSBpbmRpYVzXGgIGNvbnNIGhdGNoTWFzayAIGNvbXBdGVNYXRjaGVzIDgQXJyYXkodGVdExlbikgOiBbXTtcblxuICBsZXQgaWkZXgXGcbiAgLygRVIGFsbCBleGFjdCBtYXRjaGVzLCBoZXJlIGZvciBzcGVlZCBcFxuICBaGlsZSAoKGluZGVIDgdGVdCpbmRleEmKHBhdHRlcmsIGJlcRMbNhdGlvbikpIDgLTEpIHtcbiAgICBsZXQgcNvcmUgPSBjbwdXRlUNvcmUkMShwYXRZXJuLCBXGgICAgICBjdXJyZWTGjYXRpbIGluZGVLFxuICAgICAgZXhwZWNZWRMbNhdGlvbixcbiAgICAgIGRpcRhbmNlLFxuICAgICAgaWdubJlTGjYXRpbcbiAgICBKTtcblxuICAgIGNcnJlbnRUaHJlchvbGQgPSBNYXRoLmpbihzYyZSwgYVycmVudFRocmVzaGsZCkXGgICAgYmVzdExvYFaWuIDgaWkZXggKyBwYXRZXJuTGVuOxuXGgICAgaWYgKGNvbXBdGVNYXRjaGVzKSBXGgICAgICBsZXQgaSAIDAXGgICAgICBaGlsZSAoaSAIHBhdHRlcmMZWpIHtcbiAgICAgICAgbWFYhNYXNrWluZGVICsgaVgPSAxOxuICAgICAgICBpICsIDEXGgICAgICBXGgICAgfVxuICBXGcbiAgLygUmVzZXQgdGhlIGJlcQgbGjYXRpbcbiAgYmVzdExvYFaWuIDgLTEXGcbiAgbGVIGxhcRCaXRBcnIgPSBbXTtcbiAgbGVIGZpbmFsUNvcmUgPSAxOxuICBsZXQgYmluTWFIDgcGFdGVybkxlbiArIHRleHRMZWXGcbiAgYucQgbWFzayAIDEgPDwgKHBhdHRlcmMZWgLSAxKTtcblxuICBmbIgKGxldCBpIDgMDsgaSAIHBhdHRlcmMZWIGkgKzgMSkgexuICAgICvIFNjYWgZmyIHRoZSBiZXNIGhdGNoOyBlYWNoIGlZXJhdGlvbiBhbGxvdMgZmyIGuZSBtbJlIGVycmyLlxuICAgICvIFJbiBhIGJpbmFyeSBzZWFyYggdGgZGVZXJtaWlIGhvdyBmYXIgZnJvbSBaGUgbWFYggbGjYXRpbgdUgYFuIHNcmFXGgICAgLygYXQgdGhpcyBlcnJvciBsZXZlbCcbiAgICBsZXQgYmluTWluIDgMDtcbiAgICBsZXQgYmluTWlkIDgYmluTWFOxuXGgICAgdhpbGUgKGJpbkpbiAIGJpbkpZCkgexuICAgICAgYucQgcNvcmUgPSBjbwdXRlUNvcmUkMShwYXRZXJuLCBXGgICAgICAgIGVycmyczogaSxcbiAgICAgICAgYVycmVudExvYFaWuOiBleHBlYRlZExvYFaWuICsgYmluTWlkLFxuICAgICAgICBleHBlYRlZExvYFaWuLFxuICAgICAgICBkaXNYWjZSxcbiAgICAgICAgaWdubJlTGjYXRpbcbiAgICAgIHpOxuXGgICAgICBpZiAocNvcmUgPDgYVycmVudFRocmVzaGsZCkgexuICAgICAgICBiaWNaWgPSBiaWNaWQXGgICAgICBIGVscUgexuICAgICAgICBiaWNYXggPSBiaWNaWQXGgICAgICBXGcbiAgICAgIGJpbkpZCAIEhdGguZmxvbIoKGJpbkheCAtIGJpbkpbikgLyAyICsgYmluTWluKTtcbiAgICBXGcbiAgICAvLyBVcUgdGhlIHJlcVsdCBmcmtIHRoaXMgaXRlcmFaWuIGFzIHRoZSBtYXhpbXVtIGZvciBaGUgbmVdCcbiAgICBiaWNYXggPSBiaWNaWQXGcbiAgICBsZXQgcRhcnQgPSBNYXRoLmheCgxLCBleHBlYRlZExvYFaWuICgYmluTWlkICsgMSkXGgICAgbGVIGZpbmlzaCAIGZpbmRBbGxNYXRjaGVzXGgICAgICA/IHRleHRMZWcbiAgICAgIDogTWFaCtaWoZXhwZWNZWRMbNhdGlvbiArIGJpbkpZCwgdGVdExlbikgKyBwYXRZXJuTGVuOxuXGgICAgLygSWpdGlhbGlZSBaGUgYmlIGFycmFXGgICAgbGVIGJpdEFyciAIEFycmFKGZpbmlzaCArIDIpOxuXGgICAgYmlQXJyWZpbmlzaCArIDFdIDgKDEgPDwgaSkgLSAxOxuXGgICAgZmyIChsZXQgaiAIGZpbmlzaDsgaiA+PSBzdGFydDsgaiAtPSAxKSBXGgICAgICBsZXQgYVycmVudExvYFaWuIDgaiAtIDEXGgICAgICBsZXQgYhhckhdGNoIDgcGFdGVybkFscGhhYmVWRleHQuYhhckFKGNcnJlbnRMbNhdGlvbildOxuXGgICAgICBpZiAoYtcHVZUhdGNoZXMpIHtcbiAgICAgICAgLygUBlZWQgdXAIHFaWNrIGJvbwgdGgaWIGNvbnZlcnNpbgKGkuZSwgYGNoYXJNYXRjaCA/IDEgOiAwYClcbiAgICAgICAgbWFYhNYXNrWNcnJlbnRMbNhdGlvblgPSArISFjaGFyTWFYgXGgICAgICBXGcbiAgICAgICvIEZpcnNIHBhcMIGVYWNIGhdGNoXGgICAgICBiaXRBcnJbalgPSAoKGJpdEFycltqICsgMVgPDwgMSkgfCAxKSAmIGNoYXJNYXRjaDtcblxuICAgICAgLygUVicVxdWVudCBwYXNzZXMIGZenpIGhdGNoXGgICAgICBpZiAoaSkgexuICAgICAgICBiaXRBcnJbalgfDcbiAgICAgICAgICAoKGxhcRCaXRBcnJbaiArIDFdIHwgbGFzdEJpdEFycltqXSkgPDwgMSkgfCAxIHwgbGFzdEJpdEFycltqICsgMVXGgICAgICBXGcbiAgICAgIGlmIChiaXRBcnJbalgJiBtYXNrKSBXGgICAgICAgIGZpbmFsUNvcmUgPSBjbwdXRlUNvcmUkMShwYXRZXJuLCBXGgICAgICAgICAgZXJybJzOiBpLFxuICAgICAgICAgIGNcnJlbnRMbNhdGlvbixcbiAgICAgICAgICBleHBlYRlZExvYFaWuLFxuICAgICAgICAgIGRpcRhbmNlLFxuICAgICAgICAgIGlnbmyZUxvYFaWuXGgICAgICAgIHpOxuXGgICAgICAgICvIFRoaXMgbWFYggdlsbCBhbGvcQgYVydGFpbmxIGJlIGJldHRlciBaGFuIGFueSBleGlzdGluZyBtYXRjaCcbiAgICAgICAgLygQnVIGNoZWNrIGFueXdheScbiAgICAgICAgaWYgKGZpbmFsUNvcmUgPDgYVycmVudFRocmVzaGsZCkgexuICAgICAgICAgICvIEluZGVlZCBpdCBpcxuICAgICAgICAgIGNcnJlbnRUaHJlchvbGQgPSBmaWhbFNjbJlOxuICAgICAgICAgIGJlcRMbNhdGlvbiAIGNcnJlbnRMbNhdGlvbjtcblxuICAgICAgICAgICvIEFscmVhZHkgcGFzcVkIGBsbNgLCBkbduaGlsbCBmcmtIGhlcmUgbgaWuXGgICAgICAgICAgaWYgKGJlcRMbNhdGlvbiAPSBleHBlYRlZExvYFaWuKSBXGgICAgICAgICAgICBicmVhaxuICAgICAgICAgIHcblxuICAgICAgICAgICvIFdoZWgcGFzcluZyBgYmVzdExvYFaWuYCwgZGuJQgZXhjZWVkIGciBjdXJyZWIGRpcRhbmNlIGZybgYGVcGVjdGVkTGjYXRpbgLlxuICAgICAgICAgIHNYXJIDgTWFaCtYXgoMSwgMiAqIGVcGVjdGVkTGjYXRpbgLSBiZXNTGjYXRpbpOxuICAgICAgICBXGgICAgICBXGgICAgfVxuXGgICAgLygTmgaGwZSBmbIgYSAoYmVdGVyKSBtYXRjaCBhdCBncmVhdGVyIGVycmyIGxldmVscycbiAgICBjbzdCBzYyZSAIGNvbXBdGVTYyZSQxKHBhdHRlcmsIHtcbiAgICAgIGVycmyczogaSArIDEsXGgICAgICBjdXJyZWTGjYXRpbIGVcGVjdGVkTGjYXRpbsXGgICAgICBleHBlYRlZExvYFaWuLFxuICAgICAgZGlzdGFuYUsXGgICAgICBpZvcmVMbNhdGlvblxuICAgIHpOxuXGgICAgaWYgKHNjbJlIDgYVycmVudFRocmVzaGsZCkgexuICAgICAgYnJlYWtcbiAgICBXGcbiAgICBsYXNQmlQXJyIDgYmlQXJyOxuICBXGcbiAgYucQgcmVzdWxIDgexuICAgIGlzTWFYgIGJlcRMbNhdGlvbiA+PSAwLFxuICAgICvIENvdWIGVYWNIGhdGNoZXMgKHRobNlIHdpdGggYSBzYyZSBvZiAwKSBbyBiZSBcImFsbWzdFwiIGVYWNXGgICAgcNvcmUIEhdGgubWFKDAuMDAxLCBmaWhbFNjbJlKVxuICBOxuXGgIGlmIChjbwdXRlTWFYhlcykgexuICAgIGNvbnNIGluZGljZXMgPSBjbZXJTWFzaRvSWkaWNlcyhtYXRjaEhcssIGpbkhdGNoQhhckxlbmdaCkXGgICAgaWYgKCFpbmRpYVzLmxlbmdaCkgexuICAgICAgcmVzdWxLmlzTWFYggPSBmYWxzZTtcbiAgICBIGVscUgaWYgKGluYxZGVNYXRjaGVzKSBXGgICAgICByZXNbHQuaWkaWNlcyAIGluZGljZXMXGgICAgfVxuICBXGcbiAgcmVdXJuIHJlcVsdFxufVxuXGmdWjdGlvbiBjcmVhdGVQYXRZXJuQWxwaGFiZXQocGFdGVybikgexuICBsZXQgbWFzayAIHtOxuXGgIGZvciAobGVIGkgPSAwLCBsZWgPSBwYXRZXJuLmxlbmdaDsgaSAIGxlbjsgaSArPSAxKSBXGgICAgYucQgYhhciAIHBhdHRlcmuYhhckFKGkpOxuICAgIGhctbYhhclgPSAobWFzatjaGFyXSBfCAwKSBICgxIDwIChsZWgLSBpICgMSkpOxuICBXGcbiAgcmVdXJuIGhctcbncblxuYxhcMgQmlYXBTZWFyYggexuICBjbzdHJYRvcihcbiAgICBwYXRZXJuLFxuICAgIHtcbiAgICAgIGxvYFaWuIDgQuZmlnLmxvYFaWuLFxuICAgICAgdGhyZXNobxkIDgQuZmlnLnRocmVzaGsZCxcbiAgICAgIGRpcRhbmNlIDgQuZmlnLmRpcRhbmNlLFxuICAgICAgaWjbHVkZUhdGNoZXMgPSBDbmaWcuaWjbHVkZUhdGNoZXMsXGgICAgICBmaWkQWxsTWFYhlcyAIENvbmZpZymaWkQWxsTWFYhlcyxcbiAgICAgIGpbkhdGNoQhhckxlbmdaCAIENvbmZpZytaWNYXRjaENoYXJMZWndGgsXGgICAgICBpcNhcVTZWzaXRpdmUgPSBDbmaWcuaXNDYXNlUVuclaXZlLFxuICAgICAgaWdubJlTGjYXRpbgPSBDbmaWcuaWdubJlTGjYXRpbcbiAgICBIDgecbiAgKSBXGgICAgdGhpcyvcHRpbzIDgexuICAgICAgbGjYXRpbsXGgICAgICBaHJlchvbGQsXGgICAgICBkaXNYWjZSxcbiAgICAgIGluYxZGVNYXRjaGVzLFxuICAgICAgZmluZEFsbEhdGNoZXMsXGgICAgICBtaWNYXRjaENoYXJMZWndGgsXGgICAgICBpcNhcVTZWzaXRpdmUsXGgICAgICBpZvcmVMbNhdGlvblxuICAgIHXGcbiAgICBaGlzLnBhdHRlcmgPSBpcNhcVTZWzaXRpdmUgPyBwYXRZXJuIDogcGFdGVybibxvdVyQFzZSgpOxuXGgICAgdGhpcyjaHVuaMgPSBbXTtcblxuICAgIGlmICghdGhpcywYXRZXJuLmxlbmdaCkgexuICAgICAgcmVdXJuXGgICAgfVxuXGgICAgYucQgYWRkQhbmsgPSAocGFdGVybiwgcRhcnRJbmRleCkgPTgexuICAgICAgdGhpcyjaHVuaMucHVzaChXGgICAgICAgIHBhdHRlcmsXGgICAgICAgIGFscGhhYmVOiBjcmVhdGVQYXRZXJuQWxwaGFiZXQocGFdGVybiksXGgICAgICAgIHNYXJSWkZXhcbiAgICAgIHpOxuICAgIHXGcbiAgICBjbzdCBsZWgPSBaGlzLnBhdHRlcmubGVuZRoOxuXGgICAgaWYgKGxlbiA+IEBWFCSVRTKSBXGgICAgICBsZXQgaSAIDAXGgICAgICBjbzdCByZWhaWkZXIgPSBsZWgJSBNQVhfQklUUztcbiAgICAgIGNvbnNIGVuZCAIGxlbiAtIHJlbWFpbmRlcjtcblxuICAgICAgdhpbGUgKGkgPCBlbmQpIHtcbiAgICAgICAgYWRkQhbmsodGhpcywYXRZXJuLnNYnNcihpLCBNQVhfQklUUyksIGkpOxuICAgICAgICBpICsIEBWFCSVRTOxuICAgICAgfVxuXGgICAgICBpZiAocmVtYWluZGVyKSBXGgICAgICAgIGNvbnNIHNYXJSWkZXggPSBsZWgLSBNQVhfQklUUztcbiAgICAgICAgYWRkQhbmsodGhpcywYXRZXJuLnNYnNcihzdGFydEluZGVKSwgcRhcnRJbmRleCkXGgICAgICBXGgICAgfSBlbHNlIHtcbiAgICAgIGFkZENodWrKHRoaXMucGFdGVybiwgMCkXGgICAgfVxuICBXGcbiAgcVhcmNoSWodGVdCkgexuICAgIGNvbnNIHsgaXNDYXNlUVuclaXZlLCBpbmNsdWRlTWFYhlcyBIDgdGhpcyvcHRpbzOxuXGgICAgaWYgKCFpcNhcVTZWzaXRpdmUpIHtcbiAgICAgIHRleHQgPSBZXhLnRvTGZXJDYXNlKCkXGgICAgfVxuXGgICAgLygRXhhYQgbWFYhcbiAgICBpZiAodGhpcywYXRZXJuIDPSBZXhKSBXGgICAgICBsZXQgcmVzdWxIDgexuICAgICAgICBpchdGNoOiBcnVlLFxuICAgICAgICBzYyZTogMFxuICAgICAgfTtcblxuICAgICAgaWYgKGluYxZGVNYXRjaGVzKSBXGgICAgICAgIHJlcVsdCpbmRpYVzIDgWswLCBZXhLmxlbmdaCAtIDFdXTtcbiAgICAgIHcblxuICAgICAgcmVdXJuIHJlcVsdFxuICAgIHcblxuICAgICvIEaGVydlzZSwgdXNlIEJpdGFwIGFsZyaXRobVxuICAgIGNvbnNIHtcbiAgICAgIGxvYFaWuLFxuICAgICAgZGlzdGFuYUsXGgICAgICBaHJlchvbGQsXGgICAgICBmaWkQWxsTWFYhlcyxcbiAgICAgIGpbkhdGNoQhhckxlbmdaCxcbiAgICAgIGlnbmyZUxvYFaWuXGgICAgfSAIHRoaXMubBaWucztcblxuICAgIGxldCBhbGxJbmRpYVzIDgWXGgICAgbGVIHRvdGFsUNvcmUgPSAwOxuICAgIGxldCBoYXNNYXRjaGVzIDgZmFscUXGcbiAgICBaGlzLmNodWrcymbJFYWNoKChIHBhdHRlcmsIGFscGhhYmVLCBzdGFydEluZGVIHpID+IHtcbiAgICAgIGNvbnNIHsgaXNNYXRjaCwgcNvcmUsIGluZGljZXMgfSAIHNlYXJjaChZXhLCBwYXRZXJuLCBhbHBoYWJldCwgexuICAgICAgICBsbNhdGlvbjogbGjYXRpbgKyBzdGFydEluZGVLFxuICAgICAgICBkaXNYWjZSxcbiAgICAgICAgdGhyZXNobxkLFxuICAgICAgICBmaWkQWxsTWFYhlcyxcbiAgICAgICAgbWluTWFYhDaGFyTGVuZRoLFxuICAgICAgICBpbmNsdWRlTWFYhlcyxcbiAgICAgICAgaWdubJlTGjYXRpbcbiAgICAgIHpOxuXGgICAgICBpZiAoaXNNYXRjaCkgexuICAgICAgICBoYXNNYXRjaGVzIDgdHJZTtcbiAgICAgIHcblxuICAgICAgdGYWxTYyZSArPSBzYyZTtcblxuICAgICAgaWYgKGlzTWFYggJiYgaWkaWNlcykgexuICAgICAgICBhbGxJbmRpYVzIDgWyuLmFsbEluZGljZXMsICuLmluZGljZXNdOxuICAgICAgfVxuICAgIHpOxuXGgICAgbGVIHJlcVsdCAIHtcbiAgICAgIGlzTWFYgIGhhchdGNoZXMsXGgICAgICBzYyZTogaGFzTWFYhlcyA/IHRvdGFsUNvcmUgLyBaGlzLmNodWrcysZWndGggOiAxXGgICAgfTtcblxuICAgIGlmIChoYXNNYXRjaGVzICYmIGluYxZGVNYXRjaGVzKSBXGgICAgICByZXNbHQuaWkaWNlcyAIGFsbEluZGljZXMXGgICAgfVxuXGgICAgcmVdXJuIHJlcVsdFxuICBXGXGcbmNsYXNzIEJhcVNYXRjaCBXGgIGNvbnNcnVjdGyKHBhdHRlcmpIHtcbiAgICBaGlzLnBhdHRlcmgPSBwYXRZXJuOxuICBXGgIHNYXRpYyBpcbHRpTWFYgocGFdGVybikgexuICAgIHJldHVybiBnZXRNYXRjaChwYXRZXJuLCBaGlzLmbHRpUmVnZXgpXGgIHcbiAgcRhdGljIGlzUluZxlTWFYgocGFdGVybikgexuICAgIHJldHVybiBnZXRNYXRjaChwYXRZXJuLCBaGlzLnNpbmdsZVJlZVKVxuICBXGgIHNlYXJjaCgvKnRleHQqLykgecbncblxuZnVuYRpbgZVTWFYgocGFdGVybiwgZXhwKSBXGgIGNvbnNIGhdGNoZXMgPSBwYXRZXJuLmhdGNoKGVcCkXGgIHJldHVybiBtYXRjaGVzIDgbWFYhlcsxXSAIGbGxcbncblxuLygVGrZWICdmaWxlXGcbmNsYXNzIEVYWNTWFYggZXhZWkcyBCYXNlTWFYggexuICBjbzdHJYRvcihwYXRZXJuKSBXGgICAgcVwZXIocGFdGVybikXGgIHcbiAgcRhdGljIGdldCBeXBlKCkgexuICAgIHJldHVybiAnZXhhYQnXGgIHcbiAgcRhdGljIGdldCBtdWxaVJlZVKCkgexuICAgIHJldHVybiAvXjcIiguKilcIiQvXGgIHcbiAgcRhdGljIGdldCBzaWnbGVSZWdleCgpIHtcbiAgICByZXRcmgLKCqKSQvXGgIHcbiAgcVhcmNoKHRleHQpIHtcbiAgICBjbzdCBpchdGNoIDgdGVdCAPTgdGhpcywYXRZXJuOxuXGgICAgcmVdXJuIHtcbiAgICAgIGlzTWFYgsXGgICAgICBzYyZTogaXNNYXRjaCA/IDAgOiAxLFxuICAgICAgaWkaWNlczogWzAsIHRoaXMucGFdGVybisZWndGggLSAxXVxuICAgIHcbiAgfVxufVxuXGvLyBUbtlbjogIWZpcmVcblxuYxhcMgSWZXJzZUVYWNTWFYggZXhZWkcyBCYXNlTWFYggexuICBjbzdHJYRvcihwYXRZXJuKSBXGgICAgcVwZXIocGFdGVybikXGgIHcbiAgcRhdGljIGdldCBeXBlKCkgexuICAgIHJldHVybiAnaWZXJzZSleGFjdCdcbiAgfVxuICBzdGFaWMgZVIGbHRpUmVnZXgoKSBXGgICAgcmVdXJuICeIVwiKCqKVwiJCcbiAgfVxuICBzdGFaWMgZVIHNpbmdsZVJlZVKCkgexuICAgIHJldHVybiAvXiEoLiopJCcbiAgfVxuICBzZWFyYgodGVdCkgexuICAgIGNvbnNIGluZGVIDgdGVdCpbmRleEmKHRoaXMucGFdGVybikXGgICAgYucQgaXNNYXRjaCAIGluZGVIDPSAtMTtcblxuICAgIHJldHVybiBXGgICAgICBpchdGNoLFxuICAgICAgcNvcmUIGlzTWFYggPyAwIDogMSxcbiAgICAgIGluZGljZXMIFswLCBZXhLmxlbmdaCAtIDFdXGgICAgfVxuICBXGXGcbivIFRvaVuOiBeZmlsZVxuXGjbGFzcyBQcmVmaXhFeGFjdEhdGNoIGVdGVuZHMgQmFzZUhdGNoIHtcbiAgYucRydWNbIocGFdGVybikgexuICAgIHNcGVyKHBhdHRlcmpOxuICBXGgIHNYXRpYyBnZXQgdHlwZSgpIHtcbiAgICByZXRcmgJByZWZpeCleGFjdCdcbiAgfVxuICBzdGFaWMgZVIGbHRpUmVnZXgoKSBXGgICAgcmVdXJuICeXFxeXCIoLiopXCIkLxuICBXGgIHNYXRpYyBnZXQgcluZxlUmVnZXgoKSBXGgICAgcmVdXJuICeXFxeKCqKSQvXGgIHcbiAgcVhcmNoKHRleHQpIHtcbiAgICBjbzdCBpchdGNoIDgdGVdCzdGFydHNXaXRoKHRoaXMucGFdGVybikXGcbiAgICByZXRcmgexuICAgICAgaXNNYXRjaCxcbiAgICAgIHNjbJlOiBpchdGNoIDgMCAIDEsXGgICAgICBpbmRpYVzOiBbMCwgdGhpcywYXRZXJuLmxlbmdaCAtIDFdXGgICAgfVxuICBXGXGcbivIFRvaVuOiAhXmZpcmVcblxuYxhcMgSWZXJzZVByZWZpeEVYWNTWFYggZXhZWkcyBCYXNlTWFYggexuICBjbzdHJYRvcihwYXRZXJuKSBXGgICAgcVwZXIocGFdGVybikXGgIHcbiAgcRhdGljIGdldCBeXBlKCkgexuICAgIHJldHVybiAnaWZXJzZSwcmVmaXgtZXhhYQnXGgIHcbiAgcRhdGljIGdldCBtdWxaVJlZVKCkgexuICAgIHJldHVybiAvXiFcXFcIiguKilcIiQvXGgIHcbiAgcRhdGljIGdldCBzaWnbGVSZWdleCgpIHtcbiAgICByZXRcmgLhXFxeKCqKSQvXGgIHcbiAgcVhcmNoKHRleHQpIHtcbiAgICBjbzdCBpchdGNoIDgIXRleHQucRhcnRzVlaChaGlzLnBhdHRlcmpOxuXGgICAgcmVdXJuIHtcbiAgICAgIGlzTWFYgsXGgICAgICBzYyZTogaXNNYXRjaCA/IDAgOiAxLFxuICAgICAgaWkaWNlczogWzAsIHRleHQubGVuZRoICgMVcbiAgICBXGgIHcbncblxuLygVGrZWICmaWxlJFxuXGjbGFzcyBTdWZmaXhFeGFjdEhdGNoIGVdGVuZHMgQmFzZUhdGNoIHtcbiAgYucRydWNbIocGFdGVybikgexuICAgIHNcGVyKHBhdHRlcmpOxuICBXGgIHNYXRpYyBnZXQgdHlwZSgpIHtcbiAgICByZXRcmgJNZmZpeCleGFjdCdcbiAgfVxuICBzdGFaWMgZVIGbHRpUmVnZXgoKSBXGgICAgcmVdXJuICeXCIoLiopXCJcXCQkLxuICBXGgIHNYXRpYyBnZXQgcluZxlUmVnZXgoKSBXGgICAgcmVdXJuICeKCqKVxcJCQvXGgIHcbiAgcVhcmNoKHRleHQpIHtcbiAgICBjbzdCBpchdGNoIDgdGVdClbmRzVlaChaGlzLnBhdHRlcmpOxuXGgICAgcmVdXJuIHtcbiAgICAgIGlzTWFYgsXGgICAgICBzYyZTogaXNNYXRjaCA/IDAgOiAxLFxuICAgICAgaWkaWNlczogWRleHQubGVuZRoICgdGhpcywYXRZXJuLmxlbmdaCwgdGVdCsZWndGggLSAxXVxuICAgIHcbiAgfVxufVxuXGvLyBUbtlbjogISmaWxlJFxuXGjbGFzcyBJbnZlcnNlUVmZmlRXhhYRNYXRjaCBleHRlbmRzIEJhcVNYXRjaCBXGgIGNvbnNcnVjdGyKHBhdHRlcmpIHtcbiAgICBzdXBlcihwYXRZXJuKTtcbiAgfVxuICBzdGFaWMgZVIHRcGUoKSBXGgICAgcmVdXJuICdpbnZlcnNlLXNZmZpeCleGFjdCdcbiAgfVxuICBzdGFaWMgZVIGbHRpUmVnZXgoKSBXGgICAgcmVdXJuICeIVwiKCqKVwiXFwkJCcbiAgfVxuICBzdGFaWMgZVIHNpbmdsZVJlZVKCkgexuICAgIHJldHVybiAvXiEoLiopXFwkJCcbiAgfVxuICBzZWFyYgodGVdCkgexuICAgIGNvbnNIGlzTWFYggPSAhdGVdClbmRzVlaChaGlzLnBhdHRlcmpOxuICAgIHJldHVybiBXGgICAgICBpchdGNoLFxuICAgICAgcNvcmUIGlzTWFYggPyAwIDogMSxcbiAgICAgIGluZGljZXMIFswLCBZXhLmxlbmdaCAtIDFdXGgICAgfVxuICBXGXGcbmNsYXNzIEZenpTWFYggZXhZWkcyBCYXNlTWFYggexuICBjbzdHJYRvcihcbiAgICBwYXRZXJuLFxuICAgIHtcbiAgICAgIGxvYFaWuIDgQuZmlnLmxvYFaWuLFxuICAgICAgdGhyZXNobxkIDgQuZmlnLnRocmVzaGsZCxcbiAgICAgIGRpcRhbmNlIDgQuZmlnLmRpcRhbmNlLFxuICAgICAgaWjbHVkZUhdGNoZXMgPSBDbmaWcuaWjbHVkZUhdGNoZXMsXGgICAgICBmaWkQWxsTWFYhlcyAIENvbmZpZymaWkQWxsTWFYhlcyxcbiAgICAgIGpbkhdGNoQhhckxlbmdaCAIENvbmZpZytaWNYXRjaENoYXJMZWndGgsXGgICAgICBpcNhcVTZWzaXRpdmUgPSBDbmaWcuaXNDYXNlUVuclaXZlLFxuICAgICAgaWdubJlTGjYXRpbgPSBDbmaWcuaWdubJlTGjYXRpbcbiAgICBIDgecbiAgKSBXGgICAgcVwZXIocGFdGVybikXGgICAgdGhpcyfYmlYXBTZWFyYggPSBuZXcgQmlYXBTZWFyYgocGFdGVybiwgexuICAgICAgbGjYXRpbsXGgICAgICBaHJlchvbGQsXGgICAgICBkaXNYWjZSxcbiAgICAgIGluYxZGVNYXRjaGVzLFxuICAgICAgZmluZEFsbEhdGNoZXMsXGgICAgICBtaWNYXRjaENoYXJMZWndGgsXGgICAgICBpcNhcVTZWzaXRpdmUsXGgICAgICBpZvcmVMbNhdGlvblxuICAgIHpOxuICBXGgIHNYXRpYyBnZXQgdHlwZSgpIHtcbiAgICByZXRcmgJZenpJxuICBXGgIHNYXRpYyBnZXQgbXVsdGlSZWdleCgpIHtcbiAgICByZXRcmgLcIiguKilcIiQvXGgIHcbiAgcRhdGljIGdldCBzaWnbGVSZWdleCgpIHtcbiAgICByZXRcmgLoLiopJCcbiAgfVxuICBzZWFyYgodGVdCkgexuICAgIHJldHVybiBaGlzLliaXRhcFNlYXJjaCzZWFyYhJbihZXhKVxuICBXGXGcbivIFRvaVuOiAnZmlsZVxuXGjbGFzcyBJbmNsdWRlTWFYggZXhZWkcyBCYXNlTWFYggexuICBjbzdHJYRvcihwYXRZXJuKSBXGgICAgcVwZXIocGFdGVybikXGgIHcbiAgcRhdGljIGdldCBeXBlKCkgexuICAgIHJldHVybiAnaWjbHVkZSdcbiAgfVxuICBzdGFaWMgZVIGbHRpUmVnZXgoKSBXGgICAgcmVdXJuICeJwiKCqKVwiJCcbiAgfVxuICBzdGFaWMgZVIHNpbmdsZVJlZVKCkgexuICAgIHJldHVybiAvXicoLiopJCcbiAgfVxuICBzZWFyYgodGVdCkgexuICAgIGxldCBsbNhdGlvbiAIDAXGgICAgbGVIGluZGVOxuXGgICAgYucQgaWkaWNlcyAIFtdOxuICAgIGNvbnNIHBhdHRlcmMZWgPSBaGlzLnBhdHRlcmubGVuZRoOxuXGgICAgLygRVIGFsbCBleGFjdCBtYXRjaGVzXGgICAgdhpbGUgKChpbmRleCAIHRleHQuaWkZXhPZihaGlzLnBhdHRlcmsIGxvYFaWuKSkgPiAtMSkgexuICAgICAgbGjYXRpbgPSBpbmRleCArIHBhdHRlcmMZWXGgICAgICBpbmRpYVzLnBcgoWluZGVLCBsbNhdGlvbiAtIDFdKTtcbiAgICBXGcbiAgICBjbzdCBpchdGNoIDgISFpbmRpYVzLmxlbmdaDtcblxuICAgIHJldHVybiBXGgICAgICBpchdGNoLFxuICAgICAgcNvcmUIGlzTWFYggPyAwIDogMSxcbiAgICAgIGluZGljZXNcbiAgICBXGgIHcbncblxuLygXHUyNzUTJkZXIgaXMgaWwbJYWLiBETyBOTQgQhBTkdFLlxuYucQgcVhcmNoZXJzIDgWxuICBFeGFjdEhdGNoLFxuICBJbmNsdWRlTWFYgsXGgIFByZWZpeEVYWNTWFYgsXGgIEludmVycVQcmVmaXhFeGFjdEhdGNoLFxuICBJbnZlcnNlUVmZmlRXhhYRNYXRjaCxcbiAgUVmZmlRXhhYRNYXRjaCxcbiAgSWZXJzZUVYWNTWFYgsXGgIEZenpTWFYhcblXGcbmNvbnNIHNlYXJjaGVycxlbiAIHNlYXJjaGVycysZWndGgXGcbivIFJlZVIHRvIHNwbGlIGJIHNwYWNlcywgYnVIGtlZXAgYWdGhpbmcgaWgcXVvdGVzIHRvZVaGVyXGjbzdCBTUEFDRVSRSAICgKyg/PSg/OlteXFxcIlqXFxcIlteXFxcIlqXFxcIikqWcXFwiXSokKSXGjbzdCBPUlUTtFTiAICdJztcblxuLygUmVdXJuIGEgMkQgYXJyYXkgcmVwcmVzZWYXRpbgbYgdGhlIHFZXJLCBmbIgcltcGxlciBwYXJzaWnLlxuLygRXhhbXBsZTpcbivIFwiXmNvcmUgZkIHwgcmIkIHwgcHkkIHhJFwiID+IFtbXCJeYyZVwiLCBcImdvJFwiXSwgWwicmIkXCJdLCBbXCJweSRcIiwgXCJeSRcIldXGmdWjdGlvbiBwYXJzZVFZXJKHBhdHRlcmsIGwdGlvbnMgPSBfSkgexuICByZXRcmgcGFdGVybizcGxpdChPUlUTtFTikubWFwKChpdGVtKSAPiBXGgICAgbGVIHFZXJIDgaXRlbVxuICAgICAgLnRyaWoKVxuICAgICAgLnNwbGlKFNQQUNFXJFKVxuICAgICAgLmZpbHRlcigoaXRlbSkgPTgaXRlbSAmJiAhIWlZWudHJpbSgpKTtcblxuICAgIGxldCByZXNbHRzIDgWXGgICAgZmyIChsZXQgaSAIDAsIGxlbiAIHFZXJLmxlbmdaDsgaSAIGxlbjsgaSArPSAxKSBXGgICAgICBjbzdCBxdWVyeUlZWgPSBxdWVyeVtpXTtcblxuICAgICAgLygMSgSGFuZGxlIGbHRpcGxlIHFZXJIGhdGNoIChpLmUsIGuYUgdGhhdCBhcmUgcXVvdGVkLCBsaWtlIGBcImhlbGxvIHdvcmxkXCJgKVxuICAgICAgbGVIGZvdWkIDgZmFscUXGgICAgICBsZXQgaWRIDgLTEXGgICAgICBaGlsZSAoIWZvdWkICYmICsraWRIDwgcVhcmNoZXJzTGVuKSBXGgICAgICAgIGNvbnNIHNlYXJjaGVyIDgcVhcmNoZXJzWlkeFXGgICAgICAgIGxldCBbtlbiAIHNlYXJjaGVyLmlzTXVsdGlNYXRjaChxdWVyeUlZWpOxuICAgICAgICBpZiAodGrZWpIHtcbiAgICAgICAgICByZXNbHRzLnBcgobmVIHNlYXJjaGVyKHRvaVuLCBvcHRpbzKSkXGgICAgICAgICAgZmbmQgPSBcnVlOxuICAgICAgICBXGgICAgICBXGcbiAgICAgIGlmIChmbVuZCkgexuICAgICAgICBjbaWZVxuICAgICAgfVxuXGgICAgICAvLyAyLiBIYWkbGUgcluZxlIHFZXJIGhdGNoZXMgKGkuZSwgbjZSBaGFIGFyZSAqbmKiBxdWZWQpXGgICAgICBpZHggPSAtMTtcbiAgICAgIHdoaWxlICgrKlkeCAIHNlYXJjaGVycxlbikgexuICAgICAgICBjbzdCBzZWFyYhlciAIHNlYXJjaGVyctpZHhdOxuICAgICAgICBsZXQgdGrZWgPSBzZWFyYhlcipcNpbmdsZUhdGNoKHFZXJSXRlbSkXGgICAgICAgIGlmIChbtlbikgexuICAgICAgICAgIHJlcVsdHMucHVzaChuZXcgcVhcmNoZXIodGrZWsIGwdGlvbnMpKTtcbiAgICAgICAgICBicmVhaxuICAgICAgICBXGgICAgICBXGgICAgfVxuXGgICAgcmVdXJuIHJlcVsdHNcbiAgfSlcbncblxuLygVGhlcUgZXhZWkZWQgbWFYhlcnMgYFuIHJldHVybiBhbiBhcnJheSBvZiBtYXRjaGVzLCBhcyBvcHBvcVkXGvLyBbyBhIHNpbmdsIGhdGNoXGjbzdCBNdWxaUhdGNoUVIDgbmVIFNldChbRnVenlNYXRjaCeXBlLCBJbmNsdWRlTWFYgudHlwZVpOxuXGvKipcbiAqIENvbWhbmQtbGlrZSBzZWFyYhpbmdcbiAqIDPTPTPTPTPTPTPTcbiAqXGgKiBHaXZlbiBtdWxaXBsZSBzZWFyYggdGVybXMgZGVsaWpdGVkIGJIHNwYWNlcylLmcuIGBeanNjcmlwdCAucHlaGuJCBydWJICFqYXZhYCxcbiAqIHNlYXJjaCBpbiBhIGdpdmVuIHRleHQuXGgKlxuICogUVhcmNoIHNbnRheDpcbiAqXGgKiBIFRvaVuICAgICAgIHwgTWFYggdHlwZSAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBXGgKiBICtLStLStLStIHwgLStLStLStLStLStLStLStLStLSgfCAtLStLStLStLStLStLStLStLStLStLStLStLStLSBXGgKiBIGBqcNyaXBYCAgIHwgZnVenktbWFYggICAgICAgICAgICAgICAgfCBJdGVtcyBaGFIGZenpIGhdGNoIGBqcNyaXBYCAgICAgICBXGgKiBIGAcNoZWlYCAgIHwgZXhhYQtbWFYggICAgICAgICAgICAgICAgfCBJdGVtcyBaGFIGFyZSBgcNoZWlYCAgICAgICAgICAgICAgICBXGgKiBIGAncHlaGuYCAgIHwgaWjbHVkZStYXRjaCAgICAgICAgICAgICAgfCBJdGVtcyBaGFIGluYxZGUgYHBdGhvbmAgICAgICAgICAgICBXGgKiBIGAhcnVieWAgICAgIHwgaWZXJzZSleGFjdCtYXRjaCAgICAgICAgfCBJdGVtcyBaGFIGRvIGvdCBpbmNsdWRlIGBydWJYCAgICAgICBXGgKiBIGBeamFYWAgICAgIHwgcHJlZmlLWVYWNLWhdGNoICAgICAgICAgfCBJdGVtcyBaGFIHNYXJIHdpdGggYGphdmFgICAgICAgICAgICBXGgKiBIGAhXmVhcmxhbmdgIHwgaWZXJzZSwcmVmaXgtZXhhYQtbWFYggfCBJdGVtcyBaGFIGRvIGvdCBzdGFydCBaXRoIGBlYXJsYWnYCBXGgKiBIGAuanMkYCAgICAgIHwgcVmZmlLWVYWNLWhdGNoICAgICAgICAgfCBJdGVtcyBaGFIGVuZCBaXRoIGAuanNgICAgICAgICAgICAgICBXGgKiBIGAhLmdvJGAgICAgIHwgaWZXJzZSzdWZmaXgtZXhhYQtbWFYggfCBJdGVtcyBaGFIGRvIGvdCBlbmQgdlaCBgLmdvYCAgICAgICBXGgKlxuICogQSBzaWnbGUgcGlwZSBjaGFyYWNZXIgYWNcyBhcyBhbiBPUiBvcGVyYXRvcigRmyIGVYWwbGUsIHRoZSBmbxsbdpbmdcbiAqIHFZXJIGhdGNoZXMgZWcmllcyBaGFIHNYXJIHdpdGggYGNvcmVgIGFuZCBlbmQgdlaCBlaXRoZXJgZgLCBgcmJgLFxuICogbJgcHlgLlxuICpcbiAqIGBgYFxuICogXmNvcmUgZkIHwgcmIkIHwgcHkkXGgKiBgYGBcbiAqLxuYxhcMgRXhZWkZWRTZWFyYggexuICBjbzdHJYRvcihcbiAgICBwYXRZXJuLFxuICAgIHtcbiAgICAgIGlzQFzZVNlbnNpdGlZSAIENvbmZpZypcNhcVTZWzaXRpdmUsXGgICAgICBpbmNsdWRlTWFYhlcyAIENvbmZpZypbmNsdWRlTWFYhlcyxcbiAgICAgIGpbkhdGNoQhhckxlbmdaCAIENvbmZpZytaWNYXRjaENoYXJMZWndGgsXGgICAgICBpZvcmVMbNhdGlvbiAIENvbmZpZypZvcmVMbNhdGlvbixcbiAgICAgIGZpbmRBbGxNYXRjaGVzIDgQuZmlnLmZpbmRBbGxNYXRjaGVzLFxuICAgICAgbGjYXRpbgPSBDbmaWcubGjYXRpbsXGgICAgICBaHJlchvbGQgPSBDbmaWcudGhyZXNobxkLFxuICAgICAgZGlzdGFuYUgPSBDbmaWcuZGlzdGFuYVcbiAgICBIDgecbiAgKSBXGgICAgdGhpcyxdWVyeSAIGbGwXGgICAgdGhpcyvcHRpbzIDgexuICAgICAgaXNDYXNlUVuclaXZlLFxuICAgICAgaWjbHVkZUhdGNoZXMsXGgICAgICBtaWNYXRjaENoYXJMZWndGgsXGgICAgICBmaWkQWxsTWFYhlcyxcbiAgICAgIGlnbmyZUxvYFaWuLFxuICAgICAgbGjYXRpbsXGgICAgICBaHJlchvbGQsXGgICAgICBkaXNYWjZVxuICAgIHXGcbiAgICBaGlzLnBhdHRlcmgPSBpcNhcVTZWzaXRpdmUgPyBwYXRZXJuIDogcGFdGVybibxvdVyQFzZSgpOxuICAgIHRoaXMucXVlcnkgPSBwYXJzZVFZXJKHRoaXMucGFdGVybiwgdGhpcyvcHRpbzKTtcbiAgfVxuXGgIHNYXRpYyBjbkaXRpboXywgbBaWucykgexuICAgIHJldHVybiBvcHRpbzLnVzZUVdGVuZGVkUVhcmNoXGgIHcblxuICBzZWFyYhJbihZXhKSBXGgICAgYucQgcXVlcnkgPSBaGlzLnFZXJOxuXGgICAgaWYgKCFxdWVyeSkgexuICAgICAgcmVdXJuIHtcbiAgICAgICAgaXNNYXRjaDogZmFscUsXGgICAgICAgIHNjbJlOiAxXGgICAgICBXGgICAgfVxuXGgICAgYucQgeyBpbmNsdWRlTWFYhlcywgaXNDYXNlUVuclaXZlIHgPSBaGlzLmwdGlvbnMXGcbiAgICBZXhIDgaXNDYXNlUVuclaXZlIDgdGVdCAIHRleHQudGMbdlckNhcUoKTtcblxuICAgIGxldCBudWNYXRjaGVzIDgMDtcbiAgICBsZXQgYWxsSWkaWNlcyAIFtdOxuICAgIGxldCBbRhbFNjbJlIDgMDtcblxuICAgICvIEScxuICAgIGZvciAobGVIGkgPSAwLCBxTGVuIDgcXVlcnkubGVuZRoOyBpIDwgcUxlbjsgaSArPSAxKSBXGgICAgICBjbzdCBzZWFyYhlcnMgPSBxdWVyeVtpXTtcblxuICAgICAgLygUmVzZXQgaWkaWNlcxuICAgICAgYWxsSWkaWNlcysZWndGggPSAwOxuICAgICAgbnVtTWFYhlcyAIDAXGcbiAgICAgICvIEFORHNcbiAgICAgIGZvciAobGVIGogPSAwLCBwTGVuIDgcVhcmNoZXJzLmxlbmdaDsgaiAIHBMZWIGogKzgMSkgexuICAgICAgICBjbzdCBzZWFyYhlciAIHNlYXJjaGVyctqXTtcbiAgICAgICAgYucQgeyBpchdGNoLCBpbmRpYVzLCBzYyZSBIDgcVhcmNoZXIucVhcmNoKHRleHQpOxuXGgICAgICAgIGlmIChpchdGNoKSBXGgICAgICAgICAgbnVtTWFYhlcyArPSAxOxuICAgICAgICAgIHRvdGFsUNvcmUgKzgcNvcmUXGgICAgICAgICAgaWYgKGluYxZGVNYXRjaGVzKSBXGgICAgICAgICAgICBjbzdCBeXBlIDgcVhcmNoZXIuYucRydWNbIudHlwZTtcbiAgICAgICAgICAgIGlmIChNdWxaUhdGNoUVLmhhcyheXBlKSkgexuICAgICAgICAgICAgICBhbGxJbmRpYVzIDgWyuLmFsbEluZGljZXMsICuLmluZGljZXNdOxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgYWxsSWkaWNlcywdXNoKGluZGljZXMpOxuICAgICAgICAgICAgfVxuICAgICAgICAgIHcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBbRhbFNjbJlIDgMDtcbiAgICAgICAgICBudWNYXRjaGVzIDgMDtcbiAgICAgICAgICBhbGxJbmRpYVzLmxlbmdaCAIDAXGgICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuXGgICAgICAvLyBPUiBjbkaXRpbsIHNvIGlmIFRSVUUsIHJldHVyblxuICAgICAgaWYgKGbUhdGNoZXMpIHtcbiAgICAgICAgbGVIHJlcVsdCAIHtcbiAgICAgICAgICBpchdGNoOiBcnVlLFxuICAgICAgICAgIHNjbJlOiBbRhbFNjbJlICgbnVtTWFYhlcxuICAgICAgICBOxuXGgICAgICAgIGlmIChpbmNsdWRlTWFYhlcykgexuICAgICAgICAgIHJlcVsdCpbmRpYVzIDgYWxsSWkaWNlcztcbiAgICAgICAgfVxuXGgICAgICAgIHJldHVybiByZXNbHRcbiAgICAgIHcbiAgICBXGcbiAgICAvLyBObRoaWnIHdhcyBtYXRjaGVkXGgICAgcmVdXJuIHtcbiAgICAgIGlzTWFYgIGZhbHNlLFxuICAgICAgcNvcmUIDFcbiAgICBXGgIHcbncblxuYucQgcmVnaXNZXJlZFNlYXJjaGVycyAIFtdOxuXGmdWjdGlvbiByZWdpcRlciguLihcmdzKSBXGgIHJlZlzdGVyZWRTZWFyYhlcnMucHVzaCguLihcmdzKTtcbncblxuZnVuYRpbgYJlYXRlUVhcmNoZXIocGFdGVybiwgbBaWucykgexuICBmbIgKGxldCBpIDgMCwgbGVuIDgcmVnaXNZXJlZFNlYXJjaGVycysZWndGgIGkgPCBsZWIGkgKzgMSkgexuICAgIGxldCBzZWFyYhlckNsYXNzIDgcmVnaXNZXJlZFNlYXJjaGVyctpXTtcbiAgICBpZiAocVhcmNoZXJDbGFzcyjbkaXRpbocGFdGVybiwgbBaWucykpIHtcbiAgICAgIHJldHVybiBuZXcgcVhcmNoZXJDbGFzcyhwYXRZXJuLCBvcHRpbzKVxuICAgIHcbiAgfVxuXGgIHJldHVybiBuZXcgQmlYXBTZWFyYgocGFdGVybiwgbBaWucylcbncblxuYucQgTGnaWNhbEwZXJhdGyIDgexuICBBTkQICckYWkJyxcbiAgTIICckbInXGOxuXGjbzdCBLZXlUeXBlIDgexuICBQQVRIOiAnJHBhdGgnLFxuICBQQVRURVJOOiAnJHZhbCdcbnXGcbmNvbnNIGlzRXhwcmVzclvbiAIChxdWVyeSkgPTcbiAgISEocXVlcnlbTGnaWNhbEwZXJhdGyLkFORFgfHwgcXVlcnlbTGnaWNhbEwZXJhdGyLkSXSkXGcbmNvbnNIGlzUGFaCAIChxdWVyeSkgPTgISFxdWVyeVtLZXlUeXBlLlBBVEhdOxuXGjbzdCBpcxlYWYgPSAocXVlcnkpID+XGgICFpcFycmFKHFZXJKSAmJiBpciamVjdChxdWVyeSkgJiYgIWlzRXhwcmVzclvbihxdWVyeSkXGcbmNvbnNIGNvbnZlcnRUbVcGxpYlIDgKHFZXJKSAPiAoexuICBbTGnaWNhbEwZXJhdGyLkFORFIEiamVjdCrZXlzKHFZXJKStYXAoKGtleSkgPTgKHtcbiAgICBbaVXTogcXVlcnlbaVXVxuICBKSlcbnpOxuXGvLyBXaGVuIGBhdXRvYCBpcyBgdHJZWAsIHRoZSBwYXJzZSBmdWjdGlvbiBaWxsIGluZmVyIGFuZCBpbmlaWFsaXplIGFuZCBhZGRcbivIHRoZSBhcHBybByaWFZSBgUVhcmNoZXJgIGlucRhbmNlXGmdWjdGlvbiBwYXJzZShxdWVyeSwgbBaWucywgeyBhdXRvIDgdHJZSBIDgepIHtcbiAgYucQgbmVdCAIChxdWVyeSkgPTgexuICAgIGxldCBrZXlzIDgTJqZWNLmtleXMocXVlcnkpOxuXGgICAgYucQgaXNRdWVyeVBhdGggPSBpcBhdGgocXVlcnkpOxuXGgICAgaWYgKCFpcFZXJUGFaCAmJiBrZXlzLmxlbmdaCA+IDEgJiYgIWlzRXhwcmVzclvbihxdWVyeSkpIHtcbiAgICAgIHJldHVybiBuZXhKGNvbnZlcnRUbVcGxpYlKHFZXJKSlcbiAgICBXGcbiAgICBpZiAoaXNMZWFmKHFZXJKSkgexuICAgICAgYucQgaVIDgaXNRdWVyeVBhdGggPyBxdWVyeVtLZXlUeXBlLlBBVEhdIDogaVcswXTtcblxuICAgICAgYucQgcGFdGVybiAIGlzUXVlcnlQYXRoIDgcXVlcnlbSVVHlwZSQQVRURVJOXSAIHFZXJWtleVXGcbiAgICAgIGlmICghaXNTdHJpbmcocGFdGVybikpIHtcbiAgICAgICAgdGhybcgbmVIEVycmyKExPRlDQUxfUVBUkNIXlOVkFMSURfUVVFUllfRkSXtFWShrZXkpKVxuICAgICAgfVxuXGgICAgICBjbzdCBvYmogPSBXGgICAgICAgIGtleUlkOiBjcmVhdGVLZXlJZChrZXkpLFxuICAgICAgICBwYXRZXJuXGgICAgICBOxuXGgICAgICBpZiAoYXVbykgexuICAgICAgICBvYmoucVhcmNoZXIgPSBjcmVhdGVTZWFyYhlcihwYXRZXJuLCBvcHRpbzKTtcbiAgICAgIHcblxuICAgICAgcmVdXJuIGialxuICAgIHcblxuICAgIGxldCBubRlIDgexuICAgICAgYhpbGRyZWIFtdLFxuICAgICAgbBlcmFbIIGtleXNbMFcbiAgICBOxuXGgICAgaVcymbJFYWNoKChrZXkpID+IHtcbiAgICAgIGNvbnNIHZhbHVlIDgcXVlcnlbaVXTtcblxuICAgICAgaWYgKGlzQXJyYXkodmFsdWUpKSBXGgICAgICAgIHZhbHVlLmZvckVhYgoKGlZWpID+IHtcbiAgICAgICAgICBubRlLmNoaWxkcmVuLnBcgobmVdChpdGVtKSkXGgICAgICAgIHpOxuICAgICAgfVxuICAgIHpOxuXGgICAgcmVdXJuIGvZGVcbiAgfTtcblxuICBpZiAoIWlzRXhwcmVzclvbihxdWVyeSkpIHtcbiAgICBxdWVyeSAIGNvbnZlcnRUbVcGxpYlKHFZXJKTtcbiAgfVxuXGgIHJldHVybiBuZXhKHFZXJKVxufVxuXGvLyBQcmFjdGljYWwgcNvcmluZyBmdWjdGlvblxuZnVuYRpbgYtcHVZVNjbJlKFxuICByZXNbHRzLFxuICBIGlnbmyZUZpZWxkTmybSAIENvbmZpZypZvcmVGaWVsZEvcmgfVxuKSBXGgIHJlcVsdHMuZmyRWFjaCgocmVzdWxKSAPiBXGgICAgbGVIHRvdGFsUNvcmUgPSAxOxuXGgICAgcmVzdWxLmhdGNoZXMuZmyRWFjaCgoeyBrZXksIGvcmsIHNjbJlIHpID+IHtcbiAgICAgIGNvbnNIHdlaWdodCAIGtleSA/IGtleSZWlnaHQgOiBudWxsOxuXGgICAgICBbRhbFNjbJlICoIEhdGgucGKFxuICAgICAgICBzYyZSAPTgMCAmJiBZWlnaHQgPyBOdWiZXIuRVBTSUxPTiAIHNjbJlLFxuICAgICAgICAodVpZhIHxIDEpICogKGlnbmyZUZpZWxkTmybSA/IDEgOiBubJtKVxuICAgICAgKTtcbiAgICBKTtcblxuICAgIHJlcVsdCzYyZSAIHRvdGFsUNvcmUXGgIHpOxufVxuXGmdWjdGlvbiBcmFucZvcmNYXRjaGVzKHJlcVsdCwgZGFYSkgexuICBjbzdCBtYXRjaGVzIDgcmVzdWxLmhdGNoZXMXGgIGRhdGEubWFYhlcyAIFtdOxuXGgIGlmICghaXNEZWZpbmVkKGhdGNoZXMpKSBXGgICAgcmVdXJuXGgIHcblxuICBtYXRjaGVzLmZvckVhYgoKGhdGNoKSAPiBXGgICAgaWYgKCFpcRlZmluZWQobWFYguaWkaWNlcykgfHwgIWhdGNoLmluZGljZXMubGVuZRoKSBXGgICAgICByZXRcmcbiAgICBXGcbiAgICBjbzdCBIGluZGljZXMsIHZhbHVlIHgPSBtYXRjaDtcblxuICAgIGxldCBvYmogPSBXGgICAgICBpbmRpYVzLFxuICAgICAgdmFsdWVcbiAgICBOxuXGgICAgaWYgKGhdGNoLmtleSkgexuICAgICAgbJqLmtleSAIGhdGNoLmtleSzcmMXGgICAgfVxuXGgICAgaWYgKGhdGNoLmlkeCA+ICxKSBXGgICAgICBvYmoucmVmSWkZXggPSBtYXRjaCpZHgXGgICAgfVxuXGgICAgZGFYStYXRjaGVzLnBcgobJqKTtcbiAgfSkXGXGcbmZbmNaWuIHRyYWzZmybVNjbJlKHJlcVsdCwgZGFYSkgexuICBkYXRhLnNjbJlIDgcmVzdWxLnNjbJlOxufVxuXGmdWjdGlvbiBmbJtYXQoXGgIHJlcVsdHMsXGgIGRvYMsXGgIHtcbiAgICBpbmNsdWRlTWFYhlcyAIENvbmZpZypbmNsdWRlTWFYhlcyxcbiAgICBpbmNsdWRlUNvcmUgPSBDbmaWcuaWjbHVkZVNjbJlXGgIHgPSBfVxuKSBXGgIGNvbnNIHRyYWzZmybWVycyAIFtdOxuXGgIGlmIChpbmNsdWRlTWFYhlcykgdHJhbnNmbJtZXJzLnBcgodHJhbnNmbJtTWFYhlcykXGgIGlmIChpbmNsdWRlUNvcmUpIHRyYWzZmybWVycywdXNoKHRyYWzZmybVNjbJlKTtcblxuICByZXRcmgcmVzdWxcytYXAoKHJlcVsdCkgPTgexuICAgIGNvbnNIHsgaWRIHgPSByZXNbHQXGcbiAgICBjbzdCBkYXRhIDgexuICAgICAgaXRlbTogZGjctpZHhdLFxuICAgICAgcmVmSWkZXgIGlkeFxuICAgIHXGcbiAgICBpZiAodHJhbnNmbJtZXJzLmxlbmdaCkgexuICAgICAgdHJhbnNmbJtZXJzLmZvckVhYgoKHRyYWzZmybWVyKSAPiBXGgICAgICAgIHRyYWzZmybWVyKHJlcVsdCwgZGFYSkXGgICAgICBKTtcbiAgICBXGcbiAgICByZXRcmgZGFYVxuICBKVxufVxuXGjbGFzcyBGdXNlIHtcbiAgYucRydWNbIoZGjcywgbBaWucyAIHtLCBpbmRleCkgexuICAgIHRoaXMubBaWucyAIHsgLiuQuZmlnLCAuLivcHRpbzIHXGcbiAgICBpZiAoXGgICAgICBaGlzLmwdGlvbnMudXNlRXhZWkZWRTZWFyYggJiZcbiAgICAgICFcnVlXGgICAgKSBXGgICAgICBaHJvdyBuZXcgRXJybIoRVhURUERURfUVBUkNIXVOQVZBSUxBQkxFKVxuICAgIHcblxuICAgIHRoaXMuXtleVNbJlIDgbmVIEtleVNbJlKHRoaXMubBaWucyrZXlzKTtcblxuICAgIHRoaXMucVQsbGVjdGlvbihkbNzLCBpbmRleCkXGgIHcblxuICBzZXRDbxsZWNaWuKGRvYMsIGluZGVKSBXGgICAgdGhpcyfZGjcyAIGRvYMXGcbiAgICBpZiAoaWkZXggJiYgIShpbmRleCBpbnNYWjZWmIEZcVJbmRleCkpIHtcbiAgICAgIHRocmIGldyBFcnJvcihJTkNPUlJFQRfSUERVhfVFlQRSlcbiAgICBXGcbiAgICBaGlzLlteUluZGVIDcbiAgICAgIGluZGVIHxXGgICAgICBjcmVhdGVJbmRleChaGlzLmwdGlvbnMuaVcywgdGhpcyfZGjcywgexuICAgICAgICBnZXRGbjogdGhpcyvcHRpbzLmdldEZuLFxuICAgICAgICBmaWVsZEvcmXZWlnaHQIHRoaXMubBaWucymaWVsZEvcmXZWlnaHRcbiAgICAgIHpOxuICBXGcbiAgYWRkKGRvYykgexuICAgIGlmICghaXNEZWZpbmVkKGRvYykpIHtcbiAgICAgIHJldHVyblxuICAgIHcblxuICAgIHRoaXMuXRvYMucHVzaChkbMpOxuICAgIHRoaXMuXSWkZXguYWRkKGRvYykXGgIHcblxuICByZWvdmUocHJlZGljYXRlIDgKCqIGRvYywgaWRICovKSAPiBmYWxzZSkgexuICAgIGNvbnNIHJlcVsdHMgPSBbXTtcblxuICAgIGZvciAobGVIGkgPSAwLCBsZWgPSBaGlzLlkbNzLmxlbmdaDsgaSAIGxlbjsgaSArPSAxKSBXGgICAgICBjbzdCBkbMgPSBaGlzLlkbNzWldOxuICAgICAgaWYgKHByZWRpYFZShkbMsIGkpKSBXGgICAgICAgIHRoaXMucmVtbZlQXQoaSkXGgICAgICAgIGkgLTgMTtcbiAgICAgICAgbGVuICIDEXGcbiAgICAgICAgcmVzdWxcywdXNoKGRvYykXGgICAgICBXGgICAgfVxuXGgICAgcmVdXJuIHJlcVsdHNcbiAgfVxuXGgIHJlbWZUFKGlkeCkgexuICAgIHRoaXMuXRvYMucBsaWNlKGlkeCwgMSkXGgICAgdGhpcyfbXlJbmRleCyZWvdmVBdChpZHgpOxuICBXGcbiAgZVSWkZXgoKSBXGgICAgcmVdXJuIHRoaXMuXSWkZXhcbiAgfVxuXGgIHNlYXJjaChxdWVyeSwgeyBsaWpdCAICxIHgPSBfSkgexuICAgIGNvbnNIHtcbiAgICAgIGluYxZGVNYXRjaGVzLFxuICAgICAgaWjbHVkZVNjbJlLFxuICAgICAgchvdWxkUydCxcbiAgICAgIHNvcnRGbixcbiAgICAgIGlnbmyZUZpZWxkTmybVxuICAgIHgPSBaGlzLmwdGlvbnMXGcbiAgICBsZXQgcmVzdWxcyAIGlzURyaWnKHFZXJKVxuICAgICAgPyBpcNcmluZyhaGlzLlkbNzWzBdKVxuICAgICAgICA/IHRoaXMuXNlYXJjaFNcmluZxpcQocXVlcnkpXGgICAgICAgIDogdGhpcyfcVhcmNoTJqZWNTGlzdChxdWVyeSlcbiAgICAgIDogdGhpcyfcVhcmNoTGnaWNhbChxdWVyeSkXGcbiAgICBjbwdXRlUNvcmUocmVzdWxcywgeyBpZvcmVGaWVsZEvcmgfSkXGcbiAgICBpZiAochvdWxkUydCkgexuICAgICAgcmVzdWxcyzbJKHNvcnRGbikXGgICAgfVxuXGgICAgaWYgKGlzTnVtYmVyKGxpbWlKSAmJiBsaWpdCA+ICxKSBXGgICAgICByZXNbHRzIDgcmVzdWxcyzbGljZSgwLCBsaWpdCkXGgICAgfVxuXGgICAgcmVdXJuIGZvcmhdChyZXNbHRzLCBaGlzLlkbNzLCBXGgICAgICBpbmNsdWRlTWFYhlcyxcbiAgICAgIGluYxZGVTYyZVxuICAgIHpXGgIHcblxuICBfcVhcmNoURyaWnTGlzdChxdWVyeSkgexuICAgIGNvbnNIHNlYXJjaGVyIDgYJlYXRlUVhcmNoZXIocXVlcnksIHRoaXMubBaWucykXGgICAgYucQgeyByZWNvcmRzIHgPSBaGlzLlteUluZGVOxuICAgIGNvbnNIHJlcVsdHMgPSBbXTtcblxuICAgICvIElZXJhdGUgbZlciBldmVyeSBzdHJpbmcgaWgdGhlIGluZGVXGgICAgcmVjbJkcymbJFYWNoKChIHYIHRleHQsIGkIGlkeCwgbjogbmybSBKSAPiBXGgICAgICBpZiAoIWlzRGVmaWlZChZXhKSkgexuICAgICAgICByZXRcmcbiAgICAgIHcblxuICAgICAgYucQgeyBpchdGNoLCBzYyZSwgaWkaWNlcyBIDgcVhcmNoZXIucVhcmNoSWodGVdCkXGcbiAgICAgIGlmIChpchdGNoKSBXGgICAgICAgIHJlcVsdHMucHVzaChXGgICAgICAgICAgaXRlbTogdGVdCxcbiAgICAgICAgICBpZHgsXGgICAgICAgICAgbWFYhlczogWsgcNvcmUsIHZhbHVlOiBZXhLCBubJtLCBpbmRpYVzIHdXGgICAgICAgIHpOxuICAgICAgfVxuICAgIHpOxuXGgICAgcmVdXJuIHJlcVsdHNcbiAgfVxuXGgIFzZWFyYhMbdpYFsKHFZXJKSBXGcbiAgICBjbzdCBleHByZXNzaWuIDgcGFycUocXVlcnksIHRoaXMubBaWucykXGcbiAgICBjbzdCBldmFsdWFZSAIChubRlLCBpdGVtLCBpZHgpID+IHtcbiAgICAgIGlmICghbmkZSjaGlsZHJlbikgexuICAgICAgICBjbzdCBIGtleUlkLCBzZWFyYhlciBIDgbmkZTtcblxuICAgICAgICBjbzdCBtYXRjaGVzIDgdGhpcyfZmluZEhdGNoZXMoexuICAgICAgICAgIGtleTogdGhpcyfaVURvcmUuZVKGtleUlkKSxcbiAgICAgICAgICBYWxZTogdGhpcyfbXlJbmRleCnZXRWYWxZUZvcklZWBdEtleUlkKGlZWsIGtleUlkKSxcbiAgICAgICAgICBzZWFyYhlclxuICAgICAgICBKTtcblxuICAgICAgICBpZiAobWFYhlcyAmJiBtYXRjaGVzLmxlbmdaCkgexuICAgICAgICAgIHJldHVybiBbXGgICAgICAgICAgICBXGgICAgICAgICAgICAgIGlkeCxcbiAgICAgICAgICAgICAgaXRlbSxcbiAgICAgICAgICAgICAgbWFYhlcxuICAgICAgICAgICAgfVxuICAgICAgICAgIFcbiAgICAgICAgfVxuXGgICAgICAgIHJldHVybiBbXVxuICAgICAgfVxuXGgICAgICBjbzdCByZXMgPSBbXTtcbiAgICAgIGZvciAobGVIGkgPSAwLCBsZWgPSBubRlLmNoaWxkcmVuLmxlbmdaDsgaSAIGxlbjsgaSArPSAxKSBXGgICAgICAgIGNvbnNIGNoaWxkIDgbmkZSjaGlsZHJlbltpXTtcbiAgICAgICAgYucQgcmVzdWxIDgZXZhbHVhdGUoYhpbGQsIGlZWsIGlkeCkXGgICAgICAgIGlmIChyZXNbHQubGVuZRoKSBXGgICAgICAgICAgcmVzLnBcgoLiucmVzdWxKTtcbiAgICAgICAgfSBlbHNlIGlmIChubRlLmwZXJhdGyIDPSBMbdpYFsTBlcmFbIuQUEKSBXGgICAgICAgICAgcmVdXJuIFtdXGgICAgICAgIHcbiAgICAgIHcbiAgICAgIHJldHVybiByZXNcbiAgICBOxuXGgICAgYucQgcmVjbJkcyAIHRoaXMuXSWkZXgucmVjbJkcztcbiAgICBjbzdCByZXNbHRNYXAgPSBfTtcbiAgICBjbzdCByZXNbHRzIDgWXGcbiAgICByZWNvcmRzLmZvckVhYgoKHsgJDogaXRlbSwgaTogaWRIHpID+IHtcbiAgICAgIGlmIChpcRlZmluZWQoaXRlbSkpIHtcbiAgICAgICAgbGVIGVcFJlcVsdHMgPSBldmFsdWFZShleHByZXNzaWuLCBpdGVtLCBpZHgpOxuXGgICAgICAgIGlmIChleHBSZXNbHRzLmxlbmdaCkgexuICAgICAgICAgICvIERlZHVwZSBaGVuIGFkZGluZxuICAgICAgICAgIGlmICghcmVzdWxTWFwWlkeFpIHtcbiAgICAgICAgICAgIHJlcVsdEhcFtpZHhdIDgeyBpZHgsIGlZWsIGhdGNoZXMIFtdIHXGgICAgICAgICAgICByZXNbHRzLnBcgocmVzdWxTWFwWlkeFpOxuICAgICAgICAgIHcbiAgICAgICAgICBleHBSZXNbHRzLmZvckVhYgoKHsgbWFYhlcyBKSAPiBXGgICAgICAgICAgICByZXNbHRNYXBbaWRXStYXRjaGVzLnBcgoLiubWFYhlcykXGgICAgICAgICAgfSkXGgICAgICAgIHcbiAgICAgIHcbiAgICBKTtcblxuICAgIHJldHVybiByZXNbHRzXGgIHcblxuICBfcVhcmNoTJqZWNTGlzdChxdWVyeSkgexuICAgIGNvbnNIHNlYXJjaGVyIDgYJlYXRlUVhcmNoZXIocXVlcnksIHRoaXMubBaWucykXGgICAgYucQgeyBrZXlzLCByZWNvcmRzIHgPSBaGlzLlteUluZGVOxuICAgIGNvbnNIHJlcVsdHMgPSBbXTtcblxuICAgICvIExpcQgaXMgQXJyYXkTJqZWNPlxuICAgIHJlYyZHMuZmyRWFjaCgoeyAkOiBpdGVtLCBpOiBpZHggfSkgPTgexuICAgICAgaWYgKCFpcRlZmluZWQoaXRlbSkpIHtcbiAgICAgICAgcmVdXJuXGgICAgICBXGcbiAgICAgIGxldCBtYXRjaGVzIDgWXGcbiAgICAgICvIElZXJhdGUgbZlciBldmVyeSBrZXkgKGkuZSwgcGFaCksIGFuZCBmZXRjaCBaGUgdmFsdWUgYXQgdGhhdCBrZXlcbiAgICAgIGtleXMuZmyRWFjaCgoaVLCBrZXlJbmRleCkgPTgexuICAgICAgICBtYXRjaGVzLnBcgoXGgICAgICAgICAgLiudGhpcyfZmluZEhdGNoZXMoexuICAgICAgICAgICAgaVLFxuICAgICAgICAgICAgdmFsdWUIGlZWbaVSWkZXhdLFxuICAgICAgICAgICAgcVhcmNoZXJcbiAgICAgICAgICBKVxuICAgICAgICApOxuICAgICAgfSkXGcbiAgICAgIGlmIChtYXRjaGVzLmxlbmdaCkgexuICAgICAgICByZXNbHRzLnBcgoexuICAgICAgICAgIGlkeCxcbiAgICAgICAgICBpdGVtLFxuICAgICAgICAgIGhdGNoZXNcbiAgICAgICAgfSkXGgICAgICBXGgICAgfSkXGcbiAgICByZXRcmgcmVzdWxcxuICBXGgIFmaWkTWFYhlcyhIGtleSwgdmFsdWUsIHNlYXJjaGVyIHpIHtcbiAgICBpZiAoIWlzRGVmaWlZChYWxZSkpIHtcbiAgICAgIHJldHVybiBbXVxuICAgIHcblxuICAgIGxldCBtYXRjaGVzIDgWXGcbiAgICBpZiAoaXNBcnJheShYWxZSkpIHtcbiAgICAgIHZhbHVlLmZvckVhYgoKHsgdjogdGVdCwgaTogaWRLCBuOiBubJtIHpID+IHtcbiAgICAgICAgaWYgKCFpcRlZmluZWQodGVdCkpIHtcbiAgICAgICAgICByZXRcmcbiAgICAgICAgfVxuXGgICAgICAgIGNvbnNIHsgaXNNYXRjaCwgcNvcmUsIGluZGljZXMgfSAIHNlYXJjaGVyLnNlYXJjaEluKHRleHQpOxuXGgICAgICAgIGlmIChpchdGNoKSBXGgICAgICAgICAgbWFYhlcywdXNoKHtcbiAgICAgICAgICAgIHNjbJlLFxuICAgICAgICAgICAgaVLFxuICAgICAgICAgICAgdmFsdWUIHRleHQsXGgICAgICAgICAgICBpZHgsXGgICAgICAgICAgICBubJtLFxuICAgICAgICAgICAgaWkaWNlcxuICAgICAgICAgIHpOxuICAgICAgICBXGgICAgICBKTtcbiAgICBIGVscUgexuICAgICAgYucQgeyBOiBZXhLCBuOiBubJtIHgPSBYWxZTtcblxuICAgICAgYucQgeyBpchdGNoLCBzYyZSwgaWkaWNlcyBIDgcVhcmNoZXIucVhcmNoSWodGVdCkXGcbiAgICAgIGlmIChpchdGNoKSBXGgICAgICAgIGhdGNoZXMucHVzaChIHNjbJlLCBrZXksIHZhbHVlOiBZXhLCBubJtLCBpbmRpYVzIHpOxuICAgICAgfVxuICAgIHcblxuICAgIHJldHVybiBtYXRjaGVzXGgIHcbncblxuRnVzZSZXJzaWuIDgJzYuNiyJztcbkZcUuYJlYXRlSWkZXggPSBjcmVhdGVJbmRleDtcbkZcUucGFycVJbmRleCAIHBhcnNlSWkZXgXGGdXNlLmNvbmZpZyAIENvbmZpZztcblxuexuICBGdXNlLnBhcnNlUXVlcnkgPSBwYXJzZTtcbncblxuexuICByZWdpcRlcihFeHRlbmRlZFNlYXJjaCkXGXGcbmVcGydCBIEZcUgYXMgZGVmYXVsdCBOxuIiwgImVcGydCBkZWZhdWxIGZbmNaWuIGNvbXBhcmVWZXJzaWucyhMSwgdjIpIHtcbiAgLygdmFsaWRhdGUgaWwdXQgYWkIHNwbGlIGludGgcVnbWVudHNcbiAgYucQgbjEgPSBYWxpZGFZUFuZFBhcnNlKHYxKTtcbiAgYucQgbjIgPSBYWxpZGFZUFuZFBhcnNlKHYyKTtcblxuICAvLyBwbAgbZmIHRoZSBwYXRjaFxuICBjbzdCBwMSAIGxLnBvcCgpOxuICBjbzdCBwMiAIGyLnBvcCgpOxuXGgICvIHZhbGlkYXRlIGbWJlcnNcbiAgYucQgciAIGNvbXBhcmVTZWdtZWcyhuMSwgbjIpOxuICBpZiAociAhPTgMCkgcmVdXJuIHIXGcbiAgLygdmFsaWRhdGUgcHJlLXJlbGVhcVcbiAgaWYgKHAxICYmIHAyKSBXGgICAgcmVdXJuIGNvbXBhcmVTZWdtZWcyhwMSzcGxpdCgnLicpLCBwMizcGxpdCgnLicpKTtcbiAgfSBlbHNlIGlmIChwMSBfCBwMikgexuICAgIHJldHVybiBwMSA/ICxIDogMTtcbiAgfVxuXGgIHJldHVybiAwOxufVxuXGleHBvcnQgYucQgdmFsaWRhdGUgPSAodikgPTcbiAgdHlwZWmIHYgPTICdzdHJpbmcnICYmICeWZcXGRdLyZXNKHYpICYmIHNlbXZlciZXNKHYpOxuXGleHBvcnQgYucQgYtcGFyZSAIChMSwgdjIsIGwZXJhdGyKSAPiBXGgICvIHZhbGlkYXRlIGlucHVIGwZXJhdGyXGgIGFzcVydFZhbGlkTBlcmFbIobBlcmFbIpOxuXGgICvIHNpbmNlIHJlcVsdCBvZiBjbwYXJlVmVyclvbnMgYFuIGubHkgYmUgLTEgbIgMCBvciAxXGgICvIGEgcltcGxlIGhcCBjYWgYmUgdXNlZCBbyByZXBsYWNlIHNaXRjaFxuICBjbzdCByZXMgPSBjbwYXJlVmVyclvbnModjEsIHYyKTtcblxuICByZXRcmgbBlcmFbJSZXNNYXBbbBlcmFbJdLmluYxZGVzKHJlcykXGOxuXGleHBvcnQgYucQgcFaXNmaWVzIDgKHYsIHIpID+IHtcbiAgLygaWYgbmgcmFuZUgbBlcmFbIgdGhlbiBcIjcIlxuICBjbzdCBtIDgcitYXRjaCgvXihbPDfldKykvKTtcbiAgYucQgbAgPSBtIDgbVsxXSAICcJztcblxuICAvLyBpZiBndCsdClcSBaGVuIGwZXJhdGyIGNvbXBhcmVcbiAgaWYgKGwICEPSAnXicgJiYgbAgITICd+JykgcmVdXJuIGNvbXBhcmUodiwgciwgbApOxuXGgICvIGVscUgcmFuZUgbYgZWlaGVyIFwiflwiIGyIFwiXlwiIGlzIGFzcVtZWRcbiAgYucQgWYxLCBMiwgdjNdIDgdmFsaWRhdGVBbmRQYXJzZShKTtcbiAgYucQgWIxLCByMiwgcjNdIDgdmFsaWRhdGVBbmRQYXJzZShyKTtcbiAgaWYgKGNvbXBhcmVTdHJpbmdzKHYxLCByMSkgITIDApIHJldHVybiBmYWxzZTtcbiAgaWYgKGwIDPSAnXicpIHtcbiAgICByZXRcmgYtcGFyZVNlZlbnRzKFtMiwgdjNdLCBbcjIsIHIzXSkgPjgMDtcbiAgfVxuICBpZiAoYtcGFyZVNcmluZModjIsIHIyKSAhPTgMCkgcmVdXJuIGZhbHNlOxuICByZXRcmgYtcGFyZVNcmluZModjMsIHIzKSA+PSAwOxufTtcblxuLygZXhwbJIENKUyBzdHlsZSBmbIgcGFyaXRXGjbwYXJlVmVyclvbnMudmFsaWRhdGUgPSBYWxpZGFZTtcbmNvbXBhcmVWZXJzaWucyjbwYXJlIDgYtcGFyZTtcbmNvbXBhcmVWZXJzaWucyzYXNaXNmaWVzIDgcFaXNmaWVzOxuXGjbzdCBzZWZXIgPVxuICAvXltXnPjdKjoXFxkKykoPzpcXCoWgqXXxcXGQrKSg/OlxcLihbeCpdfFxcZCspKDXFwuKFtKlXFxkKykpPyg/OioWxcZGEtelxcLVrKDXFwuWxcZGEtelxcLVrKSopKToPzpcXCtbXFxkYSXFwtXSsoPzpcXCbXFxkYSXFwtXSspKik/KTpPyQvaTtcblxuYucQgdmFsaWRhdGVBbmRQYXJzZSAIChKSAPiBXGgIGlmICheXBlbYgdiAhPTgJNcmluZycpIHtcbiAgICBaHJvdyBuZXcgVHlwZUVycmyKCdJbnZhbGlkIGFyZVtZWIGVcGVjdGVkIHNcmluZycpOxuICBXGgIGNvbnNIGhdGNoIDgditYXRjaChzZWZXIpOxuICBpZiAoIWhdGNoKSBXGgICAgdGhybcgbmVIEVycmyKGBJbnZhbGlkIGFyZVtZWIGvdCBYWxpZCBzZWZXIgKCckeZJyByZWNlaXZlZClgKTtcbiAgfVxuICBtYXRjaCzaGlmdCgpOxuICByZXRcmgbWFYgXGOxuXGjbzdCBpcdpbGRjYXJkIDgKHMpID+IHMgPTICcqJyBfCBzIDPSAneCcgfHwgcyAPTgJgnOxuXGjbzdCBcnlQYXJzZSAIChKSAPiBXGgIGNvbnNIGgPSBwYXJzZUludChLCAxMCkXGgIHJldHVybiBpchTihuKSA/IHYgOiBuOxufTtcblxuYucQgZmyYVUeXBlIDgKGEsIGIpID+XGgIHRcGVvZiBhICEPSBeXBlbYgYiA/IFtTdHJpbmcoYSksIFNcmluZyhiKVgOiBbYSwgYlXGcbmNvbnNIGNvbXBhcmVTdHJpbmdzIDgKGEsIGIpID+IHtcbiAgaWYgKGlzVlsZGNhcmQoYSkgfHwgaXNXaWxkYFyZChiKSkgcmVdXJuIDAXGgIGNvbnNIFthcCwgYnBdIDgZmyYVUeXBlKHRyeVBhcnNlKGEpLCBcnlQYXJzZShiKSkXGgIGlmIChhcCA+IGJwKSByZXRcmgMTtcbiAgaWYgKGFwIDwgYnApIHJldHVybiAtMTtcbiAgcmVdXJuIDAXGOxuXGjbzdCBjbwYXJlUVnbWVudHMgPSAoYSwgYikgPTgexuICBmbIgKGxldCBpIDgMDsgaSAIEhdGgubWFKGEubGVuZRoLCBiLmxlbmdaCkIGkrKykgexuICAgIGNvbnNIHIgPSBjbwYXJlURyaWncyhhWldIHxIDAsIGJbaVgfHwgMCkXGgICAgaWYgKHIgITIDApIHJldHVybiByOxuICBXGgIHJldHVybiAwOxufTtcblxuYucQgbBlcmFbJSZXNNYXAgPSBXGgICc+JzogWzFdLFxuICAnPjnOiBbMCwgMVsXGgICcJzogWzBdLFxuICAnPDnOiBbLTEsIDBdLFxuICAnPCcIFstMVsXGOxuXGjbzdCBhbGxvdVkTBlcmFbJzIDgTJqZWNLmtleXMobBlcmFbJSZXNNYXApOxuXGjbzdCBhcNlcnRWYWxpZEwZXJhdGyIDgKGwKSAPiBXGgIGlmICheXBlbYgbAgITICdzdHJpbmcnKSBXGgICAgdGhybcgbmVIFRcGVFcnJvcihcbiAgICAgIGBJbnZhbGlkIGwZXJhdGyIHRcGUsIGVcGVjdGVkIHNcmluZyBidXQgZICRdHlwZWmIGwfWBcbiAgICApOxuICBXGgIGlmIChhbGxvdVkTBlcmFbJzLmluZGVTYobApIDPSAtMSkgexuICAgIHRocmIGldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGwZXJhdGyLCBleHBlYRlZCBvbmUgbYgJHthbGxvdVkTBlcmFbJzLmpvaWoJwnKXgXGgICAgKTtcbiAgfVxufTtcbiIsICJpbXBvcnQgYtcGFyZVZlcnNpbzLCBIGNvbXBhcmUsIHNhdGlzZmllcyBIGZybgXCJjbwYXJlLXZlcnNpbzXCIXGpbXBvcnQgZWvamkgZnJvbSBcImvZGUtZWvamlcIjtcblxuaWwbJIFBhYtNYWhZVyIGZybgXCIuLipYuLXBhYtzLBhYstbWFuYWdlclwiOxuaWwbJIHsgSWNvbkRhdGEsIEljbJbmZvIHgZnJvbSBcIiuLljbtcGFjaMvdHlwZXNcIjtcbmltcGydCBJYuUMgZnJvbSBcIiuLlzYytYWluXCIXGpbXBvcnQgeyBFbWqaVNZdlcRlckvZGFsIHgZnJvbSBcIiuLvZHVsZXMvcVnZVzdGVyXCIXGcbmVcGydCBkZWZhdWxIGludGVyZmFjZSBJYuUNBUEkgexuICBoYXNJYuOiAoaWQIHNcmluZykgPTgYmvbGVhbjtcblxuICAvKipcbiAgICogQHBhcmFtIGlkIGFjYVwdCBzaGydGNvZGUgdlaCBjbxvbnNcbiAgICogQHBhcmFtIHJhdyBpZiBcnVlLCByZXRcmgcRyaWnIChlbWqaSkgbIgZGFYSBcmkvcmVzbVyYUgcGFaCBpbnNZWFkIGmIHNwYWgZWxlbWVudFxuICAgKiBAcmVdXJucyBzdHJpbmcgKGVtbppKSBvciBkYXRhIHVyaSyZXNvdXJjZSBwYXRoIChpYucykIGbGwgaWYgZlZWgaWQgaXMgbmIGZvdWkXGgICAqLxuICBnZXRJYuKGlkOiBzdHJpbmcsIHJhdzogdHJZSkIHNcmluZyBIGbGwXGgICqKlxuICAgKiBAcGFyYWgaWQgYWNjZXBIHNobJYkZSBaXRoIGNvbGucxuICAgKiBAcGFyYWgcmFIGlmIHRydWUsIHJldHVybiBzdmcgZGFYSBcmkgaWzdGVhZCBvZiBzcGFuIGVsZWlbnRcbiAgICogQHJldHVybnMgcBhbiBlbGVtZWIGNvbnRhaWpbmcgdGhlIGljbgcRyaWnKGVtbppKSBvciBpbWcgZWxlbWVudDsgbnVsbCBpZiBnaXZlbiBpZCBpcyBubQgZmbmRcbiAgICovXGgIGdldEljboaWQIHNcmluZywgcmFPzogZmFscUpOiBIVEMUBhbkVsZWlbnQgfCBudWxsOxuXGgICqKlxuICAgKiBnZXQgcmFIHNZyBjbZWIGmIGljbgdhlbiBhdmFpbGFibGVcbiAgICogQHBhcmFtIGlkIGFjYVwdCBzaGydGNvZGUgdlaCBjbxvbnNcbiAgICogQHBhcmFtIHJhdyBpZiBcnVlLCByZXRcmgcZnIGNvbnRlbnQgKHdoZWgZlZWgcZnIGljbpICgIGlucRlYWQgbYgcBhbiBlbGVtZWXGgICAqIEByZXRcmzIHNcmluZyAoZWvamkpIGyIHNZyBjbZWIChzdmcgaWNvbikgbIgcmVzbVyYUgcGFaCAoYmlbWFwIGljbpOyBudWxsIGlmIGdpdmVuIGlkIGlzIGvdCBmbVuZFxuICAgKicbiAgZVUZHSWNvbihpZDogcRyaWnLCByYXcIHRydWUpOiBQcmtaXNlPHNcmluZyBIGbGw+OxuICAvKipcbiAgICogZVIGlubGluZSBzdmcgdmVyclvbiBvZiBpYuIHdoZWgYXZhaWxhYmxlXGgICAqIEBwYXJhbSBpZCBhYNlcHQgchvcnRjbRlIHdpdGggYsbzXGgICAqIEBwYXJhbSByYXcgaWYgdHJZSwgcmVdXJuIHNcmluZyAoZWvamkpIGyIHNZyBjbZWIChzdmcgaWNvbikgbIgcmVzbVyYUgcGFaCAoYmlbWFwIGljbpIGlucRlYWQgbYgcBhbiBlbGVtZWXGgICAqIEByZXRcmzIHNwYWgZWxlbWVudCBjbYWluaWnIHRoZSBlbWqaSBzdHJpbmcgbIgcZnIGVsZWlbnQgKHNZyBpYuKSBvciBpbWcgZWxlbWVudCAoYmlbWFwIGljbpOyBudWxsIGlmIGdpdmVuIGlkIGlzIGvdCBmbVuZFxuICAgKicbiAgZVUZHSWNvbihpZDogcRyaWnLCByYXc/OiBmYWxzZSkIFBybpcUSFRNTFNwYWFbGVtZWIHwgbnVsbDXGcbiAgLyoqXGgICAqIEBwYXJhbSBpZCBhYNlcHQgchvcnRjbRlIHdpdGggYsbzXGgICAqIEByZXRcmzIGZbGwgZGFYSAoaWjbHVkaWnIGNoYXJhYRlciwYXRoLNZyBjbZWIGRlcGVuZGluZyBvbiBzcGVjaWZpYyBeXBlKSBhYmdCBpYuXGgICAqIGlmIGdpdmVuIGlkIGlzIGZvdWkOyBudWxsIGlmIGdpdmVuIGlkIGlzIGvdCBmbVuZFxuICAgKicbiAgZVSWNvbkRhdGEoaWQIHNcmluZykIEljbEYXRhIHwgbnVsbDtcblxuICAvKipcbiAgICogUHJvbXBIHVzZXIgZmyIGljbsIGFYWlsYWJsZSBzaWjZSBMCLjFcbiAgICogQHJldHVybnMgaWNvbiBpbmZvIGluYxZGluZyBpZCBpZiBcVyIGNobzZSBvbmUIGbGwgaWYgdXNlciBjYWjZWxcbiAgICovXGgIGdldEljbGcmtVXNlcigpOiBQcmtaXNlPEljbJbmZvIHwgbnVsbDXGcbiAgaXNFbWqaTogKHNcjogcRyaWnKSAPiBibsZWFuOxuXGgICqKlxuICAgKiBAcGFyYWgcmVwbGFjZXIgdGFrZXMgYSBYWlsZCBhbmQgZXhpcRpbmcgOnNobJYkZTogYWkIHJldHVybnMgYSBzdHJpbmdcbiAgICovXGgIHBvcRQcmjZXNzbIoaWwdXQIHNcmluZywgcmVwbGFjZXIIChzaGydGNvZGUIHNcmluZykgPTgcRyaWnKTogcRyaWnOxuICBwbNUHJvYVzcyKGlucHVOiBIVEMRWxlbWVudCkIHZvaWQXGcbiAgdmVyclvbjogexuICAgIGNcnJlbnQIHNcmluZztcbiAgICAvKipcbiAgICAgKiBDbwYXJlIFtzZWZXJdKGhdHBzOivcVtdmVyLmyZypIHZlcnNpbgcRyaWncyBcluZyBaGUgcBlYlmaWVkIGwZXJhdGyLlxuICAgICAqXGgICAgICogQHBhcmFtIHZlclRvQtcGFyZSBZXJzaWuIHRvIGNvbXBhcmVcbiAgICAgKiBAcGFyYWgbBlcmFbIgQWxsbdlZCBhcmlaGldGljIGwZXJhdGyIHRvIHVzZVxuICAgICAqIEByZXRcmzIGBcnVlYCBpZiBaGUgYtcGFyaXNvbiBiZXRZWVuIHRoZSBZXJUbNvbXBhcmUgYWkIHRoZSBjdXJyZWIHZlcnNpbgcFaXNmaWVzIHRoZSBvcGVyYXRvciwgYGZhbHNlYCBvdGhlcndpcUuXGgICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYFxuICAgICAqIGNcnJWZXIgPSAnMTAuMSxJztcbiAgICAgKiBjbwYXJlKCcJywgJzEwLjIuMicpOyAvLyByZXRcmgdHJZVxuICAgICAqIGNvbXBhcmUoJzwJywgJzEwLjIuMicpOyAvLyByZXRcmgdHJZVxuICAgICAqIGNvbXBhcmUoJzJyAnMTAuMiyJykICvIHJldHVybiBmYWxzZVxuICAgICAqIGBgYFxuICAgICAqLxuICAgIGNvbXBhcmUoXGgICAgICBvcGVyYXRvcjogYtcGFyZVZlcnNpbzLkNvbXBhcmVPcGVyYXRvcixcbiAgICAgIHZlclRvQtcGFyZTogcRyaWnLFxuICAgICkIGJvbxlYWXGgICAgLyoqXGgICAgICogTWFYggWwbSBzZWZXJdKGhdHBzOivZGjcyucGqcyjbvYxpLYLVzaWnLWwbSzZWZXIpIHZlcnNpbgcmFuZUuXGgICAgICpcbiAgICAgKiBAcGFyYWgcmFuZUgUmFuZUgcGFdGVybiBmbIgdmVyclvblxuICAgICAqIEByZXRcmzIGBcnVlYCBpZiBaGUgYVycmVudCBZXJzaWuIGbWJlciBpcyBaXRoaWgdGhlIHJhbmdlLCBgZmFscVgIGaGVydlzZScbiAgICAgKlxuICAgICAqIEBleGFtcGxlXGgICAgICogYGBgXGgICAgICogYVyclZlciAICcxLjEuMCcXGgICAgICogcFaXNmaWVzKCdeMSwLjAnKTsgLygcmVdXJuIHRydWVcbiAgICAgKiBzYXRpcZpZXMoJxLjAuMCcpOyAvLyByZXRcmgZmFscVcbiAgICAgKiBgYGBcbiAgICAgKicbiAgICBzYXRpcZpZXMocmFuZUIHNcmluZykIGJvbxlYWXGgIHXGXGcbmVcGydCBjbzdCBldnRQcmVmaXggPSBcImljbzYzpcIiBhcyBjbzdDtcbmVcGydCBeXBlIFBNRXZlbnRzIDcbiAgfCBbbmFtZTogXCJjaGFuZVkXCIsIGFwaTogSWNvblNDQVBJLCBhZmZlYRlZDIHNcmluZtdXVxuICBIFtuYWlOiBcImluaXRpYWxpemVkXCIsIGFwaTogSWNvblNDQVBJXTtcblxuZGVjbGFyZSBnbGiYWwgexuICAvLyBNdXNIHVzZSBYXIsIGvIGNvbnNLxldFxuICBYXIgSWNvblNDQVBJdjAIEljbTQFQSSBIHVuZGVmaWlZDtcbncbmVcGydCBeXBlIEFQSVOQUFIDgXCJJYuUNBUElMFwiOxuXGleHBvcnQgYucQgZVQXBpIDgKFxuICBwYWNrTWFuYWdlcjogUGFjahbmFnZXIsXGgIHBsdWdpbjogSWNvblNDLFxuKTogSWNvblNDQVBJID+IChXGgIGhhcljbIHBhYtNYWhZVyLmhhcljbuYmluZChwYWNrTWFuYWdlciksXGgIGdldEljbIHBhYtNYWhZVyLmdldEljbuYmluZChwYWNrTWFuYWdlciksXGgIGdldEljbEYXRhOiBwYWNrTWFuYWdlcinZXRJYuRGFYSiaWkKHBhYtNYWhZVyKSxcbiAgZVUZHSWNvbjogcGFjahbmFnZXIuZVUZHSWNvbiiaWkKHBhYtNYWhZVyKSxcbiAgZVSWNvbkZybVcVyOiAoKSAPiBuZXcgRWvamlTdWdnZXNZXJNbRhbChwbHVnaWpLmwZWoKSxcbiAgaXNFbWqaTogZWvamkuaGFzRWvamkuYmluZChlbWqaSksXGgIHBvcRQcmjZXNzbIIHBsdWdpbiwbNUHJvYVzcyLmJpbmQocGxZluKSxcbiAgdmVyclvbjogexuICAgIGdldCBjdXJyZWKCkgexuICAgICAgcmVdXJuIHBsdWdpbitYWpZmVzdCZXJzaWuOxuICAgIHsXGgICAgYtcGFyZTogKGwLCBZXIpID+IGNvbXBhcmUocGxZluLmhbmlmZXNLnZlcnNpbsIHZlciwgbApLFxuICAgIHNhdGlzZmllczogKHJhbmdlKSAPiBzYXRpcZpZXMocGxZluLmhbmlmZXNLnZlcnNpbsIHJhbmdlKSxcbiAgfSxcbnpOxuIiwgImltcGydCBGdXNlIGZybgXCJmdXNlLmpzXCIXGpbXBvcnQgexuICBFZGlbIsXGgIEVkaXRvclBvclaWuLFxuICBFZGlbJTdWdnZXNLFxuICBFZGlbJTdWdnZXNQudGVdCxcbiAgRWRpdGyUVnZVzdFRyaWdnZXJJbmZvLFxuICBTdWdnZXNTWkYWwsXGIGZybgXCJvYnNpZGlhblwiOxuXGpbXBvcnQgUGFjahbmFnZXIgZnJvbSBcIiuLljbtcGFjaMvcGFjaytYWhZVyXCIXGpbXBvcnQgeyBGdXpeUhdGNoLCBJYuSWmbyBIGZybgXCIuLipYuLXBhYtzLRcGVzXCIXGpbXBvcnQgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIFVuaWuUmFuZVzIGZybgXCIuLVuaWuXCIXGcbmNvbnNIENMQVNTXlEIDgXCJpcNcIjtcblxuaWZXJmYWNlIFNZdlcRlckJhcUgexuICBwYWNrTWFuYWdlcjogUGFjahbmFnZXIXGXGjbzdCBnZXRTdWdnZXNaWucyAIChpbnBdDogcRyaWnLCBwYWNrTWFuYWdlcjogUGFjahbmFnZXIpID+IHtcbiAgaWYgKHRcGVvZiBpbnBdCAPTgXCJzdHJpbmdcIiAmJiBpbnBdCcmltKCkubGVuZRoIDgMCkgexuICAgIHJldHVybiBwYWNrTWFuYWdlcizZWFyYgoaWwdXQucmVwbGFjZSgvXlxcKxcXCskLcsIFwiXCIpLnNwbGlKCbKvZykpOxuICBIGVscUgexuICAgIHJldHVybiBwYWNrTWFuYWdlcinZXRBbGxJZHMoKTtcbiAgfVxufTtcbivIGVzbGludCkaXNhYmxlLWleHQtbGluZSBwcmVmZXItYXJybcvcHJlZmVyLWFycmLWZbmNaWucxuYXNbmMgZnVuYRpbgcmVuZGVyUVnZVzdGlvbihcbiAgdGhpczogUVnZVzdGVyQmFzZSxcbiAgcVnZVzdGlvbjogRnVenlNYXRjaDxJYuSWmbzsXGgIGVsOiBIVEMRWxlbWVudCxcbikIFBybpcUdmpZDgexuICBjbzdCBIGlkLCBuYWlIHgPSBzdWdnZXNaWuLmlZWsXGgICAgeyBtYXRjaGVzIHgPSBzdWdnZXNaWuLFxuICAgIGljbFbCAIGFYWlIHRoaXMucGFjahbmFnZXIuZVUZHSWNvbihpZCkXGgIGlmICghaWNvbkVsKSBaHJvdyBuZXcgVHlwZUVycmyKFwiRmFpbGVkIHRvIGdldCBpYuIGZvciBrZXkIFwiICsgaWQpOxuXGgIGVsLmFkZENsYXNzKFwibWkLWNvbXBsZXhcIikXGcbiAgYucQgchvcnRjbRlIDgZWxcbiAgICAuYJlYXRlRGlKFwicVnZVzdGlvbijbZWXCIpXGgICAgLmNyZWFZURpdihcInNZdlcRpbtdGlbGVcIikXGcbiAgaWYgKGhdGNoZXMpIHtcbiAgICBjbzdCBpbmRpYVzIDcbiAgICAgIGhdGNoZXMubGVuZRoIDPSAxXGgICAgICAgIDgbWFYhlcswXSrZXkgPTIFwibmFtZVwiXGgICAgICAgICAgPyBtYXRjaGVzWzBdLmluZGljZXNcbiAgICAgICAgICAIFtdXGgICAgICAgIDogVWpbSYWnZXMoXGgICAgICAgICAgICBtYXRjaGVzLmZsYXRNYXAoKGpID+IChtLmtleSAPTgXCJuYWlXCIgPyBtLmluZGljZXMgOiBbXSkpLFxuICAgICAgICAgICkXGgICAgcmVuZGVyTWFYhlcyhzaGydGNvZGUsIGhbWUucmVwbGFjZSgvWtXSnLCBcIiBcIiksIGluZGljZXMpOxuICBIGVscUgexuICAgIHNobJYkZSzZXRUZXhKGhbWUucmVwbGFjZSgvWtXSnLCBcIiBcIikpOxuICBXGgIGVsLmNyZWFZURpdihcInNZdlcRpbtYXVXCIpLmNyZWFZVNwYWoXCJzdWdnZXNaWuLWZsYWlyXCIsIChlbCkgPTcbiAgICBlbChcHBlbmRDaGlsZChpYuRWwpLFxuICApOxufVxuXGleHBvcnQgYxhcMgRWvamlTdWdnZXNZXJNbRhbFxuICBleHRlbmRzIFNZdlcRNbRhbDxGdXpeUhdGNoPEljbJbmZvPjcbiAgaWwbGVtZWcyBTdWdnZXNZXJCYXNlXGXGgIGNvbnNcnVjdGyKHBYmxpYyBwbHVnaWIEljbTQykgexuICAgIHNcGVyKHBsdWdpbihcHApOxuICAgIHRoaXMubWkYWxFbChZGRDbGFzcyhDTEFTUJRCkXGgIHcbiAgZVIHBhYtNYWhZVyKCkgexuICAgIHJldHVybiBaGlzLnBsdWdpbiwYWNrTWFuYWdlcjtcbiAgfVxuXGgIGdldFNZdlcRpbzKGlucHVOiBzdHJpbmcpIHtcbiAgICByZXRcmgZVUVnZVzdGlvbnMoaWwdXQsIHRoaXMucGFjahbmFnZXIpOxuICBXGgIHJlbmRlclNZdlcRpbgPSByZWkZXJTdWdnZXNaWuOxuXGgICvIFBybpclmeSBaGUgbWkYWxcbiAgcmVzbxZTogKChYWxZTogSWNvbkluZmgfCBudWxsKSAPiBblkKSBIGbGwgPSBudWxsOxuICBvcGVuKCkIFBybpcUSWNvbkluZmgfCBudWxsPiBXGgICAgcVwZXIubBlbigpOxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzbxZSkgPTgexuICAgICAgdGhpcyyZXNvbHZlIDgcmVzbxZTtcbiAgICBKTtcbiAgfVxuICBvbkNsbNlKCkgexuICAgIGlmIChaGlzLnJlcsdmUpIHtcbiAgICAgIHRoaXMucmVzbxZShudWxsKTtcbiAgICAgIHRoaXMucmVzbxZSAIGbGwXGgICAgfVxuICBXGcbiAgbDaGvcVTdWdnZXNaWuKHNZdlcRpbIEZenpTWFYgSWNvbkluZm+KTogdmpZCBXGgICAgLygYucsZSsbcocVnZVzdGlvbikXGgIHcbiAgcVsZWNUVnZVzdGlvbihcbiAgICBYWxZTogRnVenlNYXRjaDxJYuSWmbzgfCBudWxsLFxuICAgIGVdDogTWcVFdmVudCBIEtleWJvYXJkRXZlbnQsXGgICkIHZvaWQgexuICAgIGlmIChaGlzLnJlcsdmUpIHtcbiAgICAgIGlmIChYWxZTuaXRlbSkgexuICAgICAgICBaGlzLnJlcsdmUodmFsdWUuaXRlbSkXGgICAgICBIGVscUgexuICAgICAgICBaGlzLnJlcsdmUobnVsbCkXGgICAgICBXGgICAgICBaGlzLnJlcsdmUgPSBudWxsOxuICAgIHcblxuICAgIHNcGVyLnNlbGVjdFNZdlcRpbodmFsdWUgYXMgYWLCBldnQpOxuICBXGXGcbmVcGydCBjbGFzcyBFbWqaVNZdlcRlclxuICBleHRlbmRzIEVkaXRvclNZdlcQRnVenlNYXRjaDxJYuSWmbz+XGgIGltcGxlbWVudHMgUVnZVzdGVyQmFzZVxuexuICBjbzdHJYRvcihwdWJsaWMgcGxZluOiBJYuUMpIHtcbiAgICBzdXBlcihwbHVnaWuYXBwKTtcbiAgICBaGlzLnNZdlcRFbChZGRDbGFzcyhDTEFTUJRCkXGgIHcblxuICBnZXQgcGFjahbmFnZXIoKSBXGgICAgcmVdXJuIHRoaXMucGxZluLnBhYtNYWhZVyOxuICBXGcbiAgbUcmlnZVyKFxuICAgIGNcnNvcjogRWRpdGyUGzaXRpbsXGgICAgZWRpdGyOiBFZGlbIsXGgICkIEVkaXRvclNZdlcRUcmlnZVySWmbyBIGbGwgexuICAgIGlmICghdGhpcywbHVnaWucVdGluZMucVnZVzdGVyKSByZXRcmgbnVsbDtcbiAgICBjbzdCBzdWIgPSBlZGlbIuZVTGluZShjdXJzbIubGluZSkucVicRyaWnKDAsIGNcnNvcijaCkXGgICAgYucQgdHJhaWxpbmdTcGFjZSAIHRoaXMucGxZluLnNldHRpbmdzLnRyaWdnZXJXaXRoVHJhaWxpbmdTcGFjZVxuICAgICAgPyBcIiBcIlxuICAgICAgOiBcIlwiOxuICAgIGxldCBwYXRZXJuIDgURyaWnLnJhdAoPzokeRyYWlsaWnUBhYVOnxcdUZGMUFcdUZGMUEpKFteOlxccrJClgOxuICAgIGNvbnNIGhdGNoIDgcViLmhdGNoKGldyBSZWdFeHAocGFdGVybiwgXCJpXCIpKTtcbiAgICBpZiAoIWhdGNoKSByZXRcmgbnVsbDtcbiAgICBjbzdCBwcmVUMgPSAobWFYguaWwdXQgYXMgcRyaWnKVxuICAgICAgLnNYnNcmluZygwLCBtYXRjaCpbmRleClcbiAgICAgICtYXRjaCgvOihbXlxcczpdKyQpLykXGgICAgaWYgKHByZXZTQyAmJiBaGlzLnBhYtNYWhZVyLmhhcljbocHJldlNDWzFdKSkgcmVdXJuIGbGwXGgICAgcmVdXJuIHtcbiAgICAgIGVuZDogYVycyLFxuICAgICAgcRhcnQIHtcbiAgICAgICAgYgIGhdGNoLmluZGVIGFzIGbWJlcixcbiAgICAgICAgbGluZTogYVycyLmxpbmUsXGgICAgICBLFxuICAgICAgcXVlcnkIGhdGNoWzFdLFxuICAgIHXGgIHcblxuICBnZXRTdWdnZXNaWucyhjbZXhOiBFZGlbJTdWdnZXNQudGVdCkgexuICAgIHJldHVybiBnZXRTdWdnZXNaWucyhjbZXhLnFZXJLCBaGlzLnBhYtNYWhZVyKTtcbiAgfVxuXGgIHJlbmRlclNZdlcRpbgPSByZWkZXJTdWdnZXNaWuOxuICBzZWxlYRTdWdnZXNaWuKHNZdlcRpbIEZenpTWFYgSWNvbkluZm+KTogdmpZCBXGgICAgaWYgKCFaGlzLmNvbnRleHQpIHJldHVybjtcbiAgICBjbzdCBIGlkLCBwYWNrIHgPSBzdWdnZXNaWuLmlZWXGgICAgdGhpcyjbZXhLmVkaXRvciyZXBsYWNlUmFuZUoXGgICAgICBaGlzLnBsdWdpbizZXRaWncyjbRlMmVtbppICYmIHBhYsgPTIFwiZWvamlcIlxuICAgICAgICA/IChaGlzLnBhYtNYWhZVyLmdldEljboaWQsIHRydWUpIGFzIHNcmluZylcbiAgICAgICAgOiBgOiRaWROmAgKyAodGhpcywbHVnaWucVdGluZMucBhYVBZnRlclNDIDgXCIgXCIgOiBcIlwiKSxcbiAgICAgIHRoaXMuYudGVdCzdGFydCxcbiAgICAgIHRoaXMuYudGVdClbmQsXGgICAgKTtcbiAgfVxufVxuXGjbzdCByZWkZXJNYXRjaGVzIDgKFxuICBlbDogSFRNTEVsZWlbnQsXGgIHRleHQIHNcmluZyxcbiAgaWkaWNlczIHJlYWRvbmxIEZcUuUmFuZVUdXBsZVtdLFxuICBvZmZzZXQ/OiBudWiZXIsXGpID+IHtcbiAgaWYgKGluZGljZXMpIHtcbiAgICBpZiAobZmcVIDPSBbmRlZmluZWQpIGmZnNldCAIDAXGgICAgbGVIHRleHRJbmRleCAIDAXGgICAgZmyIChcbiAgICAgIGxldCByYWnZUluZGVIDgMDtcbiAgICAgIHJhbmdlSWkZXggPCBpbmRpYVzLmxlbmdaCAmJiBZXhSWkZXggPCBZXhLmxlbmdaDtcbiAgICAgIHJhbmdlSWkZXgrKxuICAgICkgexuICAgICAgbGVIHJhbmdlIDgaWkaWNlctyYWnZUluZGVXSxcbiAgICAgICAgcRhcnQgPSByYWnZVswXSArIGmZnNldCxcbiAgICAgICAgZWkIDgcmFuZVbMVgKyBvZmZzZXQgKyAxOyAvLyBwYXRjaCBmbIgRnVzZSSYWnZVRcGxlXGgICAgICBpZiAoIShlbmQgPDgMCkpIHtcbiAgICAgICAgaWYgKHNYXJIDIHRleHQubGVuZRoKSBicmVhaztcbiAgICAgICAgaWYgKHNYXJIDwgMCkgcRhcnQgPSAwOxuICAgICAgICBpZiAocRhcnQgITIHRleHRJbmRleClcbiAgICAgICAgICBlbChcHBlbmRUZXhKHRleHQucVicRyaWnKHRleHRJbmRleCwgcRhcnQpKTtcbiAgICAgICAgZWwuYJlYXRlUBhbihXGgICAgICAgICAgYxzOiBcInNZdlcRpbtaGlnaGxpZhXCIsXGgICAgICAgICAgdGVdDogdGVdCzdWJzdHJpbmcocRhcnQsIGVuZCksXGgICAgICAgIHpOxuICAgICAgICBZXhSWkZXggPSBlbmQXGgICAgICBXGgICAgfVxuICAgIHRleHRJbmRleCAIHRleHQubGVuZRoICYmIGVsLmFwcGVuZFRleHQodGVdCzdWJzdHJpbmcodGVdEluZGVKSkXGgIHgZWxzZSBlbChcHBlbmRUZXhKHRleHQpOxufTtcbiIsICJpbXBvcnQgcZnMnVyaSBmcmtIFwibWluaSzdmctZGFYScmlcIjtcbmltcGydCBlbWqaUJTmFtZSBmcmtIFwibmkZSlbWqaSsaWIvZWvamkuanNvblwiOxuaWwbJIHsgcVSWNvbiBIGZybgXCJvYnNpZGlhblwiOxuXGpbXBvcnQgeyBMdWNpZGVJYuLCBPYnNpZGlhbkljbgfSBmcmtIFwiLivaWNvbnNcIjtcbmltcGydCBIEJbHRpSWJYuRGFYSBhcyBCdWxaUluSWNvbkRhdGFUeXBlLCBJYuSWmbyBIGZybgXCIuLRcGVzXCIXGpbXBvcnQgeyBnZXRDbHNGbJJYuIHgZnJvbSBcIivdXRpbHNcIjtcblxuYucQgaFibJUbNuYWtlIDgKGhbWUIHNcmluZykgPTgbmFtZSyZXBsYWNlKCtLcsIFwiXwiKTtcblxuYucQgTHVjaWRlUGFjahbWUgPSBcImxYwiLFxuICBPYnNpZGlhblBhYtOYWlIDgXCJvYnNcIjtcblxuZXhwbJIHRcGUgUZHUGFjahbWVzIDgdHlwZWmIExYlkZVBhYtOYWlIHwgdHlwZWmIEiclkaWFuUGFjahbWUXGcbmNvbnNIHJlbWZUJbHRpSWJYuQXRcnMgPSAoZWwIEhUTUxFbGVtZWKSAPlxuICBbXCJjbGFzcwiLCBcImhlaWdodFwiLCBcIndpZHRoXCJdLmZvckVhYgoKGspID+XGgICAgZWwuZmlycRFbGVtZWQhpbGQ/LnJlbWZUFdHJpYnVZShrKSxcbiAgKTtcbmNsYXNzIEJbHRpSWJYuRGFYSBpbXBsZWlbnRzIEJbHRpSWJYuRGFYVRcGUgexuICBwdWJsaWMgdHlwZSAIFwiYnVsdGktaWcIiBhcyBjbzdDtcbiAgcHVibGljIGhbWUIHNcmluZztcbiAgLyoqIGljbgchvcnRjbRlICovXGgIHBYmxpYyBpZDogcRyaWnOxuICBjbzdHJYRvcihwdWJsaWMgcGFjazogcRyaWnLCBwcmlYXRlIGiclkaWFuSWQIHNcmluZykgexuICAgIHRoaXMubmFtZSAIGthYmiVGTbmFrZShvYnNpZGlhbklkKTtcbiAgICBaGlzLmlkIDgYCRcGFjafJHtaGlzLmhbWVYDtcbiAgfVxuICBwdWJsaWMgZVIGRhdGEoKSBXGgICAgYucQgZWwgPSBjcmVhdGVEaXYoKTtcbiAgICBzZXRJYuKFxuICAgICAgZWwsXGgICAgICAodGhpcywYWNrIDPSBMdWNpZGVQYWNrTmFtZSA/IFwibHVjaWRlLVwiIDogXCJcIikgKyBaGlzLmiclkaWFuSWQsXGgICAgKTtcbiAgICByZWvdmVCdWxaUluSWNvbkFdHJzKGVsKTtcbiAgICBlbCmaXJzdEVsZWlbnRDaGlsZDucVQXRcmlidXRlKFwieGsbnNcIiwgXCJodHRwOivddLnczLmyZyyMDAwLNZwiKTtcbiAgICByZXRcmgZWwuaWuZXJIVEMOxuICBXGgIHBYmxpYyBnZXQgZGFYVVyaSgpIHtcbiAgICByZXRcmgcZnMnVyaShaGlzLmRhdGEpOxuICBXGgIHBYmxpYyBnZXRETocZnIDgdHJZSkIEhUTUxTcGFuRWxlbWVudCBXGgICAgYucQgZWwgPSBjcmVhdGVTcGFuKHsgYxzOiBnZXRDbHNGbJJYuKHRoaXMpIHpOxuICAgIGlmIChzdmcpIHtcbiAgICAgIGVsLmFkZENsYXNzKFwiaXNjLXNZypYuXCIpOxuICAgICAgcVSWNvbihcbiAgICAgICAgZWwsXGgICAgICAgIChaGlzLnBhYsgPTIExYlkZVBhYtOYWlIDgXCJsdWNpZGUtXCIgOiBcIlwiKSArIHRoaXMubJzaWRpYWJZCxcbiAgICAgICkXGgICAgICByZWvdmVCdWxaUluSWNvbkFdHJzKGVsKTtcbiAgICBIGVscUgexuICAgICAgZWwuYWRkQxhcMoXCJpcMtaWnLWljbcIikXGgICAgICBlbCjcmVhdGVFbChcImltZwiLCBIGFdHIIHsgcJjOiBaGlzLmRhdGFVcmkgfSBKTtcbiAgICBXGgICAgcmVdXJuIGVsOxuICBXGXGcbmNvbnNIEVNTpJXBBQtfTkFNRSAIFwiZWvamlcIjtcbmNvbnNIGdldEJaWxSWzIDgKCkIHtcbiAgcGFjaMIFJlYWRvbmxTWFwPHNcmluZywgQnVsdGlJbkljbEYXRhPjtcbiAgaWRzOiBSZWFkbseUFycmFPEljbJbmZvPjtcbiAgcGFjahbWVzOiBSZWFkbseUFycmFPHNcmluZzXGID+IHtcbiAgbGVIHBhYtzIDgbmVIEhcDxzdHJpbmcsIEJbHRpSWJYuRGFYToKSxcbiAgICBpZHMgPSBbXSBhcyBJYuSWmbtdLFxuICAgIHBhYtuYWlcyAIFtdIGFzIHNcmluZtdOxuXGgIGZvciAoYucQgWBhYssIGljbzXSBvZiBbXGgICAgWiclkaWFuUGFjahbWUsIEiclkaWFuSWNvblsXGgICAgWxYlkZVBhYtOYWlLCBMdWNpZGVJYuXSxcbiAgXSBhcyBjbzdCkgexuICAgIHBhYtuYWlcywdXNoKHBhYspOxuICAgIGZvciAoYucQgbJzaWRpYWJZCBvZiBpYucykgexuICAgICAgYucQgaWNvbiAIGldyBCdWxaUluSWNvbkRhdGEocGFjaywgbJzaWRpYWJZCkXGgICAgICBwYWNrcyzZXQoaWNvbipZCwgaWNvbikXGgICAgICBpZHMucHVzaChpYuKTtcbiAgICBXGgIHcbiAgcGFjahbWVzLnBcgoRUPSklfUEFDSOQUFKTtcbiAgZmyIChjbzdCBrZXkgbYgTJqZWNLmtleXMoZWvamlCeUhbWUpKSBXGgICAgaWRzLnBcgoeyBwYWNrOiBFTUKSVQQUNLXBTUUsIGlkOiBrZXksIGhbWUIGtleSBKTtcbiAgfVxuICByZXRcmgeyBwYWNrcywgaWRzLCBwYWNrbmFtZXMgfTtcbnXGcbmNvbnNIHJlcVsdCAIGdldEJaWxSWzKCkXGleHBvcnQgYucQgQnVpbHRJblNWRljbQYWNrcyAIHJlcVsdCwYWNrcztcbmVcGydCBjbzdCBCdWlsdEluSWNvbklkcyAIHJlcVsdCpZHMXGleHBvcnQgYucQgQnVpbHRJbkljbQYWNrbmFtZXMgPSByZXNbHQucGFjahbWVzOxuIiwgImltcGydCBlbWqaSBmcmtIFwibmkZSlbWqaVwiOxuXGpbXBvcnQgdHlwZSBIEVtbppSWNvbkRhdGEgYXMgRWvamlJYuRGFYVRcGUgfSBmcmtIFwiLieXBlcwiOxuaWwbJIHsgZVQxzRmySWNvbiBIGZybgXCIuLVaWxzXCIXGcbmVcGydCBkZWZhdWxIGNsYXNzIEVtbppSWNvbkRhdGEgaWwbGVtZWcyBFbWqaUljbEYXRhVHlwZSBXGgIGNvbnNcnVjdGyKHBYmxpYyBuYWlOiBzdHJpbmcpIHtXGgIHBYmxpYyBnZXQgaWQoKSBXGgICAgcmVdXJuIHRoaXMubmFtZTtcbiAgfVxuICBwdWJsaWMgZVIHBhYsoKSBXGgICAgcmVdXJuIFwiZWvamlcIiBhcyBjbzdDtcbiAgfVxuICBwdWJsaWMgZVIHRcGUoKSBXGgICAgcmVdXJuIFwiZWvamlcIiBhcyBjbzdDtcbiAgfVxuICBwdWJsaWMgZVIGNoYXIoKSBXGgICAgcmVdXJuIGVtbppLmdldChaGlzLmhbWUpOxuICBXGcbiAgcRhdGljIGdldERhdGEobmFtZTogcRyaWnKSBXGgICAgaWYgKGVtbppLmhhcVtbppKGhbWUpKSBXGgICAgICByZXRcmgbmVIEVtbppSWNvbkRhdGEobmFtZSkXGgICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsOxuICAgIHcbiAgfVxuXGgIHBYmxpYyBnZXRETocZnIDgdHJZSkgexuICAgIHJldHVybiBjcmVhdGVTcGFuKHtcbiAgICAgIGNsczogWdldENscZvckljbodGhpcyksIFwiaXNjLWNoYXItaWNvblwiXSxcbiAgICAgIHRleHQIHRoaXMuYhhcixcbiAgICBKTtcbiAgfVxufVxuIiwgImltcGydCBIEZpbGVTeXNZWBZGFwdGVyIHgZnJvbSBcImiclkaWFuXCIXGpbXBvcnQgeyBleHRuYWlIHgZnJvbSBcInBhdGhcIjtcblxuaWwbJIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcbmltcGydCBIEZpbGVJYuRGFYSBhcyBGaWxlSWNvbkRhdGFUeXBlIHgZnJvbSBcIivdHlwZXNcIjtcbmltcGydCBIGdldENscZvckljbsIGdldFBhYtuTmFtZUZybJZCBIGZybgXCIuLVaWxzXCIXGcbmVcGydCBkZWZhdWxIGNsYXNzIEZpbGVJYuRGFYSBpbXBsZWlbnRzIEZpbGVJYuRGFYVRcGUgexuICBzdGFaWMgZVRGFYShcbiAgICBpZDogcRyaWnLFxuICAgIHBhdGgIHNcmluZyxcbiAgICBwbHVnaWIEljbTQyxcbiAgKTogRmlsZUljbEYXRhIHwgbnVsbCBXGgICAgYucQgcmVzdWxIDgZVUGFjaOYWlRnJvbUlkKGlkKTtcbiAgICBpZiAoIXJlcVsdCBfCByZXNbHQucGFjayAPTgXCJlbWqaVwiKSByZXRcmgbnVsbDtcbiAgICByZXRcmgbmVIEZpbGVJYuRGFYShpZCwgcmVzdWxLmhbWUsIHJlcVsdCwYWNrLCBwYXRoLCBwbHVnaWpOxuICBXGcbiAgcHVibGljIGdldCBeXBlKCkgexuICAgIHJldHVybiBcImZpbGVcIiBhcyBjbzdDtcbiAgfVxuICBwdWJsaWMgcGFaDogcRyaWnOxuICBjbzdHJYRvcihcbiAgICBwcmlYXRlIFpZDogcRyaWnLFxuICAgIHByaXZhdGUgXhbWUIHNcmluZyxcbiAgICBwcmlYXRlIFwYWNrOiBzdHJpbmcsXGgICAgcGFaDogcRyaWnLFxuICAgIHByaXZhdGUgcGxZluOiBJYuUMsXGgICkgexuICAgIHRoaXMucGFaCAIHBhdGgudHJpbSgpOxuICBXGgIHByaXZhdGUgZVIHZhdWxKCkgexuICAgIHJldHVybiBaGlzLnBsdWdpbihcHAudmFbHQXGgIHcblxuICBwdWJsaWMgZVIGlkKCkgexuICAgIHJldHVybiBaGlzLlpZDtcbiAgfVxuICBwdWJsaWMgZVIHBhYsoKSBXGgICAgcmVdXJuIHRoaXMuXBhYsXGgIHcbiAgcHVibGljIGdldCBuYWlKCkgexuICAgIHJldHVybiBaGlzLluYWlOxuICBXGgIHBYmxpYyBnZXQgZXhKCkgexuICAgIHJldHVybiBleHRuYWlKHRoaXMucGFaCkXGgIHcbiAgcHVibGljIGdldCBmcBhdGgoKSBXGgICAgaWYgKHRoaXMudmFbHQuYWRhcHRlciBpbnNYWjZWmIEZpbGVTeXNZWBZGFwdGVyKSBXGgICAgICByZXRcmgdGhpcyYXVsdChZGFwdGVyLmdldEZbGxQYXRoKHRoaXMucGFaCkXGgICAgfSBlbHNlIHJldHVybiBudWxsOxuICBXGgIHBYmxpYyBnZXQgcmVzbVyYVQYXRoKCkgexuICAgIHJldHVybiBaGlzLnZhdWxLmFkYXBZXIuZVUmVzbVyYVQYXRoKHRoaXMucGFaCkXGgIHcblxuICBwdWJsaWMgZVIGlzUZHKCkgexuICAgIHJldHVybiBaGlzLmVdCAPTgXCIucZnXCIXGgIHcbiAgcHVibGljIGdldERPTShzdmcIHRydWUpOiBQcmtaXNlPEhUTUxTcGFuRWxlbWVudDXGgIHBYmxpYyBnZXRETocZnOiBmYWxzZSkIEhUTUxTcGFuRWxlbWVudDtcbiAgcHVibGljIGdldERPTShzdmcgPSBcnVlKTogUHJvbWlzZTxIVEMUBhbkVsZWlbnQ+IHwgSFRNTFNwYWFbGVtZWIHtcbiAgICBjbzdCBlbCAIGNyZWFZVNwYWoeyBjbHMIGdldENscZvckljbodGhpcykgfSkXGgICAgaWYgKHNZyAmJiBaGlzLmlzUZHKSBXGgICAgICBlbChZGRDbGFzcyhcImlzYyzdmctaWNvblwiKTtcbiAgICAgIHJldHVybiAoYXNbmMgKCkgPTgexuICAgICAgICBjbzdCBzdmdFbCAIGFYWlIHRoaXMucGxZluLmZpbGVJYuQFjaGUuZVSWNvbihaGlzLnBhdGgpOxuICAgICAgICBpZiAocZnRWwpIHtcbiAgICAgICAgICBaGlzLmZpeEZpbGxDbxvcihzdmdFbCkXGgICAgICAgICAgZWwuYXBwZWkKHNZVsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjbzbxlLmVycmyKFwiZmFpbGVkIHRvIGdldCBpYuIGRhdGEgZmyXCIsIHRoaXMucGFaCkXGgICAgICAgIHcbiAgICAgICAgcmVdXJuIGVsOxuICAgICAgfSkoKTtcbiAgICBIGVscUgexuICAgICAgZWwuYWRkQxhcMoXCJpcMtaWnLWljbcIikXGgICAgICBlbCjcmVhdGVFbChcImltZwiLCBIGFdHIIHsgcJjOiBaGlzLnJlccmNlUGFaCBIHpOxuICAgICAgcmVdXJuIGVsOxuICAgIHcbiAgfVxuXGgIGZpeEZpbGxDbxvcihzdmcIFNWRVsZWlbnQpOiBblkIHtcbiAgICBpZiAoIXBhYtUbBhdGNoLmluYxZGVzKHRoaXMucGFjaykpIHJldHVybjtcbiAgICBmbIgKGNvbnNIHBhdGhFbCBvZiBzdmcuZVRWxlbWVudHNCeVRhZhbWUoXCJwYXRoXCIpKSBXGgICAgICBpZiAoIXBhdGhFbCoYXNBdHRyaWJdGUoXCJmaWxsXCIpKSBXGgICAgICAgIHBhdGhFbCzZXRBdHRyaWJdGUoXCJmaWxsXCIsIFwiYVycmVudENvbGyXCIpOxuICAgICAgfVxuICAgIHcbiAgfVxufVxuYucQgcGFjaRvUGFYggPSBbXCJmYWJcIiwgXCJmYXJcIiwgXCJmYXNcIiwgXCJyaWZcIiwgXCJyaWxcIlXGiLCAiaWwbJIEZcUgZnJvbSBcImZcUuanNcIjtcblxuaWZXJmYWNlIEljbCYXNpYluZmgexuICBwYWNrOiBzdHJpbmcXGgIGhbWUIHNcmluZztcbncblxuZXhwbJIHRcGUgSWNvbkluZmgPSBGaWxlSWNvbkluZmgfCBFbWqaUljbJbmZvIHwgQnVsdGlJbkljbJbmZvOxuZXhwbJIHRcGUgSWNvbkRhdGEgPSBGaWxlSWNvbkRhdGEgfCBFbWqaUljbEYXRhIHwgQnVsdGlJbkljbEYXRhOxuXGeXBlIHdpdGhJZCAIHsgaWQIHNcmluZyBOxuXGeXBlIEVtbppSWNvbkluZmgPSBJYuQmFzaWNJbmZvICYgeyBwYWNrOiBcImVtbppXCIgfSAmIHdpdGhJZDtcbmVcGydCBeXBlIEVtbppSWNvbkRhdGEgPSBFbWqaUljbJbmZvICZcbiAgSWNvbkJhcljRGFYSAmIHsgYhhcjogcRyaWnOyBeXBlOiBcImVtbppXCIgfTtcblxudHlwZSBGaWxlQmFzaWNJbmZvIDgSWNvbkJhcljSWmbyAmIHtcbiAgLyoqIHBhdGggcmVsYXRpdmUgdGgdmFbHQgKicbiAgcGFaDogcRyaWnOxuICAvKiogdlaCBkbQgKicbiAgZXhOiBzdHJpbmcXGOxuXGeXBlIEljbCYXNpYRhdGEgPSBXGgIGdldERPTShzdmcIHRydWUpOiBIVEMUBhbkVsZWlbnQgfCBQcmtaXNlPEhUTUxTcGFuRWxlbWVudDXGgIGdldERPTShzdmc/OiBmYWxzZSkIEhUTUxTcGFuRWxlbWVudDtcbnXGcbmVcGydCBeXBlIEZpbGVJYuSWmbyAIEZpbGVCYXNpYluZmgJiBaXRoSWQXGleHBvcnQgdHlwZSBGaWxlSWNvbkRhdGEgPSBGaWxlQmFzaWNJbmZvICZcbiAgSWNvbkJhcljRGFYSAmIHtcbiAgICAvKiogcmVhbCBwYXRoIGluIGZpbGUgclzdGVtLCBudWxsIGlmIGvdCBpbiBEZXNrdGwICovXGgICAgZnNQYXRoOiBzdHJpbmcgfCBudWxsOxuICAgICqKiByZXNvdXJjZSBwYXRoIHRvIGljbgZmlsZSAqLxuICAgIHJlccmNlUGFaDogcRyaWnOxuICAgIHRcGUIFwiZmlsZVwiOxuICAgIGlzUZHOiBibsZWFuOxuICBOxuZXhwbJIGNvbnNIGlzRmlsZUljbJbmZvIDgKGlkOiBJYuSWmbykIGlkIGlzIEZpbGVJYuSWmbyAPlxuICAhIShpZCBhcyBGaWxlSWNvbkluZmpLmVdDtcblxuZXhwbJIHRcGUgQnVsdGlJbkljbJbmZvIDgSWNvbkJhcljSWmbyAmIHdpdGhJZDtcbmVcGydCBeXBlIEJbHRpSWJYuRGFYSAIEljbCYXNpYluZmgJlxuICBJYuQmFzaWNEYXRhICYgexuICAgICqKiBkYXRhIHVyaSBvZiBzdmcgaWNvbiAqLxuICAgIGRhdGFVcmkIHNcmluZztcbiAgICAvKiogcZnIGljbgcmFIGNvbnRlbnQgKicbiAgICBkYXRhOiBzdHJpbmcXGgICAgdHlwZTogXCJidWxaSpblwiOxuICBOxuXGleHBvcnQgdHlwZSBGdXpeUhdGNoPFQ+IDgRnVzZSGdXNlUmVzdWxPFQ+OxuIiwgImltcGydCBIEvdGljZSwgVEZpbGUgfSBmcmtIFwibJzaWRpYWcIjtcbmltcGydCBIGpvaWgfSBmcmtIFwicGFaFwiOxuXGpbXBvcnQgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIHsgYuZmlybSBIGZybgXCIuLRpYWxvZwiOxuXGjbzdCBqcuVGTdmcgPSBhcluYyAocGxZluOiBJYuUMpID+IHtcbiAgYucQgeyBYXVsdCBIDgcGxZluLmFwcDtcbiAgYucQgZGFYSAIChhdFpdCBYXVsdCyZWFkSnNvbihcbiAgICBwbHVnaWucGFjahbmFnZXIuYVzdGtSWNvbnNGaWxlUGFaCxcbiAgKSkgYXMgUmVjbJkPHNcmluZywgcRyaWnPjtcbiAgbGVIHBhdGggPSBwbHVnaWucGFjahbmFnZXIuYVzdGtSWNvbnNEaXIXGgIGlmICghKGFYWlIHZhdWxLmFkYXBZXIuZXhpcRzKHBhdGgpKSkgexuICAgIGFYWlIHZhdWxLmFkYXBZXIubWtkaXIocGFaCkXGgIHcbiAgYXdhaXQgUHJvbWlzZShbGxTZXRbGVkKFxuICAgIEiamVjdClbnRyaWVzKGRhdGEpLnJlZHVjZSgoYXJyLCBbaWQsIHNZpID+IHtcbiAgICAgIGlmICheXBlbYgaWQgPTIFwicRyaWnXCIgJiYgdHlwZWmIHNZyAPTgXCJzdHJpbmdcIikgexuICAgICAgICBjbzdCBmaWxlUGFaCAIGpvaWocGFaCwgYCRaWRLnNZApOxuICAgICAgICBhcnIucHVzaChYXVsdCjcmVhdGUoZmlsZVBhdGgsIHNZykpOxuICAgICAgfVxuICAgICAgcmVdXJuIGFycjtcbiAgICBLCBbXSBhcyBQcmtaXNlPFRGaWxlPltdKSxcbiAgKTtcbnXGcbmNvbnNIHRyeVVwZGFZUljbzIDgYXNbmMgKHBsdWdpbjogSWNvblNDKSAPiBXGgIGlmIChcbiAgICAoYXdhaXQgcGxZluLmFwcCYXVsdChZGFwdGVyLmVaXNcyhcbiAgICAgIHBsdWdpbiwYWNrTWFuYWdlcijdXNbJYucZpbGVQYXRoLFxuICAgICkpICYmXGgICAgIXBsdWdpbizZXRaWncypcpZJhdGVkXGgICkgexuICAgIGNvbnNIGlcNhZUgPVxuICAgICAgXCJGbVuZCBjdXNbgaWNvbnMgdGhhdCBoYXZlIGvdCBiZWVuIHVwZJhZGVkLCBcGRhdGUgaWNvbnMgbmPwiOxuICAgIGlmIChhdFpdCBjbmaXJtKGlcNhZUsIHBsdWdpbihcHApKSBXGgICAgICBcnkgexuICAgICAgICBhdFpdCBqcuVGTdmcocGxZluKTtcbiAgICAgICAgcGxZluLnNldHRpbmdzLmlzTWlncmFZWQgPSBcnVlOxuICAgICAgICBhdFpdCBwbHVnaWucFZVNldHRpbmdzKCkXGgICAgICAgIGldyBObRpYUoXGgICAgICAgICAgXCJJYuIHVwZGFZSBjbwbGVZSwgeWIGNhbiBubcgZmluZCBpYuIGZpbGVzIGluIFwiICtcbiAgICAgICAgICAgIHBsdWdpbiwYWNrTWFuYWdlcijdXNbJYucRpcixcbiAgICAgICAgKTtcbiAgICAgIHgYFYggKGVycmyKSBXGgICAgICAgIGldyBObRpYUoXCJGYWlsZWQgdGgdXBkYXRlIGljbzLCBjaGVjayBjbzbxlIGZvciBtbJlIGRldGFpbHNcIikXGgICAgICAgIGNvbnNvbGUuZXJybIoZXJybIpOxuICAgICAgfVxuICAgIHcbiAgfVxufTtcblxuZXhwbJIGRlZmFbHQgdHJVXBkYXRlSWNvbnMXGiLCAiaWwbJIHsgQXBwLCBNbRhbCBIGZybgXCJvYnNpZGlhblwiOxuXGeXBlIFBybpcVWYWwVCAIHZvaWQ+IDgVCBIFBybpcVMaWtlPFQ+OxuXGjbGFzcyBDbmaXJtTWkYWwgZXhZWkcyBNbRhbCBXGgIGJdHRvbkNvbnRhaWlckVsIDgdGhpcytbRhbEVsLmNyZWFZURpdihcImvZGFsLWJdHRvbijbYWluZXJcIikXGgIHByaXZhdGUgcmVzbxZTogKChYWxZTogUHJvbWlzZVZhbDxibsZWFuPikgPTgdmpZCkgfCBudWxsIDgbnVsbDtcbiAgYucRydWNbIoYXBwOiBBcHApIHtcbiAgICBzdXBlcihhcHApOxuICAgIHRoaXMuYudGFpbmVyRWwuYWRkQxhcMoXCJtbQtYuZmlybWFaWuXCIpOxuICAgIHRoaXMuYWRkQnVdGuKFwibWkLWNYVwiLCBcIkLXCIsICgpID+IHRoaXMucmVzbxZSAmJiBaGlzLnJlcsdmUodHJZSkpOxuICAgIHRoaXMuYWRkQFuYVsQnVdGuKCkXGgIHcbiAgbBlbigpOiBQcmtaXNlPGJvbxlYW+IHtcbiAgICBzdXBlcivcGVuKCkXGgICAgcmVdXJuIGldyBQcmtaXNlKChyZXNvbHZlKSAPiAodGhpcyyZXNvbHZlIDgcmVzbxZSkpOxuICBXGgIGFkZEJdHRvbihcbiAgICBjbHMIHNcmluZyBIHNcmluZtdLFxuICAgIHRleHQIHNcmluZyxcbiAgICBjYWxsYmFjazIChldnQIEvdXNlRXZlbnQpID+IGFueSxcbiAgKSBXGgICAgdGhpcyidXRbDbYWluZXJFbFxuICAgICAgLmNyZWFZUVsKFwiYnVdGuXCIsIHsgYxzLCBZXhIHpXGgICAgICAuYWRkRXZlbnRMaXNZWlcihcImNsaWNrXCIsIGFzeWjIChldnQpID+IHtcbiAgICAgICAgYFsbGJhYsgJiYgKGFYWlIGNhbGxiYWNrKGVdCkpOxuICAgICAgICBaGlzLmNsbNlKCkXGgICAgICBKTtcbiAgICByZXRcmgdGhpcztcbiAgfVxuICBvbkNsbNlKCkgexuICAgIHRoaXMucmVzbxZSAmJiBaGlzLnJlcsdmUoZmFscUpOxuICBXGcbiAgYWRkQFuYVsQnVdGuKCkgexuICAgIHJldHVybiBaGlzLmFkZEJdHRvbihcIlwiLCBcIkNhbmNlbFwiLCBaGlzLmNsbNlLmJpbmQodGhpcykpOxuICBXGXGcbmVcGydCBjbzdCBjbmaXJtIDgKGlcNhZUIHNcmluZyBIERvYVtZWRnJhZlbnQsIGFwcDogQXBwKSAPiBXGgIGNvbnNIGvZGFsIDgbmVIENvbmZpcmNbRhbChhcHApOxuICBtbRhbCjbZWRWwucVVGVdChtZXNzYWdlKTtcbiAgcmVdXJuIGvZGFsLmwZWoKTtcbnXGiLCAiaWwbJIHsgTWFyaRvdQbNUHJvYVzcyIHgZnJvbSBcImiclkaWFuXCIXGcbmltcGydCBeXBlIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcblxuYucQgZVQFsbGdEljbQbNUHJvYVzcyIDcbiAgKHBsdWdpbjogSWNvblNDKTogTWFyaRvdQbNUHJvYVzcyID+XGgIChlbCwgYRKSAPiBXGgICAgZmyIChjbzdCBjYWxsbVRWwgbYgZWwucXVlcnlTZWxlYRvckFsbChcIijYWxsbVXCIpKSBXGgICAgICBjbzdCBpYuRWwgPSBjYWxsbVRWwucXVlcnlTZWxlYRvcihcbiAgICAgICAgXCIuYFsbGdCaXRsZSA+ICjYWxsbVLWljbcIixcbiAgICAgICkhIGFzIEhUTUxFbGVtZWOxuICAgICAgYucQgbJzZXJZXIgPSBuZXcgTXVYXRpbPYnNlcnZlcihhcluYyAobSkgPTgexuICAgICAgICBpZiAoaWNvbkVsLmNoaWxkRWxlbWVudENvdWIDgMCkgcmVdXJuOxuICAgICAgICBjbzdCBpZCAIGdldENzcBybBlcnRVmFsdWUoaWNvbkVsLCBcIitYFsbGdCpYuXCIpLFxuICAgICAgICAgIGljbgPSBhdFpdCBwbHVnaWuYXBpLmdldFNWRljboaWQpOxuICAgICAgICBpZiAoIWljbpIHJldHVybjtcbiAgICAgICAgbJzZXJZXIuZGlzYubmVjdCgpOxuICAgICAgICBpYuRWwuYxhcNOYWlICsIFwiIFwiICsgaWNvbijbGFzchbWUXGgICAgICAgIGljbFbCyZXBsYWNlQhpbGRyZWoLiuaWNvbijaGlsZEvZGVzKTtcbiAgICAgIHpOxuICAgICAgbJzZXJZXIubJzZXJZShpYuRWwsIHsgYhpbGRMaXNOiBcnVlIHpOxuICAgIHcbiAgfTtcbmVcGydCBkZWZhdWxIGdldENhbGxvdXRJYuUGzdFBybNlcNvcjtcblxuYucQgZVQNzUHJvcGVydHlWYWxZSAIChcbiAgZWwIEhUTUxFbGVtZWLFxuICBwcmwOiBzdHJpbmcsXGgIHBzZXVkbVsPzogcRyaWnIHwgbnVsbCxcbikgPTgZVQtcHVZWRTdHlsZShlbCwgcHNldWRvRWwpLmdldFBybBlcnRVmFsdWUocHJvcCkudHJpbSgpOxuIiwgImltcGydCBXGgIGdldEdsbJhbFJlZVcCxcbiAgUkVfUhPUlRDTRFLFxuICBzdHJpcENvbGucyxcbngZnJvbSBcIiuLljbtcGFjaMvdXRpbHNcIjtcbmltcGydCBJYuUMgZnJvbSBcIiuLlzYytYWluXCIXGcbmNvbnNIGFjYVwdEvZGUgPSAobmkZTogTmkZSkIGbWJlciAPiBXGgIHNaXRjaCAobmkZSubRlTmFtZSkgexuICAgIGNhcUgXCJDTRFXCIXGgICAgYFzZSBcIkKWCDTUQUlORVJcIjpcbiAgICAgIHJldHVybiBObRlRmlsdGVyLkZJTFRFUlSRUpFQQXGgICAgYFzZSBcIiNZXhXCIIHtcbiAgICAgIGlmIChubRlLmvZGVWYWxZSAmJiBSRVTSESVENPREUudGVzdChubRlLmvZGVWYWxZSkpIHtcbiAgICAgICAgcmVdXJuIEvZGVGaWxZXIuRklMVEVSXFDQVQVDtcbiAgICAgIHgZWxzZSByZXRcmgTmkZUZpbHRlciGSUxURVJfUkVKRUNUOxuICAgIHcbiAgICBkZWZhdWxOlxuICAgICAgcmVdXJuIEvZGVGaWxZXIuRklMVEVSXNLSVAXGgIHcbnXGcbmVcGydCBjbzdCBnZXRObRlUGzdFBybNlcNvciAIChcbiAgcGxZluOiBJYuUMsXGpOiAoKGVsOiBIVEMRWxlbWVudCkgPTgdmpZCkgPTgexuICBjbzdCBzYJlcGxhYUgPSBhcluYyAodGVdDogVGVdCkgPTgexuICAgIGZvciAoYucQgYkZSBvZiBbXGgICAgICAuLiZXhLndobxlVGVdCtYXRjaEFsbChnZXRHbGiYWxSZWdleHAoUkVfUhPUlRDTRFKSksXGgICAgXVxuICAgICAgLnNvcnQoKGEsIGIpID+IChiLmluZGVIGFzIGbWJlcikgLSAoYSpbmRleCBhcyBudWiZXIpKVxuICAgICAgLmhcCgoYXJyKSAPiAoeyBZXhOiBhcnJbMFsIGluZGVOiBhcnIuaWkZXghIHpKSkgexuICAgICAgYXdhaXQgaWzZXJRWxUbRleHQodGVdCwgYkZSkXGgICAgfVxuICBOxuICBjbzdCBpbnNlcnRFbFRvVGVdCAIGFzeWjIChcbiAgICBZXhOiBUZXhLFxuICAgIHsgdGVdDogcGFdGVybiwgaWkZXggfTogeyBZXhOiBzdHJpbmcIGluZGVOiBudWiZXIgfSxcbiAgKSAPiBXGgICAgYucQgaWNvbiAIGFYWlIHBsdWdpbiwYWNrTWFuYWdlcinZXRTVkdJYuKHNcmlwQsbzKHBhdHRlcmpKTtcbiAgICBpZiAoIWljbpIHJldHVybiBZXhOxuICAgIGlmICheXBlbYgaWNvbiAPTgXCJzdHJpbmdcIikgexuICAgICAgdGVdCZXhQudGVudCAmJlxuICAgICAgICAodGVdCZXhQudGVudCAIHRleHQudGVdENvbnRlbnQ/LnJlcGxhYUocGFdGVybiwgaWNvbikpOxuICAgIHgZWxzZSBXGgICAgICBjbzdCBbJlcGxhYUgPSBZXhLnNwbGlVGVdChpbmRleCkXGgICAgICBbJlcGxhYUucGFyZWRWxlbWVudDuaWzZXJQmVmbJlKGljbsIHRvUmVwbGFjZSkXGgICAgICBbJlcGxhYUudGVdENvbnRlbnQgPSBbJlcGxhYUudhvbGVUZXhLnNYnNcmluZyhwYXRZXJuLmxlbmdaCkXGgICAgfVxuICBOxuXGgIHJldHVybiAoZWwIEhUTUxFbGVtZWKSAPiBXGgICAgYucQgdFsaVyIDgZGjdWlbnQuYJlYXRlVHJlZVdhbGtlcihlbCwgTmkZUZpbHRlciTSEXXFMTCwgexuICAgICAgYWNjZXBTmkZSxcbiAgICBKTtcbiAgICBsZXQgYVycmVudEvZGUIEvZGUgfCBudWxsIDgdFsaVyLmNcnJlbnRObRlOxuICAgIHdoaWxlIChjdXJyZWTmkZSkgexuICAgICAgaWYgKGNcnJlbnRObRlLmvZGVUeXBlIDPSAzKSBXGgICAgICAgIGNvbnNIHRleHQgPSBjdXJyZWTmkZSBhcyBUZXhICYgeyBfXBFTkRJTkdfXzIFBybpcUYWPiBOxuICAgICAgICAvLyBkbndCBYWlIGZvciBuZXcgbmkZSBbyBiZSBpbnNlcnRlZFxuICAgICAgICAoYXNbmMgKCkgPTgexuICAgICAgICAgIGxldCBZXhTmkZXMgPSBbdGVdFXGgICAgICAgICAgaWYgKHRleHQuXQRUESUHXpIHtcbiAgICAgICAgICAgICvIHdhaXQgZmyIHByZXZvdXMgcGzdCBwcmjZXNzbIgdGgZmluaXNoXGgICAgICAgICAgICBhdFpdCBZXhLlfUEVORElORfOxuICAgICAgICAgICAgLygcmVzYFuIGZvciBuZXcgdGVdCBubRlcxuICAgICAgICAgICAgdGVdEvZGVzIDgWyuLnRleHQucGFyZWRWxlbWVudCEuYhpbGRObRlcuZmlsdGVyKFxuICAgICAgICAgICAgICAobikIGgaXMgVGVdCAPiBuIGlucRhbmNlbYgVGVdCxcbiAgICAgICAgICAgICkXGgICAgICAgICAgfVxuICAgICAgICAgIGNvbnNIHBlbmRpbmcgPSBQcmtaXNlLmFsbChZXhTmkZXMubWFwKHNjUmVwbGFjZSkpOxuICAgICAgICAgICvIHNhdmUgcHJvbWlzZSBbyBfXBFTkRJTkdfXyBbyBubRpZnkgbRoZXIgYXNbmMgcGzdCBwcmjZXNzbJcbiAgICAgICAgICBZXhLlfUEVORElORfIDgcGVuZGluZztcbiAgICAgICAgICBhdFpdCBwZWkaWnOxuICAgICAgICAgIGRlbGVZSBZXhLlfUEVORElORfOxuICAgICAgICBKSgpOxuICAgICAgfVxuICAgICAgYVycmVudEvZGUgPSBYWxrZXIubmVdEvZGUoKTtcbiAgICBXGgIHXGOxuXGleHBvcnQgYucQgZVTURQbNUHJvYVzcyIDcbiAgKHBsdWdpbjogSWNvblNDKSAPiAocRyOiBzdHJpbmcsIHJlcGxhYVyOiAochvcnRjbRlOiBzdHJpbmcpID+IHNcmluZykgPTcbiAgICBzdHIucmVwbGFjZShnZXRHbGiYWxSZWdleHAoUkVfUhPUlRDTRFKSwgKGNvZGUpID+IHtcbiAgICAgIGlmIChwbHVnaWucGFjahbmFnZXIuaGFzSWNvbihzdHJpcENvbGucyhjbRlKSkpIHtcbiAgICAgICAgcmVdXJuIHJlcGxhYVyKGNvZGUpOxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVdXJuIGNvZGUXGgICAgICBXGgICAgfSkXGiLCAiaWwbJIHRcGUgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIGdldENhbGxvdXRJYuUGzdFBybNlcNvciBmcmtIFwiLijYWxsbVLWljbcIjtcbmltcGydCBIGdldEEUGzdFBybNlcNvciwgZVTmkZVBvcRQcmjZXNzbIgfSBmcmtIFwiLiZXhXCIXGcbmNvbnNIHNldHVwUGzdFBybNlcNvcnMgPSAocGxZluOiBJYuUMpID+IHtcbiAgcGxZluLnJlZlzdGVyTWFyaRvdQbNUHJvYVzcyKHBsdWdpbifbmkZVBybNlcNvcikXGgIHBsdWdpbiyZWdpcRlckhcmtkbduUGzdFBybNlcNvcihnZXRDYWxsbVSWNvblBvcRQcmjZXNzbIocGxZluKSkXGOxuXGleHBvcnQgeyBnZXRNRFBvcRQcmjZXNzbIsIGdldEvZGVQbNUHJvYVzcyLCBzZXRcFBvcRQcmjZXNzbJzIHXGiLCAiYxhcMgQmFzZUVycmyIGVdGVuZHMgRXJybIgecblxuZXhwbJIGNsYXNzIEvdFJlYVpdmVGaWxlTGlzdCBleHRlbmRzIEJhcVFcnJvciBfVxuXGleHBvcnQgYxhcMgVWrbmbkVycmyIGVdGVuZHMgQmFzZUVycmyIHtXGiLCAiZXhwbJIGNvbnNIGpvaWBcnJheVNcmluZyAIChcbiAgYXJyOiBzdHJpbmdbXSxcbiAgcVwYXJhdGyOiBzdHJpbmcgPSAnLCdcbikIHNcmluZyAPiBhcnIuampbihzZXBhcmFbIpXGiLCAiaWwbJIHsgVWrbmbkVycmyLCBObRSZWNlaXZlRmlsZUxpcQgfSBmcmtICcuLVycmyJxuaWwbJIHsgampbkFycmFURyaWnIHgZnJvbSAnLidGlsJxuYucQgREVGQVVMVFQQVJBTUVURVJTOiBQYXJhbWVZXJzIDgexuICBhYNlcHQICcqJyxcbiAgbXVsdGlwbGUIGZhbHNlLFxuICBzdHJpYQIGZhbHNlXGXGcbmVcGydCBpbnRlcmZhYUgUGFyYWldGVyczxcbiAgVCBleHRlbmRzIGJvbxlYWgPSBmYWxzZSxcbiAgVSBleHRlbmRzIGJvbxlYWgPSBmYWxzZVxuPiBXGgIGFjYVwdDogcRyaWnIHwgcRyaWnWcbiAgbXVsdGlwbGUIFRcbiAgcRyaWNOiBVXGXGcbnRcGUgUGljaZpbGUXGgIFQgZXhZWkcyBibsZWFuIDgZmFscUsXGgIFUgZXhZWkcyBibsZWFuIDgZmFscVcbjgPSBUIGVdGVuZHMgZmFscUgPyAoVSBleHRlbmRzIHRydWUgPyBGaWxlIDogRmlsZUxpcQpIDogRmlsZUxpcRcblxuLyoqXGgKiBDYWxsIGZpbGUgcVsZWNIGRpYWxvZyBwcmncmFtbWFaWNhbGxLlxuICogQHBhcmFtIHtvYmplYRIFtwYXJhbWVZXJzXSBvcHRpbhbFxuICogQHJldHVybnMgeBybpcVIFBybpcUgPEZpbGUgfCBGaWxlTGlzdDgaWYgcRyaWNIGlzIGZhbHNlLCByZXRcmgRmlsZUxpcQgbJqZWNLCBpZiBtdWxaXBsZSBpcyBmYWxzZSBhbmQgcRyaWNIGlzIHRydWUgcmVdXJuIEZpbGUgbJqZWNXGgKicbmVcGydCBjbzdCBmaWxlRGlhbGnIDgPFxuICBUIGVdGVuZHMgYmvbGVhbiAIGZhbHNlLFxuICBVIGVdGVuZHMgYmvbGVhbiAIGZhbHNlXG+KFxuICBwYXJhbWVZXJzPzogUGFydGlhbDxQYXJhbWVZXJzPFQsIFU+PlxuKTogUHJvbWlzZTxQaWNrRmlsZTxULCBVPjgPTgexuICBjbzdCBIGFjYVwdCwgbXVsdGlwbGUsIHNcmljdCBIDgeyAuLiERUZBVUxUXBBUkFNRVRFUlMsICuLnBhcmFtZXRlcnMgfVxuICBjbzdCBpbnBdCAIGNyZWFZUZpbGVJbnBdEVsZWlbnQoexuICAgIGbHRpcGxlLFxuICAgIGFjYVwdDogQXJyYXkuaXNBcnJheShhYNlcHQpIDgampbkFycmFURyaWnKGFjYVwdCkgOiBhYNlcHRcbiAgfSlcbiAgcmVdXJuIGldyBQcmtaXNlPFBpYtGaWxlPFQsIFU+PigocmVzbxZSkgPTgexuICAgIGlucHVLmuYhhbmdlIDgKCkgPTgexuICAgICAgcmVzbxZShyZXNvbHZlcihpbnBdCmaWxlcywgbXVsdGlwbGUgYXMgVCwgcRyaWNIGFzIFUpKVxuICAgICAgaWwdXQucmVtbZlKClcbiAgICBXGgICAgaWwdXQuYxpYsoKVxuICBKVxufVxuXGleHBvcnQgYucQgcmVzbxZXIgPSAVCBleHRlbmRzIGJvbxlYWsIFUgZXhZWkcyBibsZWFuPihcbiAgZmlsZUxpcQIEhUTUxJbnBdEVsZWlbnRbJZpbGVzJsXGgIGbHRpcGxlOiBULFxuICBzdHJpYQIFVcbikgPTgexuICByZXRcmgbmVIFBybpcUUGljaZpbGUVCwgVT+KChyZXNvbHZlLCByZWplYQpID+IHtcbiAgICBpZiAoIWZpbGVMaXNKSByZXRcmgcmVqZWNKGldyBObRSZWNlaXZlRmlsZUxpcQoKSlcbiAgICBjbzdCBmaWxlIDgZVRmlsZUxpcRPYmooZmlsZUxpcQsIGbHRpcGxlLCBzdHJpYQpXGgICAgaWYgKCFmaWxlKSByZXRcmgcmVqZWNKGldyBVbmtubduRXJybIoKSlcblxuICAgIHJlcsdmUoZmlsZSlcbiAgfSlcbncblxuZXhwbJIGNvbnNIGdldEZpbGVMaXNTJqIDgPFQgZXhZWkcyBibsZWFuLCBVIGVdGVuZHMgYmvbGVhbjoXGgIGZpbGVzOiBObOdWxsYWJsZTxIVEMSWwdXRFbGVtZWWydmaWxlcyddPixcbiAgbXVsdGlwbGUIFQsXGgIHNcmljdDogVVxuKTogUGljaZpbGUVCwgVTgfCBudWxsID+IHtcbiAgaWYgKCFtdWxaXBsZSAmJiBzdHJpYQpIHtcbiAgICBpZiAoZmlsZXMubGVuZRoIDPSAxKSBXGgICAgICByZXRcmgPFBpYtGaWxlPFQsIFU+PmZpbGVzWzBdXGgICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsXGgICAgfVxuICBIGVscUgaWYgKGZpbGVzLmxlbmdaCkgexuICAgIHJldHVybiAUGljaZpbGUVCwgVT+ZmlsZXNcbiAgfSBlbHNlIHtcbiAgICByZXRcmgbnVsbFxuICBXGXGcbmVcGydCBjbzdCBjcmVhdGVGaWxlSWwdXRFbGVtZWIDgKHtcbiAgYWNjZXBLFxuICBtdWxaXBsZVxufTogUGljazxIVEMSWwdXRFbGVtZWLCAnYWNjZXBJyBICdtdWxaXBsZSc+KTogSFRNTElucHVRWxlbWVudCAPiBXGgIGNvbnNIGlucHVIDgZGjdWlbnQuYJlYXRlRWxlbWVudCgnaWwdXQnKVxuICBpbnBdCeXBlIDgJZpbGUnXGgIGlucHVLmbHRpcGxlIDgbXVsdGlwbGVcbiAgaWwdXQuYWNjZXBIDgYWNjZXBXGgIHJldHVybiBpbnBdFxufVxuIiwgImltcGydCBcInNldHRpbmdzLmxlcNcIjtcbmltcGydCBcImludmFsaWQubGVzcwiOxuXGpbXBvcnQgeyBmaWxlRGlhbGnIHgZnJvbSBcImZpbGUtcVsZWNLWRpYWxvZwiOxuaWwbJIHtcbiAgQXBwLFxuICBCdXRbDbwblbnQsXGgIEvdGljZSxcbiAgUGxhdGZvcmsXGgIFBsdWdpblNldHRpbmdUYWIsXGgIFNldHRpbmcsXGgIFRleHRDbwblbnQsXGIGZybgXCJvYnNpZGlhblwiOxuXGpbXBvcnQgQnJvdNlclBhYtzIGZybgXCIuLNvbXBvbmVudCicmcVyLXBhYtzXCIXGpbXBvcnQgSWNvbkhbmFnZXIgZnJvbSBcIivYtcGuZWLljbtbWFuYWdlclwiOxuaWwbJIHsgQnVpbHRJbkljbQYWNrbmFtZXMsIFNWRBhYtuYWlcyBIGZybgXCIuLljbtcGFjaMvYnVpbHQtaWzXCIXGpbXBvcnQgeyBTdXBwbJZWRJYuRXhIHgZnJvbSBcIivaWNvbiwYWNrcydGlscwiOxuaWwbJIEljbTQyBmcmtIFwiLipcMtbWFpblwiOxuXGleHBvcnQgaWZXJmYWNlIEljbTQNldHRpbmdzIHtcbiAgYkZTJlbWqaTogYmvbGVhbjtcbiAgcVnZVzdGVyOiBibsZWFuOxuICBkaXNhYmxlZFBhYtzOiBTZXQcRyaWnPjtcbiAgcBhYVBZnRlclNDOiBibsZWFuOxuICBcmlnZVyVlaFRyYWlsaWnUBhYUIGJvbxlYWXGgIGlzTWlncmFZWQIGJvbxlYWXGXGcbmVcGydCBjbzdCBERUZBVUxUXNFVFRJTkdTOiBJYuUNTZXRaWncyAIHtcbiAgYkZTJlbWqaTogdHJZSxcbiAgcVnZVzdGVyOiBcnVlLFxuICBkaXNhYmxlZFBhYtzOiBuZXcgUVKFtcImicwiXSksXGgIHRyaWdnZXJXaXRoVHJhaWxpbmdTcGFjZTogZmFscUsXGgIHNwYWNlQWZZXJTQzogZmFscUsXGgIGlzTWlncmFZWQIGZhbHNlLFxufTtcblxuZXhwbJIGNsYXNzIEljbTQNldHRpbmdUYWIgZXhZWkcyBQbHVnaWTZXRaWnVGFiIHtcbiAgcGxZluOiBJYuUMXGcbiAgYucRydWNbIoYXBwOiBBcHAsIHBsdWdpbjogSWNvblNDKSBXGgICAgcVwZXIoYXBwLCBwbHVnaWpOxuICAgIHRoaXMucGxZluIDgcGxZluOxuICBXGcbiAgZGlzcGxheSgpOiBblkIHtcbiAgICBjbzdCBIGNvbnRhaWlckVsIHgPSBaGlzOxuXGgICAgdGhpcyjbYWluZXJFbClbXBeSgpOxuXGgICAgbmVIFNldHRpbmcoYudGFpbmVyRWwpLnNldEhlYWRpbmcoKSzZXROYWlKFwiSWNvbiBTdWdnZXNZXJcIikXGgICAgbmVIFNldHRpbmcoYudGFpbmVyRWwpXGgICAgICAucVRGVzYyhcbiAgICAgICAgXCJJZiBaGlzIGlzIHRcmlZCBvbiwgYSBTdWdnZXNZXIgdlsbCBhcHBlYXIgZXZlcnlaWlIHlvdSBeXBlIDoobIgXHVGRjFBXHVGRjFBIGlmIGZbGwtdlkdGgpIGZvbGxvdVkIGJIGEgbGVdGVyLiBUaGlzIHdpbGwgaGVscCBbUgaWzZXJIEVtbppcygXCIsXGgICAgICApXGgICAgICAuYWRkVGnZxlKChjYikgPTgexuICAgICAgICBjYizZXRWYWxZShaGlzLnBsdWdpbizZXRaWncyzdWdnZXNZXIpLmuQhhbmdlKGFzeWjIChYWxZSkgPTgexuICAgICAgICAgIHRoaXMucGxZluLnNldHRpbmdzLnNZdlcRlciAIHZhbHVlOxuICAgICAgICAgIGFYWlIHRoaXMucGxZluLnNhdmVTZXRaWncygpOxuICAgICAgICBKTtcbiAgICAgIHpOxuICAgIGldyBTZXRaWnKGNvbnRhaWlckVsKVxuICAgICAgLnNldEhbWUoXCJSZXBsYWNlIGVtbppIHNobJYkZSBaXRoIGVtbppIGNoYXJhYRlclwiKVxuICAgICAgLnNldERlcMoXGgICAgICAgIFwiSWYgdGhpcyBpcyBdXJuZWQgbsIGVtbppIHNobJYkZXMgdlsbCBiZSBpbWlZGlhdGVseSByZXBsYWNlZCBieSBlbWqaSBhZnRlciBeXBpbmcuIFwiICtcbiAgICAgICAgICBcIkaGVydlzZSBaGVIGFyZSBzdGlsbCBzdGyZWQgYXMgYSBzaGydGNvZGUgYWkIHlvdSBvbmxIHNlZSBaGUgRWvamkgaWgUHJldmlldyBNbRlLlwiLFxuICAgICAgKVxuICAgICAgLmFkZFRvZdsZSgoYIpID+IHtcbiAgICAgICAgYIucVVmFsdWUodGhpcywbHVnaWucVdGluZMuYkZTJlbWqaSkubDaGFuZUoYXNbmMgKHZhbHVlKSAPiBXGgICAgICAgICAgdGhpcywbHVnaWucVdGluZMuYkZTJlbWqaSAIHZhbHVlOxuICAgICAgICAgIGFYWlIHRoaXMucGxZluLnNhdmVTZXRaWncygpOxuICAgICAgICBKTtcbiAgICAgIHpOxuICAgIGldyBTZXRaWnKGNvbnRhaWlckVsKVxuICAgICAgLnNldEhbWUoXCJUcmlnZVyIHdpdGggdHJhaWxpbmcgcBhYVcIilcbiAgICAgICzZXREZXNjKFxuICAgICAgICBcImubHkgdHJpZdlciBzdWdnZXNZXIgaWYgdGhlcmUgaXMgYSBcmFpbGluZyBzcGFjZSBiZWZvcmUgdGhlIGNvbGuXCIsXGgICAgICApXGgICAgICAuYWRkVGnZxlKChjYikgPTgexuICAgICAgICBjYizZXRWYWxZShaGlzLnBsdWdpbizZXRaWncycmlnZVyVlaFRyYWlsaWnUBhYUpLmuQhhbmdlKFxuICAgICAgICAgIGFzeWjIChYWxZSkgPTgexuICAgICAgICAgICAgdGhpcywbHVnaWucVdGluZMudHJpZdlcldpdGhUcmFpbGluZNwYWNlIDgdmFsdWUXGgICAgICAgICAgICBhdFpdCBaGlzLnBsdWdpbizYXZlUVdGluZMoKTtcbiAgICAgICAgICBLFxuICAgICAgICApOxuICAgICAgfSkXGgICAgbmVIFNldHRpbmcoYudGFpbmVyRWwpXGgICAgICAucVTmFtZShcIkFkZCBzcGFjZSBhZnRlciBpbnNlcnRlZCBzaGydGNvZGVcIilcbiAgICAgIChZGRUbdnbGUoKGNiKSAPiBXGgICAgICAgIGNiLnNldFZhbHVlKHRoaXMucGxZluLnNldHRpbmdzLnNwYWNlQWZZXJTQykubDaGFuZUoXGgICAgICAgICAgYXNbmMgKHZhbHVlKSAPiBXGgICAgICAgICAgICBaGlzLnBsdWdpbizZXRaWncyzcGFjZUFmdGVyUMgPSBYWxZTtcbiAgICAgICAgICAgIGFYWlIHRoaXMucGxZluLnNhdmVTZXRaWncygpOxuICAgICAgICAgIHsXGgICAgICAgICkXGgICAgICBKTtcblxuICAgIHRoaXMuctpcEljbQYWNrKCkXGgICAgbmVIFNldHRpbmcoYudGFpbmVyRWwpXGgICAgICAucVTmFtZShcIkljbgUGFjaNcIilcbiAgICAgICzZXREZXNjKFwiQnJvdNlIGFuZCBkbdubGhZCBpYuIHBhYtzXCIpXGgICAgICAuYWRkQnVdGuKChidGpID+XGgICAgICAgIGJblxuICAgICAgICAgICzZXRCdXRbUZXhKFwiQnJvdNlclwiKVxuICAgICAgICAgICvbkNsaWNrKCgpID+IGldyBCcmcVyUGFjaModGhpcywbHVnaWpLmwZWoKSksXGgICAgICApOxuXGgICAgLygYVzdGtIGljbgbWFuYWdlIHNlYRpbcbiAgICBjbzdCBtYWhZVyQudGFpbmVyIDgYJlYXRlRGlKHtcbiAgICAgIGNsczogWwiaXNjLXNldHRpbmdzLWNcRvbSpYuXCIsIFwiaWzdGFsbGVkLXBsdWdpbnMtYudGFpbmVyXCJdLFxuICAgIHpOxuICAgIGldyBTZXRaWnKHRoaXMuYudGFpbmVyRWwpXGgICAgICAucVSGVhZGluZygpXGgICAgICAucVTmFtZShcIkNcRvbSBJYucwiKVxuICAgICAgLmFkZEVdHJhQnVdGuKChidGpID+XGgICAgICAgIGJblxuICAgICAgICAgICzZXRJYuKFwichlZXRzLWluLWJveFwiKVxuICAgICAgICAgICzZXRUbsdGlwKFwiQmFjaVwIGljbzXCIpXGgICAgICAgICAgLmuQxpYsoKCkgPTgdGhpcywbHVnaWucGFjahbmFnZXIuYmFjaVwSWNvbnMoKSksXGgICAgICApXGgICAgICAuYWRkRXhcmFCdXRboKGJbikgPTcbiAgICAgICAgYnRuXGgICAgICAgICAgLnNldEljboXCJyZXNbJlLWZpbGUtZxcGhcIilcbiAgICAgICAgICAucVVGvbHRpcChcIlJlcRvcmUgYmFjaVwXCIpXGgICAgICAgICAgLmuQxpYsoYXNbmMgKCkgPTgexuICAgICAgICAgICAgdGhpcywbHVnaWucGFjahbmFnZXIuaWwbJSWNvbnNGcmtRmlsZUxpcQoXGgICAgICAgICAgICAgIGFYWlIGZpbGVEaWFsbcoeyBtdWxaXBsZTogdHJZSwgYWNjZXBOiBcIiaXBcIiBKSxcbiAgICAgICAgICAgICAgZmFscUsXGgICAgICAgICAgICApOxuICAgICAgICAgICAgYXdhaXQgdGhpcywbHVnaWucGFjahbmFnZXIubGhZEljbzKCkXGgICAgICAgICAgICBaGlzLmhbmFnZUNcRvbUljbzKGhbmFnZXJDbYWluZXIpOxuICAgICAgICAgIHpLFxuICAgICAgKVxuICAgICAgLmFkZEVdHJhQnVdGuKChidGpID+XGgICAgICAgIGJblxuICAgICAgICAgICzZXRJYuKFwicdpdGNoXCIpXGgICAgICAgICAgLnNldFRvbxaXAoXCJSZWxvYWQgYVzdGtIGljbzXCIpXGgICAgICAgICAgLmuQxpYsoYXNbmMgKCkgPTgexuICAgICAgICAgICAgYXdhaXQgdGhpcywbHVnaWucGFjahbmFnZXIubGhZEljbzKCkXGgICAgICAgICAgICBaGlzLmhbmFnZUNcRvbUljbzKGhbmFnZXJDbYWluZXIpOxuICAgICAgICAgICAgbmVIEvdGljZShcIkNcRvbSBpYucyByZWxvYWRlZFwiKTtcbiAgICAgICAgICBKSxcbiAgICAgIClcbiAgICAgICaGVuKFxuICAgICAgICAocykgPTcbiAgICAgICAgICBQbGFZmybSpcRlctbBBcHAgJiZcbiAgICAgICAgICBzLmFkZEVdHJhQnVdGuKChidGpID+XGgICAgICAgICAgICBidGcbiAgICAgICAgICAgICAgLnNldEljboXCJmbxkZXJcIilcbiAgICAgICAgICAgICAgLnNldFRvbxaXAoXCJPcGVuIEljbzIEZvbGRlclwiKVxuICAgICAgICAgICAgICAubDbGljaygoKSAPlxuICAgICAgICAgICAgICAgIHRoaXMuYXBwLmwZWXaXRoRGVmYXVsdEFwcChcbiAgICAgICAgICAgICAgICAgIHRoaXMucGxZluLnBhYtNYWhZVyLmNcRvbUljbzRGlyLFxuICAgICAgICAgICAgICAgICksXGgICAgICAgICAgICAgICksXGgICAgICAgICAgKSxcbiAgICAgICkXGgICAgdGhpcyjbYWluZXJFbChcHBlbmRDaGlsZChtYWhZVyQudGFpbmVyKTtcbiAgICBaGlzLmhbmFnZUNcRvbUljbzKGhbmFnZXJDbYWluZXIpOxuICBXGcbiAgcHJpdmFZSBfcVRGlzYWJsZWRQYWNrKHRhcmdldDogcRyaWnLCBzZXRaWnOiBTZXRaWnKSBXGgICAgcmVdXJuIHNldHRpbmcuYWRkVGnZxlKChjYikgPTgexuICAgICAgYIucVVmFsdWUoIXRoaXMucGxZluLnNldHRpbmdzLmRpcFibGVkUGFjaMuaGFzKHRhcmdldCkpLmuQhhbmdlKFxuICAgICAgICBhcluYyAodmFsdWUpID+IHtcbiAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucGxZluLnNldHRpbmdzLmRpcFibGVkUGFjaMuZGVsZXRlKHRhcmdldCkXGgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGxZluLnNldHRpbmdzLmRpcFibGVkUGFjaMuYWRkKHRhcmdldCkXGgICAgICAgICAgfVxuICAgICAgICAgIGFYWlIHRoaXMucGxZluLnNhdmVTZXRaWncygpOxuICAgICAgICBLFxuICAgICAgKTtcbiAgICAgIGNiLnRvZdsZUVsLnNldEFdHIoXCJhcmlhLWxhYmVsXCIsIGBFbmFibGUvRGlzYWJsZSAkeRhcmdldHgSWNvbiBQYWNrYCkXGgICAgfSkXGgIHcbiAgctpcEljbQYWNrKCkIHZvaWQgexuICAgIGNvbnNIHsgYudGFpbmVyRWwgfSAIHRoaXMXGcbiAgICBjbzdCBnZXRTZXRaWnIDgKFxuICAgICAgcGFjazogUZHUGFjahbWVzLFxuICAgICAgbmFtZTogcRyaWnLFxuICAgICAgZVRGVzYzIChlbDogRGjdWlbnRGcmFnbWVudCkgPTgdmpZCxcbiAgICApID+XGgICAgICBaGlzLlzZXREaXNhYmxlZFBhYsoXGgICAgICAgIHBhYssXGgICAgICAgIGldyBTZXRaWnKGNvbnRhaWlckVsKSzZXROYWlKGhbWUpLnNldERlcMoYJlYXRlRnJhZlbnQoZVRGVzYykpLFxuICAgICAgKTtcblxuICAgIGldyBTZXRaWnKHRoaXMuYudGFpbmVyRWwpLnNldEhlYWRpbmcoKSzZXROYWlKFwiSWNvbiBQYWNrcwiKTtcblxuICAgIGdldFNldHRpbmcoXCJsdWNcIiwgXCJMdWNpZGVcIiwgKGVsKSAPlxuICAgICAgZWwuYJlYXRlRWwoXCJhXCIsIHtcbiAgICAgICAgaHJlZjogXCJodHRwczovLxYlkZSkZXZcIixcbiAgICAgICAgdGVdDogXCJvZmZpYlhbCBZWJzaXRlXCIsXGgICAgICBKSxcbiAgICApOxuICAgIGdldFNldHRpbmcoXCJvYnNcIiwgXCJPYnNpZGlhbidzIGJaWxLWluIGljbzXCIsIChlbCkgPTcbiAgICAgIGVsLmFwcGVuZFRleHQoXGgICAgICAgIFwiTJzaWRpYWncyBidWlsdCpbiBpYucyBhcmUgbWzdGxIHVzZWQgZmyIFVJIGNvbXBvbmVudHMuIFwiLFxuICAgICAgKSxcbiAgICApOxuICBXGcbiAgbWFuYWdlQVzdGtSWNvbnMoYudGFpbmVyRWwIEhUTUxFbGVtZWKTogdmpZCBXGgICAgaWYgKGNvbnRhaWlckVsLmhhcNoaWxkTmkZXMoKSkgYudGFpbmVyRWwuZWwdHkoKTtcblxuICAgIGNvbnNIGlzUGFjahbWVJbnZhbGlkIDgKGhbWUIHNcmluZykgPTcbiAgICAgICEvXltBLVphLXowLTldKyQvLnRlcQobmFtZSkgfHxcbiAgICAgIHRoaXMucGxZluLnBhYtNYWhZVyLmlzUGFjahbWVFeGlzdHMobmFtZSkXGgICAgbmVIFNldHRpbmcoYudGFpbmVyRWwpXGgICAgICAucVTmFtZShcIkFkZCBuZXcgaWNvbiBwYWNrXCIpXGgICAgICAucVRGVzYyhcIlJlcVydmVkIGhbWVzOiBcIiArIEJaWxSWJYuUGFjahbWVzLmpvaWoXCIsIFwiKSlcbiAgICAgICaGVuKChzKSAPiBXGgICAgICAgIGxldCBidXRbIEJdHRvbkNvbXBvbmVudCBIGbGwgPSBudWxsLFxuICAgICAgICAgIGlucHVOiBUZXhQtcGuZWIHwgbnVsbCAIGbGwXGgICAgICAgIHMuYWRkVGVdCgodHhKSAPiBXGgICAgICAgICAgdHhXGgICAgICAgICAgICAucVUGxhYVobxkZXIoXCJFbnRlciBuYWlXCIpXGgICAgICAgICAgICAubDaGFuZUoKGhbWUpID+IHtcbiAgICAgICAgICAgICAgYucQgaXNJbnZhbGlkIDgaXNQYWNrbmFtZUludmFsaWQobmFtZSkXGgICAgICAgICAgICAgIHRdCpbnBdEVsLnRvZdsZUNsYXNzKFwiaWYWxpZFwiLCAhIWhbWUgJiYgaXNJbnZhbGlkKTtcbiAgICAgICAgICAgICAgYnVdGuPyzZXREaXNhYmxlZChpcludmFsaWQpOxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICaGVuKCheHQpID+IHRdCpbnBdEVsLmFkZENsYXNzKFwiaXNjLWFkZCwYWNrLWlucHVXCIpKSxcbiAgICAgICAgICAgIChpbnBdCAIHRdCkXGgICAgICAgIHpLmFkZEJdHRvbihcbiAgICAgICAgICAoYnRuKSAPiAoXGgICAgICAgICAgICBidGcbiAgICAgICAgICAgICAgLnNldENYSgpXGgICAgICAgICAgICAgICzZXRJYuKFwicGxcyaXRoLWNpcmNsZVwiKVxuICAgICAgICAgICAgICAubDbGljaygoKSAPiBXGgICAgICAgICAgICAgICAgYucQgcGFjahbWUgPSBpbnBdDuZVVmFsdWUoKTtcbiAgICAgICAgICAgICAgICBpZiAoIXBhYtOYWlKSByZXRcmXGgICAgICAgICAgICAgICAgaWYgKGlzUGFjahbWVJbnZhbGlkKHBhYtOYWlKSkgexuICAgICAgICAgICAgICAgICAgbmVIEvdGljZShcIlRoaXMgbmFtZSBpcyBpbnZhbGlkLlwiKTtcbiAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBXGgICAgICAgICAgICAgICAgdGhpcyhZGROZXdDdXNbJYuRWcnkoXGgICAgICAgICAgICAgICAgICBwYWNrTmFtZSxcbiAgICAgICAgICAgICAgICAgIGNvbnRhaWlckVsLFxuICAgICAgICAgICAgICAgICkucVdGluZVsLnNjcmsbEludGWaWVKCkXGgICAgICAgICAgICAgICAgaWwdXQ/LnNldFZhbHVlKFwiXCIpOxuICAgICAgICAgICAgICBKSxcbiAgICAgICAgICAgIChidXRbgPSBidGpXGgICAgICAgICAgKSxcbiAgICAgICAgKTtcbiAgICAgIHpOxuXGgICAgdGhpcywbHVnaWucGFjahbmFnZXIuYVzdGtUGFjahbWVzLmZvckVhYgoKHBhYspID+XGgICAgICBaGlzLmFkZEldNcRvbUljbFbnRyeShwYWNrLCBjbYWluZXJFbCksXGgICAgKTtcbiAgfVxuICBhZGROZXdDdXNbJYuRWcnkocGFjazogcRyaWnLCBjbYWluZXJFbDogSFRNTEVsZWlbnQpIHtcbiAgICBjbzdCBzZXRaWnIDgbmVIFNldHRpbmcoYudGFpbmVyRWwpXGgICAgICAucVTmFtZShwYWNrKVxuICAgICAgLnNldERlcMoXGgICAgICAgIGNyZWFZUZyYWdtZWKChlbCkgPTgexuICAgICAgICAgIGVsLmFwcGVuZFRleHQoXCJEcmFnIGZpbGVzIGluIHRvIGltcGydCBjdXNbgaWNvbnNcIikXGgICAgICAgICAgZWwuYJlYXRlRWwoXCJiclwiKTtcbiAgICAgICAgICBlbChcHBlbmRUZXhKFwiUVwcGydGVkIGZvcmhdDogXCIpOxuICAgICAgICAgIFNcHBvcnRlZEljbFeHQuZmyRWFjaCgoZXhLCBpbmRleCwgYXJyKSAPiBXGgICAgICAgICAgICBlbCjcmVhdGVFbChcImNvZGVcIiwgeyBZXhOiBleHQgfSkXGgICAgICAgICAgICBpZiAoYXJyLmxlbmdaCAtIDEgITIGluZGVKSBlbChcHBlbmRUZXhKFwiLCBcIikXGgICAgICAgICAgfSkXGgICAgICAgIHpLFxuICAgICAgKVxuICAgICAgLmFkZEJdHRvbigoYnRuKSAPlxuICAgICAgICBidGcbiAgICAgICAgICAucVSWNvbihcInNoZWVcypbiibhcIilcbiAgICAgICAgICAucVVGvbHRpcChcIkJhYtcCBpYucwiKVxuICAgICAgICAgICvbkNsaWNrKCgpID+IHRoaXMucGxZluLnBhYtNYWhZVyLmJhYtcEljbzKHBhYspKSxcbiAgICAgIClcbiAgICAgIChZGRCdXRboKGJbikgPTcbiAgICAgICAgYnRuXGgICAgICAgICAgLnNldEljboXCJnbybymaWxlXCIpXGgICAgICAgICAgLnNldFRvbxaXAoXCJzZWxlYQgZmlsZXMgdGgaWwbJXCIpXGgICAgICAgICAgLmuQxpYsoYXNbmMgKCkgPTcbiAgICAgICAgICAgIHRoaXMucGxZluLnBhYtNYWhZVyLmFkZEZybGaWxlcyhcbiAgICAgICAgICAgICAgcGFjayxcbiAgICAgICAgICAgICAgYXdhaXQgZmlsZURpYWxvZyhXGgICAgICAgICAgICAgICAgbXVsdGlwbGUIHRydWUsXGgICAgICAgICAgICAgICAgYWNjZXBOiBTdXBwbJZWRJYuRXhIGFzIGFueSxcbiAgICAgICAgICAgICAgfSksXGgICAgICAgICAgICApLFxuICAgICAgICAgICksXGgICAgICApXGgICAgICAuYWRkQnVdGuKChidGpID+XGgICAgICAgIGJblxuICAgICAgICAgICzZXRJYuKFwidHJhchcIilcbiAgICAgICAgICAucVVGvbHRpcChcImRlbGVZVwiKVxuICAgICAgICAgICzZXRXYXJuaWnKClcbiAgICAgICAgICAubDbGljaygoKSAPiBXGgICAgICAgICAgICBaGlzLnBsdWdpbiwYWNrTWFuYWdlcimaWxZXIoKGssIHYpID+IHYucGFjayAhPTgcGFjaykXGgICAgICAgICAgICBjbYWluZXJFbCyZWvdmVDaGlsZChzZXRaWnLnNldHRpbmdFbCkXGgICAgICAgICAgfSksXGgICAgICApXGgICAgICAuYWRkQnVdGuKChidGpID+XGgICAgICAgIGJblxuICAgICAgICAgICzZXRJYuKFwicGwdXAtbBlblwiKVxuICAgICAgICAgICzZXRUbsdGlwKFwibWFuYWdlIGljbzXCIpXGgICAgICAgICAgLnNldENYSgpXGgICAgICAgICAgLmuQxpYsoKCkgPTgbmVIEljbNYWhZVyKHRoaXMucGxZluLCBwYWNrKSvcGVuKCkpLFxuICAgICAgKVxuICAgICAgLnRoZWoKHMpID+XGgICAgICAgIHNldHVwRGkKHMucVdGluZVsLCBhcluYyAoZXZKSAPiBXGgICAgICAgICAgaWYgKCFldnQuZGFYVRyYWzZmVyKSBXGgICAgICAgICAgICBuZXcgTmaWNlKFwiRmFpbGVkIHRvIGdldCBkcmwcGVkIGlZWzXCIpOxuICAgICAgICAgICAgcmVdXJuOxuICAgICAgICAgIHcbiAgICAgICAgICBaGlzLnBsdWdpbiwYWNrTWFuYWdlcihZGRGcmtRmlsZXMocGFjaywgZXZLmRhdGFUcmFucZlcimaWxlcykXGgICAgICAgIHpLFxuICAgICAgKTtcbiAgICBaGlzLlzZXREaXNhYmxlZFBhYsocGFjaywgcVdGluZykXGgICAgcmVdXJuIHNldHRpbmcXGgIHcbncblxuYucQgcVdXBEbmQgPSAoZWwIEhUTUxFbGVtZWLCBkcmwcGVkSGFuZGxlcjogKGVdDogRHJhZVZWKSAPiBhbnkpID+IHtcbiAgYucQgZHJhZZXJDbGFzcyAIFwiZHJhZZXJcIjtcbiAgZWwuYWRkRXZlbnRMaXNZWlcihcImRyYWdvdmVyXCIsIChldnQpID+IHtcbiAgICBldnQucHJldmVudERlZmFbHQoKTtcbiAgICAoZXZLmNcnJlbnRUYXJnZXQgYXMgSFRNTEVsZWlbnQpLmFkZENsYXNzKGRyYWdvdmVyQxhcMpOxuICBKTtcbiAgZWwuYWRkRXZlbnRMaXNZWlcihcImRybBcIiwgKGVdCkgPTgexuICAgIGVdCwcmVZWRGVmYXVsdCgpOxuICAgIChldnQuYVycmVudFRhcmdldCBhcyBIVEMRWxlbWVudCkucmVtbZlQxhcMoZHJhZZXJDbGFzcykXGgICAgZHJvcHBlZEhhbmRsZXIoZXZKTtcbiAgfSkXGgIGVsLmFkZEVZWTGlzdGVuZXIoXCJkcmFnbGVhdmVcIiwgKGVdCkgPTgexuICAgIGVdCwcmVZWRGVmYXVsdCgpOxuICAgIChldnQuYVycmVudFRhcmdldCBhcyBIVEMRWxlbWVudCkucmVtbZlQxhcMoZHJhZZXJDbGFzcykXGgIHpOxufTtcbiIsICJpbXBvcnQgXCIuLJybdzZXItcGFjaMubGVzcwiOxuXGpbXBvcnQgYXNzZXJTmVZXIgZnJvbSBcImFzcVydCuZXZlclwiOxuaWwbJIGNscyBmcmtIFwiYxhcNuYWlcwiOxuaWwbJIHsgTWkYWwsIHJlcXVlcRVcmwgfSBmcmtIFwibJzaWRpYWcIjtcbmltcGydCBSZWFjdCwgeyBcVDYWxsYmFjaywgdXNlRWZmZWNLCBcVTdGFZSBIGZybgXCJyZWFjdFwiOxuaWwbJIFJlYWNRENIGZybgXCJyZWFjdCkbcIjtcbmltcGydCBXGgIEZpQXdhcmQsXGgIEZpRGbmxvYWQsXGgIEZpRXhZXJuYWxMaWrLFxuICBGaUhvbWUsXGgIEZpSWhZUsXGIGZybgXCJyZWFjdCpYucymaVwiOxuXGpbXBvcnQgSWNvblNDIGZybgXCIuLipcMtbWFpblwiOxuaWwbJIHtcbiAgZVSWNvblBhYtCdWkbGVVcmwsXGgIGdldEhbmlmZXNVmlhQVBJLFxuICBJYuUGFjahbmlmZXNUmFLFxufSBmcmtIFwiLivbWkdWxlcypYuLXBhYtzXCIXGpbXBvcnQgTGhZGluZyBmcmtIFwiLisbFkaWnXCIXGcbmVcGydCBkZWZhdWxIGNsYXNzIEJybdzZXJQYWNrcyBleHRlbmRzIEvZGFsIHtcbiAgYucRydWNbIocHVibGljIHBsdWdpbjogSWNvblNDKSBXGgICAgcVwZXIocGxZluLmFwcCkXGgICAgdGhpcytbRhbEVsLmFkZENsYXNzKFwibWkLWJybdzZXItcGFjaNcIikXGgIHcbiAgbPcGVuKCkIHZvaWQgexuICAgIFJlYWNRENLnJlbmRlcihcbiAgICAgIDxCcmcVyUGFjaZpZXcgZVSWNvblBhYseRoaXMuZVSWNvblBhYsuYmluZChaGlzKXgLzsXGgICAgICBaGlzLmNvbnRlbnRFbCxcbiAgICApOxuICBXGgIGuQxvcUoKTogdmpZCBXGgICAgUmVhYRETudWtbVudENvbXBvbmVudEFTmkZShaGlzLmNvbnRlbnRFbCkXGgIHcblxuICBhcluYyBnZXRJYuUGFjayhwYXRoOiBzdHJpbmcsIGJyYWjaDIHNcmluZykIFBybpcUdmpZDgexuICAgIGNvbnNIGRvdsbFkIDgYXNbmMgKGFsdCAIGZhbHNlKSAPiBXGgICAgICBjbzdCBcmwgPSBnZXRJYuUGFjaJbmRsZVVybChwYXRoLCBicmFuYgsIGFsdCksXGgICAgICAgIHppcCAIChhdFpdCByZXFZXNVXJsKHsgdXJsIHpKShcnJheUJZmZlcjtcbiAgICAgIGFYWlIHRoaXMucGxZluLnBhYtNYWhZVyLmltcGydEljbzKFxuICAgICAgICBIGhbWUIHVybCzcGxpdChcIicIikucGwKCkhLCBkYXRhOiBaXAgfSxcbiAgICAgICAgZmFscUsXGgICAgICApOxuICAgIHXGgICAgdHJIHtcbiAgICAgIGFYWlIGRvdsbFkKCkXGgICAgfSBjYXRjaCAoZXJybIpIHtcbiAgICAgIGNvbnNvbGUuZXJybIoXCJzdlYggdGgYWxZXJuYXRpdmUgbGluawiLCBlcnJvcikXGgICAgICBhdFpdCBkbdubGhZChcnVlKTtcbiAgICBXGgIHcbncblxudHlwZSBjbtbLZXlzIDgXCJzZXJpZXNcIiBIFwiZGVzYJpcHRpbcIiBIFwiaGtZXBhZVcIiBIFwibGljZWzZVwiOxudHlwZSBTdHlsZUluZmgPSBPbWlPEljbQYWNrTWFuaWZlcRSYXcsIGNvbWvbktleXM+OxudHlwZSBJYuUGFjahbmlmZXNIDgUGljazxJYuUGFjahbmlmZXNUmFLCBjbtbLZXlzPiAmXGgIFJlYyZDxcInNeWxlcwiLCBTdHlsZUluZmbXTgJlxuICBSZWNvcmQXCJjbVudFwiLCBudWiZXI+OxuXGjbzdCBnZXRNYWpZmVzdExpcQgPSBhcluYyAoXGgIGJyYWjaCAIFwibWFzdGVyXCIsXGpOiBQcmtaXNlPEljbQYWNrTWFuaWZlcRbXTgPTgexuICBjbzdCByYXdMaXNIDgKGFYWlIGdldEhbmlmZXNVmlhQVBJKGJyYWjaCkpIGFzIEljbQYWNrTWFuaWZlcRSYXdbXTtcbiAgbGVIGxpcQIEljbQYWNrTWFuaWZlcRbXSAIFtdOxuICBmbIgKGNvbnNIGhbmlmZXNIGmIHJhdxpcQpIHtcbiAgICBsZXQgbGFzdCAIGxpcQubGFzdCgpOxuICAgIGlmIChsYXNPyzZXJpZXMgPTIGhbmlmZXNLnNlcmllcykgexuICAgICAgbGFzdCzdHlsZXMucHVzaChtYWpZmVzdCkXGgICAgICBsYXNLmNvdWICsIGhbmlmZXNLmNvdWOxuICAgIHgZWxzZSBXGgICAgICBsaXNLnBcgoexuICAgICAgICBoblcGFnZTogbWFuaWZlcQuaGtZXBhZUsXGgICAgICAgIGRlcNyaXBaWuOiBtYWpZmVzdCkZXNjcmlwdGlvbixcbiAgICAgICAgcVyaWVzOiBtYWpZmVzdCzZXJpZXMsXGgICAgICAgIGxpYVucUIGhbmlmZXNLmxpYVucUsXGgICAgICAgIHNeWxlczogWhbmlmZXNXSxcbiAgICAgICAgYbnQIGhbmlmZXNLmNvdWLFxuICAgICAgfSkXGgICAgfVxuICBXGgIHJldHVybiBsaXNOxufTtcblxuYucQgQnJvdNlclBhYtWaWVIDgKHtcbiAgZVSWNvblBhYssXGOiBXGgIGdldEljbQYWNrOiAocGFaDogcRyaWnLCBicmFuYg/OiBzdHJpbmcpID+IFBybpcUdmpZDXGKSAPiBXGgIGNvbnNIFttYWpZmVzdExpcQsIHNldEhbmlmZXNTGlzdFgPSBcVTdGFZTxcbiAgICBJYuUGFjahbmlmZXNWgfCBudWxsIHwgRXJybJcbiAgPihudWxsKTtcbiAgdXNlRWZmZWNKCgpID+IHtcbiAgICBnZXRNYWpZmVzdExpcQoKSaGVuKHNldEhbmlmZXNTGlzdCkuYFYgocVTWFuaWZlcRMaXNKTtcbiAgfSwgWpOxuICBpZiAobWFuaWZlcRMaXNIDPSBudWxsKSBXGgICAgcmVdXJuIChcbiAgICAgIDxkaXYgYxhcNOYWlPVwibGhZGluZwiPlxuICAgICAgICATGhZGluZyBeXBlPVwicBpblwiIGNsYXNzTmFtZTcImxvYWRpbmctaWkaWNhdGyXCIgLzcbiAgICAgICAgPGRpdjMbFkaWnIEljbgUGFjayBMaXNLiuPCkaXY+XGgICAgICALRpdjcbiAgICApOxuICBIGVscUgaWYgKEFycmFLmlzQXJyYXkobWFuaWZlcRMaXNKSkgexuICAgIHJldHVybiAoXGgICAgICAZGlIGNsYXNzTmFtZTcImljbtcGFjaysaXNXCI+XGgICAgICAgIHttYWpZmVzdExpcQubWFwKChtYWpZmVzdCkgPTgKFxuICAgICAgICAgIDxJYuUGFjahbmlmZXNXGgICAgICAgICAgICBrZXkehbmlmZXNLmhvbWVwYWdlfVxuICAgICAgICAgICAgbWFuaWZlcQehbmlmZXNfVxuICAgICAgICAgICAgbEbdubGhZDKHBhdGgpID+IGdldEljbQYWNrKHBhdGgpfVxuICAgICAgICAgIC+XGgICAgICAgICkpfVxuICAgICAgPCkaXY+XGgICAgKTtcbiAgfSBlbHNlIHtcbiAgICBjbzbxlLmVycmyKGhbmlmZXNTGlzdCkXGgICAgcmVdXJuIChcbiAgICAgIDxkaXYgYxhcNOYWlPVwiZXJybJcIjcbiAgICAgICAgRmFpbGVkIHRvIExvYWQgSWNvbiBQYWNrIExpcQXGgICAgICAgIDxkaXYgYxhcNOYWlPVwibWkLXdhcmpbmdcIjcbiAgICAgICAgICBbWFuaWZlcRMaXNLmlcNhZUgPzgbWFuaWZlcRMaXNLnRvURyaWnKClXGgICAgICAgIDwvZGlPlxuICAgICAgPCkaXY+XGgICAgKTtcbiAgfVxufTtcblxuaWZXJmYWNlIEhbmlmZXNRXJybJTdGFZSBXGgIHNYXRlOiBcImVycmyXCIXGgIGVycmyOiBbmtubduOxufVxudHlwZSBNYWpZmVzdFNYXRlIDcbiAgfCBNYWpZmVzdEVycmyURhdGVcbiAgfCBSZWNvcmQXCJzdGFZVwiLCBcImRpcBsYXlcIiBIFwiZGbmxvYWRpbmdcIiBIFwiZGuZVwiPjtcblxuYucQgUGFjahbmlmZXNQxhcMgPSBcInBhYstbWFuaWZlcRcIjtcbmNvbnNIEljbQYWNrTWFuaWZlcQgPSAoexuICBtYWpZmVzdDogeyBzZXJpZXMsIHNeWxlcywgZGVzYJpcHRpbsIGNvdWLCBoblcGFnZSwgbGljZWzZSBLFxuICBvbkRvdsbFkLFxufTogexuICBtYWpZmVzdDogSWNvblBhYtNYWpZmVzdDtcbiAgbEbdubGhZDogKHBhdGgIHNcmluZykgPTgUHJvbWlzZTxblkPjtcbnpID+IHtcbiAgYucQgZVUViQxhcMgPSBcVDYWxsYmFjayhcbiAgICAoYxhcNOYWlOiBzdHJpbmcpID+IGAkeBhYtNYWpZmVzdENsYXNzfSkeNsYXNzTmFtZXgLFxuICAgIFtdLFxuICApOxuICByZXRcmgKFxuICAgIDxkaXYgYxhcNOYWlPXtQYWNrTWFuaWZlcRDbGFzc+XGgICAgICAZGlIGNsYXNzTmFtZTZVUViQxhcMoXCJaXRsZVwiKX+eNlcmllcLRpdjcbiAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdWJDbGFzcyhcImRldGFpbHNcIilPlxuICAgICAgICAcBhblxuICAgICAgICAgIGNsYXNzTmFtZTZVUViQxhcMoXCJsaWNlbnNlXCIpfVxuICAgICAgICAgIGFyaWEtbGFiZWwewiTGljZWzZTogXCIgKyBsaWNlbnNlfVxuICAgICAgICA+XGgICAgICAgICAgPEZpQXdhcmQgclZTcIjAuOWVtXCIgLzcbiAgICAgICAgPCzcGFuPlxuICAgICAgICAcBhblxuICAgICAgICAgIGNsYXNzTmFtZTZVUViQxhcMoXCJjbVudFwiKXcbiAgICAgICAgICBhcmlhLWxhYmVsPXtgJHtjbVudHgaWNvbnMgaWgdGYWxgfVxuICAgICAgICA+XGgICAgICAgICAgPEZpSWhZUgclZTcIjAuOWVtXCIgLzcbiAgICAgICAgICAcBhbiBjbGFzchbWUewiaWNvbiZXhXCJPntjbVudHLNwYW+XGgICAgICAgIDwvcBhbjcbiAgICAgIDwvZGlPlxuICAgICAgPGRpdiBjbGFzchbWUedldFNYkNsYXNzKFwiZGVzYwiKX+XGgICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzchbWUedldFNYkNsYXNzKFwiaGtZXBhZVcIilXGgICAgICAgICAgYXJpYSsYWJlbDaGtZXBhZVXGgICAgICAgICAgbDbGljazKCkgPTgdluZGLmwZWoaGtZXBhZUpfVxuICAgICAgICA+XGgICAgICAgICAgPEZpSGtZSAvPlxuICAgICAgICAgIDxhIGNsYXNzTmFtZTXCJpYuLXRleHRcIn+SGtZSBQYWdlPChPlxuICAgICAgICALRpdjcbiAgICAgICAgeRlcNyaXBaWufVxuICAgICAgPCkaXY+XGgICAgICAZGlIGNsYXNzTmFtZTcInNeWxlcysaXNXCI+XGgICAgICAgIHtzdHlsZXMubWFwKChzdHlsZSkgPTgKFxuICAgICAgICAgIDxJYuUGFjaNeWxlXGgICAgICAgICAgICBrZXkeNeWxlLmJbmRsZUhbWVXGgICAgICAgICAgICBzdHlsZUluZmeNeWxlfVxuICAgICAgICAgICAgbEbdubGhZDbEbdubGhZHcbiAgICAgICAgICAvPlxuICAgICAgICApKXcbiAgICAgIDwvZGlPlxuICAgIDwvZGlPlxuICApOxufTtcblxuYucQgURbGVJbmZvQxhcMgPSBcInNeWxlLWluZmcIixcbiAgZVURbGVJbmZvQxhcMgPSAoLiuYxhcNlczogcRyaWnWpID+IGNscyhTdHlsZUluZmDbGFzcywgLiuYxhcNlcykXGjbzdCBJYuUGFjaNeWxlIDgKHtcbiAgcRbGVJbmZvOiBIGNvdWLCBwYWNrSWQsIHBhdGgsIHNeWxlIHsXGgIGuRGbmxvYWQsXGOiBXGgIHNeWxlSWmbzogURbGVJbmZvOxuICBvbkRvdsbFkOiAocGFaDogcRyaWnKSAPiBQcmtaXNlPHZvaWQ+OxufSkgPTgexuICBjbzdCBnZXRTdWJDbGFzcyAIHVzZUNhbGxiYWNrKFxuICAgIChjbGFzchbWUIHNcmluZykgPTgYCRURbGVJbmZvQxhcNLSRYxhcNOYWlfWAsXGgICAgWsXGgICkXGgIGNvbnNIFtzdGFZSwgcVURhdGVdIDgdXNlURhdGUTWFuaWZlcRTdGFZToeyBzdGFZTogXCJkaXNwbGFXCIgfSkXGgIHNaXRjaCAocRhdGUucRhdGUpIHtcbiAgICBjYXNlIFwiZGlzcGxheVwiOlxuICAgICAgcmVdXJuIChcbiAgICAgICAgPGRpdiBjbGFzchbWUedldFNeWxlSWmbNsYXNzKClPlxuICAgICAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdWJDbGFzcyhcInRpdGxlXCIpfTcbiAgICAgICAgICAgIHtzdHlsZSA/IHNeWxlIDogXCJyZWdbGFyXCJXGgICAgICAgICAgICAcBhblxuICAgICAgICAgICAgICBjbGFzchbWUedldFNYkNsYXNzKFwicGFjaypZFwiKXcbiAgICAgICAgICAgICAgYXJpYSsYWJlbDcIlBhYsgaWQgdXNlZCBhcyBzaGydGNvZGUgcHJlZmlXCJcbiAgICAgICAgICAgIDcbiAgICAgICAgICAgICAgeBhYtJZHcbiAgICAgICAgICAgIDwvcBhbjcbiAgICAgICAgICALRpdjcblxuICAgICAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdWJDbGFzcyhcImRldGFpbHNcIilPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzchbWUedldFNYkNsYXNzKFwiYbnRcIilXGgICAgICAgICAgICAgIGFyaWEtbGFiZWweAkeNvdWfSBpYucyBpbiBbRhbGBXGgICAgICAgICAgICA+XGgICAgICAgICAgICAgIDxGaUltYWdlIHNpemUXCIwLjllbVwiIC+XGgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZTXCJpYuLXRleHRcIn+eNvdWfTwvcBhbjcbiAgICAgICAgICAgIDwvZGlPlxuICAgICAgICAgIDwvZGlPlxuICAgICAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdWJDbGFzcyhcImJdHRvbijbYWluZXJcIilPlxuICAgICAgICAgICAgPGJdHRvblxuICAgICAgICAgICAgICBjbGFzchbWUedldFNYkNsYXNzKFwiZGbmxvYWRcIilXGgICAgICAgICAgICAgIGuQxpYseFzeWjICgpID+IHtcbiAgICAgICAgICAgICAgICBzZXRTdGFZShIHNYXRlOiBcImRvdsbFkaWnXCIgfSkXGgICAgICAgICAgICAgICAgdHJIHtcbiAgICAgICAgICAgICAgICAgIGFYWlIGuRGbmxvYWQocGFaCkXGgICAgICAgICAgICAgICAgICBzZXRTdGFZShIHNYXRlOiBcImRvbmVcIiBKTtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubGnKFwiZGuZVwiKTtcbiAgICAgICAgICAgICAgICBIGNhdGNoIChlcnJvcikgexuICAgICAgICAgICAgICAgICAgYucsZSlcnJvcihlcnJvcikXGgICAgICAgICAgICAgICAgICBzZXRTdGFZShIHNYXRlOiBcImVycmyXCIsIGVycmyIHpOxuICAgICAgICAgICAgICAgIHcbiAgICAgICAgICAgICAgfXcbiAgICAgICAgICAgICAgYXJpYSsYWJlbDcIkRvdsbFkXCJcbiAgICAgICAgICAgIDcbiAgICAgICAgICAgICAgPEZpRGbmxvYWQgLzcbiAgICAgICAgICAgIDwvYnVdGuPlxuICAgICAgICAgICAgPGJdHRvblxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiRGbmxvYWQgdmlhIEJybdzZXJcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSAPiBaWkbcubBlbihnZXRJYuUGFjaJbmRsZVVybChwYXRoKSlXGgICAgICAgICAgICA+XGgICAgICAgICAgICAgIDxGaUVdGVybmFsTGluayAvPlxuICAgICAgICAgICAgPCidXRb+XGgICAgICAgICAgPCkaXY+XGgICAgICAgIDwvZGlPlxuICAgICAgKTtcbiAgICBjYXNlIFwiZGbmxvYWRpbmdcIjpcbiAgICAgIHJldHVybiAoXGgICAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdHlsZUluZmDbGFzcyhcImRvdsbFkaWnXCIpfTcbiAgICAgICAgICATGhZGluZyBeXBlPVwiYnViYmxlcwiIGNsYXNzTmFtZTcImxvYWRpbmctaWkaWNhdGyXCIgLzcbiAgICAgICAgICAZGlPkRvdsbFkaWnLiuPCkaXY+XGgICAgICAgIDwvZGlPlxuICAgICAgKTtcbiAgICBjYXNlIFwiZGuZVwiOlxuICAgICAgcmVdXJuIDxkaXYgYxhcNOYWlPXtnZXRTdHlsZUluZmDbGFzcyhcImRvbmVcIilPkRvdsbFkZWQLRpdjXGgICAgYFzZSBcImVycmyXCIXGgICAgICBjbzbxlLmVycmyKHNYXRlLmVycmyKTtcbiAgICAgIHJldHVybiAoXGgICAgICAgIDxkaXYgYxhcNOYWlPXtnZXRTdHlsZUluZmDbGFzcyhcImVycmyXCIpfTcbiAgICAgICAgICBGYWlsZWQgdGgRGbmxvYWQXGgICAgICAgICAgPGRpdiBjbGFzchbWUXCJtbQtdFybmluZwiPlxuICAgICAgICAgICAgeNYXRlLmVycmyIGlucRhbmNlbYgRXJybJcbiAgICAgICAgICAgICAgPyBzdGFZSlcnJvcitZXNzYWdlXGgICAgICAgICAgICAgIDogKHNYXRlLmVycmyIGFzIGFueSk/LnRvURyaWnKClXGgICAgICAgICAgPCkaXY+XGgICAgICAgIDwvZGlPlxuICAgICAgKTtcbiAgICBkZWZhdWxOlxuICAgICAgYXNzZXJTmVZXIocRhdGUpOxuICBXGOxuIiwgImVcGydCBjbzdCBFTVBUWVPQkogPSBfTtcbmVcGydCBjbzdCBFTVBUWVBUlIgPSBbXTtcbmVcGydCBjbzdCBJUOTfRElNRUTSUOQUwgPSAvYWNpdHxleCg/OnNZxufHBJClcnBofGdyaWRbdzfGuYxudHdaWlWNoXXxbXmyZHxpdGVyYSpOxuIiwgImltcGydCBIEVNUFRZXFSUiBIGZybgXCIuLNvbnNYWcwiOxuXGvKipcbiAqIEFzclnbiBwcmwZXJaWVzIGZybgYHBybBzYCBbyBgbJqYFxuICogQHRlbXBsYXRlIEsIFAgVGhlIGiaiBhbmQgcHJvcHMgdHlwZXNcbiAqIEBwYXJhbSBTgbJqIFRoZSBvYmplYQgdGgYweSBwcmwZXJaWVzIHRvXGgKiBAcGFyYWgeBIHBybBzIFRoZSBvYmplYQgdGgYweSBwcmwZXJaWVzIGZybcbiAqIEByZXRcmzIHtPICYgUHcbiAqLxuZXhwbJIGZbmNaWuIGFzclnbihvYmosIHBybBzKSBXGcdCvIEBcypZvcmUgVUgYhhbmdlIHRoZSBeXBlIGmIGBvYmpgIHRvIGJlIGBPICYgUGBcblxZmyIChsZXQgaSBpbiBwcmwcykgbJqWldIDgcHJvcHNbaVXGcdHJldHVybiAvKiogQHRcGUgegJiBQfSAqLyAobJqKTtcbncblxuLyoqXGgKiBSZWvdmUgYSBjaGlsZCBubRlIGZybgaXRzIHBhcmVudCBpZiBhdHRhYhlZCgVGhpcyBpcyBhIHdvcmthcmbmQgZmyXGgKiBJRTExIHdoaWNoIGRvZXNuJQgcVwcGydCBgRWxlbWVudCwcmbRcGUucmVtbZlKClgLiBVcluZyBaGlzIGZbmNaWuXGgKiBpcyBzbWFsbGVyIHRoYWgaWjbHVkaWnIGEgZGVkaWNhdGVkIHBvbHlmaWxsLlxuICogQHBhcmFtIHtObRlfSBubRlIFRoZSBubRlIHRvIHJlbWZVxuICovXGleHBvcnQgZnVuYRpbgcmVtbZlTmkZShubRlKSBXGcdGxldCBwYXJlbnRObRlIDgbmkZSwYXJlbnRObRlOxuXHRpZiAocGFyZWTmkZSkgcGFyZWTmkZSyZWvdmVDaGlsZChubRlKTtcbncblxuZXhwbJIGNvbnNIHNsaWNlIDgRUQVFlfQVJSLnNsaWNlOxuIiwgImltcGydCBIFjYXRjaEVycmyIHgZnJvbSAnLikaWZmLNhdGNoLWVycmyJztcblxuLyoqXGgKiBUaGUgYGwdGlvbmAgbJqZWNIGNhbiBwbRlbnRpYWxseSBjbYWluIGNhbGxiYWNrIGZbmNaWucxuICogdGhhdCBhcmUgYFsbGVkIGRcmluZyBYXJpbVzIHNYWdlcyBvZiBvdXIgcmVuZGVyZXIuIFRoaXMgaXMgdGhlXGgKiBmbVuZGFaWuIGuIHdoaWNoIGFsbCBvdXIgYWRkbzIGxpaUgYHByZWFjdCkZWJZAsIGBwcmVhYQvYtcGFYCxcbiAqIGFuZCBgcHJlYWNLhvbtzYCBhcmUgYmFzZWQgbuIFNlZSBaGUgYEwdGlvbnNgIHRcGUgaWgYGludGVybmFsLmQudHNgXGgKiBmbIgYSBmdWxsIGxpcQgbYgYXZhaWxhYmxlIGwdGlvbiBobrcyAobWzdCBlZGlbJzLlERXMgYWxsbcgeWIHRvXGgKiBjdHJsKNsaWNrIGyIGNtZCtjbGljayBvbiBtYWMgdGhlIHRcGUgZGVmaWpdGlvbiBiZWxvdykuXGgKiBAdHlwZSBaWwbJKCcuLludGVybmFsJykuTBaWuccbiAqLxuYucQgbBaWucyAIHtcblxXNhdGNoRXJybJcbnXGcbmVcGydCBkZWZhdWxIGwdGlvbnMXGiLCAiaWwbJIHsgcxpYUgfSBmcmtICcuLVaWwnOxuaWwbJIGwdGlvbnMgZnJvbSAnLivcHRpbzJztcblxubGVIHZubRlSWQgPSAwOxuXGvKipcbiAqIENyZWFZSBhbiBaXJdWFsIGvZGUgKHVzZWQgZmyIEpTWClcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuVkvZGVbXCJeXBlXCJdfSBeXBlIFRoZSBubRlIGhbWUgbIgQtcGuZWXGgKiBjbzdHJYRvciBmbIgdGhpcyBaXJdWFsIGvZGVcbiAqIEBwYXJhbSBbJqZWNIHwgbnVsbCBIHVuZGVmaWlZHgWBybBzXSBUaGUgcHJvcGVydGllcyBvZiBaGUgdmlydHVhbCBubRlXGgKiBAcGFyYWgeFycmFPGltcGydCgnLicpLkNvbXBvbmVudENoaWxkcmVuPngWNoaWxkcmVuXSBUaGUgYhpbGRyZWgbYgdGhlIHZpcnRYWwgbmkZVxuICogQHJldHVybnMgeltcGydCgnLipbnRlcmhbCcpLlZObRlfVxuICovXGleHBvcnQgZnVuYRpbgYJlYXRlRWxlbWVudCheXBlLCBwcmwcywgYhpbGRyZWpIHtcblxbGVIGvcmhbGlZWRQcmwcyAIHtLFxuXHRcdGtleSxcblxXHRyZWYsXGcdFxaTtcblxZmyIChpIGluIHBybBzKSBXGcdFxaWYgKGkgPTgJtleScpIGtleSAIHBybBzWldOxuXHRcdGVscUgaWYgKGkgPTgJJlZicpIHJlZiAIHBybBzWldOxuXHRcdGVscUgbmybWFsaXplZFBybBzWldIDgcHJvcHNbaVXGcdHcblxuXHRpZiAoYXJndWlbnRzLmxlbmdaCA+IDIpIHtcblxXHRubJtYWxpemVkUHJvcHMuYhpbGRyZWgPVxuXHRcdFxYXJndWlbnRzLmxlbmdaCA+IDMgPyBzbGljZSjYWxsKGFyZVtZWcywgMikgOiBjaGlsZHJlbjtcblxfVxuXGcdCvIElmIGEgQtcGuZWIFZObRlLCBjaGVjayBmbIgYWkIGFwcGxIGRlZmFbHRQcmwcxuXHQvLyBObRlOiBeXBlIGheSBiZSBbmRlZmluZWQgaWgZGVZWxvcGlbnQsIGcQgbmVZXIgZXJybIgaGVyZScblxaWYgKHRcGVvZiBeXBlIDICdmdWjdGlvbicgJiYgdHlwZSkZWZhdWxUHJvcHMgITgbnVsbCkgexuXHRcdGZvciAoaSBpbiBeXBlLmRlZmFbHRQcmwcykgexuXHRcdFxaWYgKGvcmhbGlZWRQcmwctpXSAPTgdWkZWZpbmVkKSBXGcdFxXHRcdGvcmhbGlZWRQcmwctpXSAIHRcGUuZGVmYXVsdFBybBzWldOxuXHRcdFxfVxuXHRcdHcblxfVxuXGcdHJldHVybiBjcmVhdGVWTmkZSheXBlLCBubJtYWxpemVkUHJvcHMsIGtleSwgcmVmLCBudWxsKTtcbncblxuLyoqXGgKiBDcmVhdGUgYSBWTmkZSAodXNlZCBpbnRlcmhbGxIGJIFByZWFjdClcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuVkvZGVbXCJeXBlXCJdfSBeXBlIFRoZSBubRlIGhbWUgbIgQtcGuZWXGgKiBDbzdHJYRvciBmbIgdGhpcyBaXJdWFsIGvZGVcbiAqIEBwYXJhbSBbJqZWNIHwgcRyaWnIHwgbnVtYmVyIHwgbnVsbHgcHJvcHMgVGhlIHBybBlcnRpZXMgbYgdGhpcyBaXJdWFsIGvZGUuXGgKiBJZiBaGlzIHZpcnRYWwgbmkZSByZXByZXNlbnRzIGEgdGVdCBubRlLCBaGlzIGlzIHRoZSBZXhIGmIHRoZSBubRlIChzdHJpbmcgbIgbnVtYmVyKScbiAqIEBwYXJhbSBcRyaWnIHwgbnVtYmVyIHwgbnVsbHgaVIFRoZSBrZXkgZmyIHRoaXMgdmlydHVhbCBubRlLCBcVkIHdoZWcbiAqIGRpZmZpbmcgaXQgYWdhaWzdCBpdHMgYhpbGRyZWcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuVkvZGVbXCJyZWZcIlIHJlZiBUaGUgcmVmIHBybBlcnRIHRoYXQgdlsbFxuICogcmVjZWlZSBhIHJlZmVyZWjZSBbyBpdHMgYJlYXRlZCBjaGlsZFxuICogQHJldHVybnMgeltcGydCgnLipbnRlcmhbCcpLlZObRlfVxuICovXGleHBvcnQgZnVuYRpbgYJlYXRlVkvZGUodHlwZSwgcHJvcHMsIGtleSwgcmVmLCBvcmlnaWhbCkgexuXHQvLyBWOCBzZWVtcyBbyBiZSBiZXRZXIgYXQgZGVZWNaWnIHRcGUgchhcGVzIGlmIHRoZSBvYmplYQgaXMgYWxsbNhdGVkIGZybgdGhlIHNhbWUgYFsbCBzaXRlXGcdCvIERvIGvdCBpbmxpbmUgaWbyBjcmVhdGVFbGVtZWIGFuZCBjbVyYVUbZObRlIVxuXHRjbzdCBbmkZSAIHtcblxXHReXBlLFxuXHRcdHBybBzLFxuXHRcdGtleSxcblxXHRyZWYsXGcdFxXNoaWxkcmVuOiBudWxsLFxuXHRcdFwYXJlbnQIGbGwsXGcdFxXRlcHRoOiAwLFxuXHRcdFkbIGbGwsXGcdFxLygXleHREbgbXVzdCBiZSBpbmlaWFsaXplZCBbyBbmRlZmluZWQgYijIGlIHdpbGwgZXZlbnRYWxseVxuXHRcdCvIGJlIHNldCBbyBkbubmVdFNpYmxpbmcgdhpYggYFuIHJldHVybiBgbnVsbGAgYWkIGlIGlzIGltcGydGFudFxuXHRcdCvIHRvIGJlIGFibGUgdGgZGlzdGluZVpcggYmVdVlbiBhbiBbmluaXRpYWxpemVkIFuZXhRGtIGFuZFxuXHRcdCvIGEgXleHREbgdGhhdCBoYXMgYmVlbiBzZXQgdGgYGbGxgXGcdFxXleHREbIHVuZGVmaWlZCxcblxXHRfYtcGuZWOiBudWxsLFxuXHRcdFoeWRyYXRpbmcIGbGwsXGcdFxYucRydWNbIIHVuZGVmaWlZCxcblxXHRfbJpZluYWwIGyaWdpbmFsIDIGbGwgPyArKZubRlSWQgOiBvcmlnaWhbFxuXHROxuXGcdCvIEubHkgaWbtlIHRoZSBbmkZSBobrIGlmIHRoaXMgdFzICpubQqIGEgZGlyZWNIGNvcHkXGcdGlmIChvcmlnaWhbCAPSBudWxsICYmIGwdGlvbnMudmvZGUgITgbnVsbCkgbBaWucybmkZShbmkZSkXGcblxcmVdXJuIHZubRlOxufVxuXGleHBvcnQgZnVuYRpbgYJlYXRlUmVmKCkgexuXHRyZXRcmgeyBjdXJyZWOiBudWxsIHXGXGcbmVcGydCBmdWjdGlvbiBGcmFnbWVudChwcmwcykgexuXHRyZXRcmgcHJvcHMuYhpbGRyZWXGXGcbiqKlxuICogQhlYsgaWYgYSBaGUgYXJndWlbnQgaXMgYSBYWxpZCBQcmVhYQgVkvZGUuXGgKiBAcGFyYWgeypIHZubRlXGgKiBAcmVdXJucyBdmvZGUgaXMgaWwbJKCcuLludGVybmFsJykuVkvZGVXGgKicbmVcGydCBjbzdCBpcZhbGlkRWxlbWVudCAIHZubRlID+XGcdHZubRlICEIGbGwgJiYgdmvZGUuYucRydWNbIgPTIHVuZGVmaWlZDtcbiIsICJpbXBvcnQgeyBhcNpZgfSBmcmtICcuLVaWwnOxuaWwbJIHsgZGlmZiwgYtbWlUmvdCBIGZybgJyvZGlmZipbmRleCcXGpbXBvcnQgbBaWucyBmcmtICcuLwdGlvbnMnOxuaWwbJIHsgRnJhZlbnQgfSBmcmtICcuLNyZWFZSlbGVtZWJztcblxuLyoqXGgKiBCYXNlIENvbXBvbmVudCBjbGFzcygUHJvdmlkZXMgYHNldFNYXRlKClgIGFuZCBgZmyYVVcGRhdGUoKWAsIHdoaWNoXGgKiBcmlnZVyIHJlbmRlcmluZxuICogQHBhcmFtIHtvYmplYRIHBybBzIFRoZSBpbmlaWFsIGNvbXBvbmVudCBwcmwcxuICogQHBhcmFtIHtvYmplYRIGNvbnRleHQgVGhlIGluaXRpYWwgYudGVdCBmcmtIHBhcmVudCBjbwblbnRzJxuICogZVQhpbGRDbZXhXGgKicbmVcGydCBmdWjdGlvbiBDbwblbnQocHJvcHMsIGNvbnRleHQpIHtcblxdGhpcywcmwcyAIHBybBzOxuXHRaGlzLmNvbnRleHQgPSBjbZXhOxufVxuXGvKipcbiAqIFVwZGFZSBjbwblbnQgcRhdGUgYWkIHNjaGVkdWxlIGEgcmUtcmVuZGVyLlxuICogQHRoaXMgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudHcbiAqIEBwYXJhbSBbJqZWNIHwgKChzOiBvYmplYQsIHAIGiamVjdCkgPTgbJqZWNKXgdXBkYXRlIEEgaGFzaCBvZiBzdGFZVxuICogcHJvcGVydGllcyBbyBcGRhdGUgdlaCBuZXcgdmFsdWVzIGyIGEgZnVuYRpbgdGhhdCBnaXZlbiBaGUgYVycmVudFxuICogcRhdGUgYWkIHBybBzIHJldHVybnMgYSBuZXcgcGFydGlhbCBzdGFZVxuICogQHBhcmFtIHsoKSAPiBblkfSBbYFsbGJhYtdIEEgZnVuYRpbgdGgYmUgYFsbGVkIGuYUgYtcGuZWIHNYXRlIGlzXGgKiBcGRhdGVkXGgKicbkNvbXBvbmVudCwcmbRcGUucVURhdGUgPSBmdWjdGlvbihcGRhdGUsIGNhbGxiYWNrKSBXGcdCvIGubHkgYxvbmUgcRhdGUgdhlbiBjbBaWnIHRvIGleHRTdGFZSBaGUgZmlycQgdGltZScblxbGVIHMXGcdGlmIChaGlzLluZXhURhdGUgITgbnVsbCAmJiBaGlzLluZXhURhdGUgITIHRoaXMucRhdGUpIHtcblxXHRzIDgdGhpcyfbmVdFNYXRlOxuXHRIGVscUgexuXHRcdHMgPSBaGlzLluZXhURhdGUgPSBhcNpZoesIHRoaXMucRhdGUpOxuXHRXGcblxaWYgKHRcGVvZiBcGRhdGUgPTgJZbmNaWuJykgexuXHRcdCvIFNvbWUgbGlicmFyaWVzIGxpaUgYGltbWVyYCBtYXJrIHRoZSBjdXJyZWIHNYXRlIGFzIHJlYWRvbmxLFxuXHRcdCvIHByZXZlbnRpbmcgdXMgZnJvbSBtdXRhdGluZyBpdCwgcgdUgbmVlZCBbyBjbGuZSBpdCgUVlICMyNzEXGcdFxdXBkYXRlIDgdXBkYXRlKGFzclnbihfSwgcyksIHRoaXMucHJvcHMpOxuXHRXGcblxaWYgKHVwZGFZSkgexuXHRcdGFzclnbihzLCBcGRhdGUpOxuXHRXGcblxLygUtpcCBcGRhdGUgaWYgdXBkYXRlciBmdWjdGlvbiByZXRcmlZCBudWxsXGcdGlmIChcGRhdGUgPTgbnVsbCkgcmVdXJuOxuXGcdGlmIChaGlzLlbmkZSkgexuXHRcdGlmIChjYWxsYmFjaykgdGhpcyfcmVuZGVyQFsbGJhYtzLnBcgoYFsbGJhYspOxuXHRcdGVucXVldWVSZWkZXIodGhpcykXGcdHcbnXGcbiqKlxuICogSWtZWRpYXRlbHkgcGVyZmybSBhIHNbmNocmubVzIHJlLXJlbmRlciBvZiBaGUgYtcGuZWXGgKiBAdGhpcyBaWwbJKCcuLludGVybmFsJykuQtcGuZWfVxuICogQHBhcmFtIHsoKSAPiBblkfSBbYFsbGJhYtdIEEgZnVuYRpbgdGgYmUgYFsbGVkIGFmdGVyIGNvbXBvbmVudCBpcxuICogcmUtcmVuZGVyZWRcbiAqLxuQtcGuZWLnBybRvdHlwZSmbJjZVVwZGFZSAIGZbmNaWuKGNhbGxiYWNrKSBXGcdGlmIChaGlzLlbmkZSkgexuXHRcdCvIFNldCByZWkZXIgbWkZSBzbyBaGFIHdlIGNhbiBkaWZmZXJlbnRpYXRlIHdoZXJlIHRoZSByZWkZXIgcmVxdWVzdFxuXHRcdCvIGlzIGNvbWluZyBmcmtLiBXZSBuZWVkIHRoaXMgYmVjYXVzZSBmbJjZVVwZGFZSBzaGbGQgbmVZXIgYFsbFxuXHRcdCvIHNobVsZENvbXBvbmVudFVwZGFZVxuXHRcdHRoaXMuXZvcmNlIDgdHJZTtcblxXHRpZiAoYFsbGJhYspIHRoaXMuXJlbmRlckNhbGxiYWNrcywdXNoKGNhbGxiYWNrKTtcblxXHRlbnFZXVlUmVuZGVyKHRoaXMpOxuXHRXGOxuXGvKipcbiAqIEFjYVwdHMgYHBybBzYCBhbmQgYHNYXRlYCwgYWkIHJldHVybnMgYSBuZXcgVmlydHVhbCBETgdHJlZSBbyBidWlsZCcbiAqIFZpcnRYWwgRENIGlzIGdlbmVyYWxseSBjbzdHJYRlZCBaWEgWpTWFoaHRcDovLphcuZmybWFLmNvbSdGYtaXMtanNKScbiAqIEBwYXJhbSBbJqZWNfSBwcmwcyBQcmwcyAoZWcIEpTWCBhdHRyaWJdGVzKSByZWNlaXZlZCBmcmtIHBhcmVudFxuICogZWxlbWVudCjbwblbnRcbiAqIEBwYXJhbSBbJqZWNfSBzdGFZSBUaGUgYtcGuZWJMgYVycmVudCBzdGFZVxuICogQHBhcmFtIHtvYmplYRIGNvbnRleHQgQudGVdCBvYmplYQsIGFzIHJldHVybmVkIGJIHRoZSBuZWFyZXNXGgKiBhbmNlcRvcidzIGBnZXRDaGlsZENvbnRleHQoKWBcbiAqIEByZXRcmzIHtpbXBvcnQoJyvaWkZXgnKSDbwblbnRDaGlsZHJlbiBIHZvaWRXGgKicbkNvbXBvbmVudCwcmbRcGUucmVuZGVyIDgRnJhZlbnQXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZXgdmvZGVcbiAqIEBwYXJhbSBbnVtYmVyIHwgbnVsbHgWNoaWxkSWkZXhdXGgKicbmVcGydCBmdWjdGlvbiBnZXREbTaWJsaWnKHZubRlLCBjaGlsZEluZGVKSBXGcdGlmIChjaGlsZEluZGVIDIGbGwpIHtcblxXHQvLyBVcUgYhpbGRJbmRleDbnVsbCBhcyBhIHNpZhbCBbyByZXNbWUgdGhlIHNlYXJjaCBmcmtIHRoZSBbmkZSdzIHNpYmxpbmdcblxXHRyZXRcmgdmvZGUuXBhcmVudFxuXHRcdFxPyBnZXREbTaWJsaWnKHZubRlLlwYXJlbnQsIHZubRlLlwYXJlbnQuXNoaWxkcmVuLmluZGVTYodmvZGUpICsgMSlcblxXHRcdDogbnVsbDtcblxfVxuXGcdGxldCBzaWJsaWnOxuXHRmbIgKDsgYhpbGRJbmRleCAIHZubRlLljaGlsZHJlbisZWndGgIGNoaWxkSWkZXgrKykgexuXHRcdHNpYmxpbmcgPSBbmkZSfYhpbGRyZWbYhpbGRJbmRleFXGcblxXHRpZiAoclibGluZyAhPSBudWxsICYmIHNpYmxpbmcuXRvbSAhPSBudWxsKSBXGcdFxXHQvLyBTaWjZSBcGRhdGVQYXJlbnREbQbludGVycyBrZWVwcyBfZGtIHBvaWZXIgYycmVjdCxcblxXHRcdCvIHdlIGNhbiByZWxIGuIFkbgdGgdGVsbCBcyBpZiBaGlzIHNYnRyZWUgYudGFpbnMgYVxuXHRcdFxLygcmVuZGVyZWQgRENIGvZGUsIGFuZCBaGFIHRoZSBmaXJzdCByZWkZXJlZCBETgbmkZSBpcxuXHRcdFxcmVdXJuIHNpYmxpbmcuXRvbTtcblxXHRXGcdHcblxuXHQvLyBJZiBZSBnZXQgaGVyZSwgdUgaGFZSBubQgZmbmQgYSBETgbmkZSBpbiBaGlzIHZubRlJMgYhpbGRyZWuXGcdCvIFdlIGcQgcmVzdWlIGZybgdGhpcyBbmkZSdzIHNpYmxpbmcgKGluIGlJMgcGFyZWIFjaGlsZHJlbiBhcnJheSlcblxLygTseSBjbGltYiBcCBhbmQgcVhcmNoIHRoZSBwYXJlbnQgaWYgdUgYXJlbidIHNlYXJjaGluZyBaHJvdWdoIGEgRENXGcdCvIFZObRlIChtZWFuaWnIHdlIHJlYWNoZWQgdGhlIERPTSBwYXJlbnQgbYgdGhlIGyaWdpbmFsIHZubRlIHRoYXQgYmVnYWcblxLygdGhlIHNlYXJjaClcblxcmVdXJuIHRcGVvZiBbmkZSeXBlIDICdmdWjdGlvbicgPyBnZXREbTaWJsaWnKHZubRlKSAIGbGwXGXGcbiqKlxuICogVHJpZdlciBpbiwbGFjZSByZSyZWkZXJpbmcgbYgYSBjbwblbnQuXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudHgYtcGuZWIFRoZSBjbwblbnQgdGgcmVyZWkZXJcbiAqLxuZnVuYRpbgcmVuZGVyQtcGuZWKGNvbXBvbmVudCkgexuXHRsZXQgdmvZGUgPSBjbwblbnQuXZubRlLFxuXHRcdGsZERvbSAIHZubRlLlkbsXGcdFxcGFyZWRGtIDgYtcGuZWLlwYXJlbnREbXGcblxaWYgKHBhcmVudERvbSkgexuXHRcdGxldCBjbtaXRRdWVZSAIFtdOxuXHRcdGNvbnNIGsZFZObRlIDgYXNzaWduKHtLCBbmkZSkXGcdFxbxkVkvZGUuXyaWdpbmFsIDgdmvZGUuXyaWdpbmFsICsgMTtcblxuXHRcdGRpZmYoXGcdFxXHRwYXJlbnREbsXGcdFxXHRbmkZSxcblxXHRcdGsZFZObRlLFxuXHRcdFxYtcGuZWLlnbGiYWxDbZXhLFxuXHRcdFxcGFyZWRGtLmbmVyUZHRWxlbWVudCAhPTgdWkZWZpbmVkLFxuXHRcdFxdmvZGUuXhZHJhdGluZyAhPSBudWxsIDgWsZERvbVgOiBudWxsLFxuXHRcdFxYtbWlUXVldWUsXGcdFxXHRvbGREbgPTgbnVsbCA/IGdldERvbVNpYmxpbmcodmvZGUpIDogbxkRGtLFxuXHRcdFxdmvZGUuXhZHJhdGluZxuXHRcdCkXGcdFxYtbWlUmvdChjbtaXRRdWVZSwgdmvZGUpOxuXGcdFxaWYgKHZubRlLlkbgITgbxkRGtKSBXGcdFxXHRcGRhdGVQYXJlbnREbQbludGVycyhbmkZSkXGcdFxfVxuXHRXGXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZXgdmvZGVcbiAqLxuZnVuYRpbgdXBkYXRlUGFyZWRGtUGpbnRlcnModmvZGUpIHtcblxaWYgKChbmkZSAIHZubRlLlwYXJlbnQpICEIGbGwgJiYgdmvZGUuXNvbXBvbmVudCAhPSBudWxsKSBXGcdFxdmvZGUuXRvbSAIHZubRlLljbwblbnQuYmFzZSAIGbGwXGcdFxZmyIChsZXQgaSAIDAIGkgPCBbmkZSfYhpbGRyZWubGVuZRoOyBpKyspIHtcblxXHRcdGxldCBjaGlsZCAIHZubRlLljaGlsZHJlbltpXTtcblxXHRcdGlmIChjaGlsZCAhPSBudWxsICYmIGNoaWxkLlkbgITgbnVsbCkgexuXHRcdFxXHRbmkZSfZGtIDgdmvZGUuXNvbXBvbmVudCiYXNlIDgYhpbGQuXRvbTtcblxXHRcdFxYnJlYWsXGcdFxXHRXGcdFxfVxuXGcdFxcmVdXJuIHVwZGFZVBhcmVudERvbVBvaWZXJzKHZubRlKTtcblxfVxufVxuXGvKipcbiAqIFRoZSByZWkZXIgcXVldWVcbiAqIEBeXBlIHtBcnJheTxpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnQ+fVxuICovXGsZXQgcmVyZWkZXJRdWVZSAIFtdOxuXGvKipcbiAqIEFzeWjaHJvbmcxIHNjaGVkdWxlIGEgYFsbGJhYtcbiAqIEBeXBlIHsoYIICgpID+IHZvaWQpID+IHZvaWRXGgKicbiqIGlzdGFuYnVsIGlnbmyZSBuZXhICovXGvLyBObRlIHRoZSBmbxsbdpbmcgbGluZSBpcndCBcmVlLXNoYWtlbiBieSBybxsdXAgYVIGmIHJvbGxcCybxsdXAjMjUNlxuYucQgZGVmZXIgPVxuXHReXBlbYgUHJvbWlzZSAPSAnZnVuYRpbnXGcdFxPyBQcmtaXNlLnBybRvdHlwZSaGVuLmJpbmQoUHJvbWlzZSyZXNvbHZlKCkpXGcdFxOiBzZXRUaWlbVOxuXGvKlxuICogVGhlIHZhbHVlIGmIGBDbwblbnQuZGVibVuYVgIGcQgYXNbmNocmubVzbHkgaWbtlIHRoZSBwYXNzZWQgaWgYFsbGJhYsuIElIGlzXGgKiBpbXBvcnRhbnQgdGhhdCBjbcmlidXRvcnMgdGgUHJlYWNIGNhbiBjbzaXNZWbHkgcmVhcuIGFibVIHdoYXQgYFsbHMgdGgYHNldFNYXRlYCwgZXRjLlxuICogZGsIGFuZCBaGVuIHRoZWlyIGVmZmVjdHMgdlsbCBiZSBhcHBsaWVkLiBTZWUgdGhlIGxpbmtzIGJlbGIGZvciBzblIGZcnRoZXIgcmVhZGluZyBvbiBkZXNpZpbmdcbiAqIGFzeWjaHJvbmcyBBUElzLlxuICogKiBbRGVzaWduaWnIEFQSXMgZmyIEFzeWjaHJvbnldKGhdHBzOivYmxvZypenMubWUvMjAxMywOCkZXNpZpbmctYXBpcymbItYXNbmNocmueSlcbiAqICogWNhbGxiYWNrcyBzeWjaHJvbmcyBhbmQgYXNbmNocmubVzXShodHRwczovLJsbcubldGVyLmNvbSyMDExLzALzILNhbGxiYWNrcyzeWjaHJvbmcyhbmQtYXNbmNocmubVzLylcbiAqLxuXGsZXQgcHJldkRlYmbmNlOxuXGvKipcbiAqIEVucXVldWUgYSByZXJlbmRlciBvZiBhIGNvbXBvbmVudFxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnRIGMgVGhlIGNvbXBvbmVudCBbyByZXJlbmRlclxuICovXGleHBvcnQgZnVuYRpbgZWxdWVZVJlbmRlcihjKSBXGcdGlmIChcblxXHQoIWMuXRpcnRICYmXGcdFxXHQoYyfZGlydHkgPSBcnVlKSAmJlxuXHRcdFxcmVyZWkZXJRdWVZSwdXNoKGMpICYmXGcdFxXHQhcHJvYVzcyfcmVyZWkZXJDbVudCsrKSBfFxuXHRcdHByZXZEZWJvdWjZSAhPTgbBaWucykZWJvdWjZVJlbmRlcmluZxuXHQpIHtcblxXHRwcmVRGVibVuYUgPSBvcHRpbzLmRlYmbmNlUmVuZGVyaWnOxuXHRcdChwcmVRGVibVuYUgfHwgZGVmZXIpKHBybNlcMpOxuXHRXGXGcbiqKiBGbHVzaCBaGUgcmVuZGVyIHFZXVlIGJIHJlcmVuZGVyaWnIGFsbCBxdWVZWQgYtcGuZWcyAqLxuZnVuYRpbgcHJvYVzcygpIHtcblxbGVIHFZXVlOxuXHRaGlsZSAoKHBybNlcMuXJlcmVuZGVyQbnQgPSByZXJlbmRlclFZXVlLmxlbmdaCkpIHtcblxXHRxdWVZSAIHJlcmVuZGVyUXVldWUucydCgoYSwgYikgPTgYSfdmvZGUuXRlcHRoICgYifdmvZGUuXRlcHRoKTtcblxXHRyZXJlbmRlclFZXVlIDgWXGcdFxLygRGuJQgdXBkYXRlIGByZWkZXJDbVudGAgeWVLiBLZWVwIGlcyBYWxZSBubtemVybyBbyBwcmVZWIHVubmVjZXNzYXJXGcdFxLygcHJvYVzcygpIGNhbGxzIGZybgZVdGluZyBzYhlZHVsZWQgdhpbGUgYHFZXVlYCBpcyBzdGlsbCBiZWluZyBjbzdWlZCcblxXHRxdWVZSzblKGMgPTgexuXHRcdFxaWYgKGMuXRpcnRKSByZWkZXJDbwblbnQoYykXGcdFxfSkXGcdHcbncbnBybNlcMuXJlcmVuZGVyQbnQgPSAwOxuIiwgImltcGydCBIGVucXVldWVSZWkZXIgfSBmcmtICcuLNvbXBvbmVudCcXGcbmVcGydCBsZXQgaSAIDAXGcbmVcGydCBmdWjdGlvbiBjcmVhdGVDbZXhKGRlZmFbHRWYWxZSwgYudGVdElkKSBXGcdGNvbnRleHRJZCAICdfXNDJyArIGkrKztcblxuXHRjbzdCBjbZXhIDgexuXHRcdFpZDogYudGVdElkLFxuXHRcdFkZWZhdWxVmFsdWUIGRlZmFbHRWYWxZSxcblxXHQvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkZbmNaWuQtcGuZWfSAqLxuXHRcdENvbnNbWVyKHBybBzLCBjbZXhVmFsdWUpIHtcblxXHRcdCvIHJldHVybiBwcmwcyjaGlsZHJlbihcblxXHRcdCvIFxYudGVdFtjbZXhSWRdIDgYudGVdFtjbZXhSWRdLnBybBzLnZhbHVlIDogZGVmYXVsdFZhbHVlXGcdFxXHQvLyApOxuXHRcdFxcmVdXJuIHBybBzLmNoaWxkcmVuKGNvbnRleHRWYWxZSkXGcdFxfSxcblxXHQvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkZbmNaWuQtcGuZWfSAqLxuXHRcdFBybZpZGVyKHBybBzKSBXGcdFxXHRpZiAoIXRoaXMuZVQhpbGRDbZXhKSBXGcdFxXHRcdGxldCBzdWJzIDgWXGcdFxXHRcdGxldCBjdHggPSBfTtcblxXHRcdFxYRWNvbnRleHRJZFgPSBaGlzOxuXGcdFxXHRcdHRoaXMuZVQhpbGRDbZXhIDgKCkgPTgYROxuXGcdFxXHRcdHRoaXMuchvdWxkQtcGuZWVXBkYXRlIDgZnVuYRpboXBybBzKSBXGcdFxXHRcdFxaWYgKHRoaXMucHJvcHMudmFsdWUgITIFwcmwcyYWxZSkgexuXHRcdFxXHRcdFxLygSSBaGluayBaGUgZmyYVkIHZhbHVlIHBybBhZFaWuIGhlcmUgdFzIGubHkgbmVlZGVkIHdoZWgYGwdGlvbnMuZGVibVuYVSZWkZXJpbmdgIHdhcyBiZWluZyBieXBhcNlZDpcblxXHRcdFxXHRcdCvIGhdHBzOivZlaHViLmNvbSwcmVhYRqcywcmVhYQvYtbWlLzRkMzMZmIMDNiZWEwOWUZjEOGFiZjMYExYmYZWEYjcNzEjZGlmZiNDYMmNlMzgwOTMYTcxNUMWIYmZjNTQMzdmNlIzNThcblxXHRcdFxXHRcdCvIEluIHRobNlIGNhcVzIHRobVnaCwgZXZlbiBaXRoIHRoZSBYWxZSBjbJyZWNZWQsIHdlJJlIGRvdWJsZSyZWkZXJpbmcgYWxsIGvZGVzLlxuXHRcdFxXHRcdFxLygSXQgbWlnaHQgYmUgYmVdGVyIHRvIGpcQgdGVsbCBmbxrcyBubQgdGgdXNlIGZvcmNlLXNbmMgbWkZScblxXHRcdFxXHRcdCvIENcnJlbnRseSwgdXNpbmcgYHVzZUNvbnRleHQoKWAgaWgYSBjbGFzcyBjbwblbnQgdlsbCBvdmVydJpdGUgaXRzIGBaGlzLmNvbnRleHRgIHZhbHVlLlxuXHRcdFxXHRcdFxLygcVicyzblKGMgPTgexuXHRcdFxXHRcdFxLygXHRjLmNvbnRleHQgPSBfcHJvcHMudmFsdWUXGcdFxXHRcdFxXHQvLyBcdGVucXVldWVSZWkZXIoYykXGcdFxXHRcdFxXHQvLyBKTtcblxuXHRcdFxXHRcdFxLygcVicyzblKGMgPTgexuXHRcdFxXHRcdFxLygXHRjLmNvbnRleHRbYudGVdElkXSAIFwcmwcyYWxZTtcblxXHRcdFxXHRcdCvIFxZWxdWVZVJlbmRlcihjKTtcblxXHRcdFxXHRcdCvIHpOxuXHRcdFxXHRcdFxcVicyzblKGVucXVldWVSZWkZXIpOxuXHRcdFxXHRcdHcblxXHRcdFxfTtcblxuXHRcdFxXHRaGlzLnNYiAIGMgPTgexuXHRcdFxXHRcdHNYnMucHVzaChjKTtcblxXHRcdFxXHRsZXQgbxkIDgYyjbwblbnRXaWxsVWtbVudDtcblxXHRcdFxXHRjLmNvbXBvbmVudFdpbGxVbmvdWIDgKCkgPTgexuXHRcdFxXHRcdFxcVicyzcGxpYUocVicypbmRleEmKGMpLCAxKTtcblxXHRcdFxXHRcdGlmIChvbGQpIGsZCjYWxsKGMpOxuXHRcdFxXHRcdHXGcdFxXHRcdHXGcdFxXHRXGcblxXHRcdHJldHVybiBwcmwcyjaGlsZHJlbjtcblxXHRXGcdHXGcblxLygRGVdGvbHMgbmVlZHMgYWNjZXNzIHRvIHRoZSBjbZXhIGiamVjdCBaGVuIGlXGcdCvIGVuYbnRlcnMgYSBQcmaWRlcigVGhpcyBpcyBuZWNlcNhcnkgdGgcVwcGydFxuXHQvLyBzZXRaWnIGBkaXNwbGFTmFtZWAgbgdGhlIGNvbnRleHQgbJqZWNIGlucRlYWRcblxLygbYgbgdGhlIGNvbXBvbmVudCBpdHNlbGYuIFNlZTpcblxLygaHRcHMLyyZWFjdGpzLmyZykbNzLNvbnRleHQuaHRtbCNjbZXhZGlzcGxheWhbWVcblxuXHRyZXRcmgKGNvbnRleHQuUHJvdmlkZXIuXNvbnRleHRSZWYgPSBjbZXhLkNvbnNbWVyLmNvbnRleHRUeXBlIDgYudGVdCkXGXGiLCAiaWwbJIHsgZGlmZiwgdWtbVudCwgYXBwbHlSZWYgfSBmcmtICcuLluZGVJztcbmltcGydCBIGNyZWFZVZObRlLCBGcmFnbWVudCBIGZybgJyuLNyZWFZSlbGVtZWJztcbmltcGydCBIEVNUFRZXCSiwgRUQVFlfQVJSIHgZnJvbSAnLivYucRhbnRzJztcbmltcGydCBIGdldERvbVNpYmxpbmcgfSBmcmtICcuLijbwblbnQnOxuXGvKipcbiAqIERpZmYgdGhlIGNoaWxkcmVuIGmIGEgdmlydHVhbCBubRlXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWfSBwYXJlbnREbgVGhlIERPTSBlbGVtZWIHdobNlXGgKiBjaGlsZHJlbiBhcmUgYmVpbmcgZGlmZmVkXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSDbwblbnRDaGlsZHJlbltdfSByZWkZXJSZXNbHRcbiAqIEBwYXJhbSBaWwbJKCcuLipbnRlcmhbCcpLlZObRlfSBuZXdQYXJlbnRWTmkZSBUaGUgbmVIHZpcnRYWxcbiAqIGvZGUgdhvcUgYhpbGRyZWgchvdWxkIGJlIGRpZmYnZWQgYWdhaWzdCBvbGRQYXJlbnRWTmkZVxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuVkvZGVIGsZFBhcmVudFZObRlIFRoZSBvbGQgdmlydHVhbFxuICogbmkZSBaGzZSBjaGlsZHJlbiBzaGbGQgYmUgZGlmZidlZCBhZFpbnNIGldBhcmVudFZObRlXGgKiBAcGFyYWgeiamVjdHgZxvYmFsQudGVdCBUaGUgYVycmVudCBjbZXhIGiamVjdCAtIGvZGlmaWVkIGJIGdldENoaWxkQudGVdFxuICogQHBhcmFtIHtibsZWFufSBpcNZyBXaGVaGVyIGyIGvdCBaGlzIERPTSBubRlIGlzIGFuIFNWRyBubRlXGgKiBAcGFyYWgeFycmFPGltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWPngZXhjZXNzRGtQhpbGRyZWcbiAqIEBwYXJhbSBQXJyYXkaWwbJKCcuLipbnRlcmhbCcpLkNvbXBvbmVudDIGNvbWpdFFZXVlIExpcQgbYgYtcGuZWcxuICogdhpYggaGFZSBjYWxsYmFjaMgdGgaWbtlIGluIGNvbWpdFJvbRcbiAqIEBwYXJhbSBaWwbJKCcuLipbnRlcmhbCcpLlByZWFjdEVsZWlbnRIGsZERvbSBUaGUgYVycmVudCBhdHRhYhlZCBETcbiAqIGVsZWlbnQgYWIGldyBkbgZWxlbWVudHMgchvdWxkIGJlIHBsYWNlZCBhcmbmQuIExpaVseSBgbnVsbGAgbgZmlycRcbiAqIHJlbmRlciAoZXhjZXBIHdoZWgaHlkcmFaWnKSgQFuIGJlIGEgclibGluZyBETgZWxlbWVudCBaGVuIGRpZmZpbmdcbiAqIEZyYWdtZWcyBaGFIGhhdmUgclibGluZMuIEluIGvcQgYFzZXMsIGlIHNYXJcyBvdXQgYXMgYGsZENoaWxkcmVuWzBdLlkbgLlxuICogQHBhcmFtIHtibsZWFufSBpchZHJhdGluZyBXaGVaGVyIGyIGvdCBZSBhcmUgaWgaHlkcmFaWuXGgKicbmVcGydCBmdWjdGlvbiBkaWZmQhpbGRyZWoXGcdHBhcmVudERvbSxcblxcmVuZGVyUmVzdWxLFxuXHRuZXdQYXJlbnRWTmkZSxcblxbxkUGFyZWVkvZGUsXGcdGdsbJhbENvbnRleHQsXGcdGlzUZnLFxuXHRleGNlcNEbDaGlsZHJlbixcblxYtbWlUXVldWUsXGcdGsZERvbSxcblxaXNIeWRyYXRpbmdcbikgexuXHRsZXQgaSwgaiwgbxkVkvZGUsIGNoaWxkVkvZGUsIGldRvbSwgZmlycRDaGlsZERvbSwgcmVmcztcblxuXHQvLyBUaGlzIGlzIGEgYtcHJlcNpbgbYgbxkUGFyZWVkvZGUhPWbGwgJiYgbxkUGFyZWVkvZGUgITgRUQVFlfTJKICYmIGsZFBhcmVudFZObRlLljaGlsZHJlbiBfCBFTVBUWVBUlJcblxLygYXMgRUQVFlfTJKLljaGlsZHJlbiBzaGbGQgYmUgYHVuZGVmaWlZGAuXGcdGxldCBvbGRDaGlsZHJlbiAIChvbGRQYXJlbnRWTmkZSAmJiBvbGRQYXJlbnRWTmkZSfYhpbGRyZWpIHxIEVNUFRZXFSUjtcblxuXHRsZXQgbxkQhpbGRyZWMZWndGggPSBvbGRDaGlsZHJlbisZWndGgXGcblxbmVUGFyZWVkvZGUuXNoaWxkcmVuIDgWXGcdGZvciAoaSAIDAIGkgPCByZWkZXJSZXNbHQubGVuZRoOyBpKyspIHtcblxXHRjaGlsZFZObRlIDgcmVuZGVyUmVzdWxWldOxuXGcdFxaWYgKGNoaWxkVkvZGUgPTgbnVsbCBfCBeXBlbYgYhpbGRWTmkZSAPSAnYmvbGVhbicpIHtcblxXHRcdGNoaWxkVkvZGUgPSBuZXdQYXJlbnRWTmkZSfYhpbGRyZWbaVgPSBudWxsOxuXHRcdHcblxXHQvLyBJZiBaGlzIGldZObRlIGlzIGJlaWnIHJldXNlZCAoZSnLiAZGlPntyZXVzZXcmVcVPCkaXY+KSBpbiBaGUgcFtZSBkaWZmLFxuXHRcdCvIGyIHdlIGFyZSByZWkZXJpbmcgYSBjbwblbnQgKGUuZygcVURhdGUpIGNvcHkgdGhlIGsZFZObRlcyBzbyBpdCBjYWgaGFZVxuXHRcdCvIGlJMgbduIERPTSAmIGVYygcGpbnRlcnNcblxXHRlbHNlIGlmIChcblxXHRcdHRcGVvZiBjaGlsZFZObRlIDICdzdHJpbmcnIHxXGcdFxXHReXBlbYgYhpbGRWTmkZSAPSAnbnVtYmVyJyBfFxuXHRcdFxLygZXNsaWLWRpcFibGUtbmVdCsaWlIHZhbGlkLXRcGVvZlxuXHRcdFxdHlwZWmIGNoaWxkVkvZGUgPTgJJpZludCdcblxXHQpIHtcblxXHRcdGNoaWxkVkvZGUgPSBuZXdQYXJlbnRWTmkZSfYhpbGRyZWbaVgPSBjcmVhdGVWTmkZShcblxXHRcdFxbnVsbCxcblxXHRcdFxYhpbGRWTmkZSxcblxXHRcdFxbnVsbCxcblxXHRcdFxbnVsbCxcblxXHRcdFxYhpbGRWTmkZVxuXHRcdFxKTtcblxXHRIGVscUgaWYgKEFycmFLmlzQXJyYXkoYhpbGRWTmkZSkpIHtcblxXHRcdGNoaWxkVkvZGUgPSBuZXdQYXJlbnRWTmkZSfYhpbGRyZWbaVgPSBjcmVhdGVWTmkZShcblxXHRcdFxRnJhZlbnQsXGcdFxXHRcdHsgYhpbGRyZWIGNoaWxkVkvZGUgfSxcblxXHRcdFxbnVsbCxcblxXHRcdFxbnVsbCxcblxXHRcdFxbnVsbFxuXHRcdFxKTtcblxXHRIGVscUgaWYgKGNoaWxkVkvZGUuXRlcHRoIDgMCkgexuXHRcdFxLygVkvZGUgaXMgYWxyZWFkeSBpbiBcUsIGNsblIGlLiBUaGlzIGNhbiBoYXBwZWgaWgdGhlIGZvbGxvdluZxuXHRcdFxLygcNlbmFyaWXGcdFxXHQvLyAgIGNvbnNIHJldXNlIDgPGRpdiAvPlxuXHRcdFxLygICAZGlPntyZXVzZXcBhbiAvPntyZXVzZXLRpdjcblxXHRcdGNoaWxkVkvZGUgPSBuZXdQYXJlbnRWTmkZSfYhpbGRyZWbaVgPSBjcmVhdGVWTmkZShcblxXHRcdFxYhpbGRWTmkZSeXBlLFxuXHRcdFxXHRjaGlsZFZObRlLnBybBzLFxuXHRcdFxXHRjaGlsZFZObRlLmtleSxcblxXHRcdFxbnVsbCxcblxXHRcdFxYhpbGRWTmkZSfbJpZluYWxcblxXHRcdCkXGcdFxfSBlbHNlIHtcblxXHRcdGNoaWxkVkvZGUgPSBuZXdQYXJlbnRWTmkZSfYhpbGRyZWbaVgPSBjaGlsZFZObRlOxuXHRcdHcblxuXHRcdCvIFRlcnNlciByZWvdmVzIHRoZSBgYudGludWVgIGhlcmUgYWkIHdyYXBzIHRoZSBsbwIGJvZHlcblxXHQvLyBpbiBhIGBpZiAoYhpbGRWTmkZSkgeyAuLigfSBjbkaXRpbcblxXHRpZiAoYhpbGRWTmkZSAPSBudWxsKSBXGcdFxXHRjbaWZTtcblxXHRXGcblxXHRjaGlsZFZObRlLlwYXJlbnQgPSBuZXdQYXJlbnRWTmkZTtcblxXHRjaGlsZFZObRlLlkZXBaCAIGldBhcmVudFZObRlLlkZXBaCArIDEXGcblxXHQvLyBDaGVjayBpZiBZSBmaWkIGEgYycmVzcGuZGluZyBlbGVtZWIGluIGsZENoaWxkcmVuLlxuXHRcdCvIElmIGZvdWkLCBkZWxldGUgdGhlIGFycmFIGlZWgYnkgcVdGluZyBbyBgdWkZWZpbmVkYCcblxXHQvLyBXZSBcUgYHVuZGVmaWlZGAsIGFzIGBudWxsYCBpcyByZXNlcnZlZCBmbIgZWwdHkgcGxhYVobxkZXJzXGcdFxLygKGhvbGVzKScblxXHRvbGRWTmkZSAIGsZENoaWxkcmVuWldOxuXGcdFxaWYgKFxuXHRcdFxbxkVkvZGUgPTIGbGwgfHxcblxXHRcdChvbGRWTmkZSAmJlxuXHRcdFxXHRjaGlsZFZObRlLmtleSAPSBvbGRWTmkZSrZXkgJiZcblxXHRcdFxYhpbGRWTmkZSeXBlIDPSBvbGRWTmkZSeXBlKVxuXHRcdCkgexuXHRcdFxbxkQhpbGRyZWbaVgPSBbmRlZmluZWQXGcdFxfSBlbHNlIHtcblxXHRcdCvIEVpdGhlciBvbGRWTmkZSAPTgdWkZWZpbmVkIGyIGsZENoaWxkcmVuTGVuZRoIDgMCxcblxXHRcdCvIHNvIGFmdGVyIHRoaXMgbGvcCBvbGRWTmkZSAPSBudWxsIGyIGsZFZObRlIGlzIGEgdmFsaWQgdmFsdWUuXGcdFxXHRmbIgKGogPSAwOyBqIDwgbxkQhpbGRyZWMZWndGgIGorKykgexuXHRcdFxXHRvbGRWTmkZSAIGsZENoaWxkcmVuWpdOxuXHRcdFxXHQvLyBJZiBjaGlsZFZObRlIGlzIHVuaVZWQsIHdlIGubHkgbWFYggcltaWxhcmxIHVuaVZWQgbmkZXMsIGaGVydlzZSBZSBtYXRjaCBieSBrZXkuXGcdFxXHRcdCvIFdlIGFsdFcyBtYXRjaCBieSBeXBlIChpbiBlaXRoZXIgYFzZSkuXGcdFxXHRcdGlmIChcblxXHRcdFxXHRvbGRWTmkZSAmJlxuXHRcdFxXHRcdGNoaWxkVkvZGUuaVIDIGsZFZObRlLmtleSAmJlxuXHRcdFxXHRcdGNoaWxkVkvZGUudHlwZSAPTgbxkVkvZGUudHlwZVxuXHRcdFxXHQpIHtcblxXHRcdFxXHRvbGRDaGlsZHJlbltqXSAIHVuZGVmaWlZDtcblxXHRcdFxXHRicmVhaztcblxXHRcdFxfVxuXHRcdFxXHRvbGRWTmkZSAIGbGwXGcdFxXHRXGcdFxfVxuXGcdFxbxkVkvZGUgPSBvbGRWTmkZSBfCBFTVBUWVPQkoXGcblxXHQvLyBNbJwaCBaGUgbxkIGVsZWlbnQgaWbyBaGUgbmVIGuZSwgYnVIGRvbidIGFwcGVuZCBpdCBbyBaGUgZGtIHlldFxuXHRcdGRpZmYoXGcdFxXHRwYXJlbnREbsXGcdFxXHRjaGlsZFZObRlLFxuXHRcdFxbxkVkvZGUsXGcdFxXHRnbGiYWxDbZXhLFxuXHRcdFxaXNTdmcsXGcdFxXHRleGNlcNEbDaGlsZHJlbixcblxXHRcdGNvbWpdFFZXVlLFxuXHRcdFxbxkRGtLFxuXHRcdFxaXNIeWRyYXRpbmdcblxXHQpOxuXGcdFxbmVRGtIDgYhpbGRWTmkZSfZGtOxuXGcdFxaWYgKChqIDgYhpbGRWTmkZSyZWYpICYmIGsZFZObRlLnJlZiAhPSBqKSBXGcdFxXHRpZiAoIXJlZnMpIHJlZnMgPSBbXTtcblxXHRcdGlmIChvbGRWTmkZSyZWYpIHJlZnMucHVzaChvbGRWTmkZSyZWYsIGbGwsIGNoaWxkVkvZGUpOxuXHRcdFxcmVmcywdXNoKGosIGNoaWxkVkvZGUuXNvbXBvbmVudCBfCBuZXdEbsIGNoaWxkVkvZGUpOxuXHRcdHcblxuXHRcdGlmIChuZXdEbgITgbnVsbCkgexuXHRcdFxaWYgKGZpcnNQhpbGREbgPTgbnVsbCkgexuXHRcdFxXHRmaXJzdENoaWxkRGtIDgbmVRGtOxuXHRcdFxfVxuXGcdFxXHRpZiAoXGcdFxXHRcdHRcGVvZiBjaGlsZFZObRlLnRcGUgPTgJZbmNaWuJyAmJlxuXHRcdFxXHRjaGlsZFZObRlLljaGlsZHJlbiAPTgbxkVkvZGUuXNoaWxkcmVuXGcdFxXHQpIHtcblxXHRcdFxYhpbGRWTmkZSfbmVdERvbSAIGsZERvbSAIHJlbJkZXJDaGlsZHJlbihcblxXHRcdFxXHRjaGlsZFZObRlLFxuXHRcdFxXHRcdGsZERvbSxcblxXHRcdFxXHRwYXJlbnREbcblxXHRcdFxKTtcblxXHRcdHgZWxzZSBXGcdFxXHRcdGsZERvbSAIHBsYWNlQhpbGQoXGcdFxXHRcdFxcGFyZWRGtLFxuXHRcdFxXHRcdGNoaWxkVkvZGUsXGcdFxXHRcdFxbxkVkvZGUsXGcdFxXHRcdFxbxkQhpbGRyZWsXGcdFxXHRcdFxbmVRGtLFxuXHRcdFxXHRcdGsZERvbVxuXHRcdFxXHQpOxuXHRcdFxfVxuXGcdFxXHRpZiAodHlwZWmIGldBhcmVudFZObRlLnRcGUgPTgJZbmNaWuJykgexuXHRcdFxXHQvLyBCZWNhdXNlIHRoZSBuZXdQYXJlbnRWTmkZSBpcyBGcmFnbWVudCsaWtlLCBZSBuZWVkIHRvIHNldCBpdCdzXGcdFxXHRcdCvIFuZXhRGtIHBybBlcnRIHRvIHRoZSBuZXhUlibGluZyBvZiBpdHMgbGFzdCBjaGlsZCBETgbmkZScblxXHRcdFxLycblxXHRcdFxLygYGsZERvbWAgYudGFpbnMgdGhlIGNvcnJlYQgdmFsdWUgaGVyZSBiZWNhdXNlIGlmIHRoZSBsYXNIGNoaWxkXGcdFxXHRcdCvIGlzIGEgRnJhZlbnQtbGlrZSwgdGhlbiBvbGREbgaGFzIGFscmVhZHkgYmVlbiBzZXQgdGgdGhhdCBjaGlsZCdzIFuZXhRGtLlxuXHRcdFxXHQvLyBJZiBaGUgbGFzdCBjaGlsZCBpcyBhIERPTSBWTmkZSwgdGhlbiBvbGREbgdlsbCBiZSBzZXQgdGgdGhhdCBETcblxXHRcdFxLygbmkZSdzIGleHRTaWJsaWnLlxuXHRcdFxXHRuZXdQYXJlbnRWTmkZSfbmVdERvbSAIGsZERvbTtcblxXHRcdHcblxXHRIGVscUgaWYgKFxuXHRcdFxbxkRGtICYmXGcdFxXHRvbGRWTmkZSfZGtIDIGsZERvbSAmJlxuXHRcdFxbxkRGtLnBhcmVudEvZGUgITgcGFyZWRGtXGcdFxKSBXGcdFxXHQvLyBUaGUgYWJvdmUgYuZGlaWuIGlzIHRvIGhhbmRsZSBudWxsIHBsYWNlaGsZGVycygUVlIHRlcQgaWgcGxhYVobxkZXIudGVzdCqczpcblxXHRcdCvIGBlZmZpYllbnRseSByZXBsYWNlIGbGwgcGxhYVobxkZXJzIGluIHBhcmVudCByZXJlbmRlcnNgXGcdFxXHRvbGREbgPSBnZXREbTaWJsaWnKGsZFZObRlKTtcblxXHRXGcdHcblxuXHRuZXdQYXJlbnRWTmkZSfZGtIDgZmlycRDaGlsZERvbTtcblxuXHQvLyBSZWvdmUgcmVtYWluaWnIGsZENoaWxkcmVuIGlmIHRoZXJlIGFyZSBhbnkuXGcdGZvciAoaSAIGsZENoaWxkcmVuTGVuZRoOyBpLSICkgexuXHRcdGlmIChvbGRDaGlsZHJlbltpXSAhPSBudWxsKSBXGcdFxXHRpZiAoXGcdFxXHRcdHRcGVvZiBuZXdQYXJlbnRWTmkZSeXBlIDICdmdWjdGlvbicgJiZcblxXHRcdFxbxkQhpbGRyZWbaVuXRvbSAhPSBudWxsICYmXGcdFxXHRcdGsZENoaWxkcmVuWldLlkbgPTgbmVUGFyZWVkvZGUuXleHREbcblxXHRcdCkgexuXHRcdFxXHQvLyBJZiBaGUgbmVUGFyZWVkvZGUuXuZXhRGtIHBvaWcyBbyBhIGRvbSBubRlIHRoYXQgaXMgYWJvdXQgdGcblxXHRcdFxLygYmUgdWtbVudGVkLCBaGVuIGdldCBaGUgbmVdCBzaWJsaWnIGmIHRoYXQgdmvZGUgYWkIHNldFxuXHRcdFxXHQvLyBfbmVdERvbSBbyBpdFxuXHRcdFxXHRuZXdQYXJlbnRWTmkZSfbmVdERvbSAIGdldERvbVNpYmxpbmcobxkUGFyZWVkvZGUsIGkgKyAxKTtcblxXHRcdHcblxuXHRcdFxdWtbVudChvbGRDaGlsZHJlbltpXSwgbxkQhpbGRyZWbaVpOxuXHRcdHcblxfVxuXGcdCvIFNldCByZWZzIGubHkgYWZZXIgdWtbVudFxuXHRpZiAocmVmcykgexuXHRcdGZvciAoaSAIDAIGkgPCByZWZzLmxlbmdaDsgaSsrKSBXGcdFxXHRhcHBseVJlZihyZWZzWldLCByZWZzWysraVsIHJlZnNbKytpXSkXGcdFxfVxuXHRXGXGcbmZbmNaWuIHJlbJkZXJDaGlsZHJlbihjaGlsZFZObRlLCBvbGREbsIHBhcmVudERvbSkgexuXHQvLyBObRlOiBWTmkZXMgaWgbmVzdGVkIHNcBlbmRlZCBcmVlcyBtYXkgYmUgbWlzcluZyBfYhpbGRyZWuXGcdGxldCBjIDgYhpbGRWTmkZSfYhpbGRyZWXGcdGxldCBbXAgPSAwOxuXHRmbIgKDsgYyAmJiBbXAgPCBjLmxlbmdaDsgdGwKyspIHtcblxXHRsZXQgdmvZGUgPSBjWRtcFXGcdFxaWYgKHZubRlKSBXGcdFxXHQvLyBXZSBeXBpYFsbHkgZWZXIgdGhpcyBjbRlIHBhdGggbgcNVIGJhaWxvdXQsIHdoZXJlIHdlIGNvcHlcblxXHRcdCvIGsZFZObRlLljaGlsZHJlbiBbyBuZXdWTmkZSfYhpbGRyZWuIElmIHRoYXQgaXMgdGhlIGNhcUsIHdlIGlZWRcblxXHRcdCvIHRvIHVwZGFZSBaGUgbxkIGNoaWxkcmVuJMgXBhcmVudCBwbludGVyIHRvIHBvaWIHRvIHRoZSBuZXdWTmkZVxuXHRcdFxLygKGNoaWxkVkvZGUgaGVyZSkuXGcdFxXHRbmkZSfcGFyZWIDgYhpbGRWTmkZTtcblxuXHRcdFxaWYgKHRcGVvZiBbmkZSeXBlIDICdmdWjdGlvbicpIHtcblxXHRcdFxbxkRGtIDgcmVvcmRlckNoaWxkcmVuKHZubRlLCBvbGREbsIHBhcmVudERvbSkXGcdFxXHRIGVscUgexuXHRcdFxXHRvbGREbgPSBwbGFjZUNoaWxkKFxuXHRcdFxXHRcdHBhcmVudERvbSxcblxXHRcdFxXHRbmkZSxcblxXHRcdFxXHRbmkZSxcblxXHRcdFxXHRjLFxuXHRcdFxXHRcdHZubRlLlkbsXGcdFxXHRcdFxbxkRGtXGcdFxXHRcdCkXGcdFxXHRXGcdFxfVxuXHRXGcblxcmVdXJuIGsZERvbTtcbncblxuLyoqXGgKiBGbGFdGVuIGFuZCBsbwIHRocmZggdGhlIGNoaWxkcmVuIGmIGEgdmlydHVhbCBubRlXGgKiBAcGFyYWgeltcGydCgnLivaWkZXgnKSDbwblbnRDaGlsZHJlbngYhpbGRyZWgVGhlIHVuZmxhdHRlbmVkXGgKiBjaGlsZHJlbiBvZiBhIHZpcnRYWwgbmkZVxuICogQHJldHVybnMgeltcGydCgnLivaWZXJuYWwnKSWTmkZVtdfVxuICovXGleHBvcnQgZnVuYRpbgdGDaGlsZEFycmFKGNoaWxkcmVuLCBvdXQpIHtcblxbVIDgbVIHxIFtdOxuXHRpZiAoYhpbGRyZWgPTgbnVsbCBfCBeXBlbYgYhpbGRyZWgPTgJJvbxlYWnKSBXGcdHgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcblxXHRjaGlsZHJlbizblKGNoaWxkID+IHtcblxXHRcdHRvQhpbGRBcnJheShjaGlsZCwgbVKTtcblxXHRKTtcblxfSBlbHNlIHtcblxXHRvdXQucHVzaChjaGlsZHJlbikXGcdHcblxcmVdXJuIGdDtcbncblxuZnVuYRpbgcGxhYVDaGlsZChcblxcGFyZWRGtLFxuXHRjaGlsZFZObRlLFxuXHRvbGRWTmkZSxcblxbxkQhpbGRyZWsXGcdGldRvbSxcblxbxkRGtXGpIHtcblxbGVIGleHREbXGcdGlmIChjaGlsZFZObRlLluZXhRGtICEPSBbmRlZmluZWQpIHtcblxXHQvLyBPbmxIEZyYWdtZWcyBvciBjbwblbnRzIHRoYXQgcmVdXJuIEZyYWdtZWIGxpaUgVkvZGVzIHdpbGxcblxXHQvLyBoYXZlIGEgbmuLXVuZGVmaWlZCBfbmVdERvbSgQudGludWUgdGhlIGRpZmYgZnJvbSBaGUgclibGluZxuXHRcdCvIGmIGxhcQgRENIGNoaWxkIGmIHRoaXMgYhpbGQgVkvZGVcblxXHRuZXhRGtIDgYhpbGRWTmkZSfbmVdERvbTtcblxuXHRcdCvIEVhZVybHkgYxlYWcCBfbmVdERvbSgVUgZGuJQgbmVlZCBbyBwZXJzaXNIHRoZSBYWxZSBiZWNhdXNlXGcdFxLygaXQgaXMgbseSBcVkIGJIGBkaWZmQhpbGRyZWgIHRvIGRldGVybWluZSBaGVyZSBbyByZXNbWUgdGhlIGRpZmYgYWZZXJcblxXHQvLyBkaWZmaWnIENvbXBvbmVudHMgYWkIEZyYWdtZWcygTjZSBZSBzdGyZSBpdCBaGUgbmVdERPTSBsbNhbCBYXIsIHdlXGcdFxLygYFuIGNsZWFuIHVwIHRoZSBwcmwZXJeVxuXHRcdGNoaWxkVkvZGUuXleHREbgPSBbmRlZmluZWQXGcdHgZWxzZSBpZiAoXGcdFxbxkVkvZGUgPTgbnVsbCBfFxuXHRcdGldRvbSAhPSBvbGREbgfHxcblxXHRuZXdEbucGFyZWTmkZSAPSBudWxsXGcdCkgexuXHRcdGdGVyOiBpZiAobxkRGtIDIGbGwgfHwgbxkRGtLnBhcmVudEvZGUgITIHBhcmVudERvbSkgexuXHRcdFxcGFyZWRGtLmFwcGVuZENoaWxkKGldRvbSkXGcdFxXHRuZXhRGtIDgbnVsbDtcblxXHRIGVscUgexuXHRcdFxLygYGobxkQhpbGRyZWMZWndGgIGorPTJgIGlzIGFuIGFsdGVybmFaXZlIHRvIGBqKysbxkQhpbGRyZWMZWndGgvMmBcblxXHRcdGZvciAoXGcdFxXHRcdGxldCBzaWJEbgPSBvbGREbsIGogPSAwOxuXHRcdFxXHQocliRGtIDgcliRGtLmleHRTaWJsaWnKSAmJiBqIDwgbxkQhpbGRyZWubGVuZRoOxuXHRcdFxXHRqICsIDJcblxXHRcdCkgexuXHRcdFxXHRpZiAocliRGtIDIGldRvbSkgexuXHRcdFxXHRcdGJyZWFrIGdGVyOxuXHRcdFxXHRXGcdFxXHRXGcdFxXHRwYXJlbnREbuaWzZXJQmVmbJlKGldRvbSwgbxkRGtKTtcblxXHRcdGleHREbgPSBvbGREbXGcdFxfVxuXHRXGcblxLygSWYgdUgaGFZSBwcmUtYFsYVsYXRlZCBaGUgbmVdERPTSBubRlLCBcUgaXQuIEVscUgYFsYVsYXRlIGlIGvdxuXHQvLyBTdHJpYRseSBjaGVjayBmbIgYHVuZGVmaWlZGAgaGVyZSBjdXogYGbGxgIGlzIGEgdmFsaWQgdmFsdWUgbYgYGleHREbgLlxuXHQvLyBTZWUgbWyZSBkZXRhaWwgaWgYJlYXRlLWVsZWlbnQuanMYJlYXRlVkvZGVcblxaWYgKGleHREbgITIHVuZGVmaWlZCkgexuXHRcdGsZERvbSAIGleHREbXGcdHgZWxzZSBXGcdFxbxkRGtIDgbmVRGtLmleHRTaWJsaWnOxuXHRXGcblxcmVdXJuIGsZERvbTtcbncbiIsICJpbXBvcnQgeyBJUOTfRElNRUTSUOQUwgfSBmcmtICcuLijbzdGFudHMnOxuaWwbJIGwdGlvbnMgZnJvbSAnLivbBaWucycXGcbiqKlxuICogRGlmZiBaGUgbxkIGFuZCBuZXcgcHJvcGVydGllcyBvZiBhIFZObRlIGFuZCBhcHBseSBjaGFuZVzIHRvIHRoZSBETgbmkZVxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuUHJlYWNRWxlbWVudHgZGtIFRoZSBETgbmkZSBbyBhcHBseVxuICogYhhbmdlcyBbxuICogQHBhcmFtIHtvYmplYRIGldBybBzIFRoZSBuZXcgcHJvcHNcbiAqIEBwYXJhbSBbJqZWNfSBvbGRQcmwcyBUaGUgbxkIHBybBzXGgKiBAcGFyYWgeJvbxlYWIGlzUZnIFdoZXRoZXIgbIgbmIHRoaXMgbmkZSBpcyBhbiBTVkcgbmkZVxuICogQHBhcmFtIHtibsZWFufSBoeWRyYXRlIFdoZXRoZXIgbIgbmIHdlIGFyZSBpbiBoeWRyYXRpbgbWkZVxuICovXGleHBvcnQgZnVuYRpbgZGlmZlBybBzKGRvbSwgbmVUHJvcHMsIGsZFBybBzLCBpcNZywgaHlkcmFZSkgexuXHRsZXQgaTtcblxuXHRmbIgKGkgaWgbxkUHJvcHMpIHtcblxXHRpZiAoaSAhPTgJNoaWxkcmVuJyAmJiBpICEPSAnaVJyAmJiAhKGkgaWgbmVUHJvcHMpKSBXGcdFxXHRzZXRQcmwZXJeShkbsIGksIGbGwsIGsZFBybBzWldLCBpcNZykXGcdFxfVxuXHRXGcblxZmyIChpIGluIGldBybBzKSBXGcdFxaWYgKFxuXHRcdFxKCFoeWRyYXRlIHxIHRcGVvZiBuZXdQcmwctpXSAPSAnZnVuYRpbnKSAmJlxuXHRcdFxaSAhPTgJNoaWxkcmVuJyAmJlxuXHRcdFxaSAhPTgJtleScgJiZcblxXHRcdGkgITICdYWxZScgJiZcblxXHRcdGkgITICdjaGVjaVkJyAmJlxuXHRcdFxbxkUHJvcHNbaVgITIGldBybBzWldXGcdFxKSBXGcdFxXHRzZXRQcmwZXJeShkbsIGksIGldBybBzWldLCBvbGRQcmwctpXSwgaXNTdmcpOxuXHRcdHcblxfVxufVxuXGmdWjdGlvbiBzZXRTdHlsZShzdHlsZSwgaVLCBYWxZSkgexuXHRpZiAoaVWzBdIDPSAnLScpIHtcblxXHRzdHlsZSzZXRQcmwZXJeShrZXksIHZhbHVlKTtcblxfSBlbHNlIGlmIChYWxZSAPSBudWxsKSBXGcdFxcRbGVbaVXSAICcnOxuXHRIGVscUgaWYgKHRcGVvZiBYWxZSAhPSAnbnVtYmVyJyBfCBJUOTfRElNRUTSUOQUwudGVzdChrZXkpKSBXGcdFxcRbGVbaVXSAIHZhbHVlOxuXHRIGVscUgexuXHRcdHNeWxlWtleVgPSBYWxZSArICdweCcXGcdHcbncblxuLyoqXGgKiBTZXQgYSBwcmwZXJeSBYWxZSBvbiBhIERPTSBubRlXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWfSBkbgVGhlIERPTSBubRlIHRvIGvZGlmeVxuICogQHBhcmFtIHtzdHJpbmdIGhbWUgVGhlIGhbWUgbYgdGhlIHBybBlcnRIHRvIHNldFxuICogQHBhcmFtIHsqfSBYWxZSBUaGUgdmFsdWUgdGgcVIHRoZSBwcmwZXJeSBbxuICogQHBhcmFtIHsqfSBvbGRWYWxZSBUaGUgbxkIHZhbHVlIHRoZSBwcmwZXJeSBoYWRcbiAqIEBwYXJhbSBYmvbGVhbngaXNTdmcgVhldGhlciBvciBubQgdGhpcyBETgbmkZSBpcyBhbiBTVkcgbmkZSBvciBubRcbiAqLxuZXhwbJIGZbmNaWuIHNldFBybBlcnRKGRvbSwgbmFtZSwgdmFsdWUsIGsZFZhbHVlLCBpcNZykgexuXHRsZXQgdXNlQFwdHVyZTtcblxuXHRvOiBpZiAobmFtZSAPTgJNeWxlJykgexuXHRcdGlmICheXBlbYgdmFsdWUgPTgJNcmluZycpIHtcblxXHRcdGRvbSzdHlsZSjcNUZXhIDgdmFsdWUXGcdFxfSBlbHNlIHtcblxXHRcdGlmICheXBlbYgbxkVmFsdWUgPTgJNcmluZycpIHtcblxXHRcdFxZGtLnNeWxlLmNzcRleHQgPSBvbGRWYWxZSAICcnOxuXHRcdFxfVxuXGcdFxXHRpZiAobxkVmFsdWUpIHtcblxXHRcdFxZmyIChuYWlIGluIGsZFZhbHVlKSBXGcdFxXHRcdFxaWYgKCEodmFsdWUgJiYgbmFtZSBpbiBYWxZSkpIHtcblxXHRcdFxXHRcdHNldFNeWxlKGRvbSzdHlsZSwgbmFtZSwgJycpOxuXHRcdFxXHRcdHcblxXHRcdFxfVxuXHRcdFxfVxuXGcdFxXHRpZiAodmFsdWUpIHtcblxXHRcdFxZmyIChuYWlIGluIHZhbHVlKSBXGcdFxXHRcdFxaWYgKCFvbGRWYWxZSBfCBYWxZVtuYWlXSAhPTgbxkVmFsdWVbbmFtZVpIHtcblxXHRcdFxXHRcdHNldFNeWxlKGRvbSzdHlsZSwgbmFtZSwgdmFsdWVbbmFtZVpOxuXHRcdFxXHRcdHcblxXHRcdFxfVxuXHRcdFxfVxuXHRcdHcblxfVxuXHQvLyBCZWjaGhcmsgZmyIGNvbXBhcmlzbIGhdHBzOivZXNiZWjaCjbvYmVuYgvNTcYzkNGJkYjkNWIYTAwOTYYWMXGcdGVscUgaWYgKGhbWVbMFgPTICdvJyAmJiBuYWlWzFdIDPSAnbicpIHtcblxXHRcVDYXBdXJlIDgbmFtZSAhPTgKGhbWUgPSBuYWlLnJlcGxhYUoLNhcHRcmUkLywgJycpKTtcblxuXHRcdCvIEluZmVyIGNvcnJlYQgYFzaWnIGZvciBETgYnVpbHQtaWgZXZlbnRzOlxuXHRcdGlmIChuYWlLnRvTGZXJDYXNlKCkgaWgZGtKSBuYWlIDgbmFtZSbxvdVyQFzZSgpLnNsaWNlKDIpOxuXHRcdGVscUgbmFtZSAIGhbWUucxpYUoMikXGcblxXHRpZiAoIWRvbSfbGlzdGVuZXJzKSBkbuXxpcRlbmVycyAIHtOxuXHRcdGRvbSfbGlzdGVuZXJzWhbWUgKyBcVDYXBdXJlXSAIHZhbHVlOxuXGcdFxaWYgKHZhbHVlKSBXGcdFxXHRpZiAoIWsZFZhbHVlKSBXGcdFxXHRcdGNvbnNIGhhbmRsZXIgPSBcVDYXBdXJlIDgZXZlbnRQcmeUNhcHRcmUgOiBldmVudFBybhOxuXHRcdFxXHRkbuYWRkRXZlbnRMaXNZWlcihuYWlLCBoYWkbGVyLCBcVDYXBdXJlKTtcblxXHRcdHcblxXHRIGVscUgexuXHRcdFxYucQgaGFuZGxlciAIHVzZUNhcHRcmUgPyBldmVudFBybhQFwdHVyZSAIGVZWUHJveHkXGcdFxXHRkbucmVtbZlRXZlbnRMaXNZWlcihuYWlLCBoYWkbGVyLCBcVDYXBdXJlKTtcblxXHRXGcdHgZWxzZSBpZiAobmFtZSAhPTgJRhbmdlcmcxUVSWuZXJIVEMJykgexuXHRcdGlmIChpcNZykgexuXHRcdFxLygTmybWFsaXplIGluYycmVjdCBwcmwIHVzYWdlIGZvciBTVkcXGcdFxXHQvLyAtIHhsaWrOmhyZWYgLyBbGluahyZWYgLS+IGhyZWYgKHhsaWrOmhyZWYgdFzIHJlbWZWQgZnJvbSBTVkcgYWkIGlzbidIGlZWRlZClcblxXHRcdCvICgYxhcNOYWlICtPiBjbGFzcxuXHRcdFxbmFtZSAIGhbWUucmVwbGFjZSgveGxpbmsoSHwaCkvLCAnaCcpLnJlcGxhYUoLNOYWlJCsICdzJykXGcdFxfSBlbHNlIGlmIChcblxXHRcdGhbWUgITICdocmVmJyAmJlxuXHRcdFxbmFtZSAhPTgJxpcQnICYmXGcdFxXHRuYWlICEPSAnZmybScgJiZcblxXHRcdCvIERlZmFbHQgdmFsdWUgaWgYnJvdNlcnMgaXMgYCxYCBhbmQgYWgZWwdHkgcRyaWnIGlzXGcdFxXHQvLyBjYXNIHRvIGAwYCBpbnNZWFkXGcdFxXHRuYWlICEPSAndGFiSWkZXgnICYmXGcdFxXHRuYWlICEPSAnZGbmxvYWQnICYmXGcdFxXHRuYWlIGluIGRvbVxuXHRcdCkgexuXHRcdFxdHJIHtcblxXHRcdFxZGtWhbWVdIDgdmFsdWUgPTgbnVsbCA/ICcnIDogdmFsdWUXGcdFxXHRcdCvIGxhYmVsbGVkIGJyZWFrIGlzIDFiIHNtYWxsZXIgaGVyZSBaGFuIGEgcmVdXJuIHNYXRlbWVudCAocycnkpXGcdFxXHRcdGJyZWFrIGXGcdFxXHRIGNhdGNoIChlKSBfVxuXHRcdHcblxuXHRcdCvIEFSSUEtYXRcmlidXRlcyBoYXZlIGEgZGlmZmVyZWIGvdGlvbiBvZiBibsZWFuIHZhbHVlcycblxXHQvLyBUaGUgdmFsdWUgYGZhbHNlYCBpcyBkaWZmZXJlbnQgZnJvbSBaGUgYXRcmlidXRlIGvdFxuXHRcdCvIGVaXNaWnIGuIHRoZSBETsIHNvIHdlIGNhbidIHJlbWZSBpdCgRmyIGvbiibsZWFuXGcdFxLygQVJJQShdHRyaWJdGVzIHdlIGNvdWxkIHRyZWFIGZhbHNlIGFzIGEgcmVtbZhbCwgYnVIHRoZVxuXHRcdCvIGFtbVudCBvZiBleGNlcHRpbzIHdvdWxkIGNvcQgdXMgdGvIGhbnkgYnlZXMuIEuIHRvcCBvZlxuXHRcdCvIHRoYXQgbRoZXIgVkRPTSBmcmFtZXdvcmtzIGFscgYWxYXlzIHNcmluZlmeSBgZmFscVgLlxuXGcdFxaWYgKHRcGVvZiBYWxZSAPTgJZbmNaWuJykgexuXHRcdFxLygbmVZXIgcVyaWFsaXplIGZbmNaWucyBhcyBhdHRyaWJdGUgdmFsdWVzXGcdFxfSBlbHNlIGlmIChcblxXHRcdHZhbHVlICEIGbGwgJiZcblxXHRcdChYWxZSAhPTgZmFscUgfHwgKGhbWVbMFgPTICdhJyAmJiBuYWlWzFdIDPSAncicpKVxuXHRcdCkgexuXHRcdFxZGtLnNldEFdHJpYnVZShuYWlLCBYWxZSkXGcdFxfSBlbHNlIHtcblxXHRcdGRvbSyZWvdmVBdHRyaWJdGUobmFtZSkXGcdFxfVxuXHRXGXGcbiqKlxuICogUHJveHkgYWgZXZlbnQgdGgaGvaVkIGVZWIGhhbmRsZXJzXGgKiBAcGFyYWgeVZWfSBlIFRoZSBldmVudCBvYmplYQgZnJvbSBaGUgYnJvdNlclxuICogQHByaXZhdGVcbiAqLxuZnVuYRpbgZXZlbnRQcmeShlKSBXGcdHRoaXMuXxpcRlbmVyctlLnRcGUgKyBmYWxzZVobBaWucyldmVudCA/IGwdGlvbnMuZXZlbnQoZSkgOiBlKTtcbncblxuZnVuYRpbgZXZlbnRQcmeUNhcHRcmUoZSkgexuXHRaGlzLlsaXNZWlcnNbZSeXBlICsgdHJZVobBaWucyldmVudCA/IGwdGlvbnMuZXZlbnQoZSkgOiBlKTtcbncbiIsICJpbXBvcnQgeyBFTVBUWVPQkogfSBmcmtICcuLijbzdGFudHMnOxuaWwbJIHsgQtcGuZWLCBnZXREbTaWJsaWnIHgZnJvbSAnLivYtcGuZWJztcbmltcGydCBIEZyYWdtZWIHgZnJvbSAnLivYJlYXRlLWVsZWlbnQnOxuaWwbJIHsgZGlmZkNoaWxkcmVuIHgZnJvbSAnLijaGlsZHJlbicXGpbXBvcnQgeyBkaWZmUHJvcHMsIHNldFBybBlcnRIHgZnJvbSAnLiwcmwcycXGpbXBvcnQgeyBhcNpZsIHJlbWZUvZGUsIHNsaWNlIHgZnJvbSAnLivdXRpbCcXGpbXBvcnQgbBaWucyBmcmtICcuLivcHRpbzJztcblxuLyoqXGgKiBEaWZmIHRbyBaXJdWFsIGvZGVzIGFuZCBhcHBseSBwcmwZXIgYhhbmdlcyBbyBaGUgRENXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWfSBwYXJlbnREbgVGhlIHBhcmVudCBvZiBaGUgRENIGVsZWlbnRcbiAqIEBwYXJhbSBaWwbJKCcuLipbnRlcmhbCcpLlZObRlfSBuZXdWTmkZSBUaGUgbmVIHZpcnRYWwgbmkZVxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuVkvZGVIGsZFZObRlIFRoZSBvbGQgdmlydHVhbCBubRlXGgKiBAcGFyYWgeiamVjdHgZxvYmFsQudGVdCBUaGUgYVycmVudCBjbZXhIGiamVjdCgTWkaWZpZWQgYnkgZVQhpbGRDbZXhXGgKiBAcGFyYWgeJvbxlYWIGlzUZnIFdoZXRoZXIgbIgbmIHRoaXMgZWxlbWVudCBpcyBhbiBTVkcgbmkZVxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJyuLludGVybmFsJykuUHJlYWNRWxlbWVudDIGVYVzcRvbUNoaWxkcmVuXGgKiBAcGFyYWgeFycmFPGltcGydCgnLivaWZXJuYWwnKSDbwblbnQ+fSBjbtaXRRdWVZSBMaXNIGmIGNvbXBvbmVudHNcbiAqIHdoaWNoIGhhdmUgYFsbGJhYtzIHRvIGludmrZSBpbiBjbtaXRSbXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWfSBvbGREbgVGhlIGNcnJlbnQgYXRYWNoZWQgRENXGgKiBlbGVtZWIGFueSBuZXcgZGtIGVsZWlbnRzIHNobVsZCBiZSBwbGFjZWQgYXJvdWkLiBMaWtlbHkgYGbGxgIGuIGZpcnNXGgKiByZWkZXIgKGVYVwdCBaGVuIGhZHJhdGluZykuIENhbiBiZSBhIHNpYmxpbmcgRENIGVsZWlbnQgdhlbiBkaWZmaWnXGgKiBGcmFnbWVudHMgdGhhdCBoYXZlIHNpYmxpbmdzLiBJbiBtbNIGNhcVzLCBpdCBzdGFydHMgbVIGFzIGBvbGRDaGlsZHJlblswXSfZGtYCcbiAqIEBwYXJhbSBYmvbGVhbngWlzSHlkcmFaWnXSBXaGVaGVyIGyIGvdCBZSBhcmUgaWgaHlkcmFaWuXGgKicbmVcGydCBmdWjdGlvbiBkaWZmKFxuXHRwYXJlbnREbsXGcdGldZObRlLFxuXHRvbGRWTmkZSxcblxZxvYmFsQudGVdCxcblxaXNTdmcsXGcdGVYVzcRvbUNoaWxkcmVuLFxuXHRjbtaXRRdWVZSxcblxbxkRGtLFxuXHRpchZHJhdGluZxuKSBXGcdGxldCBbXAsXGcdFxbmVVHlwZSAIGldZObRlLnRcGUXGcblxLygVhlbiBwYXNzaWnIHRocmZggYJlYXRlRWxlbWVudCBpdCBhcNpZzIHRoZSBvYmplYRcblxLygYucRydWNbIgYXMgdWkZWZpbmVkLiBUaGlzIHRvIHByZXZlbnQgSlNPTipbmplYRpbuXGcdGlmIChuZXdWTmkZSjbzdHJYRvciAhPTgdWkZWZpbmVkKSByZXRcmgbnVsbDtcblxuXHQvLyBJZiBaGUgcHJldmlvdXMgZGlmZiBiYWlsZWQgbVLCByZXNbWUgYJlYXRpbmcvaHlkcmFaWnLlxuXHRpZiAobxkVkvZGUuXhZHJhdGluZyAhPSBudWxsKSBXGcdFxaXNIeWRyYXRpbmcgPSBvbGRWTmkZSfaHlkcmFaWnOxuXHRcdGsZERvbSAIGldZObRlLlkbgPSBvbGRWTmkZSfZGtOxuXHRcdCvIGlmIHdlIHJlcVtZSwgdUgdFudCBaGUgdHJlZSBbyBiZSBcInVubGjaVkXCJcblxXHRuZXdWTmkZSfaHlkcmFaWnIDgbnVsbDtcblxXHRleGNlcNEbDaGlsZHJlbiAIFtvbGREbdOxuXHRXGcblxaWYgKChbXAgPSBvcHRpbzLlkaWZmKSkgdGwKGldZObRlKTtcblxuXHRcnkgexuXHRcdGdGVyOiBpZiAodHlwZWmIGldRcGUgPTgJZbmNaWuJykgexuXHRcdFxbGVIGMsIGlzTmVLCBvbGRQcmwcywgbxkURhdGUsIHNuYXBzaGLCBjbGVhclBybNlcNpbmdFeGNlcHRpbXGcdFxXHRsZXQgbmVUHJvcHMgPSBuZXdWTmkZSwcmwcztcblxuXHRcdFxLygTmVjZXNzYXJIGZvciBjcmVhdGVDbZXhIGFwaSgUVdGluZyBaGlzIHBybBlcnRIHdpbGwgcGFzcxuXHRcdFxLygdGhlIGNvbnRleHQgdmFsdWUgYXMgYHRoaXMuYudGVdGAganVzdCBmbIgdGhpcyBjbwblbnQuXGcdFxXHRbXAgPSBuZXdUeXBlLmNvbnRleHRUeXBlOxuXHRcdFxbGVIHBybZpZGVyIDgdGwICYmIGdsbJhbENvbnRleHRbdGwLlpZFXGcdFxXHRsZXQgYtcGuZWQudGVdCAIHRtcFxuXHRcdFxXHQ/IHBybZpZGVyXGcdFxXHRcdFxPyBwcmaWRlciwcmwcyYWxZVxuXHRcdFxXHRcdDogdGwLlkZWZhdWxVmFsdWVcblxXHRcdFxOiBnbGiYWxDbZXhOxuXGcdFxXHQvLyBHZXQgYtcGuZWIGFuZCBzZXQgaXQgdGgYGNgXGcdFxXHRpZiAobxkVkvZGUuXNvbXBvbmVudCkgexuXHRcdFxXHRjIDgbmVVkvZGUuXNvbXBvbmVudCAIGsZFZObRlLljbwblbnQXGcdFxXHRcdGNsZWFyUHJvYVzcluZVYVwdGlvbiAIGMuXBybNlcNpbmdFeGNlcHRpbgPSBjLlwZWkaWnRXJybIXGcdFxXHRIGVscUgexuXHRcdFxXHQvLyBJbnNYWaWFZSBaGUgbmVIGNvbXBvbmVudFxuXHRcdFxXHRpZiAoJBybRvdHlwZScgaWgbmVVHlwZSAmJiBuZXdUeXBlLnBybRvdHlwZSyZWkZXIpIHtcblxXHRcdFxXHQvLyBAdHMtaWdubJlIFRoZSBjaGVjayBhYmZSBZXJpZmllcyBaGFIGldRcGUgaXMgcVwcGzZSBbyBiZSBjbzdHJYRlZFxuXHRcdFxXHRcdGldZObRlLljbwblbnQgPSBjIDgbmVIGldRcGUobmVUHJvcHMsIGNvbXBvbmVudENvbnRleHQpOyAvLyBlcxpbnQtZGlzYWJsZSsaWlIGldyjYXBcblxXHRcdFxfSBlbHNlIHtcblxXHRcdFxXHQvLyBAdHMtaWdubJlIFRydXNIGlLCBDbwblbnQgaWwbGVtZWcyBaGUgaWZXJmYWNlIHdlIHdhbnRcblxXHRcdFxXHRuZXdWTmkZSfYtcGuZWIDgYyAIGldyBDbwblbnQobmVUHJvcHMsIGNvbXBvbmVudENvbnRleHQpOxuXHRcdFxXHRcdGMuYucRydWNbIgPSBuZXdUeXBlOxuXHRcdFxXHRcdGMucmVuZGVyIDgZGSZWkZXIXGcdFxXHRcdHcblxXHRcdFxaWYgKHBybZpZGVyKSBwcmaWRlcizdWIoYykXGcblxXHRcdFxYywcmwcyAIGldBybBzOxuXHRcdFxXHRpZiAoIWMucRhdGUpIGMucRhdGUgPSBfTtcblxXHRcdFxYyjbZXhIDgYtcGuZWQudGVdDtcblxXHRcdFxYyfZxvYmFsQudGVdCAIGdsbJhbENvbnRleHQXGcdFxXHRcdGlzTmVIDgYyfZGlydHkgPSBcnVlOxuXHRcdFxXHRjLlyZWkZXJDYWxsYmFjaMgPSBbXTtcblxXHRcdHcblxuXHRcdFxLygSWbtlIGdldERlcmlZWRTdGFZUZybQcmwcxuXHRcdFxaWYgKGMuXleHRTdGFZSAPSBudWxsKSBXGcdFxXHRcdGMuXleHRTdGFZSAIGMucRhdGUXGcdFxXHRXGcdFxXHRpZiAobmVVHlwZSnZXREZXJpdmVkURhdGVGcmtUHJvcHMgITgbnVsbCkgexuXHRcdFxXHRpZiAoYyfbmVdFNYXRlIDIGMucRhdGUpIHtcblxXHRcdFxXHRjLluZXhURhdGUgPSBhcNpZoesIGMuXleHRTdGFZSkXGcdFxXHRcdHcblxuXHRcdFxXHRhcNpZoXGcdFxXHRcdFxYyfbmVdFNYXRlLFxuXHRcdFxXHRcdGldRcGUuZVRGVyaXZlZFNYXRlRnJvbVBybBzKGldBybBzLCBjLluZXhURhdGUpXGcdFxXHRcdCkXGcdFxXHRXGcblxXHRcdGsZFBybBzIDgYywcmwcztcblxXHRcdGsZFNYXRlIDgYyzdGFZTtcblxuXHRcdFxLygSWbtlIHByZSyZWkZXIgbGlmZWNYxlIGldGhvZHNcblxXHRcdGlmIChpcldykgexuXHRcdFxXHRpZiAoXGcdFxXHRcdFxbmVVHlwZSnZXREZXJpdmVkURhdGVGcmtUHJvcHMgPTgbnVsbCAmJlxuXHRcdFxXHRcdGMuYtcGuZWVlsbEvdWICEIGbGxcblxXHRcdFxKSBXGcdFxXHRcdFxYyjbwblbnRXaWxsTWbnQoKTtcblxXHRcdFxfVxuXGcdFxXHRcdGlmIChjLmNvbXBvbmVudERpZEvdWICEIGbGwpIHtcblxXHRcdFxXHRjLlyZWkZXJDYWxsYmFjaMucHVzaChjLmNvbXBvbmVudERpZEvdWKTtcblxXHRcdFxfVxuXHRcdFxfSBlbHNlIHtcblxXHRcdFxaWYgKFxuXHRcdFxXHRcdGldRcGUuZVRGVyaXZlZFNYXRlRnJvbVBybBzIDIGbGwgJiZcblxXHRcdFxXHRuZXdQcmwcyAhPTgbxkUHJvcHMgJiZcblxXHRcdFxXHRjLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgITgbnVsbFxuXHRcdFxXHQpIHtcblxXHRcdFxXHRjLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmVUHJvcHMsIGNvbXBvbmVudENvbnRleHQpOxuXHRcdFxXHRXGcblxXHRcdFxaWYgKFxuXHRcdFxXHRcdCghYyfZmyYUgJiZcblxXHRcdFxXHRcdGMuchvdWxkQtcGuZWVXBkYXRlICEIGbGwgJiZcblxXHRcdFxXHRcdGMuchvdWxkQtcGuZWVXBkYXRlKFxuXHRcdFxXHRcdFxXHRuZXdQcmwcyxcblxXHRcdFxXHRcdFxYyfbmVdFNYXRlLFxuXHRcdFxXHRcdFxXHRjbwblbnRDbZXhXGcdFxXHRcdFxXHQpIDPSBmYWxzZSkgfHxcblxXHRcdFxXHRuZXdWTmkZSfbJpZluYWwgPTIGsZFZObRlLlvcmlnaWhbFxuXHRcdFxXHQpIHtcblxXHRcdFxXHRjLnBybBzIDgbmVUHJvcHMXGcdFxXHRcdFxYyzdGFZSAIGMuXleHRTdGFZTtcblxXHRcdFxXHQvLyBNbJlIGluZmgYWJvdXQgdGhpcyBoZXJlOiBodHRwczovLdpcQuZlaHViLmNvbSKbZpRGVDcmvYsvYmVjNWYyYUMzUNGQyZTYwNzBlZjhlMDAzNmUZThcblxXHRcdFxXHRpZiAobmVVkvZGUuXyaWdpbmFsICEPSBvbGRWTmkZSfbJpZluYWwpIGMuXRpcnRIDgZmFscUXGcdFxXHRcdFxYyfdmvZGUgPSBuZXdWTmkZTtcblxXHRcdFxXHRuZXdWTmkZSfZGtIDgbxkVkvZGUuXRvbTtcblxXHRcdFxXHRuZXdWTmkZSfYhpbGRyZWgPSBvbGRWTmkZSfYhpbGRyZWXGcdFxXHRcdFxbmVVkvZGUuXNoaWxkcmVuLmZvckVhYgodmvZGUgPTgexuXHRcdFxXHRcdFxaWYgKHZubRlKSBbmkZSfcGFyZWIDgbmVVkvZGUXGcdFxXHRcdFxfSkXGcdFxXHRcdFxaWYgKGMuXJlbmRlckNhbGxiYWNrcysZWndGgpIHtcblxXHRcdFxXHRcdGNvbWpdFFZXVlLnBcgoYykXGcdFxXHRcdFxfVxuXGcdFxXHRcdFxYnJlYWsgbVZXIXGcdFxXHRcdHcblxuXHRcdFxXHRpZiAoYyjbwblbnRXaWxsVXBkYXRlICEIGbGwpIHtcblxXHRcdFxXHRjLmNvbXBvbmVudFdpbGxVcGRhdGUobmVUHJvcHMsIGMuXleHRTdGFZSwgYtcGuZWQudGVdCkXGcdFxXHRcdHcblxuXHRcdFxXHRpZiAoYyjbwblbnREaWRVcGRhdGUgITgbnVsbCkgexuXHRcdFxXHRcdGMuXJlbmRlckNhbGxiYWNrcywdXNoKCgpID+IHtcblxXHRcdFxXHRcdGMuYtcGuZWRGlkVXBkYXRlKGsZFBybBzLCBvbGRTdGFZSwgchcHNobQpOxuXHRcdFxXHRcdHpOxuXHRcdFxXHRXGcdFxXHRXGcblxXHRcdGMuYudGVdCAIGNvbXBvbmVudENvbnRleHQXGcdFxXHRjLnBybBzIDgbmVUHJvcHMXGcdFxXHRjLlbmkZSAIGldZObRlOxuXHRcdFxYyfcGFyZWRGtIDgcGFyZWRGtOxuXGcdFxXHRsZXQgcmVuZGVySGvayAIGwdGlvbnMuXJlbmRlcixcblxXHRcdFxYbnQgPSAwOxuXHRcdFxaWYgKCdwcmbRcGUnIGluIGldRcGUgJiYgbmVVHlwZSwcmbRcGUucmVuZGVyKSBXGcdFxXHRcdGMucRhdGUgPSBjLluZXhURhdGUXGcdFxXHRcdGMuXRpcnRIDgZmFscUXGcblxXHRcdFxaWYgKHJlbmRlckhvbspIHJlbmRlckhvbsobmVVkvZGUpOxuXGcdFxXHRcdHRtcCAIGMucmVuZGVyKGMucHJvcHMsIGMucRhdGUsIGMuYudGVdCkXGcdFxXHRIGVscUgexuXHRcdFxXHRkbyBXGcdFxXHRcdFxYyfZGlydHkgPSBmYWxzZTtcblxXHRcdFxXHRpZiAocmVuZGVySGvaykgcmVuZGVySGvayhuZXdWTmkZSkXGcblxXHRcdFxXHRbXAgPSBjLnJlbmRlcihjLnBybBzLCBjLnNYXRlLCBjLmNvbnRleHQpOxuXGcdFxXHRcdFxLygSGFuZGxlIHNldFNYXRlIGNhbGxlZCBpbiByZWkZXIsIHNlZSAjMjUMxuXHRcdFxXHRcdGMucRhdGUgPSBjLluZXhURhdGUXGcdFxXHRcdHgdhpbGUgKGMuXRpcnRICYmICsrYbnQgPCAyNSkXGcdFxXHRXGcblxXHRcdCvIEhhbmRsZSBzZXRTdGFZSBjYWxsZWQgaWgcmVuZGVyLCBzZWUgIzINTNcblxXHRcdGMucRhdGUgPSBjLluZXhURhdGUXGcblxXHRcdGlmIChjLmdldENoaWxkQudGVdCAhPSBudWxsKSBXGcdFxXHRcdGdsbJhbENvbnRleHQgPSBhcNpZoYXNzaWduKHtLCBnbGiYWxDbZXhKSwgYynZXRDaGlsZENvbnRleHQoKSkXGcdFxXHRXGcblxXHRcdGlmICghaXNOZXcgJiYgYynZXRTbmFwchvdEJlZmyZVVwZGFZSAhPSBudWxsKSBXGcdFxXHRcdHNuYXBzaGIDgYynZXRTbmFwchvdEJlZmyZVVwZGFZShvbGRQcmwcywgbxkURhdGUpOxuXHRcdFxfVxuXGcdFxXHRsZXQgaXNUbBMZXZlbEZyYWdtZWIDcblxXHRcdFxdGwICEIGbGwgJiYgdGwLnRcGUgPTIEZyYWdtZWICYmIHRtcCrZXkgPTgbnVsbDtcblxXHRcdGxldCByZWkZXJSZXNbHQgPSBpcRvcExldmVsRnJhZlbnQgPyBbXAucHJvcHMuYhpbGRyZWgOiBbXAXGcblxXHRcdGRpZmZDaGlsZHJlbihcblxXHRcdFxcGFyZWRGtLFxuXHRcdFxXHRBcnJheSpcFycmFKHJlbmRlclJlcVsdCkgPyByZWkZXJSZXNbHQgOiBbcmVuZGVyUmVzdWxXSxcblxXHRcdFxbmVVkvZGUsXGcdFxXHRcdGsZFZObRlLFxuXHRcdFxXHRnbGiYWxDbZXhLFxuXHRcdFxXHRpcNZyxcblxXHRcdFxZXhjZXNzRGtQhpbGRyZWsXGcdFxXHRcdGNvbWpdFFZXVlLFxuXHRcdFxXHRvbGREbsXGcdFxXHRcdGlzSHlkcmFaWnXGcdFxXHQpOxuXGcdFxXHRjLmJhcUgPSBuZXdWTmkZSfZGtOxuXGcdFxXHQvLyBXZSBzdWNjZXNzZnVsbHkgcmVuZGVyZWQgdGhpcyBWTmkZSwgdWzZXQgYWIHNbJlZCBoeWRyYXRpbvYmFpbGdCBzdGFZTpcblxXHRcdGldZObRlLloeWRyYXRpbmcgPSBudWxsOxuXGcdFxXHRpZiAoYyfcmVuZGVyQFsbGJhYtzLmxlbmdaCkgexuXHRcdFxXHRjbtaXRRdWVZSwdXNoKGMpOxuXHRcdFxfVxuXGcdFxXHRpZiAoYxlYXJQcmjZXNzaWnRXhjZXBaWuKSBXGcdFxXHRcdGMuXBlbmRpbmdFcnJvciAIGMuXBybNlcNpbmdFeGNlcHRpbgPSBudWxsOxuXHRcdFxfVxuXGcdFxXHRjLlmbJjZSAIGZhbHNlOxuXHRcdHgZWxzZSBpZiAoXGcdFxXHRleGNlcNEbDaGlsZHJlbiAPSBudWxsICYmXGcdFxXHRuZXdWTmkZSfbJpZluYWwgPTIGsZFZObRlLlvcmlnaWhbFxuXHRcdCkgexuXHRcdFxbmVVkvZGUuXNoaWxkcmVuIDgbxkVkvZGUuXNoaWxkcmVuOxuXHRcdFxbmVVkvZGUuXRvbSAIGsZFZObRlLlkbXGcdFxfSBlbHNlIHtcblxXHRcdGldZObRlLlkbgPSBkaWZmRWxlbWVudEvZGVzKFxuXHRcdFxXHRvbGRWTmkZSfZGtLFxuXHRcdFxXHRuZXdWTmkZSxcblxXHRcdFxbxkVkvZGUsXGcdFxXHRcdGdsbJhbENvbnRleHQsXGcdFxXHRcdGlzUZnLFxuXHRcdFxXHRleGNlcNEbDaGlsZHJlbixcblxXHRcdFxYtbWlUXVldWUsXGcdFxXHRcdGlzSHlkcmFaWnXGcdFxXHQpOxuXHRcdHcblxuXHRcdGlmICgodGwIDgbBaWucykaWZmZWQpKSBbXAobmVVkvZGUpOxuXHRIGNhdGNoIChlKSBXGcdFxbmVVkvZGUuXyaWdpbmFsIDgbnVsbDtcblxXHQvLyBpZiBoeWRyYXRpbmcgbIgYJlYXRpbmcgaWpdGlhbCBcmVlLCBiYWlsbVIHByZXNlcnZlcyBETXGcdFxaWYgKGlzSHlkcmFaWnIHxIGVYVzcRvbUNoaWxkcmVuICEIGbGwpIHtcblxXHRcdGldZObRlLlkbgPSBvbGREbXGcdFxXHRuZXdWTmkZSfaHlkcmFaWnIDgISFpchZHJhdGluZztcblxXHRcdGVYVzcRvbUNoaWxkcmVuWVYVzcRvbUNoaWxkcmVuLmluZGVTYobxkRGtKVgPSBudWxsOxuXHRcdFxLygXiBjbVsZCBwbNzaWJseSBiZSBzaWwbGlmaWVkIHRvOlxuXHRcdFxLygZXhjZXNzRGtQhpbGRyZWubGVuZRoIDgMDtcblxXHRXGcdFxbBaWucyfYFYhFcnJvcihlLCBuZXdWTmkZSwgbxkVkvZGUpOxuXHRXGXGcbiqKlxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJyuLludGVybmFsJykuQtcGuZWPngYtbWlUXVldWUgTGlzdCBvZiBjbwblbnRzXGgKiBaGljaCBoYXZlIGNhbGxiYWNrcyBbyBpbnZvaUgaWgYtbWlUmvdFxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuVkvZGVIHJvbRcbiAqLxuZXhwbJIGZbmNaWuIGNvbWpdFJvbQoYtbWlUXVldWUsIHJvbQpIHtcblxaWYgKGwdGlvbnMuXNvbWpdCkgbBaWucyfYtbWlKHJvbQsIGNvbWpdFFZXVlKTtcblxuXHRjbtaXRRdWVZSzblKGMgPTgexuXHRcdHRyeSBXGcdFxXHQvLyBAdHMtaWdubJlIFJldXNlIHRoZSBjbtaXRRdWVZSBYXJpYWJsZSBoZXJlIHNvIHRoZSBeXBlIGNoYWnZXNcblxXHRcdGNvbWpdFFZXVlIDgYyfcmVuZGVyQFsbGJhYtzOxuXHRcdFxYyfcmVuZGVyQFsbGJhYtzIDgWXGcdFxXHRjbtaXRRdWVZSzblKGNiID+IHtcblxXHRcdFxLygQHRzLWlnbmyZSBTZWUgYWJvdmUgdHMtaWdubJlIGuIGNvbWpdFFZXVlXGcdFxXHRcdGNiLmNhbGwoYykXGcdFxXHRKTtcblxXHRIGNhdGNoIChlKSBXGcdFxXHRvcHRpbzLljYXRjaEVycmyKGUsIGMuXZubRlKTtcblxXHRXGcdHpOxufVxuXGvKipcbiAqIERpZmYgdHdvIHZpcnRYWwgbmkZXMgcmVwcmVzZWaWnIERPTSBlbGVtZWXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSQcmVhYRFbGVtZWfSBkbgVGhlIERPTSBlbGVtZWIHJlcHJlcVudGluZxuICogdGhlIHZpcnRYWwgbmkZXMgYmVpbmcgZGlmZmVkXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSWTmkZXgbmVVkvZGUgVGhlIGldyBaXJdWFsIGvZGVcbiAqIEBwYXJhbSBaWwbJKCcuLipbnRlcmhbCcpLlZObRlfSBvbGRWTmkZSBUaGUgbxkIHZpcnRYWwgbmkZVxuICogQHBhcmFtIHtvYmplYRIGdsbJhbENvbnRleHQgVGhlIGNcnJlbnQgYudGVdCBvYmplYRcbiAqIEBwYXJhbSBYmvbGVhbngaXNTdmcgVhldGhlciBvciBubQgdGhpcyBETgbmkZSBpcyBhbiBTVkcgbmkZVxuICogQHBhcmFtIHsqfSBleGNlcNEbDaGlsZHJlblxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJyuLludGVybmFsJykuQtcGuZWPngYtbWlUXVldWUgTGlzdCBvZiBjbwblbnRzXGgKiBaGljaCBoYXZlIGNhbGxiYWNrcyBbyBpbnZvaUgaWgYtbWlUmvdFxuICogQHBhcmFtIHtibsZWFufSBpchZHJhdGluZyBXaGVaGVyIGyIGvdCBZSBhcmUgaWgaHlkcmFaWuXGgKiBAcmVdXJucyBaWwbJKCcuLipbnRlcmhbCcpLlByZWFjdEVsZWlbnRXGgKicbmZbmNaWuIGRpZmZFbGVtZWTmkZXMoXGcdGRvbSxcblxbmVVkvZGUsXGcdGsZFZObRlLFxuXHRnbGiYWxDbZXhLFxuXHRpcNZyxcblxZXhjZXNzRGtQhpbGRyZWsXGcdGNvbWpdFFZXVlLFxuXHRpchZHJhdGluZxuKSBXGcdGxldCBvbGRQcmwcyAIGsZFZObRlLnBybBzOxuXHRsZXQgbmVUHJvcHMgPSBuZXdWTmkZSwcmwcztcblxbGVIGvZGVUeXBlIDgbmVVkvZGUudHlwZTtcblxbGVIGkgPSAwOxuXGcdCvIFRyYWNrcyBlbnRlcmluZyBhbmQgZXhpdGluZyBTVkcgbmFtZXNwYWNlIHdoZWgZGVzYVuZGluZyBaHJvdWdoIHRoZSBcmVlLlxuXHRpZiAobmkZVRcGUgPTICdzdmcnKSBpcNZyAIHRydWUXGcblxaWYgKGVYVzcRvbUNoaWxkcmVuICEIGbGwpIHtcblxXHRmbIgKDsgaSAIGVYVzcRvbUNoaWxkcmVuLmxlbmdaDsgaSsrKSBXGcdFxXHRjbzdCBjaGlsZCAIGVYVzcRvbUNoaWxkcmVuWldOxuXGcdFxXHQvLyBpZiBuZXdWTmkZSBtYXRjaGVzIGFuIGVsZWlbnQgaWgZXhjZXNzRGtQhpbGRyZWgbIgdGhlIGBkbgXGcdFxXHQvLyBhcmdbWVudCBtYXRjaGVzIGFuIGVsZWlbnQgaWgZXhjZXNzRGtQhpbGRyZWsIHJlbWZSBpdCBmcmtXGcdFxXHQvLyBleGNlcNEbDaGlsZHJlbiBzbyBpdCBpcndCBsYXRlciByZWvdmVkIGluIGRpZmZDaGlsZHJlblxuXHRcdFxaWYgKFxuXHRcdFxXHRjaGlsZCAmJlxuXHRcdFxXHQncVQXRcmlidXRlJyBpbiBjaGlsZCAPTgISFubRlVHlwZSAmJlxuXHRcdFxXHQobmkZVRcGUgPyBjaGlsZCsbNhbEhbWUgPTIGvZGVUeXBlIDogYhpbGQubmkZVRcGUgPTIDMpXGcdFxXHQpIHtcblxXHRcdFxZGtIDgYhpbGQXGcdFxXHRcdGVYVzcRvbUNoaWxkcmVuWldIDgbnVsbDtcblxXHRcdFxYnJlYWsXGcdFxXHRXGcdFxfVxuXHRXGcblxaWYgKGRvbSAPSBudWxsKSBXGcdFxaWYgKGvZGVUeXBlIDPSBudWxsKSBXGcdFxXHQvLyBAdHMtaWdubJlIGNyZWFZVRleHRObRlIHJldHVybnMgVGVdCwgdUgZXhwZWNIFByZWFjdEVsZWlbnRcblxXHRcdHJldHVybiBkbNbWVudCjcmVhdGVUZXhTmkZShuZXdQcmwcykXGcdFxfVxuXGcdFxaWYgKGlzUZnKSBXGcdFxXHRkbgPSBkbNbWVudCjcmVhdGVFbGVtZWTlMoXGcdFxXHRcdCdodHRwOivddLnczLmyZyyMDAwLNZycsXGcdFxXHRcdCvIEBcypZvcmUgVUgavdyBgbmVVkvZGUudHlwZWAgaXMgYSBzdHJpbmdcblxXHRcdFxbmkZVRcGVcblxXHRcdCkXGcdFxfSBlbHNlIHtcblxXHRcdGRvbSAIGRvYVtZWLmNyZWFZUVsZWlbnQoXGcdFxXHRcdCvIEBcypZvcmUgVUgavdyBgbmVVkvZGUudHlwZWAgaXMgYSBzdHJpbmdcblxXHRcdFxbmkZVRcGUsXGcdFxXHRcdGldBybBzLmlzICYmIGldBybBzXGcdFxXHQpOxuXHRcdHcblxuXHRcdCvIHdlIGNyZWFZWQgYSBuZXcgcGFyZWLCBzbyBublIGmIHRoZSBwcmVaWcxIGFdGFjaGVkIGNoaWxkcmVuIGNhbiBiZSByZXVzZWQXGcdFxZXhjZXNzRGtQhpbGRyZWgPSBudWxsOxuXHRcdCvIHdlIGFyZSBjcmVhdGluZyBhIGldyBubRlLCBzbyBZSBjYWgYXNzdWlIHRoaXMgaXMgYSBuZXcgcVidHJlZSAoaWgYFzZSBZSBhcmUgaHlkcmFaWnKSwgdGhpcyBkZWwdHMgdGhlIGhZHJhdGVcblxXHRpchZHJhdGluZyAIGZhbHNlOxuXHRXGcblxaWYgKGvZGVUeXBlIDPSBudWxsKSBXGcdFxLygRHVyaWnIGhZHJhdGlvbiwgdUgcRpbGwgaGFZSBbyBzcGxpdCBtZXJnZWQgdGVdCBmcmtIFNTUidkIEhUTUwuXGcdFxaWYgKGsZFBybBzICEPSBuZXdQcmwcyAmJiAoIWlzSHlkcmFaWnIHxIGRvbSkYXRhICEPSBuZXdQcmwcykpIHtcblxXHRcdGRvbSkYXRhIDgbmVUHJvcHMXGcdFxfVxuXHRIGVscUgexuXHRcdCvIElmIGVYVzcRvbUNoaWxkcmVuIHdhcyBubQgbnVsbCwgcmVwbBbGFZSBpdCBaXRoIHRoZSBjdXJyZWIGVsZWlbnQncyBjaGlsZHJlbjpcblxXHRleGNlcNEbDaGlsZHJlbiAIGVYVzcRvbUNoaWxkcmVuICYmIHNsaWNlLmNhbGwoZGtLmNoaWxkTmkZXMpOxuXGcdFxbxkUHJvcHMgPSBvbGRWTmkZSwcmwcyBfCBFTVBUWVPQkoXGcblxXHRsZXQgbxkSHRtbCAIGsZFBybBzLmRhbmdlcmcxUVSWuZXJIVEMOxuXHRcdGxldCBuZXdIdGsIDgbmVUHJvcHMuZGFuZVybVzbHlTZXRJbmlckhUTUwXGcblxXHQvLyBEdXJpbmcgaHlkcmFaWuLCBwcmwcyBhcmUgbmIGRpZmZlZCBhdCBhbGwgKGluYxZGluZyBkYWnZXJvdXNseVNldElubmVySFRNTClcblxXHQvLyBAVEETyBZSBzaGbGQgdFybiBpbiBkZWJZyBtbRlIHdoZWgcHJvcHMgZGuJQgbWFYggaGVyZScblxXHRpZiAoIWlzSHlkcmFaWnKSBXGcdFxXHQvLyBCdXQsIGlmIHdlIGFyZSBpbiBhIHNpdHVhdGlvbiBaGVyZSBZSBhcmUgdXNpbmcgZXhpcRpbmcgRENIChlLmcuIHJlcGxhYVObRlKVxuXHRcdFxLygdUgchvdWxkIHJlYWQgdGhlIGVaXNaWnIERPTSBhdHRyaWJdGVzIHRvIGRpZmYgdGhlbVxuXHRcdFxaWYgKGVYVzcRvbUNoaWxkcmVuICEIGbGwpIHtcblxXHRcdFxbxkUHJvcHMgPSBfTtcblxXHRcdFxZmyIChpIDgMDsgaSAIGRvbShdHRyaWJdGVzLmxlbmdaDsgaSsrKSBXGcdFxXHRcdFxbxkUHJvcHNbZGtLmFdHJpYnVZXNbaVubmFtZVgPSBkbuYXRcmlidXRlctpXSYWxZTtcblxXHRcdFxfVxuXHRcdFxfVxuXGcdFxXHRpZiAobmVSHRtbCBfCBvbGRIdGsKSBXGcdFxXHRcdCvIEFblkIHJlLWFwcGxaWnIHRoZSBzYWlICdfXhbWwnIGlmIGlIGRpZCBubQgYhhbmdlZCBiZXRZWVuIHJlLXJlbmRlclxuXHRcdFxXHRpZiAoXGcdFxXHRcdFxIWldhbWwgfHxcblxXHRcdFxXHQoKCFvbGRIdGsIHxIGldhbWwuXodGsICEIGsZEhbWwuXodGsKSAmJlxuXHRcdFxXHRcdFxbmVSHRtbCfXhbWwgITIGRvbSpbmlckhUTUwpXGcdFxXHRcdCkgexuXHRcdFxXHRcdGRvbSpbmlckhUTUwgPSAobmVSHRtbCAmJiBuZXdIdGsLlfaHRtbCkgfHwgJycXGcdFxXHRcdHcblxXHRcdHcblxXHRXGcblxXHRkaWZmUHJvcHMoZGtLCBuZXdQcmwcywgbxkUHJvcHMsIGlzUZnLCBpchZHJhdGluZykXGcblxXHQvLyBJZiBaGUgbmVIHZubRlIGRpZGndCBoYXZlIGRhbmdlcmcxUVSWuZXJIVEMLCBkaWZmIGlcyBjaGlsZHJlblxuXHRcdGlmIChuZXdIdGsKSBXGcdFxXHRuZXdWTmkZSfYhpbGRyZWgPSBbXTtcblxXHRIGVscUgexuXHRcdFxaSAIGldZObRlLnBybBzLmNoaWxkcmVuOxuXHRcdFxZGlmZkNoaWxkcmVuKFxuXHRcdFxXHRkbsXGcdFxXHRcdEFycmFLmlzQXJyYXkoaSkgPyBpIDogWldLFxuXHRcdFxXHRuZXdWTmkZSxcblxXHRcdFxbxkVkvZGUsXGcdFxXHRcdGdsbJhbENvbnRleHQsXGcdFxXHRcdGlzUZnICYmIGvZGVUeXBlICEPSAnZmyZWlnbkiamVjdCcsXGcdFxXHRcdGVYVzcRvbUNoaWxkcmVuLFxuXHRcdFxXHRjbtaXRRdWVZSxcblxXHRcdFxZXhjZXNzRGtQhpbGRyZWcblxXHRcdFxXHQ/IGVYVzcRvbUNoaWxkcmVuWzBdXGcdFxXHRcdFxOiBvbGRWTmkZSfYhpbGRyZWgJiYgZVRGtUlibGluZyhvbGRWTmkZSwgMCksXGcdFxXHRcdGlzSHlkcmFaWnXGcdFxXHQpOxuXGcdFxXHQvLyBSZWvdmUgYhpbGRyZWgdGhhdCBhcmUgbmIHBhcnQgbYgYWIHZubRlLlxuXHRcdFxaWYgKGVYVzcRvbUNoaWxkcmVuICEIGbGwpIHtcblxXHRcdFxZmyIChpIDgZXhjZXNzRGtQhpbGRyZWubGVuZRoOyBpLSICkgexuXHRcdFxXHRcdGlmIChleGNlcNEbDaGlsZHJlbltpXSAhPSBudWxsKSByZWvdmVObRlKGVYVzcRvbUNoaWxkcmVuWldKTtcblxXHRcdFxfVxuXHRcdFxfVxuXHRcdHcblxuXHRcdCvIChhcyBhYmZSwgZGuJQgZGlmZiBwcmwcyBkdXJpbmcgaHlkcmFaWuKVxuXHRcdGlmICghaXNIeWRyYXRpbmcpIHtcblxXHRcdGlmIChcblxXHRcdFxJZhbHVlJyBpbiBuZXdQcmwcyAmJlxuXHRcdFxXHQoaSAIGldBybBzLnZhbHVlKSAhPTgdWkZWZpbmVkICYmXGcdFxXHRcdCvICMyNzUIEZvciBaGUgPHBybdyZXNzPilbGVtZWIHRoZSBpbmlaWFsIHZhbHVlIGlzIDAsXGcdFxXHRcdCvIGRlcBpdGUgdGhlIGFdHJpYnVZSBubQgYmVpbmcgcHJlcVudCgVhlbiBaGUgYXRcmlidXRlXGcdFxXHRcdCvIGlzIGpcNpbmcgdGhlIHBybdyZXNzIGJhciBpcyBcmVhdGVkIGFzIGluZGVZXJtaWhdGUuXGcdFxXHRcdCvIFRvIGZpeCBaGFIHdlJxsIGFsdFcyBcGRhdGUgaXQgdhlbiBpdCBpcyAwIGZvciBwcmncmVzcyBlbGVtZWcxuXHRcdFxXHQoaSAhPTgZGtLnZhbHVlIHxXGcdFxXHRcdFxKGvZGVUeXBlIDPSAncHJvZJlcMnICYmICFpKSBfFxuXHRcdFxXHRcdCvIFRoaXMgaXMgbseSBmbIgSUUgMTEgdGgZmlIDxzZWxlYQ+IHZhbHVlIGvdCBiZWluZyBcGRhdGVkLlxuXHRcdFxXHRcdCvIFRvIGFblkIGEgcRhbGUgcVsZWNIHZhbHVlIHdlIGlZWQgdGgcVIHRoZSBvcHRpbudmFsdWVcblxXHRcdFxXHQvLyBhZFpbiwgdhpYggdHJpZdlcnMgSUUxMSBbyByZSldmFsdWFZSBaGUgcVsZWNIHZhbHVlXGcdFxXHRcdFxKGvZGVUeXBlIDPSAnbBaWuJyAmJiBpICEPSBvbGRQcmwcyYWxZSkpXGcdFxXHQpIHtcblxXHRcdFxcVUHJvcGVydHkoZGtLCAndmFsdWUnLCBpLCBvbGRQcmwcyYWxZSwgZmFscUpOxuXHRcdFxfVxuXHRcdFxaWYgKFxuXHRcdFxXHQnYhlYtlZCcgaWgbmVUHJvcHMgJiZcblxXHRcdFxKGkgPSBuZXdQcmwcyjaGVjaVkKSAhPTgdWkZWZpbmVkICYmXGcdFxXHRcdGkgITIGRvbSjaGVjaVkXGcdFxXHQpIHtcblxXHRcdFxcVUHJvcGVydHkoZGtLCAnYhlYtlZCcsIGksIGsZFBybBzLmNoZWNrZWQsIGZhbHNlKTtcblxXHRcdHcblxXHRXGcdHcblxuXHRyZXRcmgZGtOxufVxuXGvKipcbiAqIEludmrZSBvciBcGRhdGUgYSByZWYsIGRlcGVuZGluZyBvbiBaGVaGVyIGlIGlzIGEgZnVuYRpbgbIgbJqZWNIHJlZicbiAqIEBwYXJhbSBbJqZWNfGZbmNaWufSByZWZcbiAqIEBwYXJhbSBYWfSBYWxZVxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuVkvZGVIHZubRlXGgKicbmVcGydCBmdWjdGlvbiBhcHBseVJlZihyZWYsIHZhbHVlLCBbmkZSkgexuXHRcnkgexuXHRcdGlmICheXBlbYgcmVmIDICdmdWjdGlvbicpIHJlZihYWxZSkXGcdFxZWxzZSByZWYuYVycmVudCAIHZhbHVlOxuXHRIGNhdGNoIChlKSBXGcdFxbBaWucyfYFYhFcnJvcihlLCBbmkZSkXGcdHcbncblxuLyoqXGgKiBVbmvdWIGEgdmlydHVhbCBubRlIGZybgdGhlIHRyZWUgYWkIGFwcGxIERPTSBjaGFuZVzXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSWTmkZXgdmvZGUgVGhlIHZpcnRYWwgbmkZSBbyBbmvdWXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSWTmkZXgcGFyZWVkvZGUgVGhlIHBhcmVudCBvZiBaGUgVkvZGUgdGhhdFxuICogaWpdGlhdGVkIHRoZSBbmvdWXGgKiBAcGFyYWgeJvbxlYWIFtzalwUmVtbZlXSBGbGFnIHRoYXQgaWkaWNhdGVzIHRoYXQgYSBwYXJlbnQgbmkZSBvZiBaGVcbiAqIGNcnJlbnQgZWxlbWVudCBpcyBhbHJlYWRIGRldGFjaGVkIGZybgdGhlIERPTScbiAqLxuZXhwbJIGZbmNaWuIHVubWbnQodmvZGUsIHBhcmVudFZObRlLCBzalwUmVtbZlKSBXGcdGxldCByOxuXHRpZiAobBaWucybmvdWKSBvcHRpbzLnVubWbnQodmvZGUpOxuXGcdGlmICgociAIHZubRlLnJlZikpIHtcblxXHRpZiAoIXIuYVycmVudCBfCByLmNcnJlbnQgPTIHZubRlLlkbpIGFwcGxUmVmKHIsIGbGwsIHBhcmVudFZObRlKTtcblxfVxuXGcdGlmICgociAIHZubRlLljbwblbnQpICEIGbGwpIHtcblxXHRpZiAocijbwblbnRXaWxsVWtbVudCkgexuXHRcdFxdHJIHtcblxXHRcdFxcijbwblbnRXaWxsVWtbVudCgpOxuXHRcdFxfSBjYXRjaCAoZSkgexuXHRcdFxXHRvcHRpbzLljYXRjaEVycmyKGUsIHBhcmVudFZObRlKTtcblxXHRcdHcblxXHRXGcblxXHRyLmJhcUgPSByLlwYXJlbnREbgPSBudWxsOxuXHRXGcblxaWYgKChyIDgdmvZGUuXNoaWxkcmVuKSkgexuXHRcdGZvciAobGVIGkgPSAwOyBpIDwgcisZWndGgIGkrKykgexuXHRcdFxaWYgKHJbaVpIHtcblxXHRcdFxdWtbVudChyWldLCBwYXJlbnRWTmkZSwgdHlwZWmIHZubRlLnRcGUgITgJZbmNaWuJykXGcdFxXHRXGcdFxfVxuXHRXGcblxaWYgKCFzalwUmVtbZlICYmIHZubRlLlkbgITgbnVsbCkgcmVtbZlTmkZShbmkZSfZGtKTtcblxuXHQvLyBNdXNIGJlIHNldCBbyBgdWkZWZpbmVkYCBbyBwcmwZXJseSBjbGVhbiBcCBgXleHREbgXGcdCvIGZvciBaGljaCBgbnVsbGAgaXMgYSBYWxpZCBYWxZSgUVlIGNvbWlbnQgaWgYGNyZWFZSlbGVtZWLmpzYFxuXHRbmkZSfZGtIDgdmvZGUuXleHREbgPSBbmRlZmluZWQXGXGcbiqKiBUaGUgYCyZWkZXIoKWAgbWVaGkIGZvciBhIFBGQyBiYWNraWnIGlucRhbmNlLiAqLxuZnVuYRpbgZGSZWkZXIocHJvcHMsIHNYXRlLCBjbZXhKSBXGcdHJldHVybiBaGlzLmNvbnNcnVjdGyKHBybBzLCBjbZXhKTtcbncbiIsICJpbXBvcnQgeyBFTVBUWVPQkogfSBmcmtICcuLNvbnNYWcycXGpbXBvcnQgeyBjbtaXRSbLCBkaWZmIHgZnJvbSAnLikaWZmLluZGVJztcbmltcGydCBIGNyZWFZUVsZWlbnQsIEZyYWdtZWIHgZnJvbSAnLijcmVhdGUtZWxlbWVudCcXGpbXBvcnQgbBaWucyBmcmtICcuLwdGlvbnMnOxuaWwbJIHsgcxpYUgfSBmcmtICcuLVaWwnOxuXGvKipcbiAqIFJlbmRlciBhIFByZWFjdCBaXJdWFsIGvZGUgaWbyBhIERPTSBlbGVtZWXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudENoaWxkfSBbmkZSBUaGUgdmlydHVhbCBubRlIHRvIHJlbmRlclxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSQcmVhYRFbGVtZWfSBwYXJlbnREbgVGhlIERPTSBlbGVtZWIHRvXGgKiByZWkZXIgaWbxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSQcmVhYRFbGVtZWIHwgbJqZWNfSBbcmVwbGFjZUvZGVdIEwdGlvbmFsOiBBdHRlbXBIHRvIHJlLXVzZSBhblxuICogZXhpcRpbmcgRENIHRyZWUgcmvdGVkIGFIGByZXBsYWNlTmkZWBcbiAqLxuZXhwbJIGZbmNaWuIHJlbmRlcihbmkZSwgcGFyZWRGtLCByZXBsYWNlTmkZSkgexuXHRpZiAobBaWucyfcmvdCkgbBaWucyfcmvdChbmkZSwgcGFyZWRGtKTtcblxuXHQvLyBXZSBhYnVzZSBaGUgYHJlcGxhYVObRlYCBwYXJhbWVZXIgaWgYGhZHJhdGUoKWAgdGgclnbmFsIGlmIHdlIGFyZSBpblxuXHQvLyBoeWRyYXRpbgbWkZSBvciBubQgYnkgcGFzcluZyBaGUgYGhZHJhdGVgIGZbmNaWuIGlucRlYWQgbYgYSBETcblxLygZWxlbWVudCuXGcdGxldCBpchZHJhdGluZyAIHRcGVvZiByZXBsYWNlTmkZSAPTgJZbmNaWuJztcblxuXHQvLyBUbyBiZSBhYmxlIHRvIHNcHBvcnQgYFsbGluZyBgcmVuZGVyKClgIGbHRpcGxlIHRpbWVzIGuIHRoZSBzYWlXGcdCvIERPTSBubRlLCBZSBuZWVkIHRvIGidGFpbiBhIHJlZmVyZWjZSBbyBaGUgcHJldmlvdXMgdHJlZSgVUgZGcblxLygdGhpcyBieSBhcNpZpbmcgYSBuZXcgYFjaGlsZHJlbmAgcHJvcGVydHkgdGgRENIGvZGVzIHdoaWNoIHBvaWcxuXHQvLyBbyBaGUgbGFzdCByZWkZXJlZCBcmVlLiBCeSBkZWZhdWxIHRoaXMgcHJvcGVydHkgaXMgbmIHByZXNlbnQsIHdoaWNoXGcdCvIGlYWzIHRoYXQgdUgYXJlIGvdWaWnIGEgbmVIHRyZWUgZmyIHRoZSBmaXJzdCBaWlLlxuXHRsZXQgbxkVkvZGUgPSBpchZHJhdGluZxuXHRcdDgbnVsbFxuXHRcdDogKHJlcGxhYVObRlICYmIHJlcGxhYVObRlLljaGlsZHJlbikgfHwgcGFyZWRGtLljaGlsZHJlbjtcblxuXHRbmkZSAIChcblxXHQoIWlzSHlkcmFaWnICYmIHJlcGxhYVObRlKSBfFxuXHRcdHBhcmVudERvbVxuXHQpLljaGlsZHJlbiAIGNyZWFZUVsZWlbnQoRnJhZlbnQsIGbGwsIFtbmkZVpOxuXGcdCvIExpcQgbYgZWZmZWNcyBaGFIGlZWQgdGgYmUgYFsbGVkIGFmdGVyIGRpZmZpbmcuXGcdGxldCBjbtaXRRdWVZSAIFtdOxuXHRkaWZmKFxuXHRcdHBhcmVudERvbSxcblxXHQvLyBEZXRlcmpbmUgdGhlIGldyBbmkZSBcmVlIGFuZCBzdGyZSBpdCBvbiBaGUgRENIGVsZWlbnQgbcblxXHQvLyBvdXIgYVzdGtIGBfYhpbGRyZWgIHBybBlcnRLlxuXHRcdHZubRlLFxuXHRcdGsZFZObRlIHxIEVNUFRZXCSixcblxXHRFTVBUWVPQkosXGcdFxcGFyZWRGtLmbmVyUZHRWxlbWVudCAhPTgdWkZWZpbmVkLFxuXHRcdCFpchZHJhdGluZyAmJiByZXBsYWNlTmkZVxuXHRcdFxPyBbcmVwbGFjZUvZGVdXGcdFxXHQIGsZFZObRlXGcdFxXHQ/IGbGxcblxXHRcdDogcGFyZWRGtLmZpcnNQhpbGRcblxXHRcdDgcxpYUuYFsbChwYXJlbnREbuYhpbGRObRlcylcblxXHRcdDogbnVsbCxcblxXHRjbtaXRRdWVZSxcblxXHQhaXNIeWRyYXRpbmcgJiYgcmVwbGFjZUvZGVcblxXHRcdDgcmVwbGFjZUvZGVcblxXHRcdDogbxkVkvZGVcblxXHRcdDgbxkVkvZGUuXRvbVxuXHRcdFxOiBwYXJlbnREbuZmlycRDaGlsZCxcblxXHRpchZHJhdGluZxuXHQpOxuXGcdCvIEZsdXNoIGFsbCBxdWVZWQgZWZmZWNcxuXHRjbtaXRSbKGNvbWpdFFZXVlLCBbmkZSkXGXGcbiqKlxuICogVXBkYXRlIGFuIGVaXNaWnIERPTSBlbGVtZWIHdpdGggZGFYSBmcmtIGEgUHJlYWNIHZpcnRYWwgbmkZVxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnRDaGlsZHgdmvZGUgVGhlIHZpcnRYWwgbmkZSBbyByZWkZXJcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuUHJlYWNRWxlbWVudHgcGFyZWRGtIFRoZSBETgZWxlbWVudCBbxuICogdXBkYXRlXGgKicbmVcGydCBmdWjdGlvbiBoeWRyYXRlKHZubRlLCBwYXJlbnREbpIHtcblxcmVuZGVyKHZubRlLCBwYXJlbnREbsIGhZHJhdGUpOxufVxuIiwgImltcGydCBIGFzclnbiwgcxpYUgfSBmcmtICcuLVaWwnOxuaWwbJIHsgYJlYXRlVkvZGUgfSBmcmtICcuLNyZWFZSlbGVtZWJztcblxuLyoqXGgKiBDbGuZXMgdGhlIGdpdmVuIFZObRlLCBvcHRpbhbGxIGFkZGluZyBhdHRyaWJdGVzLBybBzIGFuZCByZXBsYWNpbmcgaXRzIGNoaWxkcmVuLlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZXgdmvZGUgVGhlIHZpcnRYWwgRENIGVsZWlbnQgdGgYxvbmVcbiAqIEBwYXJhbSBbJqZWNfSBwcmwcyBBdHRyaWJdGVzLBybBzIHRvIGFkZCBaGVuIGNsbpbmdcbiAqIEBwYXJhbSBQXJyYXkaWwbJKCcuLludGVybmFsJykuQtcGuZWQhpbGRyZW+fSByZXNIEFueSBhZGRpdGlvbmFsIGFyZVtZWcyBaWxsIGJlIHVzZWQgYXMgcmVwbGFjZWlbnQgYhpbGRyZWuXGgKiBAcmVdXJucyBaWwbJKCcuLludGVybmFsJykuVkvZGVXGgKicbmVcGydCBmdWjdGlvbiBjbGuZUVsZWlbnQodmvZGUsIHBybBzLCBjaGlsZHJlbikgexuXHRsZXQgbmybWFsaXplZFBybBzIDgYXNzaWduKHtLCBbmkZSwcmwcyksXGcdFxaVLFxuXHRcdHJlZixcblxXHRpOxuXHRmbIgKGkgaWgcHJvcHMpIHtcblxXHRpZiAoaSAPSAnaVJykgaVIDgcHJvcHNbaVXGcdFxZWxzZSBpZiAoaSAPSAncmVmJykgcmVmIDgcHJvcHNbaVXGcdFxZWxzZSBubJtYWxpemVkUHJvcHNbaVgPSBwcmwctpXTtcblxfVxuXGcdGlmIChhcmdbWVudHMubGVuZRoIDgMikgexuXHRcdGvcmhbGlZWRQcmwcyjaGlsZHJlbiAXGcdFxXHRhcmdbWVudHMubGVuZRoIDgMyA/IHNsaWNlLmNhbGwoYXJndWlbnRzLCAyKSAIGNoaWxkcmVuOxuXHRXGcblxcmVdXJuIGNyZWFZVZObRlKFxuXHRcdHZubRlLnRcGUsXGcdFxbmybWFsaXplZFBybBzLFxuXHRcdGtleSBfCBbmkZSrZXksXGcdFxcmVmIHxIHZubRlLnJlZixcblxXHRudWxsXGcdCkXGXGiLCAiLyoqXGgKiBGaWkIHRoZSBjbGzZXNIGVycmyIGJvdWkYXJIHRvIGEgdGhybduIGVycmyIGFuZCBjYWxsIGlXGgKiBAcGFyYWgeiamVjdHgZXJybIgVGhlIHRocmbiBYWxZVxuICogQHBhcmFtIHtpbXBvcnQoJyuLludGVybmFsJykuVkvZGVIHZubRlIFRoZSBbmkZSBaGFIHRocmVXGgKiBaGUgZXJybIgdGhhdCBYXMgYFZhIChleGNlcHQgZmyIHVubWbnRpbmcgdhlbiBaGlzIHBhcmFtZXRlclxuICogaXMgdGhlIGhpZhlcQgcGFyZWIHRoYXQgdFzIGJlaWnIHVubWbnRlZClcbiAqIEBwYXJhbSBaWwbJKCcuLipbnRlcmhbCcpLlZObRlfSBbbxkVkvZGVdXGgKiBAcGFyYWgeltcGydCgnLivaWZXJuYWwnKSFcnJvckluZmIFtlcnJvckluZmdXGgKicbmVcGydCBmdWjdGlvbiBfYFYhFcnJvcihlcnJvciwgdmvZGUsIGsZFZObRlLCBlcnJvckluZmpIHtcblxLyoqIEBeXBlIHtpbXBvcnQoJyuLludGVybmFsJykuQtcGuZWfSAqLxuXHRsZXQgYtcGuZWLCBjdGyLCBoYWkbGVkOxuXGcdGZvciAoOyAodmvZGUgPSBbmkZSfcGFyZWKTsgKSBXGcdFxaWYgKChjbwblbnQgPSBbmkZSfYtcGuZWKSAmJiAhYtcGuZWLlwcmjZXNzaWnRXhjZXBaWuKSBXGcdFxXHRcnkgexuXHRcdFxXHRjdGyIDgYtcGuZWLmNvbnNcnVjdGyOxuXGcdFxXHRcdGlmIChjdGyICYmIGNbIuZVRGVyaXZlZFNYXRlRnJvbUVycmyICEIGbGwpIHtcblxXHRcdFxXHRjbwblbnQucVURhdGUoYRvcinZXREZXJpdmVkURhdGVGcmtRXJybIoZXJybIpKTtcblxXHRcdFxXHRoYWkbGVkIDgYtcGuZWLlkaXJeTtcblxXHRcdFxfVxuXGcdFxXHRcdGlmIChjbwblbnQuYtcGuZWRGlkQFYggITgbnVsbCkgexuXHRcdFxXHRcdGNvbXBvbmVudCjbwblbnREaWRDYXRjaChlcnJvciwgZXJybJJbmZvIHxIHtKTtcblxXHRcdFxXHRoYWkbGVkIDgYtcGuZWLlkaXJeTtcblxXHRcdFxfVxuXGcdFxXHRcdCvIFRoaXMgaXMgYWgZXJybIgYmbmRhcnkuIEhcmsgaXQgYXMgaGFaWnIGJhaWxlZCBvdXQsIGFuZCBaGVaGVyIGlIHdhcyBtaWQtaHlkcmFaWuLlxuXHRcdFxXHRpZiAoaGFuZGxlZCkgexuXHRcdFxXHRcdHJldHVybiAoYtcGuZWLlwZWkaWnRXJybIgPSBjbwblbnQpOxuXHRcdFxXHRXGcdFxXHRIGNhdGNoIChlKSBXGcdFxXHRcdGVycmyIDgZTtcblxXHRcdHcblxXHRXGcdHcblxuXHRaHJvdyBlcnJvcjtcbncbiIsICJpbXBvcnQgeyBvcHRpbzIHgZnJvbSAncHJlYWNJztcblxuLyoqIEBeXBlIHtudWiZXJICovXGsZXQgYVycmVudEluZGVOxuXGvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudHgKicbmxldCBjdXJyZWQtcGuZWOxuXGvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudHgKicbmxldCBwcmVaWcNvbXBvbmVudDtcblxuLyoqIEBeXBlIHtudWiZXJICovXGsZXQgYVycmVudEhvbsgPSAwOxuXGvKiogQHRcGUgeFycmFPGltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudDICovXGsZXQgYWZZXJQYWludEVmZmVjdHMgPSBbXTtcblxubGVIGsZEJlZmyZURpZmYgPSBvcHRpbzLlkaWZmOxubGVIGsZEJlZmyZVJlbmRlciAIGwdGlvbnMuXJlbmRlcjtcbmxldCBvbGRBZnRlckRpZmYgPSBvcHRpbzLmRpZmZlZDtcbmxldCBvbGRDbtaXQgPSBvcHRpbzLljbtaXQXGsZXQgbxkQmVmbJlVWtbVudCAIGwdGlvbnMudWtbVudDtcblxuYucQgUkFGXRJTUVPVVQgPSAxMDAXGsZXQgcHJldlJhZjtcblxubBaWucyfZGlmZiAIHZubRlID+IHtcblxYVycmVudENvbXBvbmVudCAIGbGwXGcdGlmIChvbGRCZWZvcmVEaWZmKSBvbGRCZWZvcmVEaWZmKHZubRlKTtcbnXGcbmwdGlvbnMuXJlbmRlciAIHZubRlID+IHtcblxaWYgKGsZEJlZmyZVJlbmRlcikgbxkQmVmbJlUmVuZGVyKHZubRlKTtcblxuXHRjdXJyZWQtcGuZWIDgdmvZGUuXNvbXBvbmVudDtcblxYVycmVudEluZGVIDgMDtcblxuXHRjbzdCBobrcyAIGNcnJlbnRDbwblbnQuXobrcztcblxaWYgKGhvbtzKSBXGcdFxaWYgKHByZXZpbVzQtcGuZWIDPSBjdXJyZWQtcGuZWKSBXGcdFxXHRobrcyfcGVuZGluZVmZmVjdHMgPSBbXTtcblxXHRcdGNcnJlbnRDbwblbnQuXJlbmRlckNhbGxiYWNrcyAIFtdOxuXHRcdFxaGvaMuXxpcQuZmyRWFjaChobrSXRlbSAPiBXGcdFxXHRcdGlmIChobrSXRlbSfYXJncykgaGvalZWuXFyZMgPSBbmRlZmluZWQXGcdFxXHRKTtcblxXHRIGVscUgexuXHRcdFxaGvaMuXBlbmRpbmdFZmZlYRzLmZvckVhYgoaWbtlQxlYWcCkXGcdFxXHRobrcyfcGVuZGluZVmZmVjdHMuZmyRWFjaChpbnZvaVFZmZlYQpOxuXHRcdFxaGvaMuXBlbmRpbmdFZmZlYRzIDgWXGcdFxfVxuXHRXGcdHByZXZpbVzQtcGuZWIDgYVycmVudENvbXBvbmVudDtcbnXGcbmwdGlvbnMuZGlmZmVkIDgdmvZGUgPTgexuXHRpZiAobxkQWZZXJEaWZmKSBvbGRBZnRlckRpZmYodmvZGUpOxuXGcdGNvbnNIGMgPSBbmkZSfYtcGuZWOxuXHRpZiAoYyAmJiBjLlfaGvaMgJiYgYyfXhvbtzLlwZWkaWnRWZmZWNcysZWndGgpIHtcblxXHRhZnRlclBhaWKGFmdGVyUGFpbnRFZmZlYRzLnBcgoYykpOxuXHRXGcdGNcnJlbnRDbwblbnQgPSBudWxsOxuXHRwcmVaWcNvbXBvbmVudCAIGbGwXGOxuXGvcHRpbzLljbtaXQgPSAodmvZGUsIGNvbWpdFFZXVlKSAPiBXGcdGNvbWpdFFZXVlLnNvbWUoYtcGuZWID+IHtcblxXHRcnkgexuXHRcdFxYtcGuZWLlyZWkZXJDYWxsYmFjaMuZmyRWFjaChpbnZvaVDbGVhbnVwKTtcblxXHRcdGNvbXBvbmVudCfcmVuZGVyQFsbGJhYtzIDgYtcGuZWLlyZWkZXJDYWxsYmFjaMuZmlsdGVyKGNiID+XGcdFxXHRcdGNiLlYWxZSA/IGludmrZUVmZmVjdChjYikgOiBcnVlXGcdFxXHQpOxuXHRcdHgYFYggKGUpIHtcblxXHRcdGNvbWpdFFZXVlLnNvbWUoYyAPiBXGcdFxXHRcdGlmIChjLlyZWkZXJDYWxsYmFjaMpIGMuXJlbmRlckNhbGxiYWNrcyAIFtdOxuXHRcdFxfSkXGcdFxXHRjbtaXRRdWVZSAIFtdOxuXHRcdFxbBaWucyfYFYhFcnJvcihlLCBjbwblbnQuXZubRlKTtcblxXHRXGcdHpOxuXGcdGlmIChvbGRDbtaXQpIGsZENvbWpdChbmkZSwgYtbWlUXVldWUpOxufTtcblxubBaWucybmvdWIDgdmvZGUgPTgexuXHRpZiAobxkQmVmbJlVWtbVudCkgbxkQmVmbJlVWtbVudChbmkZSkXGcblxYucQgYyAIHZubRlLljbwblbnQXGcdGlmIChjICYmIGMuXobrcykgexuXHRcdGxldCBoYXNFcnJvcmVkOxuXHRcdGMuXobrcyfbGlzdCmbJFYWNoKHMgPTgexuXHRcdFxdHJIHtcblxXHRcdFxaWbtlQxlYWcChzKTtcblxXHRcdHgYFYggKGUpIHtcblxXHRcdFxaGFzRXJybJlZCAIGUXGcdFxXHRXGcdFxfSkXGcdFxaWYgKGhhcVycmyZWQpIGwdGlvbnMuXNhdGNoRXJybIoaGFzRXJybJlZCwgYyfdmvZGUpOxuXHRXGOxuXGvKipcbiAqIEdldCBhIGhvbsncyBzdGFZSBmcmtIHRoZSBjdXJyZWQtcGuZWXGgKiBAcGFyYWgebWJlcngaWkZXggVGhlIGluZGVIGmIHRoZSBobrIHRvIGdldFxuICogQHBhcmFtIHtudWiZXJIHRcGUgVGhlIGluZGVIGmIHRoZSBobrIHRvIGdldFxuICogQHJldHVybnMgeFueXcbiAqLxuZnVuYRpbgZVSGvaNYXRlKGluZGVLCBeXBlKSBXGcdGlmIChvcHRpbzLlobrKSBXGcdFxbBaWucyfaGvayhjdXJyZWQtcGuZWLCBpbmRleCwgYVycmVudEhvbsgfHwgdHlwZSkXGcdHcblxYVycmVudEhvbsgPSAwOxuXGcdCvIExhcmdlbHkgaWzcGlyZWQgYnkXGcdCvICogaHRcHMLynaXRodWIuYtLpYhhZWwtaxlaWvZnVuYkuanMvYmxvYimNmJlNzMNjhlNmVjNDZiMGZmNWFhMNjNGMYmFmNzJhMjkwMjVhLNyYyobrcyjbJlXhvbtzLmqcxuXHQvLyAqIGhdHBzOivZlaHViLmNvbStaWNoYWVsLWtsZWluLZbmNLmpzLJsbIvNjUwYmVhYTUYzQzYzMzYTcODIwYTNjOThiMMMDcYYyZTMzMyzcmMvcmVuZGVyZXIubWpzXGcdCvIEaGVyIGltcGxlbWVudGFaWucyBbyBsbrIGFOlxuXHQvLyAqIGhdHBzOivYkZXNhbmRibguaWvcytbmMDVxcDhcblxYucQgaGvaMgPVxuXHRcdGNcnJlbnRDbwblbnQuXobrcyBfFxuXHRcdChjdXJyZWQtcGuZWLlfaGvaMgPSBXGcdFxXHRfbGlzdDogWsXGcdFxXHRfcGVuZGluZVmZmVjdHMIFtdXGcdFxfSkXGcblxaWYgKGluZGVIDIGhvbtzLlsaXNLmxlbmdaCkgexuXHRcdGhvbtzLlsaXNLnBcgoepOxuXHRXGcdHJldHVybiBobrcyfbGlzdFtpbmRleFXGXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWkZXgnKSTdGFZVVwZGFZXIYWPngWluaXRpYWxTdGFZVcbiAqLxuZXhwbJIGZbmNaWuIHVzZVNYXRlKGluaXRpYWxTdGFZSkgexuXHRjdXJyZWSGvayAIDEXGcdHJldHVybiBcVSZWRYVyKGludmrZUyUmVdXJuLCBpbmlaWFsURhdGUpOxufVxuXGvKipcbiAqIEBwYXJhbSBaWwbJKCcuLluZGVJykuUmVkdWNlcjxhbnksIGFueTIHJlZHVjZXJcbiAqIEBwYXJhbSBaWwbJKCcuLluZGVJykuURhdGVVcGRhdGVyPGFueTIGluaXRpYWxTdGFZVxuICogQHBhcmFtIHsoaWpdGlhbFNYXRlOiBhbnkpID+IHZvaWRIFtpbmlXVxuICogQHJldHVybnMgesgYWLCAocRhdGUIGFueSkgPTgdmpZCBdfVxuICovXGleHBvcnQgZnVuYRpbgdXNlUmVkdWNlcihyZWRYVyLCBpbmlaWFsURhdGUsIGluaXQpIHtcblxLyoqIEBeXBlIHtpbXBvcnQoJyvaWZXJuYWwnKSSZWRYVySGvaNYXRlfSAqLxuXHRjbzdCBobrURhdGUgPSBnZXRIbrURhdGUoYVycmVudEluZGVKyssIDIpOxuXHRobrURhdGUuXJlZHVjZXIgPSByZWRYVyOxuXHRpZiAoIWhvbtTdGFZSfYtcGuZWKSBXGcdFxaGvaNYXRlLlYWxZSAIFtcblxXHRcdCFpbmlIDgaWbtlTJSZXRcmodWkZWZpbmVkLCBpbmlaWFsURhdGUpIDogaWpdChpbmlaWFsURhdGUpLFxuXGcdFxXHRhYRpbgPTgexuXHRcdFxXHRjbzdCBuZXhVmFsdWUgPSBobrURhdGUuXJlZHVjZXIoaGvaNYXRlLlYWxZVswXSwgYWNaWuKTtcblxXHRcdFxaWYgKGhvbtTdGFZSfdmFsdWVbMFgITIGleHRWYWxZSkgexuXHRcdFxXHRcdGhvbtTdGFZSfdmFsdWUgPSBbbmVdFZhbHVlLCBobrURhdGUuXZhbHVlWzFdXTtcblxXHRcdFxXHRobrURhdGUuXNvbXBvbmVudCzZXRTdGFZShfSkXGcdFxXHRcdHcblxXHRcdHcblxXHRdOxuXGcdFxaGvaNYXRlLljbwblbnQgPSBjdXJyZWQtcGuZWOxuXHRXGcblxcmVdXJuIGhvbtTdGFZSfdmFsdWUXGXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSFZmZlYRIGNhbGxiYWNrXGgKiBAcGFyYWgeFueVtdfSBhcmdzXGgKicbmVcGydCBmdWjdGlvbiBcVFZmZlYQoYFsbGJhYssIGFyZMpIHtcblxLyoqIEBeXBlIHtpbXBvcnQoJyvaWZXJuYWwnKSFZmZlYRIbrURhdGVICovXGcdGNvbnNIHNYXRlIDgZVSGvaNYXRlKGNcnJlbnRJbmRleCsrLCAzKTtcblxaWYgKCFvcHRpbzLlzalwRWZmZWNcyAmJiBhcmdzQhhbmdlZChzdGFZSfYXJncywgYXJncykpIHtcblxXHRzdGFZSfdmFsdWUgPSBjYWxsYmFjaztcblxXHRzdGFZSfYXJncyAIGFyZMXGcblxXHRjdXJyZWQtcGuZWLlfaGvaMuXBlbmRpbmdFZmZlYRzLnBcgocRhdGUpOxuXHRXGXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSFZmZlYRIGNhbGxiYWNrXGgKiBAcGFyYWgeFueVtdfSBhcmdzXGgKicbmVcGydCBmdWjdGlvbiBcVMYXlvdXRFZmZlYQoYFsbGJhYssIGFyZMpIHtcblxLyoqIEBeXBlIHtpbXBvcnQoJyvaWZXJuYWwnKSFZmZlYRIbrURhdGVICovXGcdGNvbnNIHNYXRlIDgZVSGvaNYXRlKGNcnJlbnRJbmRleCsrLCAKTtcblxaWYgKCFvcHRpbzLlzalwRWZmZWNcyAmJiBhcmdzQhhbmdlZChzdGFZSfYXJncywgYXJncykpIHtcblxXHRzdGFZSfdmFsdWUgPSBjYWxsYmFjaztcblxXHRzdGFZSfYXJncyAIGFyZMXGcblxXHRjdXJyZWQtcGuZWLlyZWkZXJDYWxsYmFjaMucHVzaChzdGFZSkXGcdHcbncblxuZXhwbJIGZbmNaWuIHVzZVJlZihpbmlaWFsVmFsdWUpIHtcblxYVycmVudEhvbsgPSAOxuXHRyZXRcmgdXNlTWVtbygoKSAPiAoeyBjdXJyZWOiBpbmlaWFsVmFsdWUgfSksIFtdKTtcbncblxuLyoqXGgKiBAcGFyYWgeiamVjdHgcmVmXGgKiBAcGFyYWgeygpID+IGiamVjdHgYJlYXRlSGFuZGxlXGgKiBAcGFyYWgeFueVtdfSBhcmdzXGgKicbmVcGydCBmdWjdGlvbiBcVJbXBlcmFaXZlSGFuZGxlKHJlZiwgYJlYXRlSGFuZGxlLCBhcmdzKSBXGcdGNcnJlbnRIbrIDgNjtcblxdXNlTGFbVRWZmZWNKFxuXHRcdCgpID+IHtcblxXHRcdGlmICheXBlbYgcmVmIDICdmdWjdGlvbicpIHtcblxXHRcdFxcmVmKGNyZWFZUhhbmRsZSgpKTtcblxXHRcdFxcmVdXJuICgpID+IHJlZihudWxsKTtcblxXHRcdHgZWxzZSBpZiAocmVmKSBXGcdFxXHRcdHJlZijdXJyZWIDgYJlYXRlSGFuZGxlKCkXGcdFxXHRcdHJldHVybiAoKSAPiAocmVmLmNcnJlbnQgPSBudWxsKTtcblxXHRcdHcblxXHRLFxuXHRcdGFyZMgPTgbnVsbCA/IGFyZMgOiBhcmdzLmNvbmNhdChyZWYpXGcdCkXGXGcbiqKlxuICogQHBhcmFtIHsoKSAPiBhbnlIGZhYRvcnlcbiAqIEBwYXJhbSBYWWIGFyZNcbiAqLxuZXhwbJIGZbmNaWuIHVzZUlbWoZmFjdGyeSwgYXJncykgexuXHQvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLklbWIbrURhdGVICovXGcdGNvbnNIHNYXRlIDgZVSGvaNYXRlKGNcnJlbnRJbmRleCsrLCAKTtcblxaWYgKGFyZNDaGFuZVkKHNYXRlLlhcmdzLCBhcmdzKSkgexuXHRcdHNYXRlLlYWxZSAIGZhYRvcnkoKTtcblxXHRzdGFZSfYXJncyAIGFyZMXGcdFxcRhdGUuXZhYRvcnkgPSBmYWNbJOxuXHRXGcblxcmVdXJuIHNYXRlLlYWxZTtcbncblxuLyoqXGgKiBAcGFyYWgeygpID+IHZvaWRIGNhbGxiYWNrXGgKiBAcGFyYWgeFueVtdfSBhcmdzXGgKicbmVcGydCBmdWjdGlvbiBcVDYWxsYmFjayhjYWxsYmFjaywgYXJncykgexuXHRjdXJyZWSGvayAIDgXGcdHJldHVybiBcVNZWvKCgpID+IGNhbGxiYWNrLCBhcmdzKTtcbncblxuLyoqXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLlByZWFjdENvbnRleHRIGNvbnRleHRcbiAqLxuZXhwbJIGZbmNaWuIHVzZUNvbnRleHQoYudGVdCkgexuXHRjbzdCBwcmaWRlciAIGNcnJlbnRDbwblbnQuYudGVdFtjbZXhLlpZFXGcdCvIFdlIGNvdWxkIHNraXAgdGhpcyBjYWxsIGhlcmUsIGJdCBaGFuIHdlJQgbmIGNhbGxcblxLygYGwdGlvbnMuXhvbtgLiBXZSBuZWVkIHRvIGRvIHRoYXQgaWgbJkZXIgdGgbWFrZVxuXHQvLyBaGUgZGVdGvbHMgYXdhcmUgbYgdGhpcyBobrLlxuXHQvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkNvbnRleHRIbrURhdGVICovXGcdGNvbnNIHNYXRlIDgZVSGvaNYXRlKGNcnJlbnRJbmRleCsrLCAKTtcblxLygVGhlIGRldnRvbxzIGlZWRzIGFjYVzcyBbyBaGUgYudGVdCBvYmplYQgdGcblxLygYmUgYWJsZSBbyBwdWxsIGmIHRoZSBkZWZhdWxIHZhbHVlIHdoZWgbmgcHJvdmlkZXJcblxLygaXMgcHJlcVudCBpbiBaGUgdHJlZScblxcRhdGUuXNvbnRleHQgPSBjbZXhOxuXHRpZiAoIXBybZpZGVyKSByZXRcmgYudGVdCfZGVmYXVsdFZhbHVlOxuXHQvLyBUaGlzIGlzIHBybJhYmxIGvdCBzYWZlIHRvIGNvbnZlcnQgdGgXCIhXCJcblxaWYgKHNYXRlLlYWxZSAPSBudWxsKSBXGcdFxcRhdGUuXZhbHVlIDgdHJZTtcblxXHRwcmaWRlcizdWIoYVycmVudENvbXBvbmVudCkXGcdHcblxcmVdXJuIHBybZpZGVyLnBybBzLnZhbHVlOxufVxuXGvKipcbiAqIERpcBsYXkgYSBjdXNbgbGFiZWwgZmyIGEgYVzdGtIGhvbsgZmyIHRoZSBkZXZbscyBwYWlbFxuICogQHRcGUgezxUPihYWxZTogVCwgYI/OiAodmFsdWUIFQpID+IHNcmluZyBIGbWJlcikgPTgdmpZHcbiAqLxuZXhwbJIGZbmNaWuIHVzZURlYnVnVmFsdWUodmFsdWUsIGZvcmhdHRlcikgexuXHRpZiAobBaWucycVEZWJZZhbHVlKSBXGcdFxbBaWucycVEZWJZZhbHVlKGZvcmhdHRlciA/IGZvcmhdHRlcihYWxZSkgOiBYWxZSkXGcdHcbncblxuLyoqXGgKiBAcGFyYWgeyhlcnJvcjogYWKSAPiBblkfSBjYlxuICovXGleHBvcnQgZnVuYRpbgdXNlRXJybJCbVuZGFyeShjYikgexuXHQvKiogQHRcGUgeltcGydCgnLipbnRlcmhbCcpLkVycmyQmbmRhcnlIbrURhdGVICovXGcdGNvbnNIHNYXRlIDgZVSGvaNYXRlKGNcnJlbnRJbmRleCsrLCAxMCkXGcdGNvbnNIGVyclNYXRlIDgdXNlURhdGUoKTtcblxcRhdGUuXZhbHVlIDgYIXGcdGlmICghYVycmVudENvbXBvbmVudCjbwblbnREaWRDYXRjaCkgexuXHRcdGNcnJlbnRDbwblbnQuYtcGuZWRGlkQFYggPSBlcnIgPTgexuXHRcdFxaWYgKHNYXRlLlYWxZSkgcRhdGUuXZhbHVlKGVycikXGcdFxXHRlcnJTdGFZVsxXShlcnIpOxuXHRcdHXGcdHcblxcmVdXJuIFtcblxXHRlcnJTdGFZVswXSxcblxXHQoKSAPiBXGcdFxXHRlcnJTdGFZVsxXShbmRlZmluZWQpOxuXHRcdHcblxXTtcbncblxuLyoqXGgKiBBZnRlciBwYWludCBlZmZlYRzIGNvbnNbWVyLlxuICovXGmdWjdGlvbiBmbHVzaEFmdGVyUGFpbnRFZmZlYRzKCkgexuXHRsZXQgYtcGuZWOxuXHRaGlsZSAoKGNvbXBvbmVudCAIGFmdGVyUGFpbnRFZmZlYRzLnNoaWZKCkpKSBXGcdFxaWYgKCFjbwblbnQuXBhcmVudERvbSkgYudGludWUXGcdFxdHJIHtcblxXHRcdGNvbXBvbmVudCfXhvbtzLlwZWkaWnRWZmZWNcymbJFYWNoKGludmrZUNsZWFudXApOxuXHRcdFxYtcGuZWLlfaGvaMuXBlbmRpbmdFZmZlYRzLmZvckVhYgoaWbtlRWZmZWNKTtcblxXHRcdGNvbXBvbmVudCfXhvbtzLlwZWkaWnRWZmZWNcyAIFtdOxuXHRcdHgYFYggKGUpIHtcblxXHRcdGNvbXBvbmVudCfXhvbtzLlwZWkaWnRWZmZWNcyAIFtdOxuXHRcdFxbBaWucyfYFYhFcnJvcihlLCBjbwblbnQuXZubRlKTtcblxXHRXGcdHcbncblxubGVIEhBUSQUYgPSBeXBlbYgcmVxdWVzdEFuaWhdGlvbkZyYWlIDICdmdWjdGlvbicXGcbiqKlxuICogUNoZWRbGUgYSBjYWxsYmFjayBbyBiZSBpbnZvaVkIGFmdGVyIHRoZSBicmcVyIGhhcyBhIGNoYWjZSBbyBwYWludCBhIGldyBmcmFtZScbiAqIERvIHRoaXMgYnkgYtYmluaWnIHJlcXVlcRBbmltYXRpbGcmFtZSAockFGKSArIHNldFRpbWVvdXQgdGgaWbtlIGEgYFsbGJhYsgYWZZXJcbiAqIHRoZSBuZXhIGJybdzZXIgZnJhbWUuXGgKlxuICogQWxzbywgcNoZWRbGUgYSBaWlbVIGluIHBhcmFsbGVsIHRvIHRoZSBaGUgckFGIHRvIGVucVyZSBaGUgYFsbGJhYsgaXMgaWbtlZFxuICogZXZlbiBpZiBSQUYgZGlcndCBmaXJlIChmbIgZXhhbXBsZSBpZiBaGUgYnJvdNlciBYWIgaXMgbmIHZpclibGUpXGgKlxuICogQHBhcmFtIHsoKSAPiBblkfSBjYWxsYmFjaxuICovXGmdWjdGlvbiBhZnRlckleHRGcmFtZShjYWxsYmFjaykgexuXHRjbzdCBkblIDgKCkgPTgexuXHRcdGNsZWFyVGltZWdChaWlbVKTtcblxXHRpZiAoSEFTXJBRikgYFuYVsQWpbWFaWuRnJhbWUocmFmKTtcblxXHRzZXRUaWlbVKGNhbGxiYWNrKTtcblxfTtcblxYucQgdGltZWdCAIHNldFRpbWVvdXQoZGuZSwgUkFGXRJTUVPVVQpOxuXGcdGxldCByYWYXGcdGlmIChIQVNfUkFGKSBXGcdFxcmFmIDgcmVxdWVzdEFuaWhdGlvbkZyYWlKGRvbmUpOxuXHRXGXGcbivIEvdGUIGlmIHNvbWVvbmUgdXNlZCBvcHRpbzLmRlYmbmNlUmVuZGVyaWnIDgcmVxdWVzdEFuaWhdGlvbkZyYWlLFxuLygdGhlbiBlZmZlYRzIHdpbGwgQUxXQVlTIHJbiBvbiBaGUgTkVYVCBmcmFtZSBpbnNZWFkIGmIHRoZSBjdXJyZWIGuZSwgaWjdXJyaWnIGEgfjEbXMgZGVsYXkuXGvLyBQZXJoYXBzIHRoaXMgaXMgbmIHNYggYSBiaWcgZGVhbCcbiqKlxuICogUNoZWRbGUgYWZZXJQYWludEVmZmVjdHMgZmxcggYWZZXIgdGhlIGJybdzZXIgcGFpbnRzXGgKiBAcGFyYWgebWJlcngbmVUXVldWVMZWndGhcbiAqLxuZnVuYRpbgYWZZXJQYWludChuZXdRdWVZUxlbmdaCkgexuXHRpZiAobmVUXVldWVMZWndGggPTIDEgfHwgcHJldlJhZiAhPTgbBaWucyyZXFZXNQWpbWFaWuRnJhbWUpIHtcblxXHRwcmVUmFmIDgbBaWucyyZXFZXNQWpbWFaWuRnJhbWUXGcdFxKHByZXZSYWYgfHwgYWZZXJOZXhRnJhbWUpKGZsdXNoQWZZXJQYWludEVmZmVjdHMpOxuXHRXGXGcbiqKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSFZmZlYRIbrURhdGVIGhvbtcbiAqLxuZnVuYRpbgaWbtlQxlYWcChobrKSBXGcdCvIEEgaGvayBjbGVhbnVwIGNhbiBpbnRybRYUgYSBjYWxsIHRvIHJlbmRlciBaGljaCBjcmVhdGVzIGEgbmVIHJvbQsIHRoaXMgdlsbCBjYWxsIGwdGlvbnMudmvZGVcblxLygYWkIGvdmUgdGhlIGNcnJlbnRDbwblbnQgYXdheScblxYucQgYtcCAIGNcnJlbnRDbwblbnQXGcdGxldCBjbGVhbnVwIDgaGvayfYxlYWcDtcblxaWYgKHRcGVvZiBjbGVhbnVwIDICdmdWjdGlvbicpIHtcblxXHRobrLljbGVhbnVwIDgdWkZWZpbmVkOxuXHRcdGNsZWFudXAoKTtcblxfVxuXHRjdXJyZWQtcGuZWIDgYtcDtcbncblxuLyoqXGgKiBJbnZvaUgYSBIbrJMgZWZmZWNXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLkVmZmVjdEhvbtTdGFZXgaGvaxuICovXGmdWjdGlvbiBpbnZvaVFZmZlYQoaGvaykgexuXHQvLyBBIGhvbsgYFsbCBjYWgaWcmkdWNlIGEgYFsbCBbyByZWkZXIgdhpYggYJlYXRlcyBhIGldyBybLCBaGlzIHdpbGwgYFsbCBvcHRpbzLnZubRlXGcdCvIGFuZCBtbZlIHRoZSBjdXJyZWQtcGuZWIGFYXkuXGcdGNvbnNIGNvbXAgPSBjdXJyZWQtcGuZWOxuXHRobrLljbGVhbnVwIDgaGvayfdmFsdWUoKTtcblxYVycmVudENvbXBvbmVudCAIGNvbXAXGXGcbiqKlxuICogQHBhcmFtIHthbnlbXXgbxkQXJncxuICogQHBhcmFtIHthbnlbXXgbmVQXJncxuICovXGmdWjdGlvbiBhcmdzQhhbmdlZChvbGRBcmdzLCBuZXdBcmdzKSBXGcdHJldHVybiAoXGcdFxIWsZEFyZMgfHxcblxXHRvbGRBcmdzLmxlbmdaCAhPTgbmVQXJncysZWndGggfHxcblxXHRuZXdBcmdzLnNvbWUoKGFyZywgaWkZXgpID+IGFyZyAhPTgbxkQXJnctpbmRleFpXGcdCkXGXGcbmZbmNaWuIGludmrZUyUmVdXJuKGFyZywgZikgexuXHRyZXRcmgdHlwZWmIGYgPTgJZbmNaWuJyA/IGYoYXJnKSAIGYXGXGiLCAiLyoqXGgKiBBcNpZgcHJvcGVydGllcyBmcmtIGBwcmwcAgdGgYGiamBcbiAqIEBZWwbGFZSBPLCBQIFRoZSBvYmogYWkIHBybBzIHRcGVzXGgKiBAcGFyYWgeIGiaiBUaGUgbJqZWNIHRvIGNvcHkgcHJvcGVydGllcyBbxuICogQHBhcmFtIHtQfSBwcmwcyBUaGUgbJqZWNIHRvIGNvcHkgcHJvcGVydGllcyBmcmtXGgKiBAcmVdXJucyBTyAmIFBXGgKicbmVcGydCBmdWjdGlvbiBhcNpZobJqLCBwcmwcykgexuXHRmbIgKGxldCBpIGluIHBybBzKSBvYmpbaVgPSBwcmwctpXTtcblxcmVdXJuICqKiBAdHlwZSBTyAmIFBICovIChvYmopOxufVxuXGvKipcbiAqIENoZWNrIGlmIHRbyBvYmplYRzIGhhdmUgYSBkaWZmZXJlbnQgchhcGVcbiAqIEBwYXJhbSBbJqZWNfSBhXGgKiBAcGFyYWgeiamVjdHgYlxuICogQHJldHVybnMgeJvbxlYWXGgKicbmVcGydCBmdWjdGlvbiBzaGFsbGRGlmZmVycyhhLCBiKSBXGcdGZvciAobGVIGkgaWgYSkgaWYgKGkgITICdfXNvdXJjZScgJiYgIShpIGluIGIpKSByZXRcmgdHJZTtcblxZmyIChsZXQgaSBpbiBiKSBpZiAoaSAhPTgJfccmNlJyAmJiBhWldICEPSBiWldKSByZXRcmgdHJZTtcblxcmVdXJuIGZhbHNlOxufVxuXGleHBvcnQgZnVuYRpbgcmVtbZlTmkZShubRlKSBXGcdGxldCBwYXJlbnRObRlIDgbmkZSwYXJlbnRObRlOxuXHRpZiAocGFyZWTmkZSkgcGFyZWTmkZSyZWvdmVDaGlsZChubRlKTtcbncbiIsICJpbXBvcnQgeyBDbwblbnQgfSBmcmtICdwcmVhYQnOxuaWwbJIHsgchhbGxvdRpZmZlcnMgfSBmcmtICcuLVaWwnOxuXGvKipcbiAqIENvbXBvbmVudCBjbGFzcyBaXRoIGEgcHJlZGVmaWlZCBgchvdWxkQtcGuZWVXBkYXRlYCBpbXBsZWlbnRhdGlvblxuICovXGleHBvcnQgZnVuYRpbgUHVyZUNvbXBvbmVudChwKSBXGcdHRoaXMucHJvcHMgPSBwOxufVxuUHVyZUNvbXBvbmVudCwcmbRcGUgPSBuZXcgQtcGuZWKCkXGvLyBTblIHRoaXJkLXBhcnRIGxpYnJhcmllcyBjaGVjayBpZiBaGlzIHBybBlcnRIGlzIHByZXNlbnRcblBcmVDbwblbnQucHJvdGeXBlLmlzUHVyZVJlYWNQtcGuZWIDgdHJZTtcblBcmVDbwblbnQucHJvdGeXBlLnNobVsZENvbXBvbmVudFVwZGFZSAIGZbmNaWuKHBybBzLCBzdGFZSkgexuXHRyZXRcmgchhbGxvdRpZmZlcnModGhpcywcmwcywgcHJvcHMpIHxIHNoYWxsbdEaWZmZXJzKHRoaXMucRhdGUsIHNYXRlKTtcbnXGiLCAiaWwbJIHsgYJlYXRlRWxlbWVudCBIGZybgJByZWFjdCcXGpbXBvcnQgeyBzaGFsbGRGlmZmVycyBIGZybgJyvdXRpbCcXGcbiqKlxuICogTWVtblZSBhIGNvbXBvbmVudCwgcgdGhhdCBpdCBvbmxIHVwZGFZXMgdhlbiBaGUgcHJvcHMgYWNdWFsbHkgaGFZVxuICogYhhbmdlZCgVGhpcyBYXMgcHJldmlvdXNseSBrbmbiBhcyBgUmVhYQucHVyZWAuXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLkZbmNaWuQtcGuZWfSBjIGZbmNaWuYWwgYtcGuZWXGgKiBAcGFyYWgeyhwcmVOiBvYmplYQsIGleHQIGiamVjdCkgPTgYmvbGVhbngWNvbXBhcmVyXSBDdXNbgZXFYWxpdHkgZnVuYRpbcbiAqIEByZXRcmzIHtpbXBvcnQoJyvaWZXJuYWwnKSGdWjdGlvbkNvbXBvbmVudHcbiAqLxuZXhwbJIGZbmNaWuIGlbWoYywgYtcGFyZXIpIHtcblxZnVuYRpbgchvdWxkVXBkYXRlKGleHRQcmwcykgexuXHRcdGxldCByZWYgPSBaGlzLnBybBzLnJlZjtcblxXHRsZXQgdXBkYXRlUmVmIDgcmVmIDIGleHRQcmwcyyZWYXGcdFxaWYgKCFcGRhdGVSZWYgJiYgcmVmKSBXGcdFxXHRyZWYuYFsbCA/IHJlZihudWxsKSAIChyZWYuYVycmVudCAIGbGwpOxuXHRcdHcblxuXHRcdGlmICghYtcGFyZXIpIHtcblxXHRcdHJldHVybiBzaGFsbGRGlmZmVycyhaGlzLnBybBzLCBuZXhUHJvcHMpOxuXHRcdHcblxuXHRcdHJldHVybiAhYtcGFyZXIodGhpcywcmwcywgbmVdFBybBzKSBfCAhdXBkYXRlUmVmOxuXHRXGcblxZnVuYRpbgTWVtbVkKHBybBzKSBXGcdFxdGhpcyzaGbGRDbwblbnRVcGRhdGUgPSBzaGbGRVcGRhdGUXGcdFxcmVdXJuIGNyZWFZUVsZWlbnQoYywgcHJvcHMpOxuXHRXGcdElbWlZCkaXNwbGFTmFtZSAICdNZWvKCcgKyAoYykaXNwbGFTmFtZSBfCBjLmhbWUpICsgJyknOxuXHRNZWvZWQucHJvdGeXBlLmlzUmVhYRDbwblbnQgPSBcnVlOxuXHRNZWvZWQuXZvcndhcmRlZCAIHRydWUXGcdHJldHVybiBNZWvZWQXGXGiLCAiaWwbJIHsgbBaWucyBIGZybgJByZWFjdCcXGpbXBvcnQgeyBhcNpZgfSBmcmtICcuLVaWwnOxuXGsZXQgbxkRGlmZkhvbsgPSBvcHRpbzLlkaWZmOxubBaWucyfZGlmZiAIHZubRlID+IHtcblxaWYgKHZubRlLnRcGUgJiYgdmvZGUudHlwZSfZmydFyZGVkICYmIHZubRlLnJlZikgexuXHRcdHZubRlLnBybBzLnJlZiAIHZubRlLnJlZjtcblxXHRbmkZSyZWYgPSBudWxsOxuXHRXGcdGlmIChvbGREaWZmSGvaykgbxkRGlmZkhvbsodmvZGUpOxufTtcblxuZXhwbJIGNvbnNIFJFQUNUXZPUldBUkRfUlNQkMIDcblxKHRcGVvZiBTeWibwgITgJVuZGVmaWlZCcgJiZcblxXHRTeWibwuZmyICYmXGcdFxUltYmsLmZvcigncmVhYQuZmydFyZFyZWYnKSkgfHxcblxMHhmNDcXGcbiqKlxuICogUGFzcyByZWYgZGbiBbyBhIGNoaWxkLiBUaGlzIGlzIGhaWseSBcVkIGluIGxpYnJhcmllcyBaXRoIEhPQMgdGhhdFxuICogdJhcCBjbwblbnRzLiBVcluZyBgZmydFyZFJlZmAgdGhlcmUgaXMgYWgZWFzeSBYXkgdGgZVIGEgcmVmZXJlbmNlXGgKiBvZiBaGUgdJhcHBlZCBjbwblbnQgaWzdGVhZCBvZiBvbmUgbYgdGhlIHdyYXBwZXIgaXRzZWxmLlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWkZXgnKSGbJYXJkRmIGZuXGgKiBAcmVdXJucyBaWwbJKCcuLludGVybmFsJykuRnVuYRpbDbwblbnRXGgKicbmVcGydCBmdWjdGlvbiBmbJYXJkUmVmKGZuKSBXGcdGZbmNaWuIEZvcndhcmRlZChwcmwcykgexuXHRcdGxldCBjbGuZSAIGFzclnbihfSwgcHJvcHMpOxuXHRcdGRlbGVZSBjbGuZSyZWYXGcdFxcmVdXJuIGZuKGNsblLCBwcmwcyyZWYgfHwgbnVsbCkXGcdHcblxuXHQvLyBtbJLXJlYWNIGNoZWNrcyBmbIgdGhpcyBiZWluZyBwcmVzZWXGcdEZvcndhcmRlZCkJHRcGVvZiAIFJFQUNUXZPUldBUkRfUlNQkMOxuXHQvLyBtbJLXJlYWNIGhlYXZpbHkgcmVsaWVzIGuIGltcGxlbWVudGFaWuIGRldGFpbHMuXGcdCvIElIGVcGVjdHMgYWgbJqZWNIGhlcmUgdlaCBhIGByZWkZXJgIHBybBlcnRLFxuXHQvLyBhbmQgcHJvdGeXBlLnJlbmRlciBaWxsIGZhaWwuIFdpdGhvdXQgdGhpcxuXHQvLyBtbJLXJlYWNIHRocmcycblxRmydFyZGVkLnJlbmRlciAIEZvcndhcmRlZDtcblxuXHRGbJYXJkZWQucHJvdGeXBlLmlzUmVhYRDbwblbnQgPSBGbJYXJkZWQuXZvcndhcmRlZCAIHRydWUXGcdEZvcndhcmRlZCkaXNwbGFTmFtZSAICdGbJYXJkUmVmKCcgKyAoZmuZGlzcGxheUhbWUgfHwgZmubmFtZSkgKyAnKScXGcdHJldHVybiBGbJYXJkZWQXGXGiLCAiaWwbJIHsgdGDaGlsZEFycmFIHgZnJvbSAncHJlYWNJztcblxuYucQgbWFwRmgPSAoYhpbGRyZWsIGZuKSAPiBXGcdGlmIChjaGlsZHJlbiAPSBudWxsKSByZXRcmgbnVsbDtcblxcmVdXJuIHRvQhpbGRBcnJheShbNoaWxkQXJyYXkoYhpbGRyZWpLmhcChmbikpOxufTtcblxuLygVGhpcyBBUEkgaXMgYtcGxldGVseSBbmlYVzcFyeSBmbIgUHJlYWNLCBzbyBpdCdzIGJhcljYWxseSBwYXNzdGhybVnaCcbmVcGydCBjbzdCBDaGlsZHJlbiAIHtcblxbWFwOiBtYXBGbixcblxZmyRWFjaDogbWFwRmsXGcdGNvdWKGNoaWxkcmVuKSBXGcdFxcmVdXJuIGNoaWxkcmVuIDgdGDaGlsZEFycmFKGNoaWxkcmVuKSsZWndGggOiAwOxuXHRLFxuXHRvbmxKGNoaWxkcmVuKSBXGcdFxYucQgbmybWFsaXplZCAIHRvQhpbGRBcnJheShjaGlsZHJlbikXGcdFxaWYgKGvcmhbGlZWQubGVuZRoICEPSAxKSBaHJvdyAnQhpbGRyZWubseScXGcdFxcmVdXJuIGvcmhbGlZWRbMFXGcdHsXGcdHRvQXJyYXkIHRvQhpbGRBcnJheVxufTtcbiIsICJpbXBvcnQgeyBDbwblbnQsIGNyZWFZUVsZWlbnQsIGwdGlvbnMsIEZyYWdtZWIHgZnJvbSAncHJlYWNJztcbmltcGydCBIGFzclnbiBIGZybgJyvdXRpbCcXGcbmNvbnNIGsZENhdGNoRXJybIgPSBvcHRpbzLljYXRjaEVycmyOxubBaWucyfYFYhFcnJvciAIGZbmNaWuKGVycmyLCBuZXdWTmkZSwgbxkVkvZGUsIGVycmySWmbykgexuXHRpZiAoZXJybIudGhlbikgexuXHRcdCqKiBAdHlwZSBaWwbJKCcuLludGVybmFsJykuQtcGuZWfSAqLxuXHRcdGxldCBjbwblbnQXGcdFxbGVIHZubRlIDgbmVVkvZGUXGcblxXHRmbIgKDsgKHZubRlIDgdmvZGUuXBhcmVudCkICkgexuXHRcdFxaWYgKChjbwblbnQgPSBbmkZSfYtcGuZWKSAmJiBjbwblbnQuXNoaWxkRGlkUVzcGVuZCkgexuXHRcdFxXHRpZiAobmVVkvZGUuXRvbSAPSBudWxsKSBXGcdFxXHRcdFxbmVVkvZGUuXRvbSAIGsZFZObRlLlkbXGcdFxXHRcdFxbmVVkvZGUuXNoaWxkcmVuIDgbxkVkvZGUuXNoaWxkcmVuOxuXHRcdFxXHRXGcdFxXHRcdCvIERvbidIGNhbGwgbxkQFYhFcnJvciBpZiBZSBmbVuZCBhIFNcBlbnNlXGcdFxXHRcdHJldHVybiBjbwblbnQuXNoaWxkRGlkUVzcGVuZChlcnJvciwgbmVVkvZGUpOxuXHRcdFxfVxuXHRcdHcblxfVxuXHRvbGRDYXRjaEVycmyKGVycmyLCBuZXdWTmkZSwgbxkVkvZGUsIGVycmySWmbykXGOxuXGjbzdCBvbGRVbmvdWIDgbBaWucybmvdWOxubBaWucybmvdWIDgZnVuYRpbodmvZGUpIHtcblxLyoqIEBeXBlIHtpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnRICovXGcdGNvbnNIGNvbXBvbmVudCAIHZubRlLljbwblbnQXGcdGlmIChjbwblbnQgJiYgYtcGuZWLlvblJlcsdmUpIHtcblxXHRjbwblbnQuXuUmVzbxZSgpOxuXHRXGcblxLygaWYgdGhlIGNvbXBvbmVudCBpcyBzdGlsbCBoeWRyYXRpbmdcblxLygbWzdCBsaWtlbHkgaXQgaXMgYmVjYXVzZSBaGUgYtcGuZWIGlzIHNcBlbmRlZFxuXHQvLyBZSBzZXQgdGhlIHZubRlLnRcGUgYXMgYGbGxgIHNvIHRoYXQgaXQgaXMgbmIGEgdHlwZWmIGZbmNaWuXGcdCvIHNvIHRoZSBbmvdWIHdpbGwgcmVtbZlIHRoZSBbmkZSfZGtXGcdGlmIChjbwblbnQgJiYgdmvZGUuXhZHJhdGluZyAPTgdHJZSkgexuXHRcdHZubRlLnRcGUgPSBudWxsOxuXHRXGcblxaWYgKGsZFVubWbnQpIGsZFVubWbnQodmvZGUpOxufTtcblxuZnVuYRpbgZGVYWNoZWRDbGuZShbmkZSwgZGVYWNoZWRQYXJlbnQsIHBhcmVudERvbSkgexuXHRpZiAodmvZGUpIHtcblxXHRpZiAodmvZGUuXNvbXBvbmVudCAmJiBbmkZSfYtcGuZWLlfaGvaMpIHtcblxXHRcdHZubRlLljbwblbnQuXobrcyfbGlzdCmbJFYWNoKGVmZmVjdCAPiBXGcdFxXHRcdGlmICheXBlbYgZWZmZWNLljbGVhbnVwIDICdmdWjdGlvbicpIGVmZmVjdCfYxlYWcCgpOxuXHRcdFxfSkXGcblxXHRcdHZubRlLljbwblbnQuXobrcyAIGbGwXGcdFxfVxuXGcdFxdmvZGUgPSBhcNpZoesIHZubRlKTtcblxXHRpZiAodmvZGUuXNvbXBvbmVudCAhPSBudWxsKSBXGcdFxXHRpZiAodmvZGUuXNvbXBvbmVudCfcGFyZWRGtIDPSBwYXJlbnREbpIHtcblxXHRcdFxdmvZGUuXNvbXBvbmVudCfcGFyZWRGtIDgZGVYWNoZWRQYXJlbnQXGcdFxXHRXGcdFxXHRbmkZSfYtcGuZWIDgbnVsbDtcblxXHRXGcblxXHRbmkZSfYhpbGRyZWgPVxuXHRcdFxdmvZGUuXNoaWxkcmVuICYmXGcdFxXHRbmkZSfYhpbGRyZWubWFwKGNoaWxkID+XGcdFxXHRcdGRldGFjaGVkQxvbmUoYhpbGQsIGRldGFjaGVkUGFyZWLCBwYXJlbnREbpXGcdFxXHQpOxuXHRXGcblxcmVdXJuIHZubRlOxufVxuXGmdWjdGlvbiByZWvdmVPcmlnaWhbChbmkZSwgZGVYWNoZWRQYXJlbnQsIGyaWdpbmFsUGFyZWKSBXGcdGlmIChbmkZSkgexuXHRcdHZubRlLlvcmlnaWhbCAIGbGwXGcdFxdmvZGUuXNoaWxkcmVuIDcblxXHRcdHZubRlLljaGlsZHJlbiAmJlxuXHRcdFxdmvZGUuXNoaWxkcmVuLmhcChjaGlsZCAPlxuXHRcdFxXHRyZWvdmVPcmlnaWhbChjaGlsZCwgZGVYWNoZWRQYXJlbnQsIGyaWdpbmFsUGFyZWKVxuXHRcdFxKTtcblxuXHRcdGlmIChbmkZSfYtcGuZWKSBXGcdFxXHRpZiAodmvZGUuXNvbXBvbmVudCfcGFyZWRGtIDPSBkZXRhYhlZFBhcmVudCkgexuXHRcdFxXHRpZiAodmvZGUuXRvbSkgexuXHRcdFxXHRcdGyaWdpbmFsUGFyZWLmlucVydEJlZmyZShbmkZSfZGtLCBbmkZSfbmVdERvbSkXGcdFxXHRcdHcblxXHRcdFxdmvZGUuXNvbXBvbmVudCfZmyYUgPSBcnVlOxuXHRcdFxXHRbmkZSfYtcGuZWLlwYXJlbnREbgPSBvcmlnaWhbFBhcmVudDtcblxXHRcdHcblxXHRXGcdHcblxuXHRyZXRcmgdmvZGUXGXGcbivIGhhdmluZyBjdXNbgaWoZXJpdGFuYUgaWzdGVhZCBvZiBhIGNsYXNzIGhlcmUgcFZXMgYSBsbQgbYgYnlZXNcbmVcGydCBmdWjdGlvbiBTdXNwZWzZSgpIHtcblxLygdUgZGgbmIGNhbGwgcVwZXIgaGVyZSBbyBnbxmIHNvbWUgYnlZXMuLicblxdGhpcyfcGVuZGluZNcBlbnNpbDbVudCAIDAXGcdHRoaXMuXNcBlbmRlcnMgPSBudWxsOxuXHRaGlzLlkZXRhYhPbkleHRSZWkZXIgPSBudWxsOxufVxuXGvLyBUaGluZMgdUgZGgaGVyZSBbyBzYXZlIHNvbWUgYnlZXMgYnVIGFyZSBubQgcHJvcGVyIEpTIGluaGVyaXRhbmNlOlxuLygLSBjYWxsIGBuZXcgQtcGuZWKClgIGFzIHRoZSBwcmbRcGVcbivICgZGgbmIHNldCBgUVzcGVucUucHJvdGeXBlLmNvbnNcnVjdGyYCBbyBgUVzcGVucVgXGTdXNwZWzZSwcmbRcGUgPSBuZXcgQtcGuZWKCkXGcbiqKlxuICogQHRoaXMgeltcGydCgnLipbnRlcmhbCcpLlNcBlbnNlQtcGuZWfVxuICogQHBhcmFtIHtQcmtaXNlfSBwcmtaXNlIFRoZSBaHJvdgcHJvbWlzZVxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZTxhbnksIGFueTIHNcBlbmRpbmdWTmkZSBUaGUgcVzcGVuZGluZyBjbwblbnRcbiAqLxuUVzcGVucUucHJvdGeXBlLljaGlsZERpZFNcBlbmQgPSBmdWjdGlvbihwcmtaXNlLCBzdXNwZWkaWnVkvZGUpIHtcblxYucQgcVzcGVuZGluZNvbXBvbmVudCAIHNcBlbmRpbmdWTmkZSfYtcGuZWOxuXGcdCqKiBAdHlwZSBaWwbJKCcuLludGVybmFsJykuUVzcGVucVDbwblbnRICovXGcdGNvbnNIGMgPSBaGlzOxuXGcdGlmIChjLlzdXNwZWkZXJzIDIGbGwpIHtcblxXHRjLlzdXNwZWkZXJzIDgWXGcdHcblxYyfcVzcGVuZGVycywdXNoKHNcBlbmRpbmdDbwblbnQpOxuXGcdGNvbnNIHJlcsdmUgPSBzdXNwZWkZWQoYyfdmvZGUpOxuXGcdGxldCByZXNvbHZlZCAIGZhbHNlOxuXHRjbzdCBvblJlcsdmVkIDgKCkgPTgexuXHRcdGlmIChyZXNvbHZlZCkgcmVdXJuOxuXGcdFxcmVzbxZWQgPSBcnVlOxuXHRcdHNcBlbmRpbmdDbwblbnQuXuUmVzbxZSAIGbGwXGcblxXHRpZiAocmVzbxZSkgexuXHRcdFxcmVzbxZShvblNcBlbnNpbDbwbGVZSkXGcdFxfSBlbHNlIHtcblxXHRcdGuUVzcGVuclvbkNvbXBsZXRlKCkXGcdFxfVxuXHROxuXGcdHNcBlbmRpbmdDbwblbnQuXuUmVzbxZSAIGuUmVzbxZWQXGcblxYucQgbTdXNwZWzaWuQtcGxldGUgPSAoKSAPiBXGcdFxaWYgKCEtLWMuXBlbmRpbmdTdXNwZWzaWuQbnQpIHtcblxXHRcdCvIElmIHRoZSBzdXNwZWzaWuIHdhcyBkdXJpbmcgaHlkcmFaWuIHdlIGRvbidIGlZWQgdGgcmVzdGyZSBaGVcblxXHRcdCvIHNcBlbmRlZCBjaGlsZHJlbiBpbnRvIHRoZSBfYhpbGRyZWgYXJyYXlcblxXHRcdGlmIChjLnNYXRlLlzdXNwZWkZWQpIHtcblxXHRcdFxYucQgcVzcGVuZGVkVkvZGUgPSBjLnNYXRlLlzdXNwZWkZWQXGcdFxXHRcdGMuXZubRlLljaGlsZHJlblswXSAIHJlbWZUyaWdpbmFsKFxuXHRcdFxXHRcdHNcBlbmRlZFZObRlLFxuXHRcdFxXHRcdHNcBlbmRlZFZObRlLljbwblbnQuXBhcmVudERvbSxcblxXHRcdFxXHRzdXNwZWkZWRWTmkZSfYtcGuZWLlvcmlnaWhbFBhcmVudERvbVxuXHRcdFxXHQpOxuXHRcdFxfVxuXGcdFxXHRjLnNldFNYXRlKHsgXNcBlbmRlZDogKGMuXRldGFjaEuTmVdFJlbmRlciAIGbGwpIHpOxuXGcdFxXHRsZXQgcVzcGVuZGVkOxuXHRcdFxdhpbGUgKChzdXNwZWkZWQgPSBjLlzdXNwZWkZXJzLnBvcCgpKSkgexuXHRcdFxXHRzdXNwZWkZWQuZmyYVVcGRhdGUoKTtcblxXHRcdHcblxXHRXGcdHXGcblxLyoqXGcdCAqIFdlIGRvIGvdCBzZXQgYHNcBlbmRlZDogdHJZWAgZHVyaWnIGhZHJhdGlvbiBiZWNhdXNlIHdlIHdhbnQgdGhlIGFjdHVhbCBtYXJrdXBcblxICogdGgcmVtYWluIGuIHNjcmVlbiBhbmQgaHlkcmFZSBpdCBaGVuIHRoZSBzdXNwZWzZSBhYRYWxseSBnZXRzIHJlcsdmVkLlxuXHQgKiBXaGlsZSBpbiBubtaHlkcmFaWuIGNhcVzIHRoZSBcVhbCBmYWxsYmFjayAtPiBjbwblbnQgZmxvdyBbVsZCBvYNvdXIuXGcdCAqLxuXHRjbzdCBYXNIeWRyYXRpbmcgPSBzdXNwZWkaWnVkvZGUuXhZHJhdGluZyAPTgdHJZTtcblxaWYgKCFjLlwZWkaWnUVzcGVuclvbkNvdWKysgJiYgIXdhchZHJhdGluZykgexuXHRcdGMucVURhdGUoeyBfcVzcGVuZGVkOiAoYyfZGVYWNoTOZXhUmVuZGVyIDgYyfdmvZGUuXNoaWxkcmVuWzBdKSBKTtcblxfVxuXHRwcmtaXNlLnRoZWobSZXNvbHZlZCwgbSZXNvbHZlZCkXGOxuXGTdXNwZWzZSwcmbRcGUuYtcGuZWVlsbFVubWbnQgPSBmdWjdGlvbigpIHtcblxdGhpcyfcVzcGVuZGVycyAIFtdOxufTtcblxuLyoqXGgKiBAdGhpcyBaWwbJKCcuLludGVybmFsJykuUVzcGVucVDbwblbnRXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLlNcBlbnNlQtcGuZWWwicHJvcHNcIlIHBybBzXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLlNcBlbnNlURhdGVIHNYXRlXGgKicblNcBlbnNlLnBybRvdHlwZSyZWkZXIgPSBmdWjdGlvbihwcmwcywgcRhdGUpIHtcblxaWYgKHRoaXMuXRldGFjaEuTmVdFJlbmRlcikgexuXHRcdCvIFdoZWgdGhlIFNcBlbnNlJMgXZubRlIHdhcyBjcmVhdGVkIGJIGEgYFsbCBbyBjcmVhdGVWTmkZVxuXHRcdCvIChpLmUuIGRZSBbyBhIHNldFNYXRlIGZcnRoZXIgdXAgaWgdGhlIHRyZWUpXGcdFxLygaXQncyBfYhpbGRyZWgcHJvcCBpcyBudWxsLCBpbiBaGlzIGNhcUgdUgXCJmbJnZXRcIiBhYmdCBaGUgcGFyaVkIHZubRlcyBbyBkZXRhYhcblxXHRpZiAodGhpcyfdmvZGUuXNoaWxkcmVuKSBXGcdFxXHRjbzdCBkZXRhYhlZFBhcmVudCAIGRvYVtZWLmNyZWFZUVsZWlbnQoJRpdicpOxuXHRcdFxYucQgZGVYWNoZWRDbwblbnQgPSBaGlzLlbmkZSfYhpbGRyZWbMFuXNvbXBvbmVudDtcblxXHRcdHRoaXMuXZubRlLljaGlsZHJlblswXSAIGRldGFjaGVkQxvbmUoXGcdFxXHRcdHRoaXMuXRldGFjaEuTmVdFJlbmRlcixcblxXHRcdFxZGVYWNoZWRQYXJlbnQsXGcdFxXHRcdChkZXRhYhlZENvbXBvbmVudCfbJpZluYWxQYXJlbnREbgPSBkZXRhYhlZENvbXBvbmVudCfcGFyZWRGtKVxuXHRcdFxKTtcblxXHRXGcblxXHRaGlzLlkZXRhYhPbkleHRSZWkZXIgPSBudWxsOxuXHRXGcblxLygVJhcCBmYWxsYmFjayBcmVlIGluIGEgVkvZGUgdGhhdCBwcmVZWcyBpdHNlbGYgZnJvbSBiZWluZyBtYXJrZWQgYXMgYWJvcnRpbmcgbWlkLWhZHJhdGlvbjpcblxLyoqIEBeXBlIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZXgKicblxYucQgZmFsbGJhYsgPVxuXHRcdHNYXRlLlzdXNwZWkZWQgJiYgYJlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgcHJvcHMuZmFsbGJhYspOxuXHRpZiAoZmFsbGJhYspIGZhbGxiYWNrLloeWRyYXRpbmcgPSBudWxsOxuXGcdHJldHVybiBbXGcdFxYJlYXRlRWxlbWVudChGcmFnbWVudCwgbnVsbCwgcRhdGUuXNcBlbmRlZCA/IGbGwgOiBwcmwcyjaGlsZHJlbiksXGcdFxZmFsbGJhYtcblxXTtcbnXGcbiqKlxuICogQhlYtzIGFuZCBjYWxscyBaGUgcGFyZWIGNvbXBvbmVudCdzIFzdXNwZWkZWQgbWVaGkLCBwYXNzaWnIGluIHRoZVxuICogcVzcGVuZGVkIHZubRlLiBUaGlzIGlzIGEgdFIGZvciBhIHBhcmVudCAoZSnLiBTdXNwZWzZUxpcQpIHRvIGdldCBubRpZmllZFxuICogdGhhdCBvbmUgbYgaXRzIGNoaWxkcmVuLRlcNlbmRhbnRzIHNcBlbmRlZCcbiAqXGgKiBUaGUgcGFyZWIEBWSByZXRcmgYSBjYWxsYmFjaygVGhlIGNhbGxiYWNrIHdpbGwgZVIGNhbGxlZCBaGVuIHRoZVxuICogcVzcGVuclvbiByZXNvbHZlcywgbmaWZaWnIHRoZSBwYXJlbnQgbYgdGhlIGZhYQuXGgKiBNbJlbZlciwgdGhlIGNhbGxiYWNrIGdldHMgZnVuYRpbgYHVucVzcGVuZGAgYXMgYSBwYXJhbWVZXIuIFRoZSByZXNvbHZlZFxuICogYhpbGQgZGVzYVuZGFudCBaWxsIGvdCBhYRYWxseSBnZXQgdWzdXNwZWkZWQgdWaWwgYHVucVzcGVuZGAgZVcyBjYWxsZWQuXGgKiBUaGlzIGlzIGEgdFIGZvciBaGUgcGFyZWIHRvIGRlbGFIHVucVzcGVuZGluZycbiAqXGgKiBJZiBaGUgcGFyZWIGRvZXMgbmIHJldHVybiBhIGNhbGxiYWNrIHRoZWgdGhlIHJlcsdmVkIHZubRlXGgKiBnZXRzIHVucVzcGVuZGVkIGltbWVkaWFZWxIHdoZWgaXQgcmVzbxZXMuXGgKlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZXgdmvZGVcbiAqIEByZXRcmzIHsoKHVucVzcGVuZDogKCkgPTgdmpZCkgPTgdmpZCk/fVxuICovXGleHBvcnQgZnVuYRpbgcVzcGVuZGVkKHZubRlKSBXGcdCqKiBAdHlwZSBaWwbJKCcuLludGVybmFsJykuQtcGuZWfSAqLxuXHRsZXQgYtcGuZWIDgdmvZGUuXBhcmVudCfYtcGuZWOxuXHRyZXRcmgYtcGuZWICYmIGNvbXBvbmVudCfcVzcGVuZGVkICYmIGNvbXBvbmVudCfcVzcGVuZGVkKHZubRlKTtcbncblxuZXhwbJIGZbmNaWuIGxhenkobGhZGVyKSBXGcdGxldCBwcmtOxuXHRsZXQgYtcGuZWOxuXHRsZXQgZXJybIXGcblxZnVuYRpbgTGFeShwcmwcykgexuXHRcdGlmICghcHJvbSkgexuXHRcdFxcHJvbSAIGxvYWRlcigpOxuXHRcdFxcHJvbSaGVuKFxuXHRcdFxXHRleHBvcnRzID+IHtcblxXHRcdFxXHRjbwblbnQgPSBleHBvcnRzLmRlZmFbHQgfHwgZXhwbJcztcblxXHRcdFxfSxcblxXHRcdFxZSAPiBXGcdFxXHRcdFxZXJybIgPSBlOxuXHRcdFxXHRXGcdFxXHQpOxuXHRcdHcblxuXHRcdGlmIChlcnJvcikgexuXHRcdFxdGhybcgZXJybIXGcdFxfVxuXGcdFxaWYgKCFjbwblbnQpIHtcblxXHRcdHRocmIHBybXGcdFxfVxuXGcdFxcmVdXJuIGNyZWFZUVsZWlbnQoYtcGuZWLCBwcmwcykXGcdHcblxuXHRMYXpLmRpcBsYXlOYWlIDgJxhenknOxuXHRMYXpLlmbJYXJkZWQgPSBcnVlOxuXHRyZXRcmgTGFeTtcbncbiIsICJpbXBvcnQgeyBDbwblbnQsIHRvQhpbGRBcnJheSBIGZybgJByZWFjdCcXGpbXBvcnQgeyBzdXNwZWkZWQgfSBmcmtICcuLNcBlbnNlLmpzJztcblxuLygSWkZXhlcyBbyBsaWrZWQgbGlzdCBubRlcyAobmkZXMgYXJlIHNbJlZCBhcyBhcnJheXMgdGgcFZSBieXRlcykuXGjbzdCBTVVNQRUERURfQVTlQgPSAwOxuYucQgUkVTTxWRURfQVTlQgPSAxOxuYucQgTkVYVFOTRFIDgMjtcblxuLygSGFaWnIGNcRvbSBpbmhlcmlYWjZSBpbnNZWFkIGmIGEgYxhcMgaGVyZSBzYXZlcyBhIGxvdCBvZiBieXRlcycbmVcGydCBmdWjdGlvbiBTdXNwZWzZUxpcQoKSBXGcdHRoaXMuXleHQgPSBudWxsOxuXHRaGlzLltYXAgPSBudWxsOxufVxuXGvLyBNYXJrIGuZSBvZiBjaGlsZCdzIGVhcmxpZXIgcVzcGVuclvbnMgYXMgcmVzbxZWQuXGvLyBTblIHBlbmRpbmcgYFsbGJhYtzIGheSBiZWNvbWUgYFsbGFibGUgZHVlIHRvIHRoaXNcbivIChlLmcuIHRoZSBsYXNIHNcBlbmRlZCBkZXNjZWkYWIGdldHMgcmVzbxZWQgdhlblxuLygcmVZWFsTJkZXIgPTICdbdldGhlcicpLiBQcmjZXNzIHRobNlIGNhbGxiYWNrcyBhcyBZWxsLlxuYucQgcmVzbxZSAIChsaXNLCBjaGlsZCwgbmkZSkgPTgexuXHRpZiAoKytubRlWJFUMVkVEXNPVUUXSAPTgbmkZVtTVVNQRUERURfQVTlRdKSBXGcdFxLygVGhlIGbWJlciBhIGNoaWxkIChvciBhbnkgbYgaXRzIGRlcNlbmRhbnRzKSBoYXMgYmVlbiBzdXNwZWkZWRcblxXHQvLyBtYXRjaGVzIHRoZSBudWiZXIgbYgdGltZXMgaXQncyBiZWVuIHJlcsdmVkLiBUaGVyZWZvcmUgdVcblxXHQvLyBtYXJrIHRoZSBjaGlsZCBhcyBjbwbGVZWxIHJlcsdmVkIGJIGRlbGVaWnIGlIGZybgLltYXAuXGcdFxLygVGhpcyBpcyBcVkIHRvIGZpZVyZSBvdXQgdhlbiAqYWxsKiBjaGlsZHJlbiBoYXZlIGJlZWgYtcGxldGVseVxuXHRcdCvIHJlcsdmVkIHdoZWgcmVZWFsTJkZXIgaXMgJRvZVaGVyJycblxXHRsaXNLltYXAuZGVsZXRlKGNoaWxkKTtcblxfVxuXGcdCvIElmIHJldmVhbEyZGVyIGlzIGZhbHNIHRoZWgdUgYFuIGRvIGFuIGVhcmxIGVaXQsIGFzIHRoZVxuXHQvLyBjYWxsYmFjaMgduJQgZVIHFZXVlZCBpbiBaGUgbmkZSBhbnlYXkuXGcdCvIElmIHJldmVhbEyZGVyIGlzICdbdldGhlcicgdGhlbiBhbHNvIGRvIGFuIGVhcmxIGVaXRcblxLygaWYgYWxsIHNcBlbmRlZCBkZXNjZWkYWcyBoYXZlIGvdCBZXQgYmVlbiByZXNvbHZlZCcblxaWYgKFxuXHRcdCFsaXNLnBybBzLnJldmVhbEyZGVyIHxXGcdFxKGxpcQucHJvcHMucmVZWFsTJkZXJbMFgPTICdJyAmJiBsaXNLltYXAuclZSlcblxKSBXGcdFxcmVdXJuOxuXHRXGcblxLygVFsayBaGUgYVycmVudGxIHNcBlbmRlZCBjaGlsZHJlbiBpbiBvcmRlciwgYFsbGluZyBaGVpclxuXHQvLyBzdGyZWQgYFsbGJhYtzIGuIHRoZSBYXkuIFNbAgaWYgdUgZWjbVudGVyIGEgYhpbGQgdGhhdFxuXHQvLyBoYXMgbmIGJlZWgYtcGxldGVseSByZXNvbHZlZCBZXQuXGcdGvZGUgPSBsaXNLluZXhOxuXHRaGlsZSAobmkZSkgexuXHRcdHdoaWxlIChubRlLmxlbmdaCA+IDMpIHtcblxXHRcdGvZGUucGwKCkoKTtcblxXHRXGcdFxaWYgKGvZGVbUkVTTxWRURfQVTlRdIDwgbmkZVtTVVNQRUERURfQVTlRdKSBXGcdFxXHRicmVhaztcblxXHRXGcdFxbGlzdCfbmVdCAIGvZGUgPSBubRlWFWFRfTkERVXGcdHcbnXGcbivIFRoaWncyBZSBkbyBoZXJlIHRvIHNhdmUgctZSBieXRlcyBidXQgYXJlIGvdCBwcmwZXIgSlMgaWoZXJpdGFuYUXGvLyAtIGNhbGwgYGldyBDbwblbnQoKWAgYXMgdGhlIHBybRvdHlwZVxuLygLSBkbyBubQgcVIGBTdXNwZWzZSwcmbRcGUuYucRydWNbJgIHRvIGBTdXNwZWzZWBcblNcBlbnNlTGlzdCwcmbRcGUgPSBuZXcgQtcGuZWKCkXGcblNcBlbnNlTGlzdCwcmbRcGUuXNcBlbmRlZCAIGZbmNaWuKGNoaWxkKSBXGcdGNvbnNIGxpcQgPSBaGlzOxuXHRjbzdCBkZWxlZFZWQgPSBzdXNwZWkZWQobGlzdCfdmvZGUpOxuXGcdGxldCBubRlIDgbGlzdCfbWFwLmdldChjaGlsZCkXGcdGvZGVbUVTUEVOREVEXNPVUUXSsrOxuXGcdHJldHVybiBbnNcBlbmQgPTgexuXHRcdGNvbnNIHdyYXBwZWRVbnNcBlbmQgPSAoKSAPiBXGcdFxXHRpZiAoIWxpcQucHJvcHMucmVZWFsTJkZXIpIHtcblxXHRcdFxLygUBlYlhbCBjYXNlIHRoZSBbmRlZmluZWQgKGZhbHNKSByZXZlYWxPcmRlciwgYXMgdGhlcmVcblxXHRcdFxLygaXMgbmgbmVlZCBbyBjbyZGluYXRlIGEgcBlYlmaWMgbJkZXIgbIgdWzdXNwZWkcycblxXHRcdFxdWzdXNwZWkKCkXGcdFxXHRIGVscUgexuXHRcdFxXHRubRlLnBcgodWzdXNwZWkKTtcblxXHRcdFxcmVzbxZShsaXNLCBjaGlsZCwgbmkZSkXGcdFxXHRXGcdFxfTtcblxXHRpZiAoZGVsZWdhdGVkKSBXGcdFxXHRkZWxlZFZWQodJhcHBlZFVucVzcGVuZCkXGcdFxfSBlbHNlIHtcblxXHRcdHdyYXBwZWRVbnNcBlbmQoKTtcblxXHRXGcdHXGOxuXGTdXNwZWzZUxpcQucHJvdGeXBlLnJlbmRlciAIGZbmNaWuKHBybBzKSBXGcdHRoaXMuXleHQgPSBudWxsOxuXHRaGlzLltYXAgPSBuZXcgTWFwKCkXGcblxYucQgYhpbGRyZWgPSBbNoaWxkQXJyYXkocHJvcHMuYhpbGRyZWpOxuXHRpZiAocHJvcHMucmVZWFsTJkZXIgJiYgcHJvcHMucmVZWFsTJkZXJbMFgPTICdiJykgexuXHRcdCvIElmIGyZGVyIDPSAnYmFjadhcmRzJyAobIsIHdlbGwsIGFueXRoaWnIHNYXJaWnIHdpdGggYSAnYicpXGcdFxLygdGhlbiBmbGlwIHRoZSBjaGlsZCBsaXNIGFybVuZCBzbyBaGFIHRoZSBsYXNIGNoaWxkIHdpbGwgYmVcblxXHQvLyBaGUgZmlycQgaWgdGhlIGxpbmtlZCBsaXNLlxuXHRcdGNoaWxkcmVuLnJldmVycUoKTtcblxfVxuXHQvLyBCdWlsZCBaGUgbGluaVkIGxpcQuIElZXJhdGUgdGhybVnaCBaGUgYhpbGRyZWgaWgcmVZXJzZSBvcmRlclxuXHQvLyBzbyBaGFIGBfbmVdGAgcGpbnRzIHRvIHRoZSBmaXJzdCBsaWrZWQgbGlzdCBubRlIHRvIGJlIHJlcsdmVkLlxuXHRmbIgKGxldCBpIDgYhpbGRyZWubGVuZRoOyBpLSICkgexuXHRcdCvIENyZWFZSBhIGldyBsaWrZWQgbGlzdCBubRlIGFzIGFuIGFycmFIGmIGZvcmXGcdFxLygXHRbcVzcGVuZGVkXNvdWLCByZXNvbHZlZFjbVudCwgbmVdFubRlXVxuXHRcdCvIHdoZXJlIHNcBlbmRlZFjbVudCBhbmQgcmVzbxZWRfYbnQgYXJlIGbWVyaWMgYbnRlcnMgZmyXGcdFxLygaVlcGluZyBcmFjayBobcgbWFueSBaWlcyBhIGvZGUgaGFzIGJlZWgcVzcGVuZGVkIGFuZCByZXNvbHZlZCcblxXHQvLxuXHRcdCvIEvdGUgdGhhdCBzdXNwZWkZWRfYbnQgcRhcnRzIGZybgMSBpbnNZWFkIGmIDAsIHNvIHdlIGNhbiBibGjaxuXHRcdCvIHBybNlcNpbmcgYFsbGJhYtzIHVudGlsIGNvbXBvbmVudERpZEvdWIGhhcyBiZWVuIGNhbGxlZCgSWgYSBzZWzZVxuXHRcdCvIGvZGUgaXMgcVzcGVuZGVkIGFIGxlYXNIHVudGlsIGNvbXBvbmVudERpZEvdWIGdldHMgYFsbGVkIVxuXHRcdCvXGcdFxLygUGVuZGluZyBjYWxsYmFjaMgYXJlIGFkZGVkIHRvIHRoZSBlbmQgbYgdGhlIGvZGUXGcdFxLygXHRbcVzcGVuZGVkXNvdWLCByZXNvbHZlZFjbVudCwgbmVdFubRlLCBjYWxsYmFjawLCBjYWxsYmFjaxLCAuLidXGcdFxdGhpcyfbWFwLnNldChjaGlsZHJlbltpXSwgKHRoaXMuXleHQgPSBbMSwgMCwgdGhpcyfbmVdFpKTtcblxfVxuXHRyZXRcmgcHJvcHMuYhpbGRyZWXGOxuXGTdXNwZWzZUxpcQucHJvdGeXBlLmNvbXBvbmVudERpZFVwZGFZSAIFNcBlbnNlTGlzdCwcmbRcGUuYtcGuZWRGlkTWbnQgPSBmdWjdGlvbigpIHtcblxLygSXRlcmFZSBaHJvdWdoIGFsbCBjaGlsZHJlbiBhZnRlciBtbVudGluZyBmbIgdHdvIHJlYXNvbnMXGcdCvIDEuIEFzIGVhYggbmkZVtTVVNQRUERURfQVTlRdIHNYXJcyBmcmtIDEsIHRoaXMgaXRlcmFaWuIGluYJlYXNlcxuXHQvLyAgICBlYWNoIGvZGVbUkVMRUFTRURfQVTlRdIGJIDEsIHRoZXJlZmyZSBiYWxhbmNpbmcgdGhlIGNvdWZXJzLlxuXHQvLyAgICBUaGUgbmkZXMgYFuIGvdyBiZSBjbwbGVZWxIGNvbnNbWVkIGZybgdGhlIGxpbmtlZCBsaXNLlxuXHQvLyAyLiBIYWkbGUgbmkZXMgdGhhdCBtaWdodCBoYXZlIGdvdHRlbiByZXNvbHZlZCBiZXRZWVuIHJlbmRlciBhbmRcblxLygICAgYtcGuZWRGlkTWbnQuXGcdHRoaXMuXhcCmbJFYWNoKChubRlLCBjaGlsZCkgPTgexuXHRcdHJlcsdmUodGhpcywgYhpbGQsIGvZGUpOxuXHRKTtcbnXGiLCAiaWwbJIHsgYJlYXRlRWxlbWVudCwgcmVuZGVyIHgZnJvbSAncHJlYWNJztcblxuLyoqXGgKiBAcGFyYWgeltcGydCgnLivLivcJjLluZGVJykuUmVuZGVyYWJsZVBybBzPHsgYudGVdDogYWIH+fSBwcmwcxuICovXGmdWjdGlvbiBDbZXhUHJvdmlkZXIocHJvcHMpIHtcblxdGhpcynZXRDaGlsZENvbnRleHQgPSAoKSAPiBwcmwcyjbZXhOxuXHRyZXRcmgcHJvcHMuYhpbGRyZWXGXGcbiqKlxuICogUGydGFsIGNvbXBvbmVudFxuICogQHRoaXMgeltcGydCgnLipbnRlcmhbCcpLkNvbXBvbmVudHcbiAqIEBwYXJhbSBbJqZWNIHwgbnVsbCBIHVuZGVmaWlZHgcHJvcHNcbiAqXGgKiBUTRPOiBcUgYJlYXRlUmvdCgpIGlucRlYWQgbYgZmFrZSBybXGgKicbmZbmNaWuIFBvcnRhbChwcmwcykgexuXHRjbzdCBfdGhpcyAIHRoaXMXGcdGxldCBjbYWluZXIgPSBwcmwcyfYudGFpbmVyOxuXGcdFaGlzLmNvbXBvbmVudFdpbGxVbmvdWIDgZnVuYRpboKSBXGcdFxcmVuZGVyKGbGwsIFaGlzLlZWwKTtcblxXHRfdGhpcyfdGVtcCAIGbGwXGcdFxXRoaXMuXNvbnRhaWlciAIGbGwXGcdHXGcblxLygVhlbiBZSBjaGFuZUgYudGFpbmVyIHdlIHNobVsZCBjbGVhciBvdXIgbxkIGNvbnRhaWlciBhbmRcblxLygaWkaWNhdGUgYSBuZXcgbWbnQuXGcdGlmIChfdGhpcyfYudGFpbmVyICYmIFaGlzLljbYWluZXIgITIGNvbnRhaWlcikgexuXHRcdFaGlzLmNvbXBvbmVudFdpbGxVbmvdWKCkXGcdHcblxuXHQvLyBXaGVuIHBybBzLnZubRlIGlzIHVuZGVmaWlZCmYWxzZSudWxsIHdlIGFyZSBkZWFsaWnIHdpdGggctZSBraWkIGmXGcdCvIGNvbmRpdGlvbmFsIHZubRlLiBUaGlzIHNobVsZCBubQgdHJpZdlciBhIHJlbmRlcicblxaWYgKHBybBzLlbmkZSkgexuXHRcdGlmICghXRoaXMuXRlbXApIHtcblxXHRcdFaGlzLljbYWluZXIgPSBjbYWluZXIXGcblxXHRcdCvIENyZWFZSBhIGZhaUgRENIHBhcmVudCBubRlIHRoYXQgbWFuYWdlcyBhIHNYnNldCBvZiBgYudGFpbmVyYCdzIGNoaWxkcmVuOlxuXHRcdFxXRoaXMuXRlbXAgPSBXGcdFxXHRcdGvZGVUeXBlOiAxLFxuXHRcdFxXHRwYXJlbnRObRlOiBjbYWluZXIsXGcdFxXHRcdGNoaWxkTmkZXMIFtdLFxuXHRcdFxXHRhcHBlbmRDaGlsZChjaGlsZCkgexuXHRcdFxXHRcdHRoaXMuYhpbGRObRlcywdXNoKGNoaWxkKTtcblxXHRcdFxXHRfdGhpcyfYudGFpbmVyLmFwcGVuZENoaWxkKGNoaWxkKTtcblxXHRcdFxfSxcblxXHRcdFxaWzZXJQmVmbJlKGNoaWxkLCBiZWZvcmUpIHtcblxXHRcdFxXHRaGlzLmNoaWxkTmkZXMucHVzaChjaGlsZCkXGcdFxXHRcdFxXRoaXMuXNvbnRhaWlcihcHBlbmRDaGlsZChjaGlsZCkXGcdFxXHRcdHsXGcdFxXHRcdHJlbWZUNoaWxkKGNoaWxkKSBXGcdFxXHRcdFxdGhpcyjaGlsZEvZGVzLnNwbGljZShaGlzLmNoaWxkTmkZXMuaWkZXhPZihjaGlsZCkgPj+IDEsIDEpOxuXHRcdFxXHRcdFaGlzLljbYWluZXIucmVtbZlQhpbGQoYhpbGQpOxuXHRcdFxXHRXGcdFxXHROxuXHRcdHcblxuXHRcdCvIFJlbmRlciBvdXIgdJhcHBpbmcgZWxlbWVudCBpbnRvIHRlbXAuXGcdFxcmVuZGVyKFxuXHRcdFxYJlYXRlRWxlbWVudChDbZXhUHJvdmlkZXIsIHsgYudGVdDogXRoaXMuYudGVdCBLCBwcmwcyfdmvZGUpLFxuXHRcdFxXRoaXMuXRlbXBcblxXHQpOxuXHRXGcdCvIFdoZWgdUgYtZSBmcmtIGEgYuZGlaWuYWwgcmVuZGVyLCBvbiBhIGvdWZWRcblxLygcGydGFsIHdlIHNobVsZCBjbGVhciBaGUgRENLlxuXHRlbHNlIGlmIChfdGhpcyfdGVtcCkgexuXHRcdFaGlzLmNvbXBvbmVudFdpbGxVbmvdWKCkXGcdHcbncblxuLyoqXGgKiBDcmVhdGUgYSBgUGydGFsYCBbyBjbaWZSByZWkZXJpbmcgdGhlIHZubRlIHRyZWUgYXQgYSBkaWZmZXJlbnQgRENIGvZGVcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuVkvZGVIHZubRlIFRoZSBbmkZSBbyByZWkZXJcbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuUHJlYWNRWxlbWVudHgYudGFpbmVyIFRoZSBETgbmkZSBbyBjbaWZSByZWkZXJpbmcgaWgdGuXGgKicbmVcGydCBmdWjdGlvbiBjcmVhdGVQbJYWwodmvZGUsIGNvbnRhaWlcikgexuXHRjbzdCBlbCAIGNyZWFZUVsZWlbnQoUGydGFsLCBIFbmkZTogdmvZGUsIFjbYWluZXIIGNvbnRhaWlciBKTtcblxZWwuYudGFpbmVySWmbyAIGNvbnRhaWlcjtcblxcmVdXJuIGVsOxufVxuIiwgImltcGydCBXGcdHJlbmRlciBhcyBwcmVhYRSZWkZXIsXGcdGhZHJhdGUgYXMgcHJlYWNSHlkcmFZSxcblxbBaWucyxcblxdGDaGlsZEFycmFLFxuXHRDbwblbnRcbngZnJvbSAncHJlYWNJztcblxuZXhwbJIGNvbnNIFJFQUNUXVMRUFTlRfVFlQRSAXGcdCheXBlbYgUltYmsICEICdbmRlZmluZWQnICYmIFNbWJvbCmbIgJiYgUltYmsLmZvcigncmVhYQuZWxlbWVudCcpKSBfFxuXHQweGVhYzcXGcbmNvbnNIENBTUVMXBSTBTIDgLoPzphYNlbnRYWxpZtZWfGFyYWJpYxiYXNlbGluZXxjYXBYxpcCg/IVBhdGhVKXxjbxvcnxkbpbmFudHxmaWxsfGZsbkfGZvbnRZxcGgoPyFSKXxobJpenxtYXJrZXIoPyFIfFdVSlbZlcmxpbmVcGFpbnRcRvcHxzdHJpaVaHJvdWdofHNcmrZXxZXhKDhTCldWkZXJsaWlfHVuaWNvZGVdWpdHNdnxZWNbJdmVydHxbJkfHdyaXRpbmdeCg/IUMpKVtBLVpdLztcblxuYucQgSVNfRENIDgdHlwZWmIGRvYVtZWICEPSAndWkZWZpbmVkJztcblxuLygSWwdXQgdHlwZXMgZmyIHdoaWNoIGuYhhbmdlIHNobVsZCBubQgYmUgYudmVydGVkIHRvIGuaWwdXQuXGvLyBeXBlPVwiZmlsZXxjaGVjaJveHxyYWRpbwiLCBwbHVzIFwicmFuZVcIiBpbiBJRTExLlxuLygKElFMTEgZGlcndCBzdXBwbJIFNbWJvbCwgdhpYggdUgdXNlIGhlcmUgdGgdHVybiBgcmFkYCBpbnRvIGByYWAgdhpYggbWFYhlcyBcInJhbmdlXCIpXGjbzdCBvbkNoYWnZUlucHVVHlwZSAIHRcGUgPTcblxKHRcGVvZiBTeWibwgITgJVuZGVmaWlZCcgJiYgdHlwZWmIFNbWJvbCgpIDICdzeWibwnXGcdFxPyAvZmlsfGNoZXxyYWQvaVxuXHRcdDogLZpbHxjaGVcmEvaVxuXHQpLnRlcQodHlwZSkXGcbivIFNvbWUgbGlicmFyaWVzIGxpaUgYHJlYWNLXZpcnRYWxpemVkYCBleHBsaWNpdGxIGNoZWNrIGZvciBaGlzLlxuQtcGuZWLnBybRvdHlwZSpcJlYWNQtcGuZWIDgeXGcbivIGBVTlNBRkVfKmAgbGlmZWNYxlIGhvbtzXGvLyBQcmVhYQgbseSBldmVyIGludmrZXMgdGhlIHVucHJlZmlZWQgbWVaGkcycbivIEhlcmUgdUgcHJvdmlkZSBhIGJhcUgXCJmYWxsYmFjawiIGltcGxlbWVudGFaWuIHRoYXQgYFsbHMgYWIGRlZmluZWQgVUTQUZFXyBwcmVmaXhlZCBtZXRobQuXGvLyAtIElmIGEgYtcGuZWIGRlZmluZXMgaXRzIGbiBgYtcGuZWRGlkTWbnQoKWAgKGluYxZGluZyBaWEgZGVmaWlUHJvcGVydHkpLCBcUgdGhhdCcbivICgSWYgYSBjbwblbnQgZGVmaWlcyBgVUTQUZFXNvbXBvbmVudERpZEvdWKClgLCBgYtcGuZWRGlkTWbnRgIGlzIHRoZSBhbGlhcyBnZXRZXIvcVdGVyLlxuLygLSBJZiBhbnlaGluZyBhcNpZzIHRvIGFuIGBVTlNBRkVfKmAgcHJvcGVydHksIHRoZSBhcNpZtZWIGlzIGZvcndhcmRlZCBbyBaGUgdWwcmVmaXhlZCBwcmwZXJeScbivIFNlZSBodHRwczovLdpdGhYijbvcHJlYWNanMvcHJlYWNLlzcVlcyxOTQxXGbXGcdCdjbwblbnRXaWxsTWbnQnLFxuXHQnYtcGuZWVlsbFJlYVpdmVQcmwcycsXGcdCdjbwblbnRXaWxsVXBkYXRlJxuXSmbJFYWNoKGtleSAPiBXGcdEiamVjdCkZWZpbmVQcmwZXJeShDbwblbnQucHJvdGeXBlLCBrZXksIHtcblxXHRjbmaWdcmFibGUIHRydWUsXGcdFxZVKCkgexuXHRcdFxcmVdXJuIHRoaXNbJVOUFGRVnICsgaVXTtcblxXHRLFxuXHRcdHNldChKSBXGcdFxXHRPYmplYQuZGVmaWlUHJvcGVydHkodGhpcywgaVLCBXGcdFxXHRcdGNvbmZpZVyYWJsZTogdHJZSxcblxXHRcdFxdJpdGFibGUIHRydWUsXGcdFxXHRcdHZhbHVlOiBXGcdFxXHRKTtcblxXHRXGcdHpOxufSkXGcbiqKlxuICogUHJveHkgcmVuZGVyKCkgcluYUgUmVhYQgcmVdXJucyBhIENvbXBvbmVudCByZWZlcmVuYUuXGgKiBAcGFyYWgeltcGydCgnLipbnRlcmhbCcpLlZObRlfSBbmkZSBWTmkZSBcmVlIHRvIHJlbmRlclxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSQcmVhYRFbGVtZWfSBwYXJlbnQgRENIGvZGUgdGgcmVuZGVyIHZubRlIHRyZWUgaWbxuICogQHBhcmFtIHsoKSAPiBblkfSBbYFsbGJhYtdIEwdGlvbmFsIGNhbGxiYWNrIHRoYXQgdlsbCBiZSBjYWxsZWQgYWZZXIgcmVuZGVyaWnXGgKiBAcmVdXJucyBaWwbJKCcuLludGVybmFsJykuQtcGuZWIHwgbnVsbHgVGhlIHJvbQgYtcGuZWIHJlZmVyZWjZSBvciBudWxsXGgKicbmVcGydCBmdWjdGlvbiByZWkZXIodmvZGUsIHBhcmVudCwgYFsbGJhYspIHtcblxLygUmVhYQgZGVzdHJveXMgYWIGVaXNaWnIERPTSBubRlcywgcVlICMxNzIXGcdCvICuLmJdCBvbmxIGuIHRoZSBmaXJzdCByZWkZXIsIHNlZSAjMTgyOFxuXHRpZiAocGFyZWLljaGlsZHJlbiAPSBudWxsKSBXGcdFxcGFyZWLnRleHRDbZWIDgJycXGcdHcblxuXHRwcmVhYRSZWkZXIodmvZGUsIHBhcmVudCkXGcdGlmICheXBlbYgYFsbGJhYsgPTgJZbmNaWuJykgYFsbGJhYsoKTtcblxuXHRyZXRcmgdmvZGUgPyBbmkZSfYtcGuZWIDogbnVsbDtcbncblxuZXhwbJIGZbmNaWuIGhZHJhdGUodmvZGUsIHBhcmVudCwgYFsbGJhYspIHtcblxcHJlYWNSHlkcmFZShbmkZSwgcGFyZWKTtcblxaWYgKHRcGVvZiBjYWxsYmFjayAPSAnZnVuYRpbnKSBjYWxsYmFjaygpOxuXGcdHJldHVybiBbmkZSA/IHZubRlLljbwblbnQgOiBudWxsOxufVxuXGsZXQgbxkRXZlbnRIbrIDgbBaWucyldmVudDtcbmwdGlvbnMuZXZlbnQgPSBlID+IHtcblxaWYgKGsZEVZWSGvaykgZSAIGsZEVZWSGvayhlKTtcblxZSwZXJzaXNIDgZWwdHkXGcdGUuaXNQcmwYWdhdGlvblNbBwZWQgPSBpcBybBhZFaWuURvcHBlZDtcblxZSpcRlZmFbHRQcmVZWZWQgPSBpcRlZmFbHRQcmVZWZWQXGcdHJldHVybiAoZSuYXRpdmVFdmVudCAIGUpOxufTtcblxuZnVuYRpbgZWwdHkoKSBfVxuXGmdWjdGlvbiBpcBybBhZFaWuURvcHBlZCgpIHtcblxcmVdXJuIHRoaXMuYFuYVsQnViYmxlOxufVxuXGmdWjdGlvbiBpcRlZmFbHRQcmVZWZWQoKSBXGcdHJldHVybiBaGlzLmRlZmFbHRQcmVZWZWQXGXGcbmxldCBjbGFzchbWVEZXNjcmlwdGyIDgexuXHRjbmaWdcmFibGUIHRydWUsXGcdGdldCgpIHtcblxXHRyZXRcmgdGhpcyjbGFzcztcblxfVxufTtcblxubGVIGsZFZObRlSGvayAIGwdGlvbnMudmvZGUXGvcHRpbzLnZubRlIDgdmvZGUgPTgexuXHRsZXQgdHlwZSAIHZubRlLnRcGUXGcdGxldCBwcmwcyAIHZubRlLnBybBzOxuXHRsZXQgbmybWFsaXplZFBybBzIDgcHJvcHMXGcblxLygbseSBubJtYWxpemUgcHJvcHMgbgRWxlbWVudCBubRlcxuXHRpZiAodHlwZWmIHRcGUgPTICdzdHJpbmcnKSBXGcdFxYucQgbmuQVzdGtRWxlbWVudCAIHRcGUuaWkZXhPZignLScpIDPSAtMTtcblxXHRubJtYWxpemVkUHJvcHMgPSBfTtcblxuXHRcdGZvciAobGVIGkgaWgcHJvcHMpIHtcblxXHRcdGxldCBYWxZSAIHBybBzWldOxuXGcdFxXHRpZiAoSVNfRENICYmIGkgPTICdjaGlsZHJlbicgJiYgdHlwZSAPTgJvcNyaXBJykgexuXHRcdFxXHQvLyBFbXVsYXRlIFJlYWNJMgYmVoYXZpbIgbYgbmIHJlbmRlcmluZyBaGUgYudGVudHMgbYgbmzYJpcHQgdGFncyBvbiBaGUgYxpZWLlxuXHRcdFxXHRjbaWZTtcblxXHRcdHgZWxzZSBpZiAoaSAPTgJZhbHVlJyAmJiAnZGVmYXVsdFZhbHVlJyBpbiBwcmwcyAmJiBYWxZSAPSBudWxsKSBXGcdFxXHRcdCvIFNraXAgYXBwbHlpbmcgdmFsdWUgaWYgaXQgaXMgbnVsbCbmRlZmluZWQgYWkIHdlIGFscmVhZHkgcVXGcdFxXHRcdCvIGEgZGVmYXVsdCBYWxZVxuXHRcdFxXHRjbaWZTtcblxXHRcdHgZWxzZSBpZiAoXGcdFxXHRcdGkgPTICdkZWZhdWxVmFsdWUnICYmXGcdFxXHRcdCdYWxZScgaWgcHJvcHMgJiZcblxXHRcdFxcHJvcHMudmFsdWUgPTgbnVsbFxuXHRcdFxKSBXGcdFxXHRcdCvIGBkZWZhdWxVmFsdWVgIGlzIHRyZWFZWQgYXMgYSBmYWxsYmFjayBgdmFsdWVgIHdoZWgYSBYWxZSBwcmwIGlzIHByZXNlbnQgYnVIGbGwvdWkZWZpbmVkLlxuXHRcdFxXHQvLyBgZGVmYXVsdFZhbHVlYCBmbIgRWxlbWVudHMgdlaCBubyBYWxZSBwcmwIGlzIHRoZSBzYWlIGFzIHRoZSBETgZGVmYXVsdFZhbHVlIHBybBlcnRLlxuXHRcdFxXHRpIDgJZhbHVlJztcblxXHRcdHgZWxzZSBpZiAoaSAPTgJRvdsbFkJyAmJiBYWxZSAPTgdHJZSkgexuXHRcdFxXHQvLyBDYWxsaWnIGBzZXRBdHRyaWJdGVgIHdpdGggYSBcnVaHkgdmFsdWUgdlsbCBsZWFkIHRvIGlIGJlaWnXGcdFxXHRcdCvIHBhcNlZCBhcyBhIHNcmluZlmaWVkIHZhbHVlLCBlLmcuIGBkbdubGhZDcInRydWVcImAuIFJlYWNXGcdFxXHRcdCvIGNvbnZlcnRzIGlIHRvIGFuIGVtcHRIHNcmluZyBpbnNZWFkLCBvdGhlcndpcUgdGhlIGFdHJpYnVZVxuXHRcdFxXHQvLyBYWxZSBaWxsIGJlIHVzZWQgYXMgdGhlIGZpbGUgbmFtZSBhbmQgdGhlIGZpbGUgdlsbCBiZSBjYWxsZWRcblxXHRcdFxLygXCJcnVlXCIgdXBvbiBkbdubGhZGluZyBpdCcblxXHRcdFxdmFsdWUgPSAnJztcblxXHRcdHgZWxzZSBpZiAoLuZGYmxlYxpYsvaSZXNKGkpKSBXGcdFxXHRcdGkgPSAnbkYmxjbGljaycXGcdFxXHRIGVscUgaWYgKFxuXHRcdFxXHQvXmuYhhbmdlKHRleHRhcmVhfGlucHVKSpLnRlcQoaSArIHRcGUpICYmXGcdFxXHRcdCFvbkNoYWnZUlucHVVHlwZShwcmwcyeXBlKVxuXHRcdFxKSBXGcdFxXHRcdGkgPSAnbpbnBdCcXGcdFxXHRIGVscUgaWYgKCebmbNcyQvaSZXNKGkpKSBXGcdFxXHRcdGkgPSAnbmbNcluJztcblxXHRcdHgZWxzZSBpZiAoLvbmJsdXIkLkudGVzdChpKSkgexuXHRcdFxXHRpIDgJuZmjdXNvdXQnOxuXHRcdFxfSBlbHNlIGlmICgvXmuKEFuaXxUcmFVGfEJlZmyZUlucHxDbwbykvLnRlcQoaSkpIHtcblxXHRcdFxaSAIGkudGMbdlckNhcUoKTtcblxXHRcdHgZWxzZSBpZiAobmuQVzdGtRWxlbWVudCAmJiBDQUFTFQUkQUyZXNKGkpKSBXGcdFxXHRcdGkgPSBpLnJlcGxhYUoLtBLVowLTldLywgJykJicpLnRvTGZXJDYXNlKCkXGcdFxXHRIGVscUgaWYgKHZhbHVlIDPSBudWxsKSBXGcdFxXHRcdHZhbHVlIDgdWkZWZpbmVkOxuXHRcdFxfVxuXGcdFxXHQvLyBBZGQgcVwcGydCBmbIgbJbnBdCBhbmQgbDaGFuZUsIHNlZSAjMzUMVxuXHRcdFxLygaWYgdUgaGFZSBhbiBvbmlucHVIHBybAgYWxyZWFkeSBjaGFuZUgaXQgdGgbpbnBdENhcHRcmVcblxXHRcdGlmICgvXmuaWwdXQvaSZXNKGkpKSBXGcdFxXHRcdGkgPSBpLnRvTGZXJDYXNlKCkXGcdFxXHRcdGlmIChubJtYWxpemVkUHJvcHNbaVpIHtcblxXHRcdFxXHRpIDgJuaWwdXRDYXBdXJlJztcblxXHRcdFxfVxuXHRcdFxfVxuXGcdFxXHRubJtYWxpemVkUHJvcHNbaVgPSBYWxZTtcblxXHRXGcblxXHQvLyBBZGQgcVwcGydCBmbIgYXJyYXkgcVsZWNIHZhbHVlczogPHNlbGVjdCBtdWxaXBsZSBYWxZTWIC+XGcdFxaWYgKFxuXHRcdFxdHlwZSAPSAncVsZWNJyAmJlxuXHRcdFxbmybWFsaXplZFBybBzLmbHRpcGxlICYmXGcdFxXHRBcnJheSpcFycmFKGvcmhbGlZWRQcmwcyYWxZSlcblxXHQpIHtcblxXHRcdCvIGZvckVhYgoKSBhbHdheXMgcmVdXJucyBbmRlZmluZWQsIHdoaWNoIHdlIGFidXNlIGhlcmUgdGgdWzZXQgdGhlIHZhbHVlIHBybAuXGcdFxXHRubJtYWxpemVkUHJvcHMudmFsdWUgPSBbNoaWxkQXJyYXkocHJvcHMuYhpbGRyZWpLmZvckVhYgoYhpbGQgPTgexuXHRcdFxXHRjaGlsZCwcmwcyzZWxlYRlZCAXGcdFxXHRcdFxbmybWFsaXplZFBybBzLnZhbHVlLmluZGVTYoYhpbGQucHJvcHMudmFsdWUpICEICxOxuXHRcdFxfSkXGcdFxfVxuXGcdFxLygQWRkaWnIHNcHBvcnQgZmyIGRlZmFbHRWYWxZSBpbiBzZWxlYQgdGFnXGcdFxaWYgKHRcGUgPTgJNlbGVjdCcgJiYgbmybWFsaXplZFBybBzLmRlZmFbHRWYWxZSAhPSBudWxsKSBXGcdFxXHRubJtYWxpemVkUHJvcHMudmFsdWUgPSBbNoaWxkQXJyYXkocHJvcHMuYhpbGRyZWpLmZvckVhYgoYhpbGQgPTgexuXHRcdFxXHRpZiAobmybWFsaXplZFBybBzLmbHRpcGxlKSBXGcdFxXHRcdFxYhpbGQucHJvcHMucVsZWNZWQgPVxuXHRcdFxXHRcdFxbmybWFsaXplZFBybBzLmRlZmFbHRWYWxZSpbmRleEmKGNoaWxkLnBybBzLnZhbHVlKSAhPSAtMTtcblxXHRcdFxfSBlbHNlIHtcblxXHRcdFxXHRjaGlsZCwcmwcyzZWxlYRlZCAXGcdFxXHRcdFxXHRubJtYWxpemVkUHJvcHMuZGVmYXVsdFZhbHVlIDIGNoaWxkLnBybBzLnZhbHVlOxuXHRcdFxXHRXGcdFxXHRKTtcblxXHRXGcblxXHRbmkZSwcmwcyAIGvcmhbGlZWRQcmwcztcblxuXHRcdGlmIChwcmwcyjbGFzcyAhPSBwcmwcyjbGFzchbWUpIHtcblxXHRcdGNsYXNzTmFtZURlcNyaXBbIuZWbWVyYWJsZSAICdjbGFzchbWUnIGluIHBybBzOxuXHRcdFxaWYgKHBybBzLmNsYXNzTmFtZSAhPSBudWxsKSBubJtYWxpemVkUHJvcHMuYxhcMgPSBwcmwcyjbGFzchbWUXGcdFxXHRPYmplYQuZGVmaWlUHJvcGVydHkobmybWFsaXplZFBybBzLCAnYxhcNOYWlJywgYxhcNOYWlRGVzYJpcHRvcikXGcdFxfVxuXHRXGcblxdmvZGUuJCReXBlbYgPSBSRUFDVFFTEVNRUUXRZUEUXGcblxaWYgKGsZFZObRlSGvaykgbxkVkvZGVIbrKHZubRlKTtcbnXGcbivIEubHkgbmVlZGVkIGZvciByZWFjdCyZWxheVxubGVIGNcnJlbnRDbwblbnQXGjbzdCBvbGRCZWZvcmVSZWkZXIgPSBvcHRpbzLlyZWkZXIXGvcHRpbzLlyZWkZXIgPSBmdWjdGlvbihbmkZSkgexuXHRpZiAobxkQmVmbJlUmVuZGVyKSBXGcdFxbxkQmVmbJlUmVuZGVyKHZubRlKTtcblxfVxuXHRjdXJyZWQtcGuZWIDgdmvZGUuXNvbXBvbmVudDtcbnXGcbivIFRoaXMgaXMgYSBZXJIHZlcnkgcHJpdmFZSBpbnRlcmhbCBmdWjdGlvbiBmbIgUmVhYQgaXRcbivIGlzIHVzZWQgdGgcydCvZiBkbyBydWaWlIGRlcGVuZGVuYkgaWqZWNaWuLiBTbyBmYXJcbivIGubHkgYHJlYWNLXJlbGFYCBtYWtlcyBcUgbYgaXQuIElIHVzZXMgaXQgdGgcmVhZCBaGVcbivIGNvbnRleHQgdmFsdWUuXGleHBvcnQgYucQgXTRUNSRVRfSUURVJOQUxTXRPXPVFVUVfTJfWUVXdJTExfQkVfRklSRUQgPSBXGcdFJlYWNQVycmVudERpcBhdGNoZXIIHtcblxXHRjdXJyZWOiBXGcdFxXHRyZWFkQudGVdChjbZXhKSBXGcdFxXHRcdHJldHVybiBjdXJyZWQtcGuZWLlnbGiYWxDbZXhWNvbnRleHQuXlkXSwcmwcyYWxZTtcblxXHRcdHcblxXHRXGcdHcbnXGiLCAiaWwbJIHtcblxYJlYXRlRWxlbWVudCxcblxcmVuZGVyIGFzIHByZWFjdFJlbmRlcixcblxYxvbmVFbGVtZWIGFzIHByZWFjdENsblRWxlbWVudCxcblxYJlYXRlUmVmLFxuXHRDbwblbnQsXGcdGNyZWFZUNvbnRleHQsXGcdEZyYWdtZWXGIGZybgJByZWFjdCcXGpbXBvcnQgexuXHRcVTdGFZSxcblxdXNlUmVkdWNlcixcblxdXNlRWZmZWNLFxuXHRcVMYXlvdXRFZmZlYQsXGcdHVzZVJlZixcblxdXNlSWwZXJhdGlZUhhbmRsZSxcblxdXNlTWVtbyxcblxdXNlQFsbGJhYssXGcdHVzZUNvbnRleHQsXGcdHVzZURlYnVnVmFsdWVcbngZnJvbSAncHJlYWNLhvbtzJztcbmltcGydCBIFBcmVDbwblbnQgfSBmcmtICcuLBcmVDbwblbnQnOxuaWwbJIHsgbWVtbyBIGZybgJyvbWVtbycXGpbXBvcnQgeyBmbJYXJkUmVmIHgZnJvbSAnLimbJYXJkUmVmJztcbmltcGydCBIENoaWxkcmVuIHgZnJvbSAnLiDaGlsZHJlbicXGpbXBvcnQgeyBTdXNwZWzZSwgbGFeSBIGZybgJyvcVzcGVucUnOxuaWwbJIHsgUVzcGVucVMaXNIHgZnJvbSAnLizdXNwZWzZSsaXNJztcbmltcGydCBIGNyZWFZVBvcnRhbCBIGZybgJyvcGydGFscycXGpbXBvcnQgexuXHRoeWRyYXRlLFxuXHRyZWkZXIsXGcdFJFQUNUXVMRUFTlRfVFlQRSxcblxXTRUNSRVRfSUURVJOQUxTXRPXPVFVUVfTJfWUVXdJTExfQkVfRklSRURcbngZnJvbSAnLiyZWkZXInOxuXGjbzdCBZXJzaWuIDgJzELjAuMicICvIHRyaWNrIGxpYnJhcmllcyBbyBaGluayBZSBhcmUgcmVhYRcblxuLyoqXGgKiBMZWdhYkgdmVyclvbiBvZiBjcmVhdGVFbGVtZWLlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSWTmkZVtcInRcGVcIlIHRcGUgVGhlIGvZGUgbmFtZSBvciBDbwblbnQgYucRydWNbJcbiAqLxuZnVuYRpbgYJlYXRlRmFjdGyeSheXBlKSBXGcdHJldHVybiBjcmVhdGVFbGVtZWLmJpbmQobnVsbCwgdHlwZSkXGXGcbiqKlxuICogQhlYsgaWYgdGhlIHBhcNlZCBlbGVtZWIGlzIGEgdmFsaWQgKHApcmVhYQgbmkZScbiAqIEBwYXJhbSBKngZWxlbWVudCBUaGUgZWxlbWVudCBbyBjaGVjaxuICogQHJldHVybnMgeJvbxlYWXGgKicbmZbmNaWuIGlzVmFsaWRFbGVtZWKGVsZWlbnQpIHtcblxcmVdXJuICEhZWxlbWVudCAmJiBlbGVtZWLiQkdHlwZWmIDPSBSRUFDVFFTEVNRUUXRZUEUXGXGcbiqKlxuICogVJhcCBgYxvbmVFbGVtZWYCBbyBhYmydCBpZiBaGUgcGFzcVkIGVsZWlbnQgaXMgbmIGEgdmFsaWQgZWxlbWVudCBhbmQgYXBwbHlcbiAqIGFsbCBbmkZSBubJtYWxpemFaWucycbiAqIEBwYXJhbSBaWwbJKCcuLludGVybmFsJykuVkvZGVIGVsZWlbnQgVGhlIHZubRlIHRvIGNsblXGgKiBAcGFyYWgeiamVjdHgcHJvcHMgUHJvcHMgdGgYWRkIHdoZWgYxvbmluZxuICogQHBhcmFtIHtBcnJheTxpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnRDaGlsZHJlbjIHJlcQgTBaWuYWwgYtcGuZWIGNoaWxkcmVuXGgKicbmZbmNaWuIGNsblRWxlbWVudChlbGVtZWKSBXGcdGlmICghaXNWYWxpZEVsZWlbnQoZWxlbWVudCkpIHJldHVybiBlbGVtZWOxuXHRyZXRcmgcHJlYWNQxvbmVFbGVtZWLmFwcGxKGbGwsIGFyZVtZWcykXGXGcbiqKlxuICogUmVtbZlIGEgYtcGuZWIHRyZWUgZnJvbSBaGUgRENLCBpbmNsdWRpbmcgcRhdGUgYWkIGVZWIGhhbmRsZXJzLlxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSQcmVhYRFbGVtZWfSBjbYWluZXJcbiAqIEByZXRcmzIHtibsZWFufVxuICovXGmdWjdGlvbiBbmvdWQtcGuZWQXRObRlKGNvbnRhaWlcikgexuXHRpZiAoYudGFpbmVyLljaGlsZHJlbikgexuXHRcdHByZWFjdFJlbmRlcihudWxsLCBjbYWluZXIpOxuXHRcdHJldHVybiBcnVlOxuXHRXGcdHJldHVybiBmYWxzZTtcbncblxuLyoqXGgKiBHZXQgdGhlIGhdGNoaWnIERPTSBubRlIGZvciBhIGNvbXBvbmVudFxuICogQHBhcmFtIHtpbXBvcnQoJyvaWZXJuYWwnKSDbwblbnRIGNvbXBvbmVudFxuICogQHJldHVybnMgeltcGydCgnLipbnRlcmhbCcpLlByZWFjdEVsZWlbnQgfCBudWxsfVxuICovXGmdWjdGlvbiBmaWkRENTmkZShjbwblbnQpIHtcblxcmVdXJuIChcblxXHQoYtcGuZWICYmXGcdFxXHQoYtcGuZWLmJhcUgfHwgKGNvbXBvbmVudCubRlVHlwZSAPTgMSAmJiBjbwblbnQpKSkgfHxcblxXHRudWxsXGcdCkXGXGcbiqKlxuICogRGVwcmVjYXRlZCBYXkgdGgYudHJvbCBiYXRjaGVkIHJlbmRlcmluZyBpbnNpZGUgdGhlIHJlYuYlsZXIsIGJdCBZVxuICogYWxyZWFkeSBzYhlZHVsZSBpbiBiYXRjaGVzIGluclkZSBvdXIgcmVuZGVyaWnIGNvZGVcbiAqIEBZWwbGFZSBBcmdcbiAqIEBwYXJhbSBKGFyZzogQXJnKSAPiBblkfSBjYWxsYmFjayBmdWjdGlvbiBaGFIHRyaWdnZXJzIHRoZSBcGRhdGVkXGgKiBAcGFyYWgeFyZgWFyZgTBaWuYWwgYXJndWlbnQgdGhhdCBjYWgYmUgcGFzcVkIHRvIHRoZSBjYWxsYmFjaxuICovXGvLyBlcxpbnQtZGlzYWJsZSuZXhLWxpbmUgYFtZWxjYXNlXGjbzdCBbnNYWJsZViYXRjaGVkVXBkYXRlcyAIChjYWxsYmFjaywgYXJnKSAPiBjYWxsYmFjayhhcmcpOxuXGvKipcbiAqIEluIFJlYWNLCBgZmxchTeWjYCBmbHVzaGVzIHRoZSBlbnRpcmUgdHJlZSBhbmQgZmyYVzIGEgcmVyZWkZXIuIElJNcbiAqIGltcGxtZWZWQgaGVyZSBhcyBhIGvLWwLlxuICogQHRlbXBsYXRlIEFyZxuICogQHRlbXBsYXRlIFJlcVsdFxuICogQHBhcmFtIHsoYXJnOiBBcmcpID+IFJlcVsdHgYFsbGJhYsgZnVuYRpbgdGhhdCBydWzIGJlZmyZSBaGUgZmxchcbiAqIEBwYXJhbSBQXJnfSBbYXJnXSBPcHRpbhbCBhcnVnbWVudCBaGFIGNhbiBiZSBwYXNzZWQgdGgdGhlIGNhbGxiYWNrXGgKiBAcmVdXJucxuICovXGjbzdCBmbHVzaFNbmMgPSAoYFsbGJhYssIGFyZykgPTgYFsbGJhYsoYXJnKTtcblxuLyoqXGgKiBTdHJpYQgTWkZSBpcyBubQgaWwbGVtZWZWQgaWgUHJlYWNLCBzbyBZSBwcmaWRlIGEgcRhbmQtaWgZmyIGlXGgKiBaGFIGpcQgcmVuZGVycyBpdHMgYhpbGRyZWgdlaGdCBpbXBvcluZyBhbnkgcmVzdHJpYRpbzLlxuICovXGjbzdCBTdHJpYRNbRlIDgRnJhZlbnQXGcbmVcGydCAqIGZybgJByZWFjdCobrcycXGleHBvcnQgexuXHRZXJzaWuLFxuXHRDaGlsZHJlbixcblxcmVuZGVyLFxuXHRoeWRyYXRlLFxuXHRbmvdWQtcGuZWQXRObRlLFxuXHRjcmVhdGVQbJYWwsXGcdGNyZWFZUVsZWlbnQsXGcdGNyZWFZUNvbnRleHQsXGcdGNyZWFZUZhYRvcnksXGcdGNsblRWxlbWVudCxcblxYJlYXRlUmVmLFxuXHRGcmFnbWVudCxcblxaXNWYWxpZEVsZWlbnQsXGcdGZpbmRETObRlLFxuXHRDbwblbnQsXGcdFBcmVDbwblbnQsXGcdGlbWsXGcdGZvcndhcmRSZWYsXGcdGZsdXNoUluYyxcblxLygZXNsaWLWRpcFibGUtbmVdCsaWlIGNhbWVsYFzZVxuXHRbnNYWJsZViYXRjaGVkVXBkYXRlcyxcblxURyaWNTWkZSxcblxUVzcGVucUsXGcdFNcBlbnNlTGlzdCxcblxbGFeSxcblxXTRUNSRVRfSUURVJOQUxTXRPXPVFVUVfTJfWUVXdJTExfQkVfRklSRURcbnXGcbivIFJlYWNIGNvcGllcyBaGUgbmFtZWQgZXhwbJcyBbyBaGUgZGVmYXVsdCBvbmUuXGleHBvcnQgZGVmYXVsdCBXGcdHVzZVNYXRlLFxuXHRcVSZWRYVyLFxuXHRcVFZmZlYQsXGcdHVzZUxheWdEVmZmVjdCxcblxdXNlUmVmLFxuXHRcVJbXBlcmFaXZlSGFuZGxlLFxuXHRcVNZWvLFxuXHRcVDYWxsYmFjayxcblxdXNlQudGVdCxcblxdXNlRGVidWdWYWxZSxcblxdmVyclvbixcblxQhpbGRyZWsXGcdHJlbmRlcixcblxaHlkcmFZSxcblxdWtbVudENvbXBvbmVudEFTmkZSxcblxYJlYXRlUGydGFsLFxuXHRjcmVhdGVFbGVtZWLFxuXHRjcmVhdGVDbZXhLFxuXHRjcmVhdGVGYWNbJLFxuXHRjbGuZUVsZWlbnQsXGcdGNyZWFZVJlZixcblxRnJhZlbnQsXGcdGlzVmFsaWRFbGVtZWLFxuXHRmaWkRENTmkZSxcblxQtcGuZWLFxuXHRQdXJlQtcGuZWLFxuXHRtZWvLFxuXHRmbJYXJkUmVmLFxuXHRmbHVzaFNbmMsXGcdHVucRhYmxlXJhdGNoZWRVcGRhdGVzLFxuXHRTdHJpYRNbRlLFxuXHRTdXNwZWzZSxcblxUVzcGVucVMaXNLFxuXHRsYXpLFxuXHRfXNFQJFVFJTlRFUkBTFNfREfTkUXVTRVPUlZTVfVlMTFCRVGSVJFRFxufTtcbiIsICJpbXBvcnQgUmVhYQgZnJvbSAncmVhYQnOxuZXhwbJIHZhciBEZWZhdWxQudGVdCAIHtcbiAgYsbIIHVuZGVmaWlZCxcbiAgclZTogdWkZWZpbmVkLFxuICBjbGFzchbWUIHVuZGVmaWlZCxcbiAgcRbGUIHVuZGVmaWlZCxcbiAgYXRcjogdWkZWZpbmVkXGOxuZXhwbJIHZhciBJYuQudGVdCAIFJlYWNLmNyZWFZUNvbnRleHQgJiYgUmVhYQuYJlYXRlQudGVdChEZWZhdWxQudGVdCkIiwgInZhciBfXFzclnbiAIHRoaXMgJiYgdGhpcyfXFzclnbiBfCBmdWjdGlvbiAoKSBXGgIFfYXNzaWduIDgTJqZWNLmFzclnbiBfCBmdWjdGlvbiAodCkgexuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuIDgYXJndWlbnRzLmxlbmdaDsgaSAIGIGkrKykgexuICAgICAgcyAIGFyZVtZWctpXTtcblxuICAgICAgZmyIChYXIgcCBpbiBzKSBpZiAoTJqZWNLnBybRvdHlwZSoYXNPdQcmwZXJeSjYWxsKHMsIHApKSBWBdIDgctwXTtcbiAgICBXGcbiAgICByZXRcmgdDtcbiAgfTtcblxuICByZXRcmgXhcNpZuYXBwbHkodGhpcywgYXJndWlbnRzKTtcbnXGcbnZhciBfXJlcQgPSBaGlzICYmIHRoaXMuXyZXNIHxIGZbmNaWuIChzLCBlKSBXGgIHZhciBIDgeXGcbiAgZmyIChYXIgcCBpbiBzKSBpZiAoTJqZWNLnBybRvdHlwZSoYXNPdQcmwZXJeSjYWxsKHMsIHApICYmIGUuaWkZXhPZihwKSAIDApIHRbcFgPSBzWBdOxuXGgIGlmIChzICEIGbGwgJiYgdHlwZWmIEiamVjdCnZXRPdQcmwZXJeVNbWJvbHMgPTIFwiZnVuYRpbcIikgZmyIChYXIgaSAIDAsIHAgPSBPYmplYQuZVTduUHJvcGVydHlTeWibxzKHMpOyBpIDwgcCsZWndGgIGkrKykgexuICAgIGlmIChlLmluZGVTYocFtpXSkgPCAwICYmIEiamVjdCwcmbRcGUucHJvcGVydHlJcVudWlcmFibGUuYFsbChzLCBwWldKSkgdFtwWldXSAIHNbcFtpXVXGgIHcbiAgcmVdXJuIHQXGOxuXGpbXBvcnQgUmVhYQgZnJvbSAncmVhYQnOxuaWwbJIHsgSWNvbkNvbnRleHQsIERlZmFbHRDbZXhIHgZnJvbSAnLipYuQudGVdCcXGcbmZbmNaWuIFRyZWUyRWxlbWVudChcmVlKSBXGgIHJldHVybiBcmVlICYmIHRyZWUubWFwKGZbmNaWuIChubRlLCBpKSBXGgICAgcmVdXJuIFJlYWNLmNyZWFZUVsZWlbnQobmkZSYWcsIFfYXNzaWduKHtcbiAgICAgIGtleTogaVxuICAgIHsIGvZGUuYXRciksIFRyZWUyRWxlbWVudChubRlLmNoaWxkKSkXGgIHpOxufVxuXGleHBvcnQgZnVuYRpbgRVuSWNvbihkYXRhKSBXGgIHJldHVybiBmdWjdGlvbiAocHJvcHMpIHtcbiAgICByZXRcmgUmVhYQuYJlYXRlRWxlbWVudChJYuQmFzZSwgXhcNpZoexuICAgICAgYXRcjogXhcNpZoesIGRhdGEuYXRcilcbiAgICBLCBwcmwcyksIFRyZWUyRWxlbWVudChkYXRhLmNoaWxkKSkXGgIHXGXGleHBvcnQgZnVuYRpbgSWNvbkJhcUocHJvcHMpIHtcbiAgdmFyIGVsZWgPSBmdWjdGlvbiAoYuZikgexuICAgIHZhciBhdHRyIDgcHJvcHMuYXRcixcbiAgICAgICAgclZSAIHBybBzLnNpemUsXGgICAgICAgIHRpdGxlIDgcHJvcHMudGlbGUsXGgICAgICAgIHNZBybBzIDgXyZXNKHBybBzLCBbXCJhdHRyXCIsIFwiclZVwiLCBcInRpdGxlXCJdKTtcblxuICAgIHZhciBjbwdXRlZFNpemUgPSBzaXplIHxIGNvbmYuclZSBfCBcIjFlbVwiOxuICAgIHZhciBjbGFzchbWUXGgICAgaWYgKGNvbmYuYxhcNOYWlKSBjbGFzchbWUgPSBjbmLmNsYXNzTmFtZTtcbiAgICBpZiAocHJvcHMuYxhcNOYWlKSBjbGFzchbWUgPSAoYxhcNOYWlIDgYxhcNOYWlICsgJyAnIDogJycpICsgcHJvcHMuYxhcNOYWlOxuICAgIHJldHVybiBSZWFjdCjcmVhdGVFbGVtZWKFwicZnXCIsIFfYXNzaWduKHtcbiAgICAgIHNcmrZTogXCJjdXJyZWQsbJcIixcbiAgICAgIGZpbGwIFwiYVycmVudENvbGyXCIsXGgICAgICBzdHJvaVXaWRaDogXCIwXCJcbiAgICBLCBjbmLmFdHIsIGFdHIsIHNZBybBzLCBXGgICAgICBjbGFzchbWUIGNsYXNzTmFtZSxcbiAgICAgIHNeWxlOiBfXFzclnbihfXFzclnbihXGgICAgICAgIGNvbGyOiBwcmwcyjbxvciBfCBjbmLmNvbGyXGgICAgICBLCBjbmLnNeWxlKSwgcHJvcHMucRbGUpLFxuICAgICAgaGVpZhOiBjbwdXRlZFNpemUsXGgICAgICBaWRaDogYtcHVZWRTaXplLFxuICAgICAgeGsbnMIFwiaHRcDovLddyMyvcmcvMjAwMCzdmdcIlxuICAgIHpLCBaXRsZSAmJiBSZWFjdCjcmVhdGVFbGVtZWKFwidGlbGVcIiwgbnVsbCwgdGlbGUpLCBwcmwcyjaGlsZHJlbikXGgIHXGcbiAgcmVdXJuIEljbDbZXhICEPSBbmRlZmluZWQgPyBSZWFjdCjcmVhdGVFbGVtZWKEljbDbZXhLkNvbnNbWVyLCBudWxsLCBmdWjdGlvbiAoYuZikgexuICAgIHJldHVybiBlbGVtKGNvbmYpOxuICBKSAIGVsZWoRGVmYXVsdENvbnRleHQpOxufSIsICIvLyBUSElTIEZJTEUgSVMgQVVUTyBHRUFUkFURURcbmltcGydCBIEdlbkljbgfSBmcmtICcuLisaWInOxuZXhwbJIGZbmNaWuIEZpQWNaXZpdHkgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiAxMiAxOCAxMiAxNSAyMSAIDMgNiAxMiAyIDEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQWlycGxheSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDESDRhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoMTZhMiAyIDAgMCAxIDIgMnYxMGEyIDIgMCAwIDEtMiAyaCxXCJfSxXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDEIDEIDIxIDcgMjEgMTIgMTVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBbGVydENpcmNsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTZcIixcIngyXCIXCIxMiwMVwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQWxlcnRPYRhZuIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCILjgIDIgMTYuMTQgMiAyMiALjgIDIyIDELjEIDELjEIDIyIDcuODYgMjIgMiAxNixNCAyIDcuODYgNyNiAyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTZcIixcIngyXCIXCIxMiwMVwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQWxlcnRUcmlhbmdsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMCyOSAzLjgTDEuODIgMThhMiAyIDAgMCAwIDEuNzEgMgxNiNGEyIDIgMCAwIDAgMSMSzTDEzLjcxIDMuODZhMiAyIDAgMCAwLTMuNDIgMHpcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjlcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxNwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiMTdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBbGlnbkNlbnRlciAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxOFwiLFwieTFcIjpcIjEwXCIsXCJMlwiOlwiNlwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMThcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjZcIixcInkyXCIXCIxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFsaWduSnVzdGlmeSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEwXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjNcIixcInkyXCIXCIxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFsaWduTGVmdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNwiLFwieTFcIjpcIjEwXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTdcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjNcIixcInkyXCIXCIxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFsaWduUmlnaHQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIxMFwiLFwieDJcIjpcIjdcIixcInkyXCIXCIxMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiNlwiLFwieDJcIjpcIjNcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjFcIixcInkxXCIXCIxNFwiLFwieDJcIjpcIjNcIixcInkyXCIXCIxNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiMThcIixcIngyXCIXCIXCIsXCJMlwiOlwiMThcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBbmNobIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjVcIixcInJcIjpcIjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjIyXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNSAxMkgyYTEwIDEwIDAgMCAwIDIwIDBoLTNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBcGVydHVyZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTQuMzFcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjAuMDVcIixcInkyXCIXCIxNyNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjkuNjlcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjEuMTdcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNyzOFwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMTMuMTJcIixcInkyXCIXCIyLjAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOSOVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMyNVwiLFwieTJcIjpcIjYuMDZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNCzMVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMiMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTYuNjJcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEwLjgXCIsXCJMlwiOlwiMjEuOTRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBcmNoaXZlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMjEgOCAyMSAyMSAzIDIxIDMgOFwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMVwiLFwieVwiOlwiMwiLFwidlkdGhcIjpcIjIyXCIsXCJoZWlnaHRcIjpcIjVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMFwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMTRcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFycmRGbkNpcmNsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDEyIDEyIDEIDEIDEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFycmRGbkxlZnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTdcIixcInkxXCIXCIXCIsXCJMlwiOlwiNwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNyAxNyAIDEIDcgNwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFycmRGblJpZhIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjdcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTdcIixcInkyXCIXCIxNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTcgNyAxNyAxNyAIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQXJybdEbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiNVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTlcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEyIDEyIDEIDUgMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBcnJvdxlZnRDaXJjbGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxMFwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTIgOCAIDEyIDEyIDEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTZcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjhcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFycmTGVmdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxOVwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiNVwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMiAxOSAIDEyIDEyIDVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBcnJvdJpZhQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDEIDEIDEyIDEyIDhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQXJybdSaWdodCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxOVwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMiAIDEIDEyIDEyIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQXJybdVcENpcmNsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNiAxMiAxMiAIDggMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQXJybdVcExlZnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTdcIixcInkxXCIXCIxNwiLFwieDJcIjpcIjdcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDEIDcgNyAxNyAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQXJybdVcFJpZhIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjdcIixcInkxXCIXCIxNwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNyAIDEIDcgMTcgMTdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBcnJvdVwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTlcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjVcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjUgMTIgMTIgNSAxOSAxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUFUlnbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjRcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiAdjVhMyAzIDAgMCAwIDYgMHYtMWExMCAxMCAwIDEgMCzLjkyIDcuOTRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlBdFyZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiOFwiLFwiclwiOlwiNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCyMSAxMyOSAIDIzIDEyIDIwIDEIDIzIDELjcIDEzLjgXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQmFyQhhcnQyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMjBcIixcIngyXCIXCIxOFwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjZcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjZcIixcInkyXCIXCIxNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJhckNoYXJIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMjBcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMThcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjZcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjZcIixcInkyXCIXCIxNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJhdHRlcnlDaGFyZluZyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDESDNhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoMyxOUxNSAaDJhMiAyIDAgMCAxIDIgMnYYTIgMiAwIDAgMSyIDJoLTMuMTlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMwiLFwieTFcIjpcIjEzXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIxMVwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTEgNiAIDEyIDEzIDEyIDkgMThcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlCYXRZXJIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMVwiLFwieVwiOlwiNlwiLFwidlkdGhcIjpcIjEXCIsXCJoZWlnaHRcIjpcIjEyXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMwiLFwieTFcIjpcIjEzXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIxMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJlbGxPZmYgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTMuNzMgMjFhMiAyIDAgMCAxLTMuNDYgMFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTELjYzIDEzQTELjgIDELjgIDAgMCAxIDEIDhcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkLjIIDYuMjZBNSNiALjgIDAgMCAwIDYgOGMwIDctMyALTMgOWgxNFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDhhNiAIDAgMCAwLTkuMzMtNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIyMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJlbGwgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTggOEEIDYgMCAwIDAgNiAYzAgNyzIDktMyAaDEcyzLTItMyXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTMuNzMgMjFhMiAyIDAgMCAxLTMuNDYgMFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJsdWVbaCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjYuNSALjUgMTcuNSAxNyIDEyIDIzIDEyIDEgMTcuNSALjUgNiIDELjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlCbxkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTYgNGgYTQgNCAwIDAgMSAIDQgNCAIDAgMCAxLTQgNEgelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTYgMTJoOWEIDQgMCAwIDEgNCAIDQgNCAwIDAgMSIDRINnpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlCbrTBlbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyIDNoNmEIDQgMCAwIDEgNCAdjEYTMgMyAwIDAgMCzLTNIMnpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMiAzaCYTQgNCAwIDAgMCIDRMTRhMyAzIDAgMCAxIDMtMgelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJvbsgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNCAxOSQTIuNSAyLjUgMCAwIDEgNiIDESDIwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNiIDJIMjBMjBINiQTIuNSAyLjUgMCAwIDEgNCAxOSdixNUEyLjUgMiIDAgMCAxIDYuNSAyelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJvbttYXJrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDIxbCLTUtNyAVjVhMiAyIDAgMCAxIDItMmgxMGEyIDIgMCAwIDEgMiAyelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUJveCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxNlYYTIgMiAwIDAgMCxLTEuNzNsLTctNGEyIDIgMCAwIDAtMiAwbCIDRBMiAyIDAgMCAwIDMgOHYYTIgMiAwIDAgMCAxIDEuNzNsNyAYTIgMiAwIDAgMCAyIDBsNyQTIgMiAwIDAgMCAyMSAxNnpcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjMuMjcgNiNiAxMiAxMiwMSAyMCMyALjkXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMiwOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlCcmllZmNhcUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIyXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMjBcIixcImhlaWdodFwiOlwiMTRcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDIxVjVhMiAyIDAgMCAwLTItMmgtNGEyIDIgMCAwIDAtMiAydjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQFsZWkYXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIyXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIzXCIsXCJMVwiOlwiMTBcIixcIngyXCIXCIyMVwiLFwieTJcIjpcIjEwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQFtZXJhTZmIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIyMwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIxIDIxSDNhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoMzLTNoNmwyIDNoNGEyIDIgMCAwIDEgMiAydjkuMzRtLTcuNzItMiwNmEIDQgMCAxIDEtNSNiLjUXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQFtZXJhIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIzIDEYTIgMiAwIDAgMSyIDJIMEyIDIgMCAwIDEtMiyVjhhMiAyIDAgMCAxIDItMmgbDItMgbDIgMgYTIgMiAwIDAgMSAyIDJXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEzXCIsXCJyXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQFzdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyIDELjFBNSAIDAgMCAxIDUuOSAyMEyIDEyLjAQTkgOSAwIDAgMSALjkIDIwTTIgOFYYTIgMiAwIDAgMSAyLTJoMTZhMiAyIDAgMCAxIDIgMnYxMmEyIDIgMCAwIDEtMiAyaCXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMlwiLFwieTFcIjpcIjIwXCIsXCJMlwiOlwiMiwMVwiLFwieTJcIjpcIjIwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQhlYtDaXJjbGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjIgMTEuMDhWMTJhMTAgMTAgMCAxIDEtNSMyLjEXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiAIDEyIDELjAxIDkgMTEuMDFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDaGVjaNxdWFyZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgMTEgMTIgMTQgMjIgNFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIxIDEydjdhMiAyIDAgMCAxLTIgMkgYTIgMiAwIDAgMSyLTJWNWEyIDIgMCAwIDEgMiyaDExXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQhlYsgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMCAIDkgMTcgNCAxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNoZXZybEbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNiAIDEyIDEIDEIDlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDaGVcmuTGVmdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEIDkgMTIgMTUgNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNoZXZybSaWdodCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgMTggMTUgMTIgOSAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQhldnJvblVwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTggMTUgMTIgOSAIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQhldnJvbnNEbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNyAxMyAxMiAxOCAxNyAxMwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNyAIDEyIDExIDEIDZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDaGVcmucxlZnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMSAxNyAIDEyIDExIDdcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEIDEzIDEyIDEIDdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDaGVcmucJpZhIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTMgMTcgMTggMTIgMTMgNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNiAxNyAxMSAxMiAIDdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDaGVcmucVwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTcgMTEgMTIgNiAIDExXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNyAxOCAxMiAxMyAIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQhyblIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMSxNwiLFwieTFcIjpcIjhcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIzLjkXCIsXCJMVwiOlwiNiwNlwiLFwieDJcIjpcIjguNTRcIixcInkyXCIXCIxNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEwLjgXCIsXCJMVwiOlwiMjEuOTRcIixcIngyXCIXCIxNSNlwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbGlwYmhcmQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTYgNGgyYTIgMiAwIDAgMSAyIDJMTRhMiAyIDAgMCAxLTIgMkgYTIgMiAwIDAgMSyLTJWNmEyIDIgMCAwIDEgMiyaDJcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjhcIixcInlcIjpcIjJcIixcIndpZHRoXCIXCIXCIsXCJoZWlnaHRcIjpcIjRcIixcInJXCIXCIxXCIsXCJyeVwiOlwiMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNsbNrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDYgMTIgMTIgMTYgMTRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbGZERyaXpbGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjEzXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTZcIixcInkxXCIXCIxOVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMjFcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNlwiLFwieTFcIjpcIjEzXCIsXCJMlwiOlwiMTZcIixcInkyXCIXCIxNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMjFcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjIzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTdcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCAxNiOEEIDUgMCAwIDAgMTggNgtMSyNkEIDggMCAxIDAgNCAxNSyNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNsbVkTGlnaHRuaWnIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDELjlBNSAIDAgMCAwIDEIDdoLTEuMjZhOCAIDAgMSAwLTExLjYyIDlcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEzIDExIDkgMTcgMTUgMTcgMTEgMjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbGZEmZiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMiMSAxNiNUEIDUgMCAwIDAgMTggMTBoLTEuMjZhOCAIDAgMCAwLTcuMDUtNkIDVhOCAIDAgMCAwIDQgMTVoOWEIDUgMCAwIDAgMSLSzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMVwiLFwieTFcIjpcIjFcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQxvdWRSYWluIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMTNcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjEzXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCAxNiOEEIDUgMCAwIDAgMTggNgtMSyNkEIDggMCAxIDAgNCAxNSyNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNsbVkUvdyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCAxNyOEEIDUgMCAwIDAgMTggOGgtMSyNkEIDggMCAxIDAgNCAxNiyNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxNlwiLFwieDJcIjpcIjguMDFcIixcInkyXCIXCIxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjguMDFcIixcInkyXCIXCIyMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMThcIixcIngyXCIXCIxMiwMVwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMlwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiMjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTYuMDFcIixcInkyXCIXCIxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMjBcIixcIngyXCIXCIxNiwMVwiLFwieTJcIjpcIjIwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQxvdWQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTggMTBoLTEuMjZBOCAIDAgMSAwIDkgMjBoOWEIDUgMCAwIDAgMCxMHpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbRlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTYgMTggMjIgMTIgMTYgNlwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCAIDIgMTIgOCAxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvZGVwZWgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDIgMjIgOCIDIyIDELjUgMTIgMjIgMiAxNSIDIgOCIDEyIDJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjIyXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNSXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiALjUgMTIgMTUuNSAyIDguNVwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMiAxNSIDEyIDguNSAyMiAxNSXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCILjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbRlcFuZGJveCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxNlYYTIgMiAwIDAgMCxLTEuNzNsLTctNGEyIDIgMCAwIDAtMiAwbCIDRBMiAyIDAgMCAwIDMgOHYYTIgMiAwIDAgMCAxIDEuNzNsNyAYTIgMiAwIDAgMCAyIDBsNyQTIgMiAwIDAgMCAyMSAxNnpcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjcuNSALjIxIDEyIDYuODEgMTYuNSALjIxXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCILjUgMTkuNzkgNyIDELjYgMyAxMlwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMjEgMTIgMTYuNSAxNCIDELjUgMTkuNzlcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjMuMjcgNiNiAxMiAxMiwMSAyMCMyALjkXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMiwOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbZmZWUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTggOGgxYTQgNCAwIDAgMSAwIDhoLTFcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyIDhoMTZOWEIDQgMCAwIDEtNCASDZhNCAIDAgMCAxLTQtNFYelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjZcIixcInkxXCIXCIxXCIsXCJMlwiOlwiNlwiLFwieTJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMFwiLFwieTFcIjpcIjFcIixcIngyXCIXCIxMFwiLFwieTJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNFwiLFwieTFcIjpcIjFcIixcIngyXCIXCIxNFwiLFwieTJcIjpcIjRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbxbWzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDNoNEyIDIgMCAwIDEgMiAydjEYTIgMiAwIDAgMSyIDJoLTdtMCxOEgYTIgMiAwIDAgMCyIDJMTRhMiAyIDAgMCAwIDIgMmgbTAtMThMThcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbtYWkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDNhMyAzIDAgMCAwLTMgMYxMmEzIDMgMCAwIDAgMyAzIDMgMyAwIDAgMCAzLTMgMyAzIDAgMCAwLTMtMgYTMgMyAwIDAgMCzIDMgMyAzIDAgMCAwIDMgMyAzIDMgMCAwIDAgMyzVjZhMyAzIDAgMCAwLTMtMyAzIDMgMCAwIDAtMyAzIDMgMyAwIDAgMCAzIDNoMTJhMyAzIDAgMCAwIDMtMyAzIDMgMCAwIDAtMyzelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvbXBhcMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxMFwifXsewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNiyNCALjcIDELjEyIDELjEyIDcuNzYgMTYuMjQgOSOCALjgIDELjIIDcuNzZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbBIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiOVwiLFwieVwiOlwiOVwiLFwidlkdGhcIjpcIjEzXCIsXCJoZWlnaHRcIjpcIjEzXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDESDRhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoOWEyIDIgMCAwIDEgMiAydjFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDbJuZXJEbduTGVmdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgMTAgNCAxNSAIDIwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAgNHYYTQgNCAwIDAgMSIDRINFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvcmlckRvdSaWdodCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEwIDIwIDEIDEIDIwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNCAdjdhNCAIDAgMCAwIDQgNGgxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvcmlckxlZnREbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTQgMTUgOSAyMCAIDEXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAgNGgtNEIDQgMCAwIDAtNCAdjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQybmVyTGVmdFVwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTQgOSAIDQgNCAXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAgMjBoLTdhNCAIDAgMCAxLTQtNFYXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQybmVyUmlnaHREbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTAgMTUgMTUgMjAgMjAgMTVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDRoNEIDQgMCAwIDEgNCAdjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQybmVyUmlnaHRVcCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEwIDkgMTUgNCAyMCAXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNCAyMGgYTQgNCAwIDAgMCALTRWNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvcmlclVwTGVmdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgMTQgNCAIDkgNFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIwIDIwdiYTQgNCAwIDAgMCLTRINFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNvcmlclVwUmlnaHQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNSAxNCAyMCAIDEIDRcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDIwdiYTQgNCAwIDAgMSALTRoMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDcHUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMTZcIixcImhlaWdodFwiOlwiMTZcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiOVwiLFwieVwiOlwiOVwiLFwidlkdGhcIjpcIjZcIixcImhlaWdodFwiOlwiNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIxXCIsXCJMlwiOlwiOVwiLFwieTJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNVwiLFwieTFcIjpcIjFcIixcIngyXCIXCIxNVwiLFwieTJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMjBcIixcIngyXCIXCIXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNVwiLFwieTFcIjpcIjIwXCIsXCJMlwiOlwiMTVcIixcInkyXCIXCIyMwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIwXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIwXCIsXCJMVwiOlwiMTRcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMVwiLFwieTFcIjpcIjlcIixcIngyXCIXCIXCIsXCJMlwiOlwiOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxNFwiLFwieDJcIjpcIjRcIixcInkyXCIXCIxNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUNyZWRpdENhcmQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIxXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMjJcIixcImhlaWdodFwiOlwiMTZcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxMFwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiMTBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlDcmwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTYuMTMgMUwIDEYTIgMiAwIDAgMCAyIDJoMTVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxIDYuMTNMMTYgNmEyIDIgMCAwIDEgMiAydjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpQJvcNoYWlyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMlwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMThcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjZcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjJcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiNlwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMjJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRGFYWJhcUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImVsbGlwcVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIXCIsXCJyeFwiOlwiOVwiLFwicnlcIjpcIjNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxMmMwIDEuNjYtNCAzLTkgMMtOSxLjMLTktMwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTMgNXYxNGMwIDEuNjYgNCAzIDkgMMLTEuMzQgOSzVjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlEZWxldGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjEgNEgbCIDggNyAaDEzYTIgMiAwIDAgMCAyLTJWNmEyIDIgMCAwIDAtMiyelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjlcIixcIngyXCIXCIxOFwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRGlzYyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRGlaWRlQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiOFwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlEaXZpZGVTcXVhcmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaURpdmlkZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiNlwiLFwiclwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjVcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlEbxsYXJTaWduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNyASDkuNWEzLjUgMyIDAgMCAwIDAgNgYTMuNSAzLjUgMCAwIDEgMCASDZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlEbdubGhZENsbVkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCAxNyAxMiAyMSAxNiAxNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAuODggMTguMDlBNSAIDAgMCAwIDEIDloLTEuMjZBOCAIDAgMSAwIDMgMTYuMjlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlEbdubGhZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxNXYYTIgMiAwIDAgMSyIDJINWEyIDIgMCAwIDEtMiydiXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDEwIDEyIDEIDEIDEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaURyaWJiYmxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkLjUIDIuNzVjNCzNyALjAzIDYuMDIgOSMiALjAzIDELjcybTIuNTQtMTUuMzhjLTMuNzIgNCzNSLjkIDUuNjYtMTYuODggNSNWxOSIDEuOWMtMyLSMyLjYzLSMiLjkIDAtMiOCMiLjAxIDIuODYtNyNCALjMyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRHJvcGxldCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMiAyLjYbDUuNjYgNSNmEIDggMCAxIDEtMTEuMzEgMHpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlFZGlMiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNyAzYTIuODIIDIuODIIDAgMSAxIDQgNEwLjUgMjAuNSAyIDIybDEuNSLjVMMTcgMpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlFZGlMyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMiAyMGgXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTYuNSAzLjVhMixMjEgMixMjEgMCAwIDEgMyAzTDcgMTlsLTQgMSAxLTRMMTYuNSAzLjVXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRWRpdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMSASDRhMiAyIDAgMCAwLTIgMnYxNGEyIDIgMCAwIDAgMiAyaDEYTIgMiAwIDAgMCAyLTJLTdcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOCIDIuNWEyLjEyMSAyLjEyMSAwIDAgMSAzIDNMMTIgMTVsLTQgMSAxLTQgOSLTkuNXpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlFeHRlcmhbExpbmsgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTggMTNNmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoNlwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTUgMyAyMSAzIDIxIDlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMFwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRXllTZmIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTELjkIDELjkQTEwLjAIDEwLjAIDAgMCAxIDEyIDIwYyIDAtMTEtOCxMSYTELjQIDELjQIDAgMCAxIDUuMDYtNSNELjkgNCyNEELjEyIDkuMTIgMCAwIDEgMTIgNGMIDAgMTEgOCAxMSAYTELjUgMTguNSAwIDAgMSyLjEIDMuMTltLTYuNzItMSwNEzIDMgMCAxIDEtNCyNCLjIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMVwiLFwieTFcIjpcIjFcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRXllIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEgMTJzNCIDExLTggMTEgOCAxMSALTQgOCxMSALTExLTgtMTEtOHpcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGYWNlYmvayAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOCAyaCzYTUgNSAwIDAgMCIDVMgdjRoMYaDRLThoMwxLTRoLTRWNExIDEgMCAwIDEgMSxaDNXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRmFzdEZvcndhcmQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEzIDEIDIyIDEyIDEzIDUgMTMgMTlcInLHtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiMiAxOSAxMSAxMiAyIDUgMiAxOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUZlYXRoZXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAuMjQgMTIuMjRhNiAIDAgMCAwLTguNDktOCOUwIDEwLjVWMTloOCelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjJcIixcInkyXCIXCIyMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjVcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjlcIixcInkyXCIXCIxNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUZpZhIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTUgNSQTMuNSAzLjUgMCAwIDEgOCIDJIMTJNgLjVBMyIDMuNSAwIDAgMSAIDUuNXpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMiAyaDMuNWEzLjUgMyIDAgMSAxIDAgNgxMlYyelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDEyLjVhMyIDMuNSAwIDEgMSAIDAgMyIDMuNSAwIDEgMSIDBXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNSAxOSQTMuNSAzLjUgMCAwIDEgOCIDESDEydjMuNWEzLjUgMyIDAgMSAxLTcgMHpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDEyLjVBMyIDMuNSAwIDAgMSALjUgOUgxMnYSDguNUEzLjUgMyIDAgMCAxIDUgMTIuNXpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGaWxlTWludXMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTQgMkgYTIgMiAwIDAgMCyIDJMTZhMiAyIDAgMCAwIDIgMmgxMmEyIDIgMCAwIDAgMiyVjhXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNCAyIDEIDggMjAgOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGaWxlUGxcyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNCAySDZhMiAyIDAgMCAwLTIgMnYxNmEyIDIgMCAwIDAgMiAyaDEyYTIgMiAwIDAgMCAyLTJWOHpcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDIgMTQgOCAyMCAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTVcIixcIngyXCIXCIxNVwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRmlsZVRleHQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTQgMkgYTIgMiAwIDAgMCyIDJMTZhMiAyIDAgMCAwIDIgMmgxMmEyIDIgMCAwIDAgMiyVjhXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNCAyIDEIDggMjAgOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMTNcIixcIngyXCIXCIXCIsXCJMlwiOlwiMTNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMCAIDkgOSAIDlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGaWxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEzIDJINmEyIDIgMCAwIDAtMiAydjEYTIgMiAwIDAgMCAyIDJoMTJhMiAyIDAgMCAwIDItMlYelwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTMgMiAxMyAIDIwIDlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGaWxtIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMlwiLFwieVwiOlwiMlwiLFwidlkdGhcIjpcIjIwXCIsXCJoZWlnaHRcIjpcIjIwXCIsXCJyeFwiOlwiMixOFwiLFwicnlcIjpcIjIuMThcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMlwiLFwieDJcIjpcIjdcIixcInkyXCIXCIyMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIyMlwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMlwiLFwieTFcIjpcIjdcIixcIngyXCIXCIXCIsXCJMlwiOlwiNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjJcIixcInkxXCIXCIxNwiLFwieDJcIjpcIjdcIixcInkyXCIXCIxNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMTdcIixcIngyXCIXCIyMlwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTdcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjJcIixcInkyXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRmlsdGVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiAzIDIgMyAxMCAxMiNiAxMCAxOSAxNCAyMSAxNCAxMiNiAyMiAzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRmxhZyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDEczEtMSALTEgNSAyIDggMiALTEgNCxVjNzLTEgMSIDEtNSyLTgtMiIDEtNCAxelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjRcIixcInkxXCIXCIyMlwiLFwieDJcIjpcIjRcIixcInkyXCIXCIxNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUZvbGRlckpbnVzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIyIDEYTIgMiAwIDAgMSyIDJINGEyIDIgMCAwIDEtMiyVjVhMiAyIDAgMCAxIDItMmgbDIgMgYTIgMiAwIDAgMSAyIDJXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTVcIixcInkyXCIXCIxNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUZvbGRlclBsdXMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjIgMTlhMiAyIDAgMCAxLTIgMkgYTIgMiAwIDAgMSyLTJWNWEyIDIgMCAwIDEgMiyaDVsMiAzaDlhMiAyIDAgMCAxIDIgMnpcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjExXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIxNFwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGbxkZXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjIgMTlhMiAyIDAgMCAxLTIgMkgYTIgMiAwIDAgMSyLTJWNWEyIDIgMCAwIDEgMiyaDVsMiAzaDlhMiAyIDAgMCAxIDIgMnpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGcmFtZXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNSAxNlYaDEVjJINWwxNCAxNGgtNtNyAwbDcgNYtNtNyAwaDdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlGcmbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTYgMTZzLTEuNSyLTQtMiIDItNCAyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOVwiLFwieTFcIjpcIjlcIixcIngyXCIXCILjAxXCIsXCJMlwiOlwiOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjELjAxXCIsXCJMlwiOlwiOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUdpZnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMCAxMiAyMCAyMiAIDIyIDQgMTJcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjJcIixcInlcIjpcIjdcIixcIndpZHRoXCIXCIyMFwiLFwiaGVpZhXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMlwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiNwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDdINyYTIuNSAyLjUgMCAwIDEgMCQzExIDIgMTIgNyAxMiAelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDdoNCYTIuNSAyLjUgMCAwIDAgMCQzEzIDIgMTIgNyAxMiAelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUdpdEJyYWjaCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMwiLFwieDJcIjpcIjZcIixcInkyXCIXCIxNVwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMThcIixcImNXCIXCIXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOCAYTkgOSAwIDAgMSIDlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlHaXRDbtaXQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMSwNVwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiNwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTcuMDFcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjIyLjkXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlHaXRNZXJnZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjNcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjZcIixcImNXCIXCIXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNiAyMVYYTkgOSAwIDAgMCAIDlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlHaXRQdWxsUmVxdWVzdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjNcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjZcIixcImNXCIXCIXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTMgNmgzYTIgMiAwIDAgMSAyIDJNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjZcIixcInkxXCIXCIXCIsXCJMlwiOlwiNlwiLFwieTJcIjpcIjIxXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRlaHViIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTkgMTljLTUgMSLTUtMiLTctMxNCAdizLjgYTMuMzcgMyzNyAwIDAgMCuOTQtMiMWMzLjELSzNSALjQLTEuNTQgNiNCQTUuNDQgNSNCAwIDAgMCAyMCALjcIDUuMDcgNSwNyAwIDAgMCAxOSMSAxUzELjczLjYIDEIDIuNDhhMTMuMzggMTMuMzggMCAwIDAtNyAwQzYuMjcuNjUgNSwOSAxIDUuMDkgMUELjAIDUuMDcgMCAwIDAgNSALjcYTUuNDQgNSNCAwIDAgMCxLjUgMyOGMwIDUuNDIgMyzIDYuNjEgNiNCAQTMuMzcgMyzNyAwIDAgMCAIDELjEzVjIyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRlbGFiIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIyLjYIDELjMTDEyIDIyLjEzIDEuMzUgMTQuMzlhLjgLjgIDAgMCAxLSzLSNGwxLjIyLTMuNzggMiNCLjUxQSMiMiAwIDAgMSALjgyIDJhLjQzLjQzIDAgMCAxICOCAwICMiMiAwIDAgMSAuMTEuMThsMiNCALjQaDguMWwyLjQLTcuNTFBLjQyLjQyIDAgMCAxIDELjYgMmEuNDMuNDMgMCAwIDEgLjUIDAgLjQyLjQyIDAgMCAxICxMSxOGwyLjQIDcuNTFMMjMgMTMuNDVhLjgLjgIDAgMCAxLSzNSNHpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlHbGiZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMlwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMjJcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDJhMTUuMyAxNSzIDAgMCAxIDQgMTAgMTUuMyAxNSzIDAgMCAxLTQgMTAgMTUuMyAxNSzIDAgMCAxLTQtMTAgMTUuMyAxNSzIDAgMCAxIDQtMTBXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpRJpZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjNcIixcInlcIjpcIjNcIixcIndpZHRoXCIXCIXCIsXCJoZWlnaHRcIjpcIjdcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjEXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiNwiLFwiaGVpZhXCIXCIXCJfSxXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIxNFwiLFwieVwiOlwiMTRcIixcIndpZHRoXCIXCIXCIsXCJoZWlnaHRcIjpcIjdcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjNcIixcInlcIjpcIjEXCIsXCJaWRaFwiOlwiNwiLFwiaGVpZhXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSGFyZERyaXZlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIyXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIyXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkLjQIDUuMTFMMiAxMnYYTIgMiAwIDAgMCAyIDJoMTZhMiAyIDAgMCAwIDItMnYtNmwtMyNSLjgQTIgMiAwIDAgMCAxNiNiASDcuMjRhMiAyIDAgMCAwLTEuNzkgMSxMXpcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTZcIixcIngyXCIXCILjAxXCIsXCJMlwiOlwiMTZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMFwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTAuMDFcIixcInkyXCIXCIxNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUhhcggKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNFwiLFwieTFcIjpcIjlcIixcIngyXCIXCIyMFwiLFwieTJcIjpcIjlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTVcIixcIngyXCIXCIyMFwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTBcIixcInkxXCIXCIzXCIsXCJMlwiOlwiOFwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTZcIixcInkxXCIXCIzXCIsXCJMlwiOlwiMTRcIixcInkyXCIXCIyMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUhlYWRwaGuZXMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMyAxOHYtNmEIDkgMCAwIDEgMTggMHYXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjEgMTlhMiAyIDAgMCAxLTIgMmgtMWEyIDIgMCAwIDEtMiydizYTIgMiAwIDAgMSAyLTJoMpNMyAxOWEyIDIgMCAwIDAgMiAyaDFhMiAyIDAgMCAwIDItMnYtMEyIDIgMCAwIDAtMiySDNXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSGVhcnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAuODQgNCMWELjUgNSIDAgMCAwLTcuNzggMEwxMiALjYbCxLjALTEuMDZhNSIDUuNSAwIDAgMCLjcIDcuNzhsMSwNiAxLjATDEyIDIxLjIzbDcuNzgtNyOCAxLjALTEuMDZhNSIDUuNSAwIDAgMCAwLTcuNzhXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSGVscENpcmNsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOSwOSAYTMgMyAwIDAgMSALjgzIDFjMCAyLTMgMyzIDNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTIuMDFcIixcInkyXCIXCIxNwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUhleGFnbgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjEgMTZWOGEyIDIgMCAwIDAtMSxLjczbCLTRhMiAyIDAgMCAwLTIgMGwtNyAQTIgMiAwIDAgMCAzIDhOGEyIDIgMCAwIDAgMSAxLjczbDcgNGEyIDIgMCAwIDAgMiAwbDctNEEyIDIgMCAwIDAgMjEgMTZXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSGtZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkzIDlsOSIDkgNYxMWEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMnpcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgMjIgOSAxMiAxNSAxMiAxNSAyMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUltYWdlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMwiLFwieVwiOlwiMwiLFwidlkdGhcIjpcIjEXCIsXCJoZWlnaHRcIjpcIjEXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjguNVwiLFwiYlcIjpcIjguNVwiLFwiclwiOlwiMSXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMSAxNSAxNiAxMCAIDIxXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSWibggKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiAxMiAxNiAxMiAxNCAxNSAxMCAxNSAIDEyIDIgMTJcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkLjQIDUuMTFMMiAxMnYYTIgMiAwIDAgMCAyIDJoMTZhMiAyIDAgMCAwIDItMnYtNmwtMyNSLjgQTIgMiAwIDAgMCAxNiNiASDcuMjRhMiAyIDAgMCAwLTEuNzkgMSxMXpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlJbmZvIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUlucRhZJhbSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjJcIixcInlcIjpcIjJcIixcIndpZHRoXCIXCIyMFwiLFwiaGVpZhXCIXCIyMFwiLFwicnhcIjpcIjVcIixcInJXCIXCIXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTYgMTEuMzdBNCAIDAgMSAxIDEyLjYzIDggNCAIDAgMCAxIDEIDExLjMelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjVcIixcInkxXCIXCILjVcIixcIngyXCIXCIxNyMVwiLFwieTJcIjpcIjYuNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUlYWxpYyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxOVwiLFwieTFcIjpcIjRcIixcIngyXCIXCIxMFwiLFwieTJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNFwiLFwieTFcIjpcIjIwXCIsXCJMlwiOlwiNVwiLFwieTJcIjpcIjIwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTVcIixcInkxXCIXCIXCIsXCJMlwiOlwiOVwiLFwieTJcIjpcIjIwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpSVIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIxIDJsLTIgMmtNyMSALjYxYTUuNSALjUgMCAxIDEtNyNzggNyNzggNSIDUuNSAwIDAgMSALjcNyLjcNptMCAwTDELjUgNybTAgMGwzIDNMMjIgNwtMyzbSzLjUgMyTDEIDRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMYXllcnMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDIgMiAIDEyIDEyIDIyIDcgMTIgMlwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMiAxNyAxMiAyMiAyMiAxNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMiAxMiAxMiAxNyAyMiAxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUxheWdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjNcIixcInlcIjpcIjNcIixcIndpZHRoXCIXCIxOFwiLFwiaGVpZhXCIXCIxOFwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjlcIixcIngyXCIXCIyMVwiLFwieTJcIjpcIjlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMjFcIixcIngyXCIXCIXCIsXCJMlwiOlwiOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUxpZmVCdWIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjkzXCIsXCJMVwiOlwiNCMwiLFwieDJcIjpcIjkuMTdcIixcInkyXCIXCILjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTQuODNcIixcInkxXCIXCIxNCMwiLFwieDJcIjpcIjELjAXCIsXCJMlwiOlwiMTkuMDdcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNCMwiLFwieTFcIjpcIjkuMTdcIixcIngyXCIXCIxOSwNwiLFwieTJcIjpcIjQuOTNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNCMwiLFwieTFcIjpcIjkuMTdcIixcIngyXCIXCIxOCzNlwiLFwieTJcIjpcIjUuNjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjkzXCIsXCJMVwiOlwiMTkuMDdcIixcIngyXCIXCILjEXCIsXCJMlwiOlwiMTQuODNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMaWrMiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNSAaDNhNSAIDAgMCAxIDUgNSAIDUgMCAwIDEtNSAaCzbSIDBINmEIDUgMCAwIDEtNSIDUgNSAwIDAgMSALTVoMwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMaWrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEwIDEzYTUgNSAwIDAgMCALjULjUbDMtMEIDUgMCAwIDAtNywNyLjAbCxLjcyIDEuNzFcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNCAxMWEIDUgMCAwIDAtNyNCuNTRsLTMgMEIDUgMCAwIDAgNywNyALjAbDEuNzEtMSMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUxpbmtlZGluIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDhhNiAIDAgMCAxIDYgNnYaCdiYTIgMiAwIDAgMCyLTIgMiAyIDAgMCAwLTIgMnYaCdiYTYgNiAwIDAgMSALTZXCJfSxXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIyXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiNFwiLFwiaGVpZhXCIXCIxMlwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiNFwiLFwiYlcIjpcIjRcIixcInJcIjpcIjJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMaXNIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjIxXCIsXCJMlwiOlwiMThcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIzXCIsXCJMVwiOlwiNlwiLFwieDJcIjpcIjMuMDFcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMywMVwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMywMVwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTGhZGVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMlwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMThcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNCMwiLFwieTFcIjpcIjQuOTNcIixcIngyXCIXCILjcXCIsXCJMlwiOlwiNyNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjIXCIsXCJMVwiOlwiMTYuMjRcIixcIngyXCIXCIxOSwNwiLFwieTJcIjpcIjELjAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMlwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiNlwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMThcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjIyXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjkzXCIsXCJMVwiOlwiMTkuMDdcIixcIngyXCIXCILjcXCIsXCJMlwiOlwiMTYuMjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNiyNFwiLFwieTFcIjpcIjcuNzZcIixcIngyXCIXCIxOSwNwiLFwieTJcIjpcIjQuOTNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMbNrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMwiLFwieVwiOlwiMTFcIixcIndpZHRoXCIXCIxOFwiLFwiaGVpZhXCIXCIxMVwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNyAxMVYYTUgNSAwIDAgMSAxMCAwdjRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlMbdJbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNSAzaDRhMiAyIDAgMCAxIDIgMnYxNGEyIDIgMCAwIDEtMiAyaCXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMCAxNyAxNSAxMiAxMCAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTVcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjNcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUxvZdCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDIxSDVhMiAyIDAgMCAxLTItMlYYTIgMiAwIDAgMSAyLTJoNFwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTYgMTcgMjEgMTIgMTYgNwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNYWlsIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTQgNGgxNmMxLjEgMCAyICIDIgMnYxMmMwIDEuMSuOSAyLTIgMkgYyxLjEgMCyLSLTItMlYYzAtMSxLjktMiAyLTJXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiwIDEyLDEzIDIsNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUhcFBpbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxMGMwIDctOSAxMyIDEzcyLTYtOSxMEIDkgMCAwIDEgMTggMHpcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTBcIixcInJcIjpcIjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNYXAgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEgNiAxIDIyIDggMTggMTYgMjIgMjMgMTggMjMgMiAxNiAIDggMiAxIDZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMlwiLFwieDJcIjpcIjhcIixcInkyXCIXCIxOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiNlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMjJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNYXhpbWlZTIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNSAzIDIxIDMgMjEgOVwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOSAyMSAzIDIxIDMgMTVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjNcIixcIngyXCIXCIxNFwiLFwieTJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjIxXCIsXCJMlwiOlwiMTBcIixcInkyXCIXCIxNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUheGltaXplIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTggMgYTIgMiAwIDAgMCyIDJMxOCAwVjVhMiAyIDAgMCAwLTItMmgtMwIDEaDNhMiAyIDAgMCAwIDItMnYtMzIDEdjNhMiAyIDAgMCAwIDIgMmgzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWVoIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTVcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOVwiLFwieTFcIjpcIjlcIixcIngyXCIXCILjAxXCIsXCJMlwiOlwiOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjELjAxXCIsXCJMlwiOlwiOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUlbnUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjNcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMjFcIixcInkyXCIXCIxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUlcNhZVDaXJjbGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjEgMTEuNWELjMIDguMzggMCAwIDEtLjkgMyIDguNSALjUgMCAwIDEtNyIDQuNyALjMIDguMzggMCAwIDEtMyLSTDMgMjFsMSLTUuNELjMIDguMzggMCAwIDEtLjktMyIDguNSALjUgMCAwIDEgNCLTcuNiALjMIDguMzggMCAwIDEgMyLSaCYTguNDggOCOCAwIDAgMSAIDhLjVXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWVzcFnZVNxdWFyZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxNWEyIDIgMCAwIDEtMiAySDdsLTQgNFYYTIgMiAwIDAgMSAyLTJoMTRhMiAyIDAgMCAxIDIgMnpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNaWNPZmYgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMVwiLFwieTFcIjpcIjFcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjIzXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOSAdjNhMyAzIDAgMCAwIDUuMTIgMixMkxNSALjMVjRhMyAzIDAgMCAwLTUuOTQtLjZcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNyAxNiNUEIDcgMCAwIDEgNSAxMnYtMmxNCAwdjJhNyAIDAgMCAxLSxMSAxLjIzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxOVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMjNcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWljIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDFhMyAzIDAgMCAwLTMgMYYTMgMyAwIDAgMCAIDBWNGEzIDMgMCAwIDAtMyzelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDEwdjJhNyAIDAgMCAxLTEIDBLTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIyMwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIyMwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNaWpbWlZTIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDEIDEwIDEIDEwIDIwXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMCAxMCAxNCAxMCAxNCAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTRcIixcInkxXCIXCIxMFwiLFwieDJcIjpcIjIxXCIsXCJMlwiOlwiMwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjNcIixcInkxXCIXCIyMVwiLFwieDJcIjpcIjEwXCIsXCJMlwiOlwiMTRcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNaWpbWlZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDNMEyIDIgMCAwIDEtMiAySDNtMTggMGgtMEyIDIgMCAwIDEtMiyVjNtMCAxOHYtMEyIDIgMCAwIDEgMiyaDNNMyAxNmgzYTIgMiAwIDAgMSAyIDJMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUpbnVzQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWludXNTcXVhcmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxMlwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNaWcyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxOVwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWuaXRvciAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjJcIixcInlcIjpcIjNcIixcIndpZHRoXCIXCIyMFwiLFwiaGVpZhXCIXCIxNFwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjIxXCIsXCJMlwiOlwiMTZcIixcInkyXCIXCIyMVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTdcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjIxXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWvbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxMiOUEIDkgMCAxIDEgMTEuMjEgMyAIDcgMCAwIDAgMjEgMTIuNzlXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWyZUhvcmlbYWwgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxOVwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNbJlVmVydGljYWwgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjVcIixcInJcIjpcIjFcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTlcIixcInJcIjpcIjFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlNbVzZVBvaWZXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMyAzbDcuMDcgMTYuOTcgMiMSLjMIDcuMzktMiMUwzIDNXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTMgMTNsNiAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpTWZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjUgOSAyIDEyIDUgMTVcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjkgNSAxMiAyIDEIDVcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEIDEyIDIyIDkgMTlcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDkgMjIgMTIgMTkgMTVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIyMlwiLFwieTJcIjpcIjEyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIyMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUcljIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTkgMThWNWwxMiydjEzXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjNcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEXCIsXCJjeVwiOlwiMTZcIixcInJcIjpcIjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlOYXZpZFaWuMiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiMTIgMiAxOSAyMSAxMiAxNyAIDIxIDEyIDJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlOYXZpZFaWuIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIzIDExIDIyIDIgMTMgMjEgMTEgMTMgMyAxMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaUjdGFnbgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjcuODYgMiAxNixNCAyIDIyIDcuODYgMjIgMTYuMTQgMTYuMTQgMjIgNyNiAyMiAyIDELjEIDIgNyNiALjgIDJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQYWNrYWdlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjVcIixcInkxXCIXCILjRcIixcIngyXCIXCILjVcIixcInkyXCIXCILjIxXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjEgMTZWOGEyIDIgMCAwIDAtMSxLjczbCLTRhMiAyIDAgMCAwLTIgMGwtNyAQTIgMiAwIDAgMCAzIDhOGEyIDIgMCAwIDAgMSAxLjczbDcgNGEyIDIgMCAwIDAgMiAwbDctNEEyIDIgMCAwIDAgMjEgMTZXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIzLjIIDYuOTYgMTIgMTIuMDEgMjAuNzMgNiNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMjIuMDhcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUGFwZXJjbGlwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIxLjQIDExLjAbCLjEIDkuMTlhNiAIDAgMCAxLTguNDktOCOWwLjELTkuMTlhNCAIDAgMCAxIDUuNjYgNSNmwtOSyIDkuMTlhMiAyIDAgMCAxLTIuODMtMiMwLjQLTguNDhcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQYXVzZUNpcmNsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTBcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjEwXCIsXCJMlwiOlwiOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMTVcIixcIngyXCIXCIxNFwiLFwieTJcIjpcIjlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQYXVzZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjZcIixcInlcIjpcIjRcIixcIndpZHRoXCIXCIXCIsXCJoZWlnaHRcIjpcIjEXCJfSxXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIxNFwiLFwieVwiOlwiNFwiLFwidlkdGhcIjpcIjRcIixcImhlaWdodFwiOlwiMTZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQZWUbsIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEyIDEbDctNyAzIDMtNyALTMtMpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOCAxMwtMSLTcuNUwyIDJsMyIDELjVMMTMgMThsNSelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIgMmwLjUNiALjUNlwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTFcIixcImNXCIXCIxMVwiLFwiclwiOlwiMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBlcmNlbnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTlcIixcInkxXCIXCIXCIsXCJMlwiOlwiNVwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCILjVcIixcImNXCIXCILjVcIixcInJcIjpcIjIuNVwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTcuNVwiLFwiYlcIjpcIjELjVcIixcInJcIjpcIjIuNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBoblQFsbCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNSwNSAQTUgNSAwIDAgMSAxOSALjkTTELjAIDFBOSAIDAgMCAxIDIzIDguOTRtLTEgNyOHYzYTIgMiAwIDAgMSyLjEIDIgMTkuNzkgMTkuNzkgMCAwIDEtOCMyzLjAIDELjUgMTkuNSAwIDAgMSLTYgMTkuNzkgMTkuNzkgMCAwIDEtMywNyLjYQTIgMiAwIDAgMSALjExIDJoMEyIDIgMCAwIDEgMiAxLjcyIDEyLjgIDEyLjgIDAgMCAwICIDIuODEgMiAyIDAgMCAxLSNSAyLjExTDguMDkgOSMWExNiAxNiAwIDAgMCAIDZsMSyNyxLjIYTIgMiAwIDAgMSAyLjExLSNSAxMiNCAxMiNCAwIDAgMCAyLjgxLjdBMiAyIDAgMCAxIDIyIDELjkyelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBoblRmydFyZGVkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTkgMSAyMyAIDEIDlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNVwiLFwieTFcIjpcIjVcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMiAxNiMnYzYTIgMiAwIDAgMSyLjEIDIgMTkuNzkgMTkuNzkgMCAwIDEtOCMyzLjAIDELjUgMTkuNSAwIDAgMSLTYgMTkuNzkgMTkuNzkgMCAwIDEtMywNyLjYQTIgMiAwIDAgMSALjExIDJoMEyIDIgMCAwIDEgMiAxLjcyIDEyLjgIDEyLjgIDAgMCAwICIDIuODEgMiAyIDAgMCAxLSNSAyLjExTDguMDkgOSMWExNiAxNiAwIDAgMCAIDZsMSyNyxLjIYTIgMiAwIDAgMSAyLjExLSNSAxMiNCAxMiNCAwIDAgMCAyLjgxLjdBMiAyIDAgMCAxIDIyIDELjkyelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBoblSWjbpbmcgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNiAyIDEIDggMjIgOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIzXCIsXCJMVwiOlwiMVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiOFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIyIDELjkydjNhMiAyIDAgMCAxLTIuMTggMiAxOSOSAxOSOSAwIDAgMSLjYzLTMuMDcgMTkuNSAxOSIDAgMCAxLTYtNiAxOSOSAxOSOSAwIDAgMSzLjALTguNjdBMiAyIDAgMCAxIDQuMTEgMmgzYTIgMiAwIDAgMSAyIDEuNzIgMTIuODQgMTIuODQgMCAwIDAgLjcgMiMSAyIDIgMCAwIDEtLjQIDIuMTFMOCwOSALjkxYTEIDEIDAgMCAwIDYgNmwxLjILTEuMjdhMiAyIDAgMCAxIDIuMTEtLjQIDEyLjgIDEyLjgIDAgMCAwIDIuODEuNEyIDIgMCAwIDEgMjIgMTYuOTJXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUGhvbmVNaXNzZWQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjNcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMTdcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTdcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjIgMTYuOTJMEyIDIgMCAwIDEtMixOCAyIDELjcIDELjcIDAgMCAxLTguNjMtMywNyAxOSIDELjUgMCAwIDEtNiIDELjcIDELjcIDAgMCAxLTMuMDctOCNEyIDIgMCAwIDEgNCxMSAyaDNhMiAyIDAgMCAxIDIgMSMiAxMiNCAxMiNCAwIDAgMCAuNyAyLjgxIDIgMiAwIDAgMSuNDUgMixMUwLjAIDkuOTFhMTYgMTYgMCAwIDAgNiAbDEuMjctMSyNEyIDIgMCAwIDEgMixMSuNDUgMTIuODQgMTIuODQgMCAwIDAgMiMSQTIgMiAwIDAgMSAyMiAxNiMnpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQaGuZUmZiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMCOCAxMyzMWExNiAxNiAwIDAgMCAzLjQxIDIuNmwxLjILTEuMjdhMiAyIDAgMCAxIDIuMTEtLjQIDEyLjgIDEyLjgIDAgMCAwIDIuODEuNyAyIDIgMCAwIDEgMSMiAydjNhMiAyIDAgMCAxLTIuMTggMiAxOSOSAxOSOSAwIDAgMSLjYzLTMuMDcgMTkuNDIgMTkuNDIgMCAwIDEtMyzMyyLjYbSyLjYLTMuMzRhMTkuNzkgMTkuNzkgMCAwIDEtMywNyLjYzQTIgMiAwIDAgMSALjExIDJoMEyIDIgMCAwIDEgMiAxLjcyIDEyLjgIDEyLjgIDAgMCAwICIDIuODEgMiAyIDAgMCAxLSNSAyLjExTDguMDkgOSMVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIzXCIsXCJMVwiOlwiMVwiLFwieDJcIjpcIjFcIixcInkyXCIXCIyMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBoblTVZpbmcgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMyAIDIzIDEgMTcgMVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiMVwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIyIDELjkydjNhMiAyIDAgMCAxLTIuMTggMiAxOSOSAxOSOSAwIDAgMSLjYzLTMuMDcgMTkuNSAxOSIDAgMCAxLTYtNiAxOSOSAxOSOSAwIDAgMSzLjALTguNjdBMiAyIDAgMCAxIDQuMTEgMmgzYTIgMiAwIDAgMSAyIDEuNzIgMTIuODQgMTIuODQgMCAwIDAgLjcgMiMSAyIDIgMCAwIDEtLjQIDIuMTFMOCwOSALjkxYTEIDEIDAgMCAwIDYgNmwxLjILTEuMjdhMiAyIDAgMCAxIDIuMTEtLjQIDEyLjgIDEyLjgIDAgMCAwIDIuODEuNEyIDIgMCAwIDEgMjIgMTYuOTJXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUGhvbmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjIgMTYuOTJMEyIDIgMCAwIDEtMixOCAyIDELjcIDELjcIDAgMCAxLTguNjMtMywNyAxOSIDELjUgMCAwIDEtNiIDELjcIDELjcIDAgMCAxLTMuMDctOCNEyIDIgMCAwIDEgNCxMSAyaDNhMiAyIDAgMCAxIDIgMSMiAxMiNCAxMiNCAwIDAgMCAuNyAyLjgxIDIgMiAwIDAgMSuNDUgMixMUwLjAIDkuOTFhMTYgMTYgMCAwIDAgNiAbDEuMjctMSyNEyIDIgMCAwIDEgMixMSuNDUgMTIuODQgMTIuODQgMCAwIDAgMiMSQTIgMiAwIDAgMSAyMiAxNiMnpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQaWVDaGFydCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSyMSAxNSOUExMCAxMCAwIDEgMSAIDIuODNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMiAxMkExMCAxMCAwIDAgMCAxMiAydjEwelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBsYXlDaXJjbGUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxMFwifXsewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMCAIDEIDEyIDEwIDEIDEwIDhcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQbGFIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDMgMTkgMTIgNSAyMSAIDNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlQbHVzQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjhcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMTZcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBsdXNTcXVhcmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxNlwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUGxcyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjVcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNVwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMTlcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBvYtldCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDNoMTZhMiAyIDAgMCAxIDIgMnYYTEwIDEwIDAgMCAxLTEwIDEwQTEwIDEwIDAgMCAxIDIgMTFWNWEyIDIgMCAwIDEgMiyelwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCAxMCAxMiAxNCAxNiAxMFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVBvdVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTELjMIDYuNjRhOSAIDAgMSAxLTEyLjczIDBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUHJpbnRlciAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjYgOSAIDIgMTggMiAxOCAXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNiAxOEgYTIgMiAwIDAgMSyLTJLTVhMiAyIDAgMCAxIDItMmgxNmEyIDIgMCAwIDEgMiAydjVhMiAyIDAgMCAxLTIgMmgtMlwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiNlwiLFwieVwiOlwiMTRcIixcIndpZHRoXCIXCIxMlwiLFwiaGVpZhXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUmFkaWgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIyXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTYuMjQgNyNmEIDYgMCAwIDEgMCALjQbSLjQLSwMWEIDYgMCAwIDEgMCLjQbTExLjMxLTIuODJhMTAgMTAgMCAwIDEgMCAxNCxNGtMTQuMTQgMGExMCAxMCAwIDAgMSAwLTELjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUmVmcmVzaENjdyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEgNCAxIDEwIDcgMTBcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjIzIDIwIDIzIDEIDEIDEXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAuNDkgOUEIDkgMCAwIDAgNSNCALjYTDEgMTBtMjIgNGwtNCNCALjMQTkgOSAwIDAgMSAzLjUxIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUmVmcmVzaENIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMjMgNCAyMyAxMCAxNyAxMFwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMSAyMCAxIDEIDcgMTRcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkzLjUxIDlhOSAIDAgMCAxIDELjgLTMuMzZMMjMgMTBNMSAxNGwLjYIDQuMzZBOSAIDAgMCAwIDIwLjQIDEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUmVwZWFIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTcgMSAyMSAIDEIDlcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkzIDExVjlhNCAIDAgMCAxIDQtNGgxNFwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNyAyMyAzIDEIDcgMTVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxMYyYTQgNCAwIDAgMSIDRIMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVJldluZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiMTEgMTkgMiAxMiAxMSAIDExIDEXCJfSxXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjIyIDEIDEzIDEyIDIyIDUgMjIgMTlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlSbRhdGVDYcgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxIDQgMSAxMCAIDEwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMyMSAxNWEIDkgMCAxIDAgMixMyLjMTDEgMTBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlSbRhdGVDdyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjIzIDQgMjMgMTAgMTcgMTBcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCOSAxNWEIDkgMCAxIDEtMixMiLjMTDIzIDEwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUnNzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTQgMTFhOSAIDAgMCAxIDkgOVwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTQgNGExNiAxNiAwIDAgMSAxNiAxNlwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiNVwiLFwiYlcIjpcIjEXCIsXCJyXCIXCIxXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUFZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOSAyMUgYTIgMiAwIDAgMSyLTJWNWEyIDIgMCAwIDEgMiyaDExbDUgNXYxMWEyIDIgMCAwIDEtMiAyelwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTcgMjEgMTcgMTMgNyAxMyAIDIxXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIIDMgNyAIDEIDhcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTYlzcycyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjZcIixcImNXCIXCIXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIXCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMFwiLFwieTFcIjpcIjRcIixcIngyXCIXCILjEyXCIsXCJMlwiOlwiMTUuODhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNCNwiLFwieTFcIjpcIjELjQXCIsXCJMlwiOlwiMjBcIixcInkyXCIXCIyMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjguMTJcIixcInkxXCIXCILjEyXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNlYXJjaCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjExXCIsXCJjeVwiOlwiMTFcIixcInJcIjpcIjhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjIxXCIsXCJMlwiOlwiMTYuNjVcIixcInkyXCIXCIxNiNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNlbmQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjJcIixcInkxXCIXCIyXCIsXCJMlwiOlwiMTFcIixcInkyXCIXCIxMwifXsewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMiAyIDEIDIyIDExIDEzIDIgOSAyMiAyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUVydmVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMlwiLFwieVwiOlwiMlwiLFwidlkdGhcIjpcIjIwXCIsXCJoZWlnaHRcIjpcIjhcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMlwiLFwieVwiOlwiMTRcIixcIndpZHRoXCIXCIyMFwiLFwiaGVpZhXCIXCIXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiNlwiLFwieDJcIjpcIjYuMDFcIixcInkyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiNiwMVwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUVdGluZMgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTkuNCAxNWExLjYIDEuNjUgMCAwIDAgLjMzIDEuODJsLjALjAYTIgMiAwIDAgMSAwIDIuODMgMiAyIDAgMCAxLTIuODMgMGwtLjALSwNmExLjYIDEuNjUgMCAwIDAtMSMiuMzMgMSNSAxLjYIDAgMCAwLTEgMSMVYyMWEyIDIgMCAwIDEtMiAyIDIgMiAwIDAgMSyLTJLSwOUExLjYIDEuNjUgMCAwIDAgOSAxOSYTEuNjUgMSNSAwIDAgMCxLjgyLjMzbCuMDYuMDZhMiAyIDAgMCAxLTIuODMgMCAyIDIgMCAwIDEgMCyLjgzbCwNiuMDZhMSNSAxLjYIDAgMCAwICzMyxLjgyIDEuNjUgMSNSAwIDAgMCxLjUxLTFIMEyIDIgMCAwIDEtMiyIDIgMiAwIDAgMSAyLTJoLjAQTEuNjUgMSNSAwIDAgMCALjYgOWExLjYIDEuNjUgMCAwIDAtLjMzLTEuODJsLSwNiuMDZhMiAyIDAgMCAxIDAtMiMyAyIDIgMCAwIDEgMiMyAwbCwNiwNmExLjYIDEuNjUgMCAwIDAgMSMizMgYTEuNjUgMSNSAwIDAgMCAxLTEuNTFWMEyIDIgMCAwIDEgMiyIDIgMiAwIDAgMSAyIDJLjAYTEuNjUgMSNSAwIDAgMCAxIDEuNTEgMSNSAxLjYIDAgMCAwIDEuODItLjMzbCwNiuMDZhMiAyIDAgMCAxIDIuODMgMCAyIDIgMCAwIDEgMCAyLjgzbCuMDYuMDZhMSNSAxLjYIDAgMCAwLSzMyAxLjgyVjlhMSNSAxLjYIDAgMCAwIDEuNTEgMUgyMWEyIDIgMCAwIDEgMiAyIDIgMiAwIDAgMSyIDJoLSwOWExLjYIDEuNjUgMCAwIDAtMSMSAxelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNoYXJlMiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEXCIsXCJjeVwiOlwiNVwiLFwiclwiOlwiMwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiNlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxOFwiLFwiYlcIjpcIjEXCIsXCJyXCIXCIzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOCOVwiLFwieTFcIjpcIjEzLjUxXCIsXCJMlwiOlwiMTUuNDJcIixcInkyXCIXCIxNyOVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjQxXCIsXCJMVwiOlwiNiMVwiLFwieDJcIjpcIjguNTlcIixcInkyXCIXCIxMCOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNoYXJlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTQgMTJOGEyIDIgMCAwIDAgMiAyaDEyYTIgMiAwIDAgMCAyLTJLThcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDYgMTIgMiAIDZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUhpZWxkTZmIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTELjYIDEYTYuOSALjkgMCAwIDAgLjMxLTJWNWwtOCzLTMuMTYgMSxOFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTQuNzMgNCMwIDVNMwIDYgOCAxMCAIDEwYTIwLjIIDIwLjIIDAgMCAwIDUuNjItNCzOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIyMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNoaWVsZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxMiAyMnMLTQgOCxMFYbCLTMtOCAzdjdjMCAIDggMTAgOCAxMHpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTaGwcGluZJhZyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkIDJMMyAdjEYTIgMiAwIDAgMCAyIDJoMTRhMiAyIDAgMCAwIDItMlYbCzLTRXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMwiLFwieTFcIjpcIjZcIixcIngyXCIXCIyMVwiLFwieTJcIjpcIjZcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiAxMGEIDQgMCAwIDEtOCAwXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUhvcHBpbmdDYXJIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiOVwiLFwiYlcIjpcIjIxXCIsXCJyXCIXCIxXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIyMFwiLFwiYlcIjpcIjIxXCIsXCJyXCIXCIxXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMSAxaDRsMiOCAxMyzOWEyIDIgMCAwIDAgMiAxLjYxaDkuNzJhMiAyIDAgMCAwIDItMSMUwyMyASDZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTaHVmZmxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTYgMyAyMSAzIDIxIDhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMjBcIixcIngyXCIXCIyMVwiLFwieTJcIjpcIjNcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjIxIDEIDIxIDIxIDEIDIxXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTVcIixcInkxXCIXCIxNVwiLFwieDJcIjpcIjIxXCIsXCJMlwiOlwiMjFcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiNFwiLFwieDJcIjpcIjlcIixcInkyXCIXCIXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUlkZWJhciAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjNcIixcInlcIjpcIjNcIixcIndpZHRoXCIXCIxOFwiLFwiaGVpZhXCIXCIxOFwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOVwiLFwieTFcIjpcIjNcIixcIngyXCIXCIXCIsXCJMlwiOlwiMjFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTalwQmFjayAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiMTkgMjAgOSAxMiAxOSAIDEIDIwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiNVwiLFwieTJcIjpcIjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTalwRmydFyZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiNSAIDEIDEyIDUgMjAgNSAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTlcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTlcIixcInkyXCIXCIxOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNsYWNrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTELjUgMTBjLSMyAwLTEuNSuNjctMSLTEuNXYtNWMwLSMyNyxLjUgMSLTEuNXMxLjUuNjcgMSIDEuNXYYzAgLjgzLSNyAxLjUtMSIDEuNXpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCIDEwSDEVjguNWMwLSMyNyxLjUgMSLTEuNXMxLjUuNjcgMSIDEuNSuNjcgMSLTEuNSAxLjVXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOSIDEYyMyAwIDEuNSNyAxLjUgMSdjVjMCAuODMtLjYIDEuNSxLjUgMSUzggMjEuMzMgOCAyMCdiYzAtLjgzLjYLTEuNSAxLjUtMSelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTMuNSAxNEgdjEuNWMwICMyuNjcgMSLTEuNSAxLjVTMiAxNizMyAyIDELjUgMiNyAxNCAzLjUgMTRXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTQgMTQuNWMwLSMyNyxLjUgMSLTEuNWgYyMyAwIDEuNSNyAxLjUgMScyuNjcgMSLTEuNSAxLjVoLTVjLSMyAwLTEuNSuNjctMSLTEuNXpcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNSIDESDEdjEuNWMwICMyNyAxLjUgMSIDEuNXMxLjUtLjYIDEuNSxLjUtLjYLTEuNSxLjUtMSelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEwIDkuNUMxMCALjYIDkuMzMgOCALjUgOGgtNUMyLjYIDggMiALjYIDIgOSUzIuNjcgMTEgMyIDExaDVjLjgzIDAgMSLSNyAxLjUtMSelwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTguNSASDEwVjMuNUMxMCAyLjYIDkuMzMgMiALjUgMlMIDIuNjcgNyAzLjUgNyNyAIDguNSAelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNsYXNoIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjkzXCIsXCJMVwiOlwiNCMwiLFwieDJcIjpcIjELjAXCIsXCJMlwiOlwiMTkuMDdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTbGlkZXJzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjRcIixcInkxXCIXCIyMVwiLFwieDJcIjpcIjRcIixcInkyXCIXCIxNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjRcIixcInkxXCIXCIxMFwiLFwieDJcIjpcIjRcIixcInkyXCIXCIzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjhcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMFwiLFwieTFcIjpcIjIxXCIsXCJMlwiOlwiMjBcIixcInkyXCIXCIxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIwXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIyMFwiLFwieTJcIjpcIjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxXCIsXCJMVwiOlwiMTRcIixcIngyXCIXCIXCIsXCJMlwiOlwiMTRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiMTZcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpUhcnRwaGuZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjVcIixcInlcIjpcIjJcIixcIndpZHRoXCIXCIxNFwiLFwiaGVpZhXCIXCIyMFwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiMThcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTbWlsZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOCAxNHMxLjUgMiAIDIgNCyIDQtMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIXCIsXCJMlwiOlwiOSwMVwiLFwieTJcIjpcIjlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNVwiLFwieTFcIjpcIjlcIixcIngyXCIXCIxNSwMVwiLFwieTJcIjpcIjlcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTcGVhaVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiNFwiLFwieVwiOlwiMlwiLFwidlkdGhcIjpcIjEXCIsXCJoZWlnaHRcIjpcIjIwXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiMTRcIixcInJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjZcIixcIngyXCIXCIxMiwMVwiLFwieTJcIjpcIjZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTcXVhcmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNYXIgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyIDIgMTUuMDkgOCyNiAyMiALjIIDEIDELjEIDELjEIDIxLjAyIDEyIDELjcIDUuODIgMjEuMDIgNyAxNCxNCAyIDkuMjcgOCMSALjIIDEyIDJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTdGwQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjlcIixcInlcIjpcIjlcIixcIndpZHRoXCIXCIXCIsXCJoZWlnaHRcIjpcIjZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlTdWgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIzXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjIyXCIsXCJMVwiOlwiNCyMlwiLFwieDJcIjpcIjUuNjRcIixcInkyXCIXCILjYXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTguMzZcIixcInkxXCIXCIxOCzNlwiLFwieDJcIjpcIjELjcXCIsXCJMlwiOlwiMTkuNzhcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIzXCIsXCJMlwiOlwiMTJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEyXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIxMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjQuMjJcIixcInkxXCIXCIxOSOFwiLFwieDJcIjpcIjUuNjRcIixcInkyXCIXCIxOCzNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjMXCIsXCJMVwiOlwiNSNFwiLFwieDJcIjpcIjELjcXCIsXCJMlwiOlwiNCyMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNbnJpcUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTcgMThhNSAIDAgMCAwLTEwIDBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjlcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCILjIyXCIsXCJMVwiOlwiMTAuMjJcIixcIngyXCIXCILjYXCIsXCJMlwiOlwiMTEuNjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxXCIsXCJMVwiOlwiMThcIixcIngyXCIXCIzXCIsXCJMlwiOlwiMThcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMVwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIxOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjELjMXCIsXCJMVwiOlwiMTEuNjRcIixcIngyXCIXCIxOSOFwiLFwieTJcIjpcIjEwLjIyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjNcIixcInkxXCIXCIyMlwiLFwieDJcIjpcIjFcIixcInkyXCIXCIyMlwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCAIDEyIDIgMTYgNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVNbnNldCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNyAxOGEIDUgMCAwIDAtMTAgMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjQuMjJcIixcInkxXCIXCIxMCyMlwiLFwieDJcIjpcIjUuNjRcIixcInkyXCIXCIxMSNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxOFwiLFwieDJcIjpcIjNcIixcInkyXCIXCIxOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiMThcIixcIngyXCIXCIyMwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTguMzZcIixcInkxXCIXCIxMSNFwiLFwieDJcIjpcIjELjcXCIsXCJMlwiOlwiMTAuMjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMwiLFwieTFcIjpcIjIyXCIsXCJMlwiOlwiMVwiLFwieTJcIjpcIjIyXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNiAIDEyIDkgOCAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVGFibGVIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiNFwiLFwieVwiOlwiMlwiLFwidlkdGhcIjpcIjEXCIsXCJoZWlnaHRcIjpcIjIwXCIsXCJyeFwiOlwiMlwiLFwicnlcIjpcIjJcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMTIuMDFcIixcInkyXCIXCIxOFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRhZyAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMCOSAxMyMWwtNyxNyALjEYTIgMiAwIDAgMSyLjgzIDBMMiAxMlYyaDEwbDguNTkgOCOWEyIDIgMCAwIDEgMCAyLjgyelwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjdcIixcInkxXCIXCIXCIsXCJMlwiOlwiNywMVwiLFwieTJcIjpcIjdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUYXJnZXQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxMlwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIxMFwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiNlwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRlcmpbmFsIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiNCAxNyAxMCAxMSAIDVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxMlwiLFwieTFcIjpcIjEXCIsXCJMlwiOlwiMjBcIixcInkyXCIXCIxOVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRoZXJtbldGVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDELjcVjMuNWEyLjUgMiIDAgMCAwLTUgMHYxMSyNmELjUgNCIDAgMSAwIDUgMHpcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUaHVtYnNEbduIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEwIDEdjRhMyAzIDAgMCAwIDMgMwLTlWMkgLjcyYTIgMiAwIDAgMCyIDEuNwtMSzOCAYTIgMiAwIDAgMCAyIDIuMptNyxMgyLjYQTIuMzEgMizMSAwIDAgMSAyMiAdjdhMizMSAyLjMxIDAgMCAxLTIuMzMgMkgxNwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRodWicVwIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDlWNWEzIDMgMCAwIDAtMyzbCIDlMTFoMTEuMjhhMiAyIDAgMCAwIDItMSbDEuMzgtOWEyIDIgMCAwIDAtMiyLjNTTcgMjJINGEyIDIgMCAwIDEtMiydiYTIgMiAwIDAgMSAyLTJoMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRvZdsZUxlZnQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIxXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMjJcIixcImhlaWdodFwiOlwiMTRcIixcInJXCIXCIXCIsXCJyeVwiOlwiNwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiOFwiLFwiYlcIjpcIjEyXCIsXCJyXCIXCIzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVGnZxlUmlnaHQgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIxXCIsXCJXCIXCIXCIsXCJaWRaFwiOlwiMjJcIixcImhlaWdodFwiOlwiMTRcIixcInJXCIXCIXCIsXCJyeVwiOlwiNwifXsewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTZcIixcImNXCIXCIxMlwiLFwiclwiOlwiMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRvbwgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTQuNyALjNhMSAxIDAgMCAwIDAgMSbDEuNiAxLjZhMSAxIDAgMCAwIDEuNCAwbDMuNzctMyNEIDYgMCAwIDEtNyNCALjkbCLjkxIDYuOTFhMixMiAyLjEyIDAgMCAxLTMtMwLjkxLTYuOTFhNiAIDAgMCAxIDcuOTQtNyNGwtMyNiAzLjcelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRyYXNoMiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjMgNiAIDYgMjEgNlwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDZMTRhMiAyIDAgMCAxLTIgMkgYTIgMiAwIDAgMSyLTJWNmzIDBWNGEyIDIgMCAwIDEgMiyaDRhMiAyIDAgMCAxIDIgMnYyXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTBcIixcInkxXCIXCIxMVwiLFwieDJcIjpcIjEwXCIsXCJMlwiOlwiMTdcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNFwiLFwieTFcIjpcIjExXCIsXCJMlwiOlwiMTRcIixcInkyXCIXCIxNwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRyYXNoIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMyAIDUgNiAyMSAXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTkgNnYxNGEyIDIgMCAwIDEtMiAySDdhMiAyIDAgMCAxLTItMlYbTMgMFYYTIgMiAwIDAgMSAyLTJoNGEyIDIgMCAwIDEgMiAydjJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUcmVsbGgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiNwiLFwieVwiOlwiNwiLFwidlkdGhcIjpcIjNcIixcImhlaWdodFwiOlwiOVwifXsewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMTRcIixcInlcIjpcIjdcIixcIndpZHRoXCIXCIzXCIsXCJoZWlnaHRcIjpcIjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUcmVuZGluZRvdgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMyAxOCAxMyIDguNSALjUgMTMuNSAxIDZcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDEIDIzIDEIDIzIDEyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVHJlbmRpbmdVcCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjIzIDYgMTMuNSAxNSIDguNSAxMCIDEgMThcInLHtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDYgMjMgNiAyMyAxMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRyaWFuZxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEwLjIIDMuODZMMSMiAxOGEyIDIgMCAwIDAgMSMSAzaDELjkYTIgMiAwIDAgMCAxLjcxLTNMMTMuNzEgMyNmEyIDIgMCAwIDAtMyMiAwelwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVRydWNrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMVwiLFwieVwiOlwiMwiLFwidlkdGhcIjpcIjEXCIsXCJoZWlnaHRcIjpcIjEzXCJfSxXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEIDggMjAgOCAyMyAxMSAyMyAxNiAxNiAxNiAxNiAXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCILjVcIixcImNXCIXCIxOCXCIsXCJyXCIXCIyLjVcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjELjVcIixcImNXCIXCIxOCXCIsXCJyXCIXCIyLjVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUdiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjJcIixcInlcIjpcIjdcIixcIndpZHRoXCIXCIyMFwiLFwiaGVpZhXCIXCIxNVwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNyAyIDEyIDcgNyAyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVHdpdGNoIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIxIDJIMYxNmgdjRsNCaDVsNCVjJbSxMCAVjdtNSAVjdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlUdldGVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIzIDNhMTAuOSAxMCIDAgMCAxLTMuMTQgMSMyALjQIDQuNDggMCAwIDAtNyNiAzdjFBMTAuNjYgMTAuNjYgMCAwIDEgMyAcyIDkgNSAxMExMSNCAxMSNCAwIDAgMSIDJjOSAIDIwIDAgMjAtMTEuNWELjUgNCIDAgMCAwLSwOCuODNBNyMiALjcyIDAgMCAwIDIzIDNXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVHlwZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjQgNyAIDQgMjAgNCAyMCAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOVwiLFwieTFcIjpcIjIwXCIsXCJMlwiOlwiMTVcIixcInkyXCIXCIyMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiNFwiLFwieDJcIjpcIjEyXCIsXCJMlwiOlwiMjBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlVbWJyZWxsYSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMyAxMmExMSwNSAxMSwNSAwIDAgMCyMiAwemtNSAYTMgMyAwIDAgMSIDBLTdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlVbmRlcmxpbmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNiAzdjdhNiAIDAgMCAwIDYgNiAIDYgMCAwIDAgNiVjNcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiMjFcIixcIngyXCIXCIyMFwiLFwieTJcIjpcIjIxXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVWsbNrIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJyZWNXCIsXCJhdHRyXCIewieFwiOlwiMwiLFwieVwiOlwiMTFcIixcIndpZHRoXCIXCIxOFwiLFwiaGVpZhXCIXCIxMVwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNNyAxMVYYTUgNSAwIDAgMSALjktMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVVwbGhZENsbVkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTYgMTYgMTIgMTIgOCAxNlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEyXCIsXCJMVwiOlwiMTJcIixcIngyXCIXCIxMlwiLFwieTJcIjpcIjIxXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjAuMzkgMTguMzlBNSAIDAgMCAwIDEIDloLTEuMjZBOCAIDAgMSAwIDMgMTYuMwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTYgMTYgMTIgMTIgOCAxNlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVVwbGhZCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMSAxNXYYTIgMiAwIDAgMSyIDJINWEyIDIgMCAwIDEtMiydiXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNyAIDEyIDMgNyAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIzXCIsXCJMlwiOlwiMTJcIixcInkyXCIXCIxNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVVzZXJDaGVjayAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiAyMXYtMmEIDQgMCAwIDAtNCSDVhNCAIDAgMCAwLTQgNHYyXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCILjVcIixcImNXCIXCIXCIsXCJyXCIXCIXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxNyAxMSAxOSAxMyAyMyAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVXNlckpbnVzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDIxdiyYTQgNCAwIDAgMCLTRINWEIDQgMCAwIDAtNCAdjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjguNVwiLFwiYlcIjpcIjdcIixcInJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMwiLFwieTFcIjpcIjExXCIsXCJMlwiOlwiMTdcIixcInkyXCIXCIxMVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVVzZXJQbHVzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDIxdiyYTQgNCAwIDAgMCLTRINWEIDQgMCAwIDAtNCAdjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjguNVwiLFwiYlcIjpcIjdcIixcInJcIjpcIjRcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIyMFwiLFwieTFcIjpcIjhcIixcIngyXCIXCIyMFwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjNcIixcInkxXCIXCIxMVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlVcVyWCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiAyMXYtMmEIDQgMCAwIDAtNCSDVhNCAIDAgMCAwLTQgNHYyXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCILjVcIixcImNXCIXCIXCIsXCJyXCIXCIXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMThcIixcInkxXCIXCIXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIxMwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIzXCIsXCJMVwiOlwiOFwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlVcVyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTIwIDIxdiyYTQgNCAwIDAgMCLTRIOGEIDQgMCAwIDAtNCAdjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjEyXCIsXCJjeVwiOlwiNwiLFwiclwiOlwiNFwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVVzZXJzIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDIxdiyYTQgNCAwIDAgMCLTRINWEIDQgMCAwIDAtNCAdjJcInLHtcInRhZwiOlwiYlyYxlXCIsXCJhdHRyXCIewiYhcIjpcIjlcIixcImNXCIXCIXCIsXCJyXCIXCIXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMjMgMjFLTJhNCAIDAgMCAwLTMtMyNwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDMuMTNhNCAIDAgMCAxIDAgNyNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVZpZGVvTZmIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEIDEdjFhMiAyIDAgMCAxLTIgMkgzYTIgMiAwIDAgMSyLTJWNEyIDIgMCAwIDEgMiyaDJtNSNiAwSDEYTIgMiAwIDAgMSAyIDJMyzNGwxIDFMMjMgNYxMFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjFcIixcInkxXCIXCIxXCIsXCJMlwiOlwiMjNcIixcInkyXCIXCIyMwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVZpZGVvIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIyMyAIDEIDEyIDIzIDEIDIzIDdcInLHtcInRhZwiOlwicmVjdFwiLFwiYXRclwiOntcInhcIjpcIjFcIixcInlcIjpcIjVcIixcIndpZHRoXCIXCIxNVwiLFwiaGVpZhXCIXCIxNFwiLFwicnhcIjpcIjJcIixcInJXCIXCIyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVmpYVtYWlsIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiNSXCIsXCJjeVwiOlwiMTEuNVwiLFwiclwiOlwiNCXCJfSxXCJYWdcIjpcImNpcmNsZVwiLFwiYXRclwiOntcImNXCIXCIxOCXCIsXCJjeVwiOlwiMTEuNVwiLFwiclwiOlwiNCXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNSXCIsXCJMVwiOlwiMTZcIixcIngyXCIXCIxOCXCIsXCJMlwiOlwiMTZcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlWbxbWUxIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMSAIDYgOSAyIDkgMiAxNSAIDEIDExIDEIDExIDVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNSNCALjQYTUgNSAwIDAgMSAwIDcuMDdcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlWbxbWUyIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwbxZuXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxMSAIDYgOSAyIDkgMiAxNSAIDEIDExIDEIDExIDVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxOSwNyALjkzYTEwIDEwIDAgMCAxIDAgMTQuMTRNMTUuNTQgOCNmEIDUgMCAwIDEgMCALjAXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVmsdWlWCAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiMTEgNSAIDkgMiAIDIgMTUgNiAxNSAxMSAxOSAxMSAXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMjNcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTdcIixcInkyXCIXCIxNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiMTVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlWbxbWUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjExIDUgNiAIDIgOSAyIDEIDYgMTUgMTEgMTkgMTEgNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVdhdGNoIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiNwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiMTIgOSAxMiAxMiAxMyIDEzLjVcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiMSAxNyzNWwtLjMIDMuODNhMiAyIDAgMCAxLTIgMSMkgLjgzYTIgMiAwIDAgMSyLTEuODJsLSzNSzLjgzbSwMSxMCbCzNSzLjgzQTIgMiAwIDAgMSALjgzIDFoNCzNWEyIDIgMCAwIDEgMiAxLjgybCzNSAzLjgzXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpVlmaUmZiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxXCIsXCJMVwiOlwiMVwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiMjNcInLHtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkxNiMiAxMSwNkExMCNCAxMCNCAwIDAgMSAxOSAxMiNVwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTUgMTIuNTVhMTAuOTQgMTAuOTQgMCAwIDEgNSxNyyLjMXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMTAuNzEgNSwNUExNiAxNiAwIDAgMSAyMiOCAXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNMSMiAYTELjkxIDELjkxIDAgMCAxIDQuNyyLjgXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOCMyAxNixMWEIDYgMCAwIDEgNiNSAwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiMjBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlXaWZpIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTUgMTIuNTVhMTEgMTEgMCAwIDEgMTQuMDggMFwifXsewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTEuNDIgOWExNiAxNiAwIDAgMSAyMSxNiAwXCJfSxXCJYWdcIjpcInBhdGhcIixcImFdHJcIjpXCJkXCIXCJNOCMyAxNixMWEIDYgMCAwIDEgNiNSAwXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTJcIixcInkxXCIXCIyMFwiLFwieDJcIjpcIjEyLjAxXCIsXCJMlwiOlwiMjBcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlXaWkIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJwYXRoXCIsXCJhdHRyXCIewiZFwiOlwiTTkuNTkgNCOUEyIDIgMCAxIDEgMTEgOEgybTEwLjUIDExLjQxQTIgMiAwIDEgMCAxNCAxNkgybTELjczLTguMjdBMiIDIuNSAwIDEgMSAxOSIDEySDJcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlYQlyYxlIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTJcIixcImNXCIXCIxMlwiLFwiclwiOlwiMTBcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxNVwiLFwieTFcIjpcIjlcIixcIngyXCIXCIXCIsXCJMlwiOlwiMTVcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTVcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlYTNYWdvbiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWdvblwiLFwiYXRclwiOntcInBvaWcwiOlwiNyNiAyIDELjEIDIgMjIgNyNiAyMiAxNixNCAxNixNCAyMiALjgIDIyIDIgMTYuMTQgMiALjgIDcuODYgMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjlcIixcInkyXCIXCIxNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTVcIixcInkyXCIXCIxNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVhTcXVhcmUgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInJlYRcIixcImFdHJcIjpXCJXCIXCIzXCIsXCJXCIXCIzXCIsXCJaWRaFwiOlwiMThcIixcImhlaWdodFwiOlwiMThcIixcInJXCIXCIyXCIsXCJyeVwiOlwiMlwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjlcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTVcIixcInkyXCIXCIxNVwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjEXCIsXCJMVwiOlwiOVwiLFwieDJcIjpcIjlcIixcInkyXCIXCIxNVwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVggKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMThcIixcInkxXCIXCIXCIsXCJMlwiOlwiNlwiLFwieTJcIjpcIjEXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiNlwiLFwieTFcIjpcIjZcIixcIngyXCIXCIxOFwiLFwieTJcIjpcIjEXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpWWdHViZSAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGFaFwiLFwiYXRclwiOntcImRcIjpcIkyMiNCALjQyYTIuNzggMiOCAwIDAgMCxLjkLTJDMTguODggNCAxMiAIDEyIDRzLTYuODggMCLjYuNDZhMiOCAyLjcIDAgMCAwLTEuOTQgMkEyOSAyOSAwIDAgMCAxIDExLjcYTIIDIIDAgMCAwICNiALjMzQTIuNzggMiOCAwIDAgMCAzLjQgMTljMSMiNiALjYuNDYgOCLjQczYuODggMCALjYtLjQYTIuNzggMiOCAwIDAgMCAxLjkLTIgMjkgMjkgMCAwIDAgLjQLTUuMjUgMjkgMjkgMCAwIDAtLjQLTUuMzNXCJfSxXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjkuNzUgMTUuMDIgMTUuNSAxMSNSALjcIDguNDggOSNSAxNSwMlwifXdfSkocHJvcHMpOxufTtcbmVcGydCBmdWjdGlvbiBGaVphcEmZiAocHJvcHMpIHtcbiAgcmVdXJuIEdlbkljboewidGFnXCIXCJzdmdcIixcImFdHJcIjpXCJaWVQmXCIXCIwIDAgMjQgMjRcIixcImZpbGxcIjpcImvbmVcIixcInNcmrZVwiOlwiYVycmVudENvbGyXCIsXCJzdHJvaVXaWRaFwiOlwiMlwiLFwicRybtlTGluZWNhcFwiOlwicmbmRcIixcInNcmrZUxpbmVqbluXCIXCJybVuZFwifSxcImNoaWxkXCIWtcInRhZwiOlwicGseWxpbmVcIixcImFdHJcIjpXCJwbludHNcIjpcIjEyLjQxIDYuNzUgMTMgMiAxMCNyALjkyXCJfSxXCJYWdcIjpcInBvbHlsaWlXCIsXCJhdHRyXCIewicGpbnRzXCIXCIxOCNyAxMiMSAyMSAxMCAxNSNiAxMFwifXsewidGFnXCIXCJwbxbGluZVwiLFwiYXRclwiOntcInBvaWcwiOlwiOCAIDMgMTQgMTIgMTQgMTEgMjIgMTYgMTZcInLHtcInRhZwiOlwibGluZVwiLFwiYXRclwiOntcIngxXCIXCIxXCIsXCJMVwiOlwiMVwiLFwieDJcIjpcIjIzXCIsXCJMlwiOlwiMjNcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlaYXAgKHBybBzKSBXGgIHJldHVybiBHZWJYuKHtcInRhZwiOlwicZnXCIsXCJhdHRyXCIewidmlldJveFwiOlwiMCAwIDIIDIXCIsXCJmaWxsXCIXCJublXCIsXCJzdHJvaVcIjpcImNcnJlbnRDbxvclwiLFwicRybtlVlkdGhcIjpcIjJcIixcInNcmrZUxpbmVjYXBcIjpcInJvdWkXCIsXCJzdHJvaVMaWlampblwiOlwicmbmRcInsXCJjaGlsZFwiOltXCJYWdcIjpcInBvbHlnbcIixcImFdHJcIjpXCJwbludHNcIjpcIjEzIDIgMyAxNCAxMiAxNCAxMSAyMiAyMSAxMCAxMiAxMCAxMyAyXCJfVKShwcmwcykXGOxuZXhwbJIGZbmNaWuIEZpWmvbUluIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTFcIixcImNXCIXCIxMVwiLFwiclwiOlwiOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiMjFcIixcIngyXCIXCIxNiNVwiLFwieTJcIjpcIjELjYXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiMTFcIixcInkxXCIXCIXCIsXCJMlwiOlwiMTFcIixcInkyXCIXCIxNFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjhcIixcInkxXCIXCIxMVwiLFwieDJcIjpcIjEXCIsXCJMlwiOlwiMTFcInXXpKHBybBzKTtcbnXGleHBvcnQgZnVuYRpbgRmlabtTVIChwcmwcykgexuICByZXRcmgRVuSWNvbihXCJYWdcIjpcInNZwiLFwiYXRclwiOntcInZpZXdCbhcIjpcIjAgMCAyNCAyNFwiLFwiZmlsbFwiOlwibmuZVwiLFwicRybtlXCIXCJjdXJyZWQsbJcIixcInNcmrZVdpZHRoXCIXCIyXCIsXCJzdHJvaVMaWlYFwXCIXCJybVuZFwiLFwicRybtlTGluZWpvaWcIjpcInJvdWkXCJLFwiYhpbGRcIjpbewidGFnXCIXCJjaXJjbGVcIixcImFdHJcIjpXCJjeFwiOlwiMTFcIixcImNXCIXCIxMVwiLFwiclwiOlwiOFwifXsewidGFnXCIXCJsaWlXCIsXCJhdHRyXCIewieDFcIjpcIjIxXCIsXCJMVwiOlwiMjFcIixcIngyXCIXCIxNiNVwiLFwieTJcIjpcIjELjYXCJfSxXCJYWdcIjpcImxpbmVcIixcImFdHJcIjpXCJMVwiOlwiOFwiLFwieTFcIjpcIjExXCIsXCJMlwiOlwiMTRcIixcInkyXCIXCIxMVwifXdfSkocHJvcHMpOxufTtcbiIsICIvKipcbiAqICBiYXNlNjQudHNcbiAqXGgKiAgTGljZWzZWQgdWkZXIgdGhlIEJTRCAzLUNsYXVzZSBMaWNlbnNlLlxuICogICAgaHRcDovLwZWzbVyYUubJnLxpYVucVzLJTRCzLUNsYXVzZVxuICpcbiAqICBSZWZlcmVuYVzOlxuICogICAgaHRcDovLVuLndpalwZWRpYSvcmcvdlraSCYXNlNjRcbiAqXGgKiBAYXVaGyIERhbiBLbdhaSAoaHRcHMLynaXRodWIuYtLRhbmtvZFpKVxuICovXGjbzdCBZXJzaWuIDgJzMuNyyJztcbiqKlxuICogQGRlcHJlYFZWQgdXNlIGxvdVyYFzZSBgdmVyclvbmAuXGgKicbmNvbnNIFZFUlNJTgPSBZXJzaWuOxuYucQgXhhcFbIgPSBeXBlbYgYXRvYiAPTgJZbmNaWuJztcbmNvbnNIFoYXNidGhIDgdHlwZWmIGJbEgPTICdmdWjdGlvbicXGjbzdCBfaGFzQnVmZmVyIDgdHlwZWmIEJZmZlciAPTgJZbmNaWuJztcbmNvbnNIFURCAIHRcGVvZiBUZXhRGVjbRlciAPTgJZbmNaWuJyA/IGldyBUZXhRGVjbRlcigpIDogdWkZWZpbmVkOxuYucQgXRFIDgdHlwZWmIFRleHRFbmNvZGVyIDPSAnZnVuYRpbnIDgbmVIFRleHRFbmNvZGVyKCkgOiBbmRlZmluZWQXGjbzdCBiNjRjaCAICdBQkNERUZHSElKSxNTkQUVJTVFVWVhZWmFiYRlZmdoaWprbGubBxcnNdXZeHlMDEyMzQNjcOSsvPScXGjbzdCBiNjRjaHMgPSBBcnJheSwcmbRcGUucxpYUuYFsbChiNjRjaCkXGjbzdCBiNjRYWIgPSAoKGEpID+IHtcbiAgICBsZXQgdGFiIDgeXGgICAgYSmbJFYWNoKChjLCBpKSAPiBYWJbYgPSBpKTtcbiAgICByZXRcmgdGFiOxufSkoYjYYhzKTtcbmNvbnNIGINHJlIDgLoPzpbQSaYSXFxkKxcLNHpKjoPzpbQSaYSXFxkKxcLMnoPzoPSk/fFtBLVphLXpcXGQrXFwvXXszfT/KTkLztcbmNvbnNIFmcmtQMgPSBTdHJpbmcuZnJvbUNoYXJDbRlLmJpbmQoURyaWnKTtcbmNvbnNIFVOEFmcmtIDgdHlwZWmIFVpbnQQXJyYXkuZnJvbSAPTgJZbmNaWuJxuICAgIDgVWludDhBcnJheSmcmtLmJpbmQoVWludDhBcnJheSlcbiAgICAIChpdCwgZmgPSAoeCkgPTgeCkgPTgbmVIFVpbnQQXJyYXkoQXJyYXkucHJvdGeXBlLnNsaWNlLmNhbGwoaXQsIDApLmhcChmbikpOxuYucQgXrVXJpUFmZSAIChzcmMpID+IHNyYxuICAgICyZXBsYWNlKCLcsICcnKSyZXBsYWNlKCbKxcLvZywgKGwKSAPiBtMCAPSAnKycgPyAnLScgOiAnXycpOxuYucQgXRpZHlCNjQgPSAocykgPTgcyyZXBsYWNlKCbXkEtWmEtejAtOVxcKxcLvZywgJycpOxuLyoqXGgKiBwbxZmlsbCBZXJzaWuIGmIGBidGhYFxuICovXGjbzdCBidGhUGseWZpbGwgPSAoYmluKSAPiBXGgICAgLygYucsZSsbcoJBvbHlmaWxsZWQnKTtcbiAgICBsZXQgdTMyLCBjMCwgYzEsIGMyLCBhcMgPSAnJztcbiAgICBjbzdCBwYWQgPSBiaWubGVuZRoICUgMztcbiAgICBmbIgKGxldCBpIDgMDsgaSAIGJpbisZWndGgKSBXGgICAgICAgIGlmICgoYzAgPSBiaWuYhhckNvZGVBdChpKyspKSA+IDINSBfFxuICAgICAgICAgICAgKGMxIDgYmluLmNoYXJDbRlQXQoaSsrKSkgPiAyNTUgfHxcbiAgICAgICAgICAgIChjMiAIGJpbijaGFyQkZUFKGkrKykpIDgMjUKVxuICAgICAgICAgICAgdGhybcgbmVIFRcGVFcnJvcignaWYWxpZCBjaGFyYWNZXIgZmbmQnKTtcbiAgICAgICAgdTMyIDgKGMwIDwIDEKSBIChjMSAPCAKSBIGMyOxuICAgICAgICBhcMgKzgYjYYhzWUzMiA+PiAxOCAmIDYzXVxuICAgICAgICAgICAgKyBiNjRjaHNbdTMyID+IDEyICYgNjNdXGgICAgICAgICAgICArIGINGNoctMzIgPjgNiAmIDYzXVxuICAgICAgICAgICAgKyBiNjRjaHNbdTMyICYgNjNdOxuICAgIHcbiAgICByZXRcmgcGFkIDgYXNjLnNsaWNlKDAsIHBhZCAtIDMpICsgXCIPTcIizdWJzdHJpbmcocGFkKSAIGFzYztcbnXGvKipcbiAqIGRvZXMgdhhdCBgdluZGLmJbFgIGmIHdlYiBicmcVycyBkbycbiAqIEBwYXJhbSBURyaWnfSBiaWgYmluYXJIHNcmluZxuICogQHJldHVybnMgeNcmluZgQmFzZTYLWVuYkZWQgcRyaWnXGgKicbmNvbnNIFidGhIDgXhhcJbEgPyAoYmluKSAPiBidGhKGJpbilcbiAgICAIFoYXNCdWZmZXIgPyAoYmluKSAPiBCdWZmZXIuZnJvbShiaWsICdiaWhcnknKSbNcmluZygnYmFzZTYJylcbiAgICAgICAgOiBidGhUGseWZpbGwXGjbzdCBfZnJvbVVpbnQQXJyYXkgPSBfaGFzQnVmZmVyXGgICAgPyAodThhKSAPiBCdWZmZXIuZnJvbShOGEpLnRvURyaWnKCdiYXNlNjQnKVxuICAgIDogKHUYSkgPTgexuICAgICAgICAvLyBjZigaHRcHMLyzdGFjaZXJmbGLmNvbSxdWVzdGlvbnMvMTIMTAwMDEvaGLXRvLWNvbnZlcnQtdWludDgtYXJyYXktdGtYmFzZTYLWVuYkZWQtcRyaWnLzEyNzEzMzIIzEyNzEzMzIXGgICAgICAgIGNvbnNIGheGFyZMgPSAweDEwMDAXGgICAgICAgIGxldCBzdHJzIDgWXGgICAgICAgIGZvciAobGVIGkgPSAwLCBsIDgdThhLmxlbmdaDsgaSAIGwIGkgKzgbWFYXJncykgexuICAgICAgICAgICAgcRycywdXNoKFmcmtQMuYXBwbHkobnVsbCwgdThhLnNYmFycmFKGksIGkgKyBtYXhhcmdzKSkpOxuICAgICAgICBXGgICAgICAgIHJldHVybiBfYnRvYShzdHJzLmpvaWoJycpKTtcbiAgICBOxuLyoqXGgKiBjbZXJcyBhIFVpbnQQXJyYXkgdGgYSBCYXNlNjQgcRyaWnLlxuICogQHBhcmFtIHtibsZWFufSBbdXJscFmZVgVVJMLWFuZCmaWxlbmFtZSzYWZlIGEgbGEgUkZDNDYOCBcdTAwQTcXGgKiBAcmVdXJucyBcRyaWnfSBCYXNlNjQgcRyaWnXGgKicbmNvbnNIGZybVaWOEFycmFIDgKHUYSwgdXJscFmZSAIGZhbHNlKSAPiBcmxzYWZlIDgXrVXJpUFmZShfZnJvbVVpbnQQXJyYXkodThhKSkgOiBfZnJvbVVpbnQQXJyYXkodThhKTtcbivIFRoaXMgdHJpYsgaXMgZmbmQgYnJvaVuIGhdHBzOivZlaHViLmNvbSkYWrbdhaSqcyiYXNlNjQvaXNzdWVzLzEzMFxuLygYucQgdXRvYiAIChzcmMIHNcmluZykgPTgdWlcNhcGUoZWjbRlVVJJQtcGuZWKHNyYykpOxuLygcmVZXJaWnIGdvbQgbxkIGZhdGlvbmVkIHJlZVcFxuYucQgYJfdXRvYiAIChjKSAPiBXGgICAgaWYgKGMubGVuZRoIDwgMikgexuICAgICAgICBYXIgYMgPSBjLmNoYXJDbRlQXQoMCkXGgICAgICAgIHJldHVybiBjYyAIDBODAgPyBjXGgICAgICAgICAgICAIGNjIDwgMHgMDAgPyAoXZybDQygweGMwIHwgKGNjID+PiAKSlcbiAgICAgICAgICAgICAgICArIFmcmtQMoMHgMCBIChjYyAmIDBMYpKSlcbiAgICAgICAgICAgICAgICAIChfZnJvbUNDKDBZTAgfCAoKGNjID+PiAxMikgJiAweDBmKSlcbiAgICAgICAgICAgICAgICAgICAgKyBfZnJvbUNDKDBODAgfCAoKGNjID+PiAKSAmIDBMYpKVxuICAgICAgICAgICAgICAgICAgICArIFmcmtQMoMHgMCBIChjYyAmIDBMYpKSkXGgICAgfVxuICAgIGVscUgexuICAgICAgICBYXIgYMgPSAweDEwMDAwXGgICAgICAgICAgICArIChjLmNoYXJDbRlQXQoMCkgLSAweEQMDApICogMHgMDBcbiAgICAgICAgICAgICsgKGMuYhhckNvZGVBdCgxKSAtIDBREMwMCkXGgICAgICAgIHJldHVybiAoXZybDQygweGYwIHwgKChjYyA+PjgMTgpICYgMHgwNykpXGgICAgICAgICAgICArIFmcmtQMoMHgMCBICgoYMgPj+IDEyKSAmIDBMYpKVxuICAgICAgICAgICAgKyBfZnJvbUNDKDBODAgfCAoKGNjID+PiAKSAmIDBMYpKVxuICAgICAgICAgICAgKyBfZnJvbUNDKDBODAgfCAoYMgJiAweDNmKSkpOxuICAgIHcbnXGjbzdCByZVdGiIDgLtcXHVEODAwLVxcdURCRkZdWxcdURDMDAtXFxREZGRkZdfFteXFxMDAtXFxNZdLcXGvKipcbiAqIEBkZXByZWNhdGVkIHNobVsZCBoYXZlIGJlZWgaWZXJuYWwgdXNlIGubHkuXGgKiBAcGFyYWgeNcmluZgcJjIFVURiIHNcmluZxuICogQHJldHVybnMgeNcmluZgVVRGLTEIHNcmluZxuICovXGjbzdCBdGiIDgKHUpID+IHUucmVwbGFjZShyZVdGiLCBjYldGiKTtcbivXGjbzdCBfZWjbRlIDgXhhcJZmZlclxuICAgIDgKHMpID+IEJZmZlcimcmtKHMsICddGYJykudGTdHJpbmcoJJhcUNCcpXGgICAgOiBfVEVcbiAgICAgICAgPyAocykgPTgXZybVaWOEFycmFKFURSlbmNvZGUocykpXGgICAgICAgIDogKHMpID+IFidGhKHVbIocykpOxuLyoqXGgKiBjbZXJcyBhIFVURiLWVuYkZWQgcRyaWnIHRvIGEgQmFzZTYIHNcmluZycbiAqIEBwYXJhbSBYmvbGVhbngWVybHNhZmVdIGlmIGBcnVlYCBtYWtlIHRoZSByZXNbHQgVVJMLXNhZmVcbiAqIEByZXRcmzIHtzdHJpbmdIEJhcUNCBzdHJpbmdcbiAqLxuYucQgZWjbRlIDgKHNyYywgdXJscFmZSAIGZhbHNlKSAPiBcmxzYWZlXGgICAgPyBfbWtVcmlTYWZlKFlbmNvZGUocJjKSlcbiAgICAIFlbmNvZGUocJjKTtcbiqKlxuICogYudmVydHMgYSBVVEYtOClbmNvZGVkIHNcmluZyBbyBVUkwtcFmZSBCYXNlNjQgUkZDNDYOCBcdTAwQTcLlxuICogQHJldHVybnMgeNcmluZgQmFzZTYIHNcmluZxuICovXGjbzdCBlbmNvZGVVUkkgPSAocJjKSAPiBlbmNvZGUocJjLCBcnVlKTtcbivIFRoaXMgdHJpYsgaXMgZmbmQgYnJvaVuIGhdHBzOivZlaHViLmNvbSkYWrbdhaSqcyiYXNlNjQvaXNzdWVzLzEzMFxuLygYucQgYnRvdSAIChzcmMIHNcmluZykgPTgZGVjbRlVVJJQtcGuZWKGVzYFwZShzcmMpKTtcbivIHJldmVydGluZyBnbkIGsZCBmYXRpblZCByZWdleHBcbmNvbnNIHJlXJbUgPSAvWxceEMwLVxceERGXVtcXHgMCcXHhCRlWxceEUwLVxceEVGXVtcXHgMCcXHhCRlMnWxceEYwLVxceEYXVtcXHgMCcXHhCRlMvZztcbmNvbnNIGNiXJbUgPSAoYNjYykgPTgexuICAgIHNaXRjaCAoYNjYysZWndGgpIHtcbiAgICAgICAgYFzZSAOlxuICAgICAgICAgICAgdmFyIGNwIDgKCgweDAICYgYNjYyjaGFyQkZUFKDApKSAPCAxOClcbiAgICAgICAgICAgICAgICBICgoMHgzZiAmIGNjYMuYhhckNvZGVBdCgxKSkgPDwgMTIpXGgICAgICAgICAgICAgICAgfCAoKDBMYgJiBjYNjLmNoYXJDbRlQXQoMikpIDwIDYpXGgICAgICAgICAgICAgICAgfCAoMHgzZiAmIGNjYMuYhhckNvZGVBdCgzKSksIGmZnNldCAIGNwICgMHgxMDAwMDtcbiAgICAgICAgICAgIHJldHVybiAoXZybDQygobZmcVID+PiAxMCkgKyAweEQMDApXGgICAgICAgICAgICAgICAgKyBfZnJvbUNDKChvZmZzZXQgJiAweDNGRikgKyAweERDMDApKTtcbiAgICAgICAgYFzZSAzOlxuICAgICAgICAgICAgcmVdXJuIFmcmtQMoKCgweDBmICYgYNjYyjaGFyQkZUFKDApKSAPCAxMilcbiAgICAgICAgICAgICAgICBICgoMHgzZiAmIGNjYMuYhhckNvZGVBdCgxKSkgPDwgNilcbiAgICAgICAgICAgICAgICBICgweDNmICYgYNjYyjaGFyQkZUFKDIpKSkXGgICAgICAgIGRlZmFbHQXGgICAgICAgICAgICByZXRcmgXZybDQygoKDBMWYgJiBjYNjLmNoYXJDbRlQXQoMCkpIDwIDYpXGgICAgICAgICAgICAgICAgfCAoMHgzZiAmIGNjYMuYhhckNvZGVBdCgxKSkpOxuICAgIHcbnXGvKipcbiAqIEBkZXByZWNhdGVkIHNobVsZCBoYXZlIGJlZWgaWZXJuYWwgdXNlIGubHkuXGgKiBAcGFyYWgeNcmluZgcJjIFVURixNiBzdHJpbmdcbiAqIEByZXRcmzIHtzdHJpbmdIFVURiIHNcmluZxuICovXGjbzdCBidGIDgKGIpID+IGIucmVwbGFjZShyZVidGLCBjYlidGKTtcbiqKlxuICogcGseWZpbGwgdmVyclvbiBvZiBgYXRvYmBcbiAqLxuYucQgYXRvYlBvbHlmaWxsIDgKGFzYykgPTgexuICAgICvIGNvbnNvbGUubGnKCdwbxZmlsbGVkJykXGgICAgYXNjIDgYXNjLnJlcGxhYUoLxccysvZywgJycpOxuICAgIGlmICghYjYcmUudGVzdChhcMpKVxuICAgICAgICBaHJvdyBuZXcgVHlwZUVycmyKCdtYWxmbJtZWQgYmFzZTYLicpOxuICAgIGFzYyArPSAnPTnLnNsaWNlKDIgLSAoYXNjLmxlbmdaCAmIDMpKTtcbiAgICBsZXQgdTILCBiaWgPSAnJywgcjEsIHIyOxuICAgIGZvciAobGVIGkgPSAwOyBpIDwgYXNjLmxlbmdaDspIHtcbiAgICAgICAgdTIIDgYjYdGFiWFzYyjaGFyQXQoaSsrKVgPDwgMThcbiAgICAgICAgICAgIHwgYjYdGFiWFzYyjaGFyQXQoaSsrKVgPDwgMTJcbiAgICAgICAgICAgIHwgKHIxIDgYjYdGFiWFzYyjaGFyQXQoaSsrKVpIDwIDZcbiAgICAgICAgICAgIHwgKHIyIDgYjYdGFiWFzYyjaGFyQXQoaSsrKVpOxuICAgICAgICBiaWgKzgcjEgPTIDYIDgXZybDQyhMjQgPjgMTYgJiAyNTUpXGgICAgICAgICAgICAIHIyIDPSANCA/IFmcmtQModTIID+IDEICYgMjULCBMjQgPjgOCAmIDINSlcbiAgICAgICAgICAgICAgICAIFmcmtQModTIID+IDEICYgMjULCBMjQgPjgOCAmIDINSwgdTIICYgMjUKTtcbiAgICBXGgICAgcmVdXJuIGJpbjtcbnXGvKipcbiAqIGRvZXMgdhhdCBgdluZGLmFbJgIGmIHdlYiBicmcVycyBkbycbiAqIEBwYXJhbSBURyaWnfSBhcMgQmFzZTYLWVuYkZWQgcRyaWnXGgKiBAcmVdXJucyBcRyaWnfSBiaWhcnkgcRyaWnXGgKicbmNvbnNIFhdGiIDgXhhcFbIgPyAoYXNjKSAPiBhdGiKFaWRQjYKGFzYykpXGgICAgOiBfaGFzQnVmZmVyIDgKGFzYykgPTgQnVmZmVyLmZyboYXNjLCAnYmFzZTYJykudGTdHJpbmcoJJpbmFyeScpXGgICAgICAgIDogYXRvYlBvbHlmaWxsOxuLycbmNvbnNIFbVpbnQQXJyYXkgPSBfaGFzQnVmZmVyXGgICAgPyAoYSkgPTgXUQWZyboQnVmZmVyLmZyboYSwgJJhcUNCcpKVxuICAgIDogKGEpID+IFVOEFmcmtKFhdGiKGEpLCBjID+IGMuYhhckNvZGVBdCgwKSkXGvKipcbiAqIGNvbnZlcnRzIGEgQmFzZTYIHNcmluZyBbyBhIFVpbnQQXJyYXkuXGgKicbmNvbnNIHRvVWludDhBcnJheSAIChhKSAPiBfdGVaWOEFycmFKFblVSSShhKSkXGvLxuYucQgXRlYkZSAIFoYXNCdWZmZXJcbiAgICA/IChhKSAPiBCdWZmZXIuZnJvbShhLCAnYmFzZTYJykudGTdHJpbmcoJVZjgnKVxuICAgIDogXREXGgICAgICAgIDgKGEpID+IFURCkZWNvZGUoXRvVWludDhBcnJheShhKSlcbiAgICAgICAgOiAoYSkgPTgYnRvdShfYXRvYihhKSkXGjbzdCBfdWVUkkgPSAoYSkgPTgXRpZHlCNjQoYSyZXBsYWNlKCbLVdLcsIChtMCkgPTgbTAgPTgJynIDgJysnIDogJynKSkXGvKipcbiAqIGNvbnZlcnRzIGEgQmFzZTYIHNcmluZyBbyBhIFVURiIHNcmluZycbiAqIEBwYXJhbSBURyaWnfSBzcmMgQmFzZTYIHNcmluZygIEJvdGggbmybWFsIGFuZCBVUkwtcFmZSBhcmUgcVwcGydGVkXGgKiBAcmVdXJucyBcRyaWnfSBVVEYtOCBzdHJpbmdcbiAqLxuYucQgZGVjbRlIDgKHNyYykgPTgXRlYkZShfdWVUkkocJjKSkXGvKipcbiAqIGNoZWNrIGlmIGEgdmFsdWUgaXMgYSBYWxpZCBCYXNlNjQgcRyaWnXGgKiBAcGFyYWgeNcmluZgcJjIGEgdmFsdWUgdGgYhlYtcbiAgKicbmNvbnNIGlzVmFsaWQgPSAocJjKSAPiBXGgICAgaWYgKHRcGVvZiBzcmMgITICdzdHJpbmcnKVxuICAgICAgICByZXRcmgZmFscUXGgICAgYucQgcyAIHNyYyyZXBsYWNlKCcXHMrLcsICcnKSyZXBsYWNlKCezAsMnkLywgJycpOxuICAgIHJldHVybiAhLteXFxzMCYSQSaXFwrLvLnRlcQocykgfHwgISbXlxcczAtOWEtekEtWlxcLVdLyZXNKHMpOxufTtcbivXGjbzdCBfbmFbnVtIDgKHYpID+IHtcbiAgICByZXRcmgexuICAgICAgICBYWxZTogdiwgZWbWVyYWJsZTogZmFscUsIHdyaXRhYmxlOiBcnVlLCBjbmaWdcmFibGUIHRydWVcbiAgICBOxufTtcbiqKlxuICogZXhZWkIFNcmluZywcmbRcGUgdlaCByZWxldmFudCBtZXRobRzXGgKicbmNvbnNIGVdGVuZFNcmluZyAIGZbmNaWuICgpIHtcbiAgICBjbzdCBfYWRkIDgKGhbWUsIGJvZHkpID+IEiamVjdCkZWZpbmVQcmwZXJeShTdHJpbmcucHJvdGeXBlLCBuYWlLCBfbmFbnVtKGJvZHkpKTtcbiAgICBfYWRkKCdmcmtQmFzZTYJywgZnVuYRpbgKCkgeyByZXRcmgZGVjbRlKHRoaXMpOyBKTtcbiAgICBfYWRkKCdbJhcUNCcsIGZbmNaWuIChcmxzYWZlKSBIHJldHVybiBlbmNvZGUodGhpcywgdXJscFmZSkIHpOxuICAgIFhZGQoJRvQmFzZTYVVJJJywgZnVuYRpbgKCkgeyByZXRcmgZWjbRlKHRoaXMsIHRydWUpOyBKTtcbiAgICBfYWRkKCdbJhcUNFVSTCcsIGZbmNaWuICgpIHsgcmVdXJuIGVuYkZShaGlzLCBcnVlKTsgfSkXGgICAgXFkZCgndGVaWOEFycmFJywgZnVuYRpbgKCkgeyByZXRcmgdGVaWOEFycmFKHRoaXMpOyBKTtcbnXGvKipcbiAqIGVdGVuZCBVaWOEFycmFLnBybRvdHlwZSBaXRoIHJlbGVYWIGldGhvZHNcbiAqLxuYucQgZXhZWkVWludDhBcnJheSAIGZbmNaWuICgpIHtcbiAgICBjbzdCBfYWRkIDgKGhbWUsIGJvZHkpID+IEiamVjdCkZWZpbmVQcmwZXJeShVaWOEFycmFLnBybRvdHlwZSwgbmFtZSwgXvRWbShibRKSkXGgICAgXFkZCgndGCYXNlNjQnLCBmdWjdGlvbiAodXJscFmZSkgeyByZXRcmgZnJvbVVpbnQQXJyYXkodGhpcywgdXJscFmZSkIHpOxuICAgIFhZGQoJRvQmFzZTYVVJJJywgZnVuYRpbgKCkgeyByZXRcmgZnJvbVVpbnQQXJyYXkodGhpcywgdHJZSkIHpOxuICAgIFhZGQoJRvQmFzZTYVVJMJywgZnVuYRpbgKCkgeyByZXRcmgZnJvbVVpbnQQXJyYXkodGhpcywgdHJZSkIHpOxufTtcbiqKlxuICogZXhZWkIEJaWxaWgcHJvdGeXBlcyBaXRoIHJlbGVYWIGldGhvZHNcbiAqLxuYucQgZXhZWkQnVpbHRpbnMgPSAoKSAPiBXGgICAgZXhZWkURyaWnKCkXGgICAgZXhZWkVWludDhBcnJheSgpOxufTtcbmNvbnNIGdCYXNlNjQgPSBXGgICAgdmVyclvbjogdmVyclvbixcbiAgICBWRVJTSUOOiBWRVJTSUOLFxuICAgIGFbIIFhdGiLFxuICAgIGFbJQbxZmlsbDogYXRvYlBvbHlmaWxsLFxuICAgIGJbEIFidGhLFxuICAgIGJbFQbxZmlsbDogYnRvYVBvbHlmaWxsLFxuICAgIGZybCYXNlNjQIGRlYkZSxcbiAgICBbJhcUNDogZWjbRlLFxuICAgIGVuYkZTogZWjbRlLFxuICAgIGVuYkZVVSSTogZWjbRlVVJJLFxuICAgIGVuYkZVVSTDogZWjbRlVVJJLFxuICAgIHVbIIHVbIsXGgICAgYnRvdTogYnRvdSxcbiAgICBkZWNvZGUIGRlYkZSxcbiAgICBpcZhbGlkOiBpcZhbGlkLFxuICAgIGZybVaWOEFycmFOiBmcmtVWludDhBcnJheSxcbiAgICBbVpbnQQXJyYXkIHRvVWludDhBcnJheSxcbiAgICBleHRlbmRTdHJpbmcIGVdGVuZFNcmluZyxcbiAgICBleHRlbmRVaWOEFycmFOiBleHRlbmRVaWOEFycmFLFxuICAgIGVdGVuZEJaWxaWzOiBleHRlbmRCdWlsdGlucyxcbnXGvLyBtYWtlYpzOkNVVCAvLxuZXhwbJIHsgdmVyclvbiBOxuZXhwbJIHsgVkVSUlPTiBOxuZXhwbJIHsgXFbIgYXMgYXRvYiBOxuZXhwbJIHsgYXRvYlBvbHlmaWxsIHXGleHBvcnQgeyBfYnRvYSBhcyBidGhIHXGleHBvcnQgeyBidGhUGseWZpbGwgfTtcbmVcGydCBIGRlYkZSBhcyBmcmtQmFzZTYIHXGleHBvcnQgeyBlbmNvZGUgYXMgdGCYXNlNjQgfTtcbmVcGydCBIHVbIgfTtcbmVcGydCBIGVuYkZSBOxuZXhwbJIHsgZWjbRlVVJJIHXGleHBvcnQgeyBlbmNvZGVVUkkgYXMgZWjbRlVVJMIHXGleHBvcnQgeyBidGIHXGleHBvcnQgeyBkZWNvZGUgfTtcbmVcGydCBIGlzVmFsaWQgfTtcbmVcGydCBIGZybVaWOEFycmFIHXGleHBvcnQgeyBbVpbnQQXJyYXkgfTtcbmVcGydCBIGVdGVuZFNcmluZyBOxuZXhwbJIHsgZXhZWkVWludDhBcnJheSBOxuZXhwbJIHsgZXhZWkQnVpbHRpbnMgfTtcbivIGFuZCBmaWhbGxLFxuZXhwbJIHsgZJhcUNCBhcyBCYXNlNjQgfTtcbiIsICJpbXBvcnQgeyBkZWNvZGUgfSBmcmtIFwianMtYmFzZTYXCIXGpbXBvcnQgeyByZXFZXNVXJsIHgZnJvbSBcImiclkaWFuXCIXGcbmVcGydCBjbzdCBnZXRJYuUGFjaJbmRsZVVybCAIChcbiAgcGFaDogcRyaWnLFxuICBicmFuYggPSBcImhcRlclwiLFxuICBhbHQgPSBmYWxzZSxcbikgPTcbiAgYGhdHBzOivJHtcbiAgICBhbHQgPyBcInJhdyzdGFaWNkbiuZXRcIiAIFwicmFLmdpdGhYnVzZXJjbZWLmNvbVwiXGgIHvYWlkZWseCvYnNpZGlhbipYuLXNobJYkZXMvJHticmFuYhLyRcGFaHgOxuXGleHBvcnQgaWZXJmYWNlIEljbQYWNrTWFuaWZlcRSYXcgexuICBwYXRoOiBzdHJpbmcXGgIGNvdWOiBudWiZXIXGgIHNlcmllczogcRyaWnOxuICBkZXNjcmlwdGlvbjogcRyaWnOxuICBsaWNlbnNlOiBzdHJpbmcXGgIGJbmRsZUhbWUIHNcmluZztcbiAgcGFjalkOiBzdHJpbmcXGgIGhvbWVwYWdlOiBzdHJpbmcXGgIHNeWxlOiBzdHJpbmcXGXGcbmVcGydCBjbGFzcyBHaXRIdWJFcnJvciBleHRlbmRzIEVycmyIHtcbiAgYucRydWNbIocHVibGljIHJlcBvbnNlOiBIGlcNhZUIHNcmluZyBKSBXGgICAgcVwZXIoXCJHaXRIdWIIFwiICsgcmVzcGucUubWVzcFnZSkXGgIHcbncblxuZXhwbJIGNvbnNIGdldEhbmlmZXNVmlhQVBJIDgYXNbmMgKGJyYWjaCAIFwibWFzdGVyXCIpID+IHtcbiAgYucQgdXJsIDgYGhdHBzOivYXBpLmdpdGhYijbvcmVwbMvYWlkZWseCvYnNpZGlhbipYuLXNobJYkZXMvZlLRyZWVzLyRYnJhbmNofTyZWNcnNpdmUMSYkeRhdGUubmKClYDtcbiAgYucQgcmVzcGucUgPSAoYXdhaXQgcmVxdWVzdFVybChIHVybCBKSkuanNvbjtcbiAgaWYgKEFycmFLmlzQXJyYXkocmVzcGucUudHJlZSkpIHtcbiAgICBjbzdCBtYWpZmVzdFVybCAIHJlcBvbnNlLnRyZWUuZmluZChcbiAgICAgIChpdGVtOiBhbnkpID+IGlZWucGFaCAPTgXCJhcNldHMvbWFuaWZlcQuanNvblwiLFxuICAgICk/LnVybDtcbiAgICBpZiAoIWhbmlmZXNVXJsKSBXGgICAgICBjbzbxlLmVycmyKHJlcBvbnNlKTtcbiAgICAgIHRocmIGldyBFcnJvcihcIkvIGhbmlmZXNLmpzbgZmyIGljbgcGFjayBmbVuZFwiKTtcbiAgICBIGVscUgexuICAgICAgcmVdXJuIGFYWlIGdldEpTTmcmtQmxvYlVybChtYWpZmVzdFVybCkXGgICAgfVxuICBIGVscUgexuICAgIHRocmIGldyBHaXRIdWJFcnJvcihyZXNwbzZSkXGgIHcbnXGcbmNvbnNIGdldEpTTmcmtQmxvYlVybCAIGFzeWjIChcbiAgbWFuaWZlcRVcmwIHNcmluZyxcbikIFBybpcUSWNvblBhYtNYWpZmVzdFJhdtdPiAPiBXGgIGNvbnNIHJlcBvbnNlIDgKGFYWlIHJlcXVlcRVcmwoeyBcmwIGhbmlmZXNVXJsIHpKSqcuOxuICBpZiAocmVzcGucUuZWjbRpbmcgJiYgcmVzcGucUuYudGVudCkgexuICAgIGlmIChyZXNwbzZSlbmNvZGluZyAPTgXCJiYXNlNjRcIikgexuICAgICAgcmVdXJuIEpTTucGFycUoZGVjbRlKHJlcBvbnNlLmNvbnRlbnQpKSBhcyBJYuUGFjahbmlmZXNUmFWXGgICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJybIocmVzcGucUpOxuICAgICAgdGhybcgbmVIFRcGVFcnJvcihcIlVucVwcGydGVkIGVuYkaWnXCIpOxuICAgIHcbiAgfSBlbHNlIHtcbiAgICBaHJvdyBuZXcgRlSHViRXJybIocmVzcGucUpOxuICBXGOxuIiwgImVcGydCBIGRlZmFbHQgYXMgYmxhbmsgfSBmcmtICcuLJsYWrLnNZycXGleHBvcnQgeyBkZWZhdWxIGFzIGJhbGxzIHgZnJvbSAnLisbFkaWnLWJhbGxzLnNZycXGleHBvcnQgeyBkZWZhdWxIGFzIGJhcnMgfSBmcmtICcuLxvYWRpbmctYmFycyzdmcnOxuZXhwbJIHsgZGVmYXVsdCBhcyBidWJibGVzIHgZnJvbSAnLisbFkaWnLWJYmJsZXMucZnJztcbmVcGydCBIGRlZmFbHQgYXMgYViZXMgfSBmcmtICcuLxvYWRpbmctYViZXMucZnJztcbmVcGydCBIGRlZmFbHQgYXMgYlsbgfSBmcmtICcuLxvYWRpbmctYlsbucZnJztcbmVcGydCBIGRlZmFbHQgYXMgcBpbiBIGZybgJyvbGhZGluZyzcGluLnNZycXGleHBvcnQgeyBkZWZhdWxIGFzIHNwaWuaWnQnViYmxlcyBIGZybgJyvbGhZGluZyzcGlubmluZyidWJibGVzLnNZycXGleHBvcnQgeyBkZWZhdWxIGFzIHNwbtlcyBIGZybgJyvbGhZGluZyzcGrZXMucZnJztcbiIsICJpbXBvcnQgdHlwZSBIEhUTUxQcmwcyBIGZybgXCJyZWFjdFwiOxuaWwbJIFJlYWNLCBIHVzZUVmZmVjdCwgdXNlURhdGUgfSBmcmtIFwicmVhYRcIjtcbmltcGydCAqIGFzIHNZNvdXJjZXMgZnJvbSBcInJlYWNLWxvYWRpbmcvbGliLNZwiOxuXGeXBlIExvYWRpbmdUeXBlIDcbiAgfCBcImJsYWrXCJcbiAgfCBcImJhbGxzXCJcbiAgfCBcImJhcnNcIlxuICBIFwiYnViYmxlcwiXGgIHwgXCJjdWJlcwiXGgIHwgXCJjeWxvblwiXGgIHwgXCJzcGluXCJcbiAgfCBcInNwaWuaWnQnViYmxlcwiXGgIHwgXCJzcGrZXNcIjtcblxuZXhwbJIGludGVyZmFjZSBMbFkaWnUHJvcHMgZXhZWkcyBIVEMUHJvcHMSFRNTERpdkVsZWlbnQ+IHtcbiAgYsbI/OiBzdHJpbmcXGgICqKiBpbiBtaWxpcVjbkICovXGgIGRlbGFPzogbnVtYmVyOxuICBeXBlPzogTGhZGluZRcGUXGgIGhlaWdodDIHNcmluZyBIGbWJlcjtcbiAgdlkdGg/OiBzdHJpbmcgfCBudWiZXIXGXGcbmNvbnNIExvYWRpbmcgPSAoexuICBjbxvciAIFwidmFyKCtaWZXJhYRpdmUtYWNjZWKVwiLFxuICBkZWxheSAIDAsXGgIHRcGUgPSBcImJhbGxzXCIsXGgIGhlaWdodCAIDYLFxuICBaWRaCAIDYLFxuICAuLiyZXNUHJvcHNcbnIExvYWRpbmdQcmwcykgPTgexuICBjbzdCBbZGVsYXllZCwgcVRGVsYXllZFgPSBcVTdGFZShkZWxheSA+IDApOxuICBcVFZmZlYQoKCkgPTgexuICAgIGxldCBaWlbVIDgLTEXGgICAgaWYgKGRlbGFZWQpIHtcbiAgICAgIHRpbWVvdXQgPSBaWkbcucVVGltZWdCgoKSAPiBzZXREZWxheWVkKGZhbHNlKSwgZGVsYXkpOxuICAgIHcbiAgICByZXRcmgKCkgPTgYxlYXJUaWlbVKHRpbWVvdXQpOxuICBLCBbXSkXGgIGNvbnNIHNlbGVjdGVkVHlwZSAIGRlbGFZWQgPyBcImJsYWrXCIgOiBeXBlOxuICByZXRcmgKFxuICAgIDxkaXZcbiAgICAgIHNeWxlPXtXGgICAgICAgIGZpbGwIGNvbGyLFxuICAgICAgICBoZWlnaHQsXGgICAgICAgIHdpZHRoLFxuICAgICAgfXcbiAgICAgIGRhbmdlcmcxUVSWuZXJIVEMPXtIFfaHRtbDogcZnUcmNlctzZWxlYRlZFRcGVdIHXGgICAgICBLiucmVzdFBybBzfVxuICAgIC+XGgICkXGOxuZXhwbJIGRlZmFbHQgTGhZGluZztcbiIsICJjbzdCBlcnJvcnMgPSBXGcdDAIFwiSWxsZWdhbCBzdGFZVwiLFxuXHQxOiBcIkltbWVyIGRyYWZcyBjYWubQgaGFZSBjbwdXRlZCBwcmwZXJaWVzXCIsXGcdDIIFwiVGhpcyBvYmplYQgaGFzIGJlZWgZnJvemVuIGFuZCBzaGbGQgbmIGJlIGdGFZWRcIixcblxMyhkYXRhOiBhbnkpIHtcblxXHRyZXRcmgKFxuXHRcdFxXCJDYWubQgdXNlIGEgcHJveHkgdGhhdCBoYXMgYmVlbiByZXZvaVkLiBEaWQgeWIHBhcMgYWgbJqZWNIGZybgaWzaWRlIGFuIGltbWVyIGZbmNaWuIHRvIGFuIGFzeWjIHBybNlcM/IFwiICtcblxXHRcdGRhdGFcblxXHQpXGcdHsXGcdDQIFwiQWgaWtZXIgcHJvZHVjZXIgcmVdXJuZWQgYSBuZXcgdmFsdWUgKmFuZCogbWkaWZpZWQgaXRzIGRyYWZLiBFaXRoZXIgcmVdXJuIGEgbmVIHZhbHVlICpvciogbWkaWZIHRoZSBkcmFmdCcIixcblxNTogXCJJbWlciBmbJiaWRzIGNpcmNbGFyIHJlZmVyZWjZXNcIixcblxNjogXCJUaGUgZmlycQgbIgcVjbkIGFyZVtZWIHRvIGBwcmkdWNlYCBtdXNIGJlIGEgZnVuYRpbcIixcblxNzogXCJUaGUgdGhpcmQgYXJndWlbnQgdGgYHBybRYVgIGcQgYmUgYSBmdWjdGlvbiBvciBbmRlZmluZWRcIixcblxODogXCJGaXJzdCBhcmdbWVudCBbyBgYJlYXRlRHJhZnRgIGcQgYmUgYSBwbGFpbiBvYmplYQsIGFuIGFycmFLCBvciBhbiBpbWlcmFibGUgbJqZWNXCIsXGcdDkIFwiRmlycQgYXJndWlbnQgdGgYGZpbmlzaERyYWZYCBtdXNIGJlIGEgZHJhZnQgcmVdXJuZWQgYnkgYGNyZWFZURyYWZYFwiLFxuXHQxMDogXCJUaGUgZlZWgZHJhZnQgaXMgYWxyZWFkeSBmaWhbGlZWRcIixcblxMTEIFwiTJqZWNLmRlZmluZVBybBlcnRKCkgYFubmIGJlIHVzZWQgbgYWgSWtZXIgZHJhZnRcIixcblxMTIIFwiTJqZWNLnNldFBybRvdHlwZUmKCkgYFubmIGJlIHVzZWQgbgYWgSWtZXIgZHJhZnRcIixcblxMTMIFwiSWtZXIgbseSBzdXBwbJcyBkZWxldGluZyBhcnJheSBpbmRpYVzXCIsXGcdDEOiBcIkltbWVyIGubHkgcVwcGydHMgcVdGluZyBhcnJheSBpbmRpYVzIGFuZCBaGUgJxlbmdaCcgcHJvcGVydHlcIixcblxMTUocGFaDogcRyaWnKSBXGcdFxcmVdXJuIFwiQFubmIGFwcGxIHBhdGNoLCBwYXRoIGRvZXNuJQgcmVzbxZTogXCIgKyBwYXRoXGcdHsXGcdDEOiAnUVcyBjYWubQgaGFZSBcInJlcGxhYVcIiBwYXRjaGVzLicsXGcdDEKGwOiBzdHJpbmcpIHtcblxXHRyZXRcmgXCJVbnNcHBvcnRlZCBwYXRjaCBvcGVyYXRpbIFwiICsgbBcblxfSxcblxMTgocGxZluOiBzdHJpbmcpIHtcblxXHRyZXRcmgYFRoZSBwbHVnaWgZmyICckeBsdWdpbnnIGhhcyBubQgYmVlbiBsbFkZWQgaWbyBJbWlcigVGgZWhYmxlIHRoZSBwbHVnaWsIGltcGydCBhbmQgYFsbCBcXGBlbmFibGUkeBsdWdpbnoKVxcYCBaGVuIGluaXRpYWxpemluZyBbVyIGFwcGxpYFaWuLmBcblxfSxcblxMjAIFwiQFubmIHVzZSBwcmaWVzIGlmIFBybhLCBQcmeSyZXZvYFibGUgbIgUmVmbGVjdCBhcmUgbmIGFYWlsYWJsZVwiLFxuXHQyMShaGluZzogcRyaWnKSBXGcdFxcmVdXJuIGBwcmkdWNlIGNhbiBvbmxIGJlIGNhbGxlZCBvbiBaGluZMgdGhhdCBhcmUgZHJhZnRhYmxlOiBwbGFpbiBvYmplYRzLCBhcnJheXMsIEhcCwgUVIGyIGNsYXNzZXMgdGhhdCBhcmUgbWFyaVkIHdpdGggJtpbWlcmFibGVdOiBcnVlJygRICckeRoaWnfSdgXGcdHsXGcdDIyKHRoaWnOiBzdHJpbmcpIHtcblxXHRyZXRcmgYCdjdXJyZWJyBleHBlYRzIGEgZHJhZnQsIGdvdDogJHtaGluZgXGcdHsXGcdDIzKHRoaWnOiBzdHJpbmcpIHtcblxXHRyZXRcmgYCdvcmlnaWhbCcgZXhwZWNcyBhIGRyYWZLCBnbQICRdGhpbmdYFxuXHRLFxuXHQyNDogXCJQYXRjaGluZyByZXNlcnZlZCBhdHRyaWJdGVzIGxpaUgXwcmbfLCBwcmbRcGUgYWkIGNvbnNcnVjdGyIGlzIGvdCBhbGxvdVkXCJcbngYXMgYucRcblxuZXhwbJIGZbmNaWuIGRpZShlcnJvcjogaVbYgdHlwZWmIGVycmycywgLiuYXJnczogYWWpOiBuZXZlciBXGcdGlmIChfXRFVlfKSBXGcdFxYucQgZSAIGVycmyctlcnJvclcblxXHRjbzdCBtccgPSAhZVxuXHRcdFxPyBcInVuavdgZXJybIgbnIIFwiICsgZXJybJcblxXHRcdDogdHlwZWmIGUgPTIFwiZnVuYRpbcIlxuXHRcdFxPyBlLmFwcGxKGbGwsIGFyZMgYXMgYWKVxuXHRcdFxOiBlXGcdFxdGhybcgbmVIEVycmyKGBbSWtZXJdICRbXNnfWApXGcdHcblxdGhybcgbmVIEVycmyKFxuXHRcdGBbSWtZXJdIGpbmlmaWVkIGVycmyIGyOiAkeVycmyfSRXGcdFxXHRhcmdzLmxlbmdaCA/IFwiIFwiICsgYXJncytYXAocyAPiBgJyRcnYCkuampbihcIixcIikgOiBcIlwiXGcdFxfSgRmluZCBaGUgZnVsbCBlcnJvciBhdDogaHRcHMLyiaXQubHkvMNYRUtXZmBcblxKVxufVxuIiwgImltcGydCBXGcdERSQUZUXNUQVRFLFxuXHREUkFGVEFCTEUsXGcdGhhcNldCxcblxTJqZWNaXNoLFxuXHREcmFmdGVkLFxuXHRBbnlPYmplYQsXGcdEFueUhcCxcblxQWUVLFxuXHRJbWlclNYXRlLFxuXHRoYXNNYXAsXGcdEFyYheXBlLFxuXHRkaWVcbngZnJvbSBcIiuLludGVybmFsXCJcblxuLyoqIFJldHVybnMgdHJZSBpZiBaGUgZlZWgdmFsdWUgaXMgYWgSWtZXIgZHJhZnQgKicbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBpcRyYWZKHZhbHVlOiBhbnkpOiBibsZWFuIHtcblxcmVdXJuICEhdmFsdWUgJiYgISFYWxZVtEUkFGVFTVEFURVcbncblxuLyoqIFJldHVybnMgdHJZSBpZiBaGUgZlZWgdmFsdWUgYFuIGJlIGRyYWZZWQgYnkgSWtZXIgKicbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBpcRyYWZYWJsZShYWxZTogYWKTogYmvbGVhbiBXGcdGlmICghdmFsdWUpIHJldHVybiBmYWxzZVxuXHRyZXRcmgKFxuXHRcdGlzUGxhaWPYmplYQodmFsdWUpIHxXGcdFxQXJyYXkuaXNBcnJheShYWxZSkgfHxcblxXHQhIXZhbHVlWRSQUZUQUJMRVgfHxcblxXHQhIXZhbHVlLmNvbnNcnVjdGyWRSQUZUQUJMRVgfHxcblxXHRpchcChYWxZSkgfHxcblxXHRpcNldChYWxZSlcblxKVxufVxuXGjbzdCBvYmplYRDdGyURyaWnIDgTJqZWNLnBybRvdHlwZSjbzdHJYRvcibNcmluZygpXGvKiNfXBVUkVfXyovXGleHBvcnQgZnVuYRpbgaXNQbGFpbkiamVjdChYWxZTogYWKTogYmvbGVhbiBXGcdGlmICghdmFsdWUgfHwgdHlwZWmIHZhbHVlICEPSBcImiamVjdFwiKSByZXRcmgZmFscVcblxYucQgcHJvdGgPSBPYmplYQuZVUHJvdGeXBlTYodmFsdWUpXGcdGlmIChwcmbyAPTgbnVsbCkgexuXHRcdHJldHVybiBcnVlXGcdHcblxYucQgQRvciAXGcdFxTJqZWNLmhhcblBybBlcnRLmNhbGwocHJvdGsIFwiYucRydWNbJcIikgJiYgcHJvdGuYucRydWNbJcblxuXHRpZiAoQRvciAPTgTJqZWNKSByZXRcmgdHJZVxuXGcdHJldHVybiAoXGcdFxdHlwZWmIENbIgPTgXCJmdWjdGlvblwiICYmXGcdFxRnVuYRpbudGTdHJpbmcuYFsbChDdGyKSAPTgbJqZWNQRvclNcmluZxuXHQpXGXGcbiqKiBHZXQgdGhlIHVuZGVybHlpbmcgbJqZWNIHRoYXQgaXMgcmVwcmVzZWZWQgYnkgdGhlIGdpdmVuIGRyYWZICovXGvKiNfXBVUkVfXyovXGleHBvcnQgZnVuYRpbgbJpZluYWwVDodmFsdWUIFQpOiBUIHwgdWkZWZpbmVkXGleHBvcnQgZnVuYRpbgbJpZluYWwodmFsdWUIERyYWZZWQYWPikIGFueSBXGcdGlmICghaXNEcmFmdChYWxZSkpIGRpZSgyMywgdmFsdWUpXGcdHJldHVybiBYWxZVtEUkFGVFTVEFURVuYmFzZVcbncblxuLyojXQVVJFXqLxuZXhwbJIGNvbnNIGbktleXMIChYXJnZXQIEFueUiamVjdCkgPTgUHJvcGVydHlLZXlbXSAXGcdHRcGVvZiBSZWZsZWNICEPSBcInVuZGVmaWlZFwiICYmIFJlZmxlYQubduSVcxuXHRcdDgUmVmbGVjdCvdLZXlzXGcdFxOiBeXBlbYgTJqZWNLmdldEblBybBlcnRUltYmscyAhPTgXCJbmRlZmluZWRcIlxuXHRcdDgbJqID+XGcdFxXHRcdEiamVjdCnZXRPdQcmwZXJeUhbWVzKGiaikuYuYFKFxuXHRcdFxXHRcdEiamVjdCnZXRPdQcmwZXJeVNbWJvbHMobJqKSBhcyBhbnlcblxXHRcdFxKVxuXHRcdDogLyogaXNYWidWwgaWdubJlIGleHQgKigTJqZWNLmdldEblBybBlcnRTmFtZXNcblxuZXhwbJIGNvbnNIGdldEblBybBlcnRRGVzYJpcHRvcnMgPVxuXHRPYmplYQuZVTduUHJvcGVydHlEZXNjcmlwdGycyBfFxuXHRmdWjdGlvbiBnZXRPdQcmwZXJeURlcNyaXBbJzKHRhcmdldDogYWKSBXGcdFxLygUGseWZpbGwgbmVlZGVkIGZvciBIZXJtZXMgYWkIElFLCBzZWUgaHRcHMLynaXRodWIuYtLZhYVibrLhlcmlcypcNZXMvMjcXGcdFxYucQgcmVzOiBhbnkgPSBfVxuXHRcdGbktleXModGFyZVKSmbJFYWNoKGtleSAPiBXGcdFxXHRyZXNbaVXSAIEiamVjdCnZXRPdQcmwZXJeURlcNyaXBbIodGFyZVLCBrZXkpXGcdFxfSlcblxXHRyZXRcmgcmVzXGcdHcblxuZXhwbJIGZbmNaWuIGVhYgVCBleHRlbmRzIEiamVjdGlzaDoXGcdGiajogVCxcblxaXRlcjogKGtleTogcRyaWnIHwgbnVtYmVyLCBYWxZTogYWLCBzbVyYUIFQpID+IHZvaWQsXGcdGVudWlcmFibGVPbmxPzogYmvbGVhblxuKTogdmpZFxuZXhwbJIGZbmNaWuIGVhYgobJqOiBhbnksIGlZXIIGFueSwgZWbWVyYWJsZUubHkgPSBmYWxzZSkgexuXHRpZiAoZVQXJjaHRcGUobJqKSAPTgQXJjaHRcGUuTJqZWNKSBXGcdFxOyhlbnVtZXJhYmxlTseSA/IEiamVjdCrZXlzIDogbduSVcykobJqKSmbJFYWNoKGtleSAPiBXGcdFxXHRpZiAoIWVudWlcmFibGVPbmxIHxIHRcGVvZiBrZXkgITIFwicltYmsXCIpIGlZXIoaVLCBvYmpbaVXSwgbJqKVxuXHRcdHpXGcdHgZWxzZSBXGcdFxbJqLmZvckVhYgoKGVudHJOiBhbnksIGluZGVOiBhbnkpID+IGlZXIoaWkZXgsIGVudHJLCBvYmopKVxuXHRXGXGcbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBnZXRBcmNodHlwZShaGluZzogYWKTogQXJjaHRcGUgexuXHQvKiBpcRhbmJbCBpZvcmUgbmVdCAqLxuXHRjbzdCBzdGFZTogdWkZWZpbmVkIHwgSWtZXJTdGFZSAIHRoaWnWRSQUZUXNUQVRFXVxuXHRyZXRcmgcRhdGVcblxXHQ/IHNYXRlLnRcGVfIDgMxuXHRcdFxPyBzdGFZSeXBlXyAtIDQgLygYFcUgTJqZWNIGFuZCBBcnJheSBtYXAgYmFjayBmcmtIDQgYWkIDVcblxXHRcdDogKHNYXRlLnRcGVfIGFzIGFueSkgLygbRoZXJzIGFyZSBaGUgcFtZVxuXHRcdDogQXJyYXkuaXNBcnJheShaGluZylcblxXHQ/IEFyYheXBlLkFycmFXGcdFxOiBpchcChaGluZylcblxXHQ/IEFyYheXBlLkhcFxuXHRcdDogaXNTZXQodGhpbmcpXGcdFxPyBBcmNodHlwZSTZXRcblxXHQIEFyYheXBlLkiamVjdFxufVxuXGvKiNfXBVUkVfXyovXGleHBvcnQgZnVuYRpbgaGFzKHRoaWnOiBhbnksIHBybAIFBybBlcnRSVKTogYmvbGVhbiBXGcdHJldHVybiBnZXRBcmNodHlwZShaGluZykgPTIEFyYheXBlLkhcFxuXHRcdDgdGhpbmcuaGFzKHBybApXGcdFxOiBPYmplYQucHJvdGeXBlLmhhcblBybBlcnRLmNhbGwodGhpbmcsIHBybApXGXGcbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBnZXQodGhpbmcIEFueUhcCBIEFueUiamVjdCwgcHJvcDogUHJvcGVydHlLZXkpOiBhbnkgexuXHQvLyBAdHMtaWdubJlXGcdHJldHVybiBnZXRBcmNodHlwZShaGluZykgPTIEFyYheXBlLkhcCA/IHRoaWnLmdldChwcmwKSAIHRoaWnWBybBdXGXGcbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBzZXQodGhpbmcIGFueSwgcHJvcEyTxkVmFsdWUIFBybBlcnRSVLCBYWxZTogYWKSBXGcdGNvbnNIHQgPSBnZXRBcmNodHlwZShaGluZylcblxaWYgKHQgPTIEFyYheXBlLkhcCkgdGhpbmcucVKHBybBPcksZFZhbHVlLCBYWxZSlcblxZWxzZSBpZiAodCAPTgQXJjaHRcGUuUVKSBXGcdFxdGhpbmcuZGVsZXRlKHBybBPcksZFZhbHVlKVxuXHRcdHRoaWnLmFkZChYWxZSlcblxfSBlbHNlIHRoaWnWBybBPcksZFZhbHVlXSAIHZhbHVlXGXGcbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBpcyhOiBhbnksIHkIGFueSkIGJvbxlYWgexuXHQvLyBGcmtOiBodHRwczovLdpdGhYijbvZmFjZWJvbsvZmJqcyibGiLMOTkwNGEMTFiOTAwMjYOTMMTYMjIzMDYzZGQNzcyZGZjNDAvcGFjaFnZXMvZmJqcyzcmMvYyZSzaGFsbGRXFYWwuanNcblxaWYgKHggPTIHkpIHtcblxXHRyZXRcmgeCAhPTgMCBfCAxICgeCAPTgMSAvIHlcblxfSBlbHNlIHtcblxXHRyZXRcmgeCAhPTgeCAmJiBICEPSBXGcdHcbncblxuLyojXQVVJFXqLxuZXhwbJIGZbmNaWuIGlzTWFwKHRhcmdldDogYWKTogdGFyZVIGlzIEFueUhcCBXGcdHJldHVybiBoYXNNYXAgJiYgdGFyZVIGlucRhbmNlbYgTWFwXGXGcbiqIfUFVSRVfKicbmVcGydCBmdWjdGlvbiBpcNldChYXJnZXQIGFueSkIHRhcmdldCBpcyBBbnlTZXQgexuXHRyZXRcmgaGFzUVICYmIHRhcmdldCBpbnNYWjZWmIFNldFxufVxuLyojXQVVJFXqLxuZXhwbJIGZbmNaWuIGxhdGVzdChzdGFZTogSWtZXJTdGFZSkIGFueSBXGcdHJldHVybiBzdGFZSjbBXyBfCBzdGFZSiYXNlXxufVxuXGvKiNfXBVUkVfXyovXGleHBvcnQgZnVuYRpbgchhbGxvdNvcHkoYmFzZTogYWKSBXGcdGlmIChBcnJheSpcFycmFKGJhcUpKSByZXRcmgQXJyYXkucHJvdGeXBlLnNsaWNlLmNhbGwoYmFzZSlcblxYucQgZGVzYJpcHRvcnMgPSBnZXRPdQcmwZXJeURlcNyaXBbJzKGJhcUpXGcdGRlbGVZSBkZXNjcmlwdGyctEUkFGVFTVEFURSBhcyBhbnldXGcdGxldCBrZXlzIDgbduSVcyhkZXNjcmlwdGycylcblxZmyIChsZXQgaSAIDAIGkgPCBrZXlzLmxlbmdaDsgaSsrKSBXGcdFxYucQgaVOiBhbnkgPSBrZXlzWldXGcdFxYucQgZGVzYyAIGRlcNyaXBbJzWtleVcblxXHRpZiAoZGVzYycmlYWJsZSAPTgZmFscUpIHtcblxXHRcdGRlcMudJpdGFibGUgPSBcnVlXGcdFxXHRkZXNjLmNvbmZpZVyYWJsZSAIHRydWVcblxXHRXGcdFxLygbGlrZSBvYmplYQuYXNzaWduLCBZSBaWxsIHJlYWQgYWIFvdfLCBnZXQvcVIGFjYVzcycygVGhpcyBoZWxwcyBpbiBkZWFsaWnXGcdFxLygdlaCBsaWJyYXJpZXMgdGhhdCBcmFwIHZhbHVlcywgbGlrZSBtbJIGyIHZZVxuXHRcdCvIHVubGlrZSBvYmplYQuYXNzaWduLCBubtZWbWVyYWJsZXMgdlsbCBiZSBjbBpZWQgYXMgdVsbFxuXHRcdGlmIChkZXNjLmdldCBfCBkZXNjLnNldClcblxXHRcdGRlcNyaXBbJzWtleVgPSBXGcdFxXHRcdGNvbmZpZVyYWJsZTogdHJZSxcblxXHRcdFxdJpdGFibGUIHRydWUsICvIGNvdWxkIGxpdmUgdlaCAhIWRlcMucVIGFzIHdlbGwgaGVyZSuLlxuXHRcdFxXHRlbnVtZXJhYmxlOiBkZXNjLmVudWlcmFibGUsXGcdFxXHRcdHZhbHVlOiBiYXNlWtleVcblxXHRcdHcblxfVxuXHRyZXRcmgTJqZWNLmNyZWFZShPYmplYQuZVUHJvdGeXBlTYoYmFzZSksIGRlcNyaXBbJzKVxufVxuXGvKipcbiAqIEZyZWVZXMgZHJhZnRhYmxlIGiamVjdHMuIFJldHVybnMgdGhlIGyaWdpbmFsIGiamVjdCcbiAqIEJIGRlZmFbHQgZnJlZXplcyBzaGFsbGbHksIGJdCBpZiBaGUgcVjbkIGFyZVtZWIGlzIGBcnVlYCBpdCBaWxsIGZyZWVZSByZWNcnNpdmVseScbiAqXGgKiBAcGFyYWgbJqXGgKiBAcGFyYWgZGVlcFxuICovXGleHBvcnQgZnVuYRpbgZnJlZXplPFQ+KGiajogVCwgZGVlcDIGJvbxlYWpOiBUXGleHBvcnQgZnVuYRpbgZnJlZXplPFQ+KGiajogYWLCBkZWVwOiBibsZWFuIDgZmFscUpOiBUIHtcblxaWYgKGlzRnJvemVuKGiaikgfHwgaXNEcmFmdChvYmopIHxICFpcRyYWZYWJsZShvYmopKSByZXRcmgbJqXGcdGlmIChnZXRBcmNodHlwZShvYmopIDgMSAvKiBNYXAgbIgUVICovKSBXGcdFxbJqLnNldCAIGiaihZGQgPSBvYmouYxlYXIgPSBvYmouZGVsZXRlIDgZGudEdGFZUZybplbkNvbGxlYRpbzIGFzIGFueVxuXHRXGcdEiamVjdCmcmVlemUobJqKVxuXHRpZiAoZGVlcCkgZWFjaChvYmosIChrZXksIHZhbHVlKSAPiBmcmVlemUodmFsdWUsIHRydWUpLCBcnVlKVxuXHRyZXRcmgbJqXGXGcbmZbmNaWuIGRvbnRNdXRhdGVGcmZWDbxsZWNaWucygpIHtcblxZGllKDIpXGXGcbmVcGydCBmdWjdGlvbiBpcZybplbihvYmoIGFueSkIGJvbxlYWgexuXHRpZiAobJqIDIGbGwgfHwgdHlwZWmIGiaiAhPTgXCJvYmplYRcIikgcmVdXJuIHRydWVcblxLygUVlICMMDAsIElFIGRpZXMgbgbmuLWiamVjdHMgaWgTJqZWNLmlzRnJvemVuXGcdHJldHVybiBPYmplYQuaXNGcmZWobJqKVxufVxuIiwgImltcGydCBXGcdEltbWVyURhdGUsXGcdFBhdGNoLFxuXHRJbWlclNjbBlLFxuXHREcmFmdGVkLFxuXHRBbnlPYmplYQsXGcdEltbWVyQmFzZVNYXRlLFxuXHRBbnlNYXAsXGcdEFueVNldCxcblxUHJveHlUeXBlLFxuXHRkaWVcbngZnJvbSBcIiuLludGVybmFsXCJcblxuLyoqIFBsdWdpbiBdGlsaXRpZXMgKicbmNvbnNIHBsdWdpbnMIHtcblxUGFYhlczIHtcblxXHRnZWlcmFZVBhdGNoZXNfKFxuXHRcdFxcRhdGUIEltbWVyURhdGUsXGcdFxXHRiYXNlUGFaDogUGFYhQYXRoLFxuXHRcdFxcGFYhlczogUGFYhbXSxcblxXHRcdGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdFxKTogdmpZFxuXHRcdGdlbmVyYXRlUmVwbGFjZWlbnRQYXRjaGVzXyhcblxXHRcdGJhcUIGFueSxcblxXHRcdHJlcGxhYVtZWOiBhbnksXGcdFxXHRwYXRjaGVzOiBQYXRjaFtdLFxuXHRcdFxaWZXJzZVBhdGNoZXMIFBhdGNoWcblxXHQpOiBblkXGcdFxYXBwbHlQYXRjaGVzXzxUPihkcmFmdDogVCwgcGFYhlczogUGFYhbXSkIFRcblxfVxuXHRFUzU/OiBXGcdFxdlsbEZpbmFsaXplRVMXyhzYwZTogSWtZXJTYwZSwgcmVzdWxOiBhbnksIGlzUmVwbGFjZWQIGJvbxlYWpOiBblkXGcdFxYJlYXRlRVMUHJveHlfPFQ+KFxuXHRcdFxYmFzZTogVCxcblxXHRcdHBhcmVudDIEltbWVyURhdGVcblxXHQpOiBEcmFmdGVkPFQsIEVTNUiamVjdFNYXRlIHwgRVMQXJyYXlTdGFZTcblxXHRoYXNDaGFuZVzXyhzdGFZTogRVMQXJyYXlTdGFZSBIEVTNUiamVjdFNYXRlKTogYmvbGVhblxuXHRXGcdEhcFNldDIHtcblxXHRwcmeUhcFVCBleHRlbmRzIEFueUhcDodGFyZVOiBULCBwYXJlbnQ/OiBJbWlclNYXRlKTogVFxuXHRcdHBybhUVXzxUIGVdGVuZHMgQWUVPihYXJnZXQIFQsIHBhcmVudDIEltbWVyURhdGUpOiBUXGcdHcbngPSBfVxuXGeXBlIFBsdWdpbnMgPSBeXBlbYgcGxZlucxuXGleHBvcnQgZnVuYRpbgZVUGxZluPEsgZXhZWkcyBrZXlvZiBQbHVnaWzPihcblxcGxZluSVOiBLXGpOiBFeGNsdWRlPFBsdWdpbnNbSsIHVuZGVmaWlZDgexuXHRjbzdCBwbHVnaWgPSBwbHVnaWzWBsdWdpbktleVcblxaWYgKCFwbHVnaWpIHtcblxXHRkaWUoMTgsIHBsdWdpbktleSlcblxfVxuXHQvLyBAdHMtaWdubJlXGcdHJldHVybiBwbHVnaWcbncblxuZXhwbJIGZbmNaWuIGxvYWRQbHVnaWSyBleHRlbmRzIGtleWmIFBsdWdpbnM+KFxuXHRwbHVnaWLZXkIEssXGcdGltcGxlbWVudGFaWuOiBQbHVnaWzWtdXGpOiBblkIHtcblxaWYgKCFwbHVnaWzWBsdWdpbktleVpIHBsdWdpbnNbcGxZluSVXSAIGltcGxlbWVudGFaWuXGXGcbiqKiBFUzUgUGxZluICovXGcbmludGVyZmFjZSBFUzVCYXNlURhdGUgZXhZWkcyBJbWlckJhcVTdGFZSBXGcdGFzclnbmVkXzogetrZXkIHNcmluZIGFueXcblxcGFyZWXzIEltbWVyURhdGVcblxcmVbtlZFIGJvbxlYWcbncblxuZXhwbJIGludGVyZmFjZSBFUzVPYmplYRTdGFZSBleHRlbmRzIEVTNUJhcVTdGFZSBXGcdHRcGVfOiBQcmeVRcGUuRVMTJqZWNXGcdGRyYWZXzogRHJhZnRlZDxBbnlPYmplYQsIEVTNUiamVjdFNYXRlPlxuXHRiYXNlXzogQWTJqZWNXGcdGNvcHlfOiBBbnlPYmplYQgfCBudWxsXGXGcbmVcGydCBpbnRlcmZhYUgRVMQXJyYXlTdGFZSBleHRlbmRzIEVTNUJhcVTdGFZSBXGcdHRcGVfOiBQcmeVRcGUuRVMQXJyYXlcblxZHJhZnRfOiBEcmFmdGVkPEFueUiamVjdCwgRVMQXJyYXlTdGFZTcblxYmFzZVIGFueVxuXHRjbBXzogYWXGXGcbiqKiBNYXAgLyBTZXQgcGxZluICovXGcbmVcGydCBpbnRlcmZhYUgTWFwURhdGUgZXhZWkcyBJbWlckJhcVTdGFZSBXGcdHRcGVfOiBQcmeVRcGUuTWFwXGcdGNvcHlfOiBBbnlNYXAgfCBbmRlZmluZWRcblxYXNzaWduZWRfOiBNYXAYWLCBibsZWFuPiBIHVuZGVmaWlZFxuXHRiYXNlXzogQWTWFwXGcdHJldmrZWRfOiBibsZWFuXGcdGRyYWZXzogRHJhZnRlZDxBbnlNYXAsIEhcFNYXRlPlxufVxuXGleHBvcnQgaWZXJmYWNlIFNldFNYXRlIGVdGVuZHMgSWtZXJCYXNlURhdGUgexuXHReXBlXzogUHJveHlUeXBlLlNldFxuXHRjbBXzogQWUVIHwgdWkZWZpbmVkXGcdGJhcVfOiBBbnlTZXRcblxZHJhZnRzXzogTWFwPGFueSwgRHJhZnRlZDgLygbWFwcyBaGUgbJpZluYWwgdmFsdWUgdGgdGhlIGRyYWZIHZhbHVlIGluIHRoZSBuZXcgcVXGcdHJldmrZWRfOiBibsZWFuXGcdGRyYWZXzogRHJhZnRlZDxBbnlTZXQsIFNldFNYXRlPlxufVxuXGvKiogUGFYhlcyBwbHVnaWgKicblxuZXhwbJIHRcGUgUGFYhQYXRoIDgKHNcmluZyBIGbWJlcilbXVxuIiwgImltcGydCBXGcdFBhdGNoLFxuXHRQYXRjaExpcRlbmVyLFxuXHREcmFmdGVkLFxuXHRJbWlcixcblxRFJBRlRfURBVEUsXGcdEltbWVyURhdGUsXGcdFBybhVHlwZSxcblxZVUGxZluXGIGZybgXCIuLipbnRlcmhbFwiXGpbXBvcnQgeRpZXgZnJvbSBcIiuLVaWxzLVycmycwiXGcbiqKiBFYWNoIHNjbBlIHJlcHJlcVudHMgYSBgcHJvZHVjZWAgYFsbCgKicblxuZXhwbJIGludGVyZmFjZSBJbWlclNjbBlIHtcblxcGFYhlc/OiBQYXRjaFtdXGcdGludmVycVQYXRjaGVzXzIFBhdGNoWcblxYFuQXVbZyZWVZVIGJvbxlYWcblxZHJhZnRzXzogYWWcblxcGFyZWXzIEltbWVyUNvcGVcblxcGFYhMaXNZWlcl/OiBQYXRjaExpcRlbmVyXGcdGltbWVyXzogSWtZXJcblxdWmaWhbGlZWREcmFmdHNfOiBudWiZXJcbncblxubGVIGNcnJlbnRTYwZTogSWtZXJTYwZSBIHVuZGVmaWlZFxuXGleHBvcnQgZnVuYRpbgZVQVycmVudFNjbBlKCkgexuXHRpZiAoXERVZfXyAmJiAhYVycmVudFNjbBlKSBkaWUoMClcblxcmVdXJuIGNcnJlbnRTYwZSFcbncblxuZnVuYRpbgYJlYXRlUNvcGUoXGcdHBhcmVudFIEltbWVyUNvcGUgfCBbmRlZmluZWQsXGcdGltbWVyXzogSWtZXJcbikIEltbWVyUNvcGUgexuXHRyZXRcmgexuXHRcdGRyYWZcIFtdLFxuXHRcdHBhcmVudFsXGcdFxaWtZXJfLFxuXHRcdCvIFdoZWldmVyIHRoZSBtbRpZmllZCBkcmFmdCBjbYWlucyBhIGRyYWZIGZybgYWvdGhlciBzYwZSwgdVcblxXHQvLyBuZWVkIHRvIHByZXZlbnQgYXVbymcmVlemluZyBzbyBaGUgdWvdlZCBkcmFmdCBjYWgYmUgZmluYWxpemVkLlxuXHRcdGNhbkFdGGcmVlemVfOiBcnVlLFxuXHRcdHVuZmluYWxpemVkRHJhZnRzXzogMFxuXHRXGXGcbmVcGydCBmdWjdGlvbiBcVQYXRjaGVzSWTYwZShcblxcNvcGUIEltbWVyUNvcGUsXGcdHBhdGNoTGlzdGVuZXI/OiBQYXRjaExpcRlbmVyXGpIHtcblxaWYgKHBhdGNoTGlzdGVuZXIpIHtcblxXHRnZXRQbHVnaWoXCJQYXRjaGVzXCIpICvIGFzcVydCBZSBoYXZlIHRoZSBwbHVnaWcblxXHRzYwZSwYXRjaGVzXyAIFtdXGcdFxcNvcGUuaWZXJzZVBhdGNoZXNfIDgWcblxXHRzYwZSwYXRjaExpcRlbmVyXyAIHBhdGNoTGlzdGVuZXJcblxfVxufVxuXGleHBvcnQgZnVuYRpbgcmVbtlUNvcGUocNvcGUIEltbWVyUNvcGUpIHtcblxbGVhdmVTYwZShzYwZSlcblxcNvcGUuZHJhZnRzXymbJFYWNoKHJldmrZURyYWZKVxuXHQvLyBAdHMtaWdubJlXGcdHNjbBlLmRyYWZcgPSBudWxsXGXGcbmVcGydCBmdWjdGlvbiBsZWFZVNjbBlKHNjbBlOiBJbWlclNjbBlKSBXGcdGlmIChzYwZSAPTgYVycmVudFNjbBlKSBXGcdFxYVycmVudFNjbBlIDgcNvcGUucGFyZWXxuXHRXGXGcbmVcGydCBmdWjdGlvbiBlbnRlclNjbBlKGltbWVyOiBJbWlcikgexuXHRyZXRcmgKGNcnJlbnRTYwZSAIGNyZWFZVNjbBlKGNcnJlbnRTYwZSwgaWtZXIpKVxufVxuXGmdWjdGlvbiByZXZvaVEcmFmdChkcmFmdDogRHJhZnRlZCkgexuXHRjbzdCBzdGFZTogSWtZXJTdGFZSAIGRyYWZWRSQUZUXNUQVRFXVxuXHRpZiAoXGcdFxcRhdGUudHlwZVgPTIFBybhVHlwZSQcmeUiamVjdCBfFxuXHRcdHNYXRlLnRcGVfIDPSBQcmeVRcGUuUHJveHlBcnJheVxuXHQpXGcdFxcRhdGUucmVbtlXygpXGcdGVscUgcRhdGUucmVbtlZFgPSBcnVlXGXGiLCAiaWwbJIHtcblxSWtZXJTYwZSxcblxRFJBRlRfURBVEUsXGcdGlzRHJhZnRhYmxlLFxuXHROTRISUHLFxuXHRQYXRjaFBhdGgsXGcdGVhYgsXGcdGhhcyxcblxZnJlZXplLFxuXHRJbWlclNYXRlLFxuXHRpcRyYWZLFxuXHRTZXRTdGFZSxcblxcVLFxuXHRQcmeVRcGUsXGcdGdldFBsdWdpbixcblxZGllLFxuXHRyZXZvaVTYwZSxcblxaXNGcmZWsXGcdHNoYWxsbdDbBXGIGZybgXCIuLipbnRlcmhbFwiXGcbmVcGydCBmdWjdGlvbiBwcmjZXNzUmVzdWxKHJlcVsdDogYWLCBzYwZTogSWtZXJTYwZSkgexuXHRzYwZSbmZpbmFsaXplZERyYWZcgPSBzYwZSkcmFmdHNfLmxlbmdaFxuXHRjbzdCBiYXNlRHJhZnQgPSBzYwZSkcmFmdHNfIVswXVxuXHRjbzdCBpcJlcGxhYVkIDgcmVzdWxICEPSBbmRlZmluZWQgJiYgcmVzdWxICEPSBiYXNlRHJhZnRcblxaWYgKCFzYwZSpbWlcludXNlUHJveGllcpXGcdFxZVUGxZluKFwiRVMXCIpLndpbGxGaWhbGlZUVTNVocNvcGUsIHJlcVsdCwgaXNSZXBsYWNlZClcblxaWYgKGlzUmVwbGFjZWQpIHtcblxXHRpZiAoYmFzZURyYWZWRSQUZUXNUQVRFXStbRpZmllZFpIHtcblxXHRcdHJldmrZVNjbBlKHNjbBlKVxuXHRcdFxZGllKDQpXGcdFxfVxuXHRcdGlmIChpcRyYWZYWJsZShyZXNbHQpKSBXGcdFxXHQvLyBGaWhbGlZSBaGUgcmVzdWxIGluIGNhcUgaXQgYudGFpbnMgKGyIGlzKSBhIHNYnNldCBvZiBaGUgZHJhZnQuXGcdFxXHRyZXNbHQgPSBmaWhbGlZShzYwZSwgcmVzdWxKVxuXHRcdFxaWYgKCFzYwZSwYXJlbnRfKSBtYXliZUZyZWVZShzYwZSwgcmVzdWxKVxuXHRcdHcblxXHRpZiAocNvcGUucGFYhlcpIHtcblxXHRcdGdldFBsdWdpbihcIlBhdGNoZXNcIikuZVuZXJhdGVSZXBsYWNlbWVudFBhdGNoZXNfKFxuXHRcdFxXHRiYXNlRHJhZnRbRFJBRlRfURBVEVdLmJhcVfLFxuXHRcdFxXHRyZXNbHQsXGcdFxXHRcdHNjbBlLnBhdGNoZXNfLFxuXHRcdFxXHRzYwZSpbnZlcnNlUGFYhlchXGcdFxXHQpXGcdFxfVxuXHRIGVscUgexuXHRcdCvIEZpbmFsaXplIHRoZSBiYXNlIGRyYWZLlxuXHRcdHJlcVsdCAIGZpbmFsaXplKHNjbBlLCBiYXNlRHJhZnQsIFtdKVxuXHRXGcdHJldmrZVNjbBlKHNjbBlKVxuXHRpZiAocNvcGUucGFYhlcpIHtcblxXHRzYwZSwYXRjaExpcRlbmVyXyEocNvcGUucGFYhlcsIHNjbBlLmludmVycVQYXRjaGVzXyEpXGcdHcblxcmVdXJuIHJlcVsdCAhPTgTkUSElORyA/IHJlcVsdCAIHVuZGVmaWlZFxufVxuXGmdWjdGlvbiBmaWhbGlZShybUNvcGUIEltbWVyUNvcGUsIHZhbHVlOiBhbnksIHBhdGg/OiBQYXRjaFBhdGgpIHtcblxLygRGuJQgcmVjdXJzZSBpbiBaGgcmVjdXJzaXZlIGRhdGEgcRydWNdXJlcxuXHRpZiAoaXNGcmZWodmFsdWUpKSByZXRcmgdmFsdWVcblxuXHRjbzdCBzdGFZTogSWtZXJTdGFZSAIHZhbHVlWRSQUZUXNUQVRFXVxuXHQvLyBBIHBsYWluIGiamVjdCwgbWlnaHQgbmVlZCBmcmVlemluZywgbWlnaHQgYudGFpbiBkcmFmdHNcblxaWYgKCFzdGFZSkgexuXHRcdGVhYgoXGcdFxXHRYWxZSxcblxXHRcdChrZXksIGNoaWxkVmFsdWUpID+XGcdFxXHRcdGZpbmFsaXplUHJvcGVydHkocmvdFNjbBlLCBzdGFZSwgdmFsdWUsIGtleSwgYhpbGRWYWxZSwgcGFaCksXGcdFxXHRcnVlICvIFNlZSAjNTkwLCBkbndCByZWNcnNlIGludGgbmuLWVudWlcmFibGUgbYgbmuIGRyYWZZWQgbJqZWNcxuXHRcdClcblxXHRyZXRcmgdmFsdWVcblxfVxuXHQvLyBOZXZlciBmaWhbGlZSBkcmFmdHMgbduZWQgYnkgYWvdGhlciBzYwZScblxaWYgKHNYXRlLnNjbBlXyAhPTgcmvdFNjbBlKSByZXRcmgdmFsdWVcblxLygVWtbRpZmllZCBkcmFmdCwgcmVdXJuIHRoZSAoZnJvemVuKSBvcmlnaWhbFxuXHRpZiAoIXNYXRlLmvZGlmaWVkXykgexuXHRcdGheWJlRnJlZXplKHJvbRTYwZSwgcRhdGUuYmFzZVsIHRydWUpXGcdFxcmVdXJuIHNYXRlLmJhcVfXGcdHcblxLygTmIGZpbmFsaXplZCBZXQsIGxldCdzIGRvIHRoYXQgbmXGcdGlmICghcRhdGUuZmluYWxpemVkXykgexuXHRcdHNYXRlLmZpbmFsaXplZFgPSBcnVlXGcdFxcRhdGUucNvcGVfLnVuZmluYWxpemVkRHJhZnRzXytXGcdFxYucQgcmVzdWxIDcblxXHRcdCvIEZvciBFUzUsIGNyZWFZSBhIGdvbQgYweSBmcmtIHRoZSBkcmFmdCBmaXJzdCwgdlaCBhZGRlZCBrZXlzIGFuZCBaXRobVIGRlbGVZWQgaVcycblxXHRcdHNYXRlLnRcGVfIDPSBQcmeVRcGUuRVMTJqZWNIHxIHNYXRlLnRcGVfIDPSBQcmeVRcGUuRVMQXJyYXlcblxXHRcdFxPyAocRhdGUuYweVgPSBzaGFsbGQweShzdGFZSkcmFmdFpKVxuXHRcdFxXHQIHNYXRlLmNvcHlfXGcdFxLygRmluYWxpemUgYWxsIGNoaWxkcmVuIGmIHRoZSBjbBXGcdFxLygRmyIHNldHMgdUgYxvbmUgYmVmbJlIGlZXJhdGluZywgbRoZXJaXNlIHdlIGNhbiBnZXQgaWgZWkbGVzcyBsbwIGRZSBbyBtbRpZnlpbmcgZHVyaWnIGlZXJhdGlvbiwgcVlICMMjhcblxXHQvLyBBbHRobVnaCBaGUgbJpZluYWwgdGVzdCBjYXNlIGRvZXNuJQgcVlbSBYWxpZCBhbnlYXksIHNvIGlmIHRoaXMgaWgdGhlIHdheSBZSBjYWgdHVybiBaGUgbmVdCBsaWlXGcdFxLygYmFjayBbyBlYWNoKHJlcVsdCwgLiuLilcblxXHRlYWNoKFxuXHRcdFxcRhdGUudHlwZVgPTIFBybhVHlwZSTZXQgPyBuZXcgUVKHJlcVsdCkgOiByZXNbHQsXGcdFxXHQoaVLCBjaGlsZFZhbHVlKSAPlxuXHRcdFxXHRmaWhbGlZVBybBlcnRKHJvbRTYwZSwgcRhdGUsIHJlcVsdCwgaVLCBjaGlsZFZhbHVlLCBwYXRoKVxuXHRcdClcblxXHQvLyBldmVyeXRoaWnIGluclkZSBpcyBmcmZWsIHdlIGNhbiBmcmVlemUgaGVyZVxuXHRcdGheWJlRnJlZXplKHJvbRTYwZSwgcmVzdWxLCBmYWxzZSlcblxXHQvLyBmaXJzdCBaWlIGZpbmFsaXppbmcsIGxldCdzIGNyZWFZSBaGzZSBwYXRjaGVzXGcdFxaWYgKHBhdGggJiYgcmvdFNjbBlLnBhdGNoZXNfKSBXGcdFxXHRnZXRQbHVnaWoXCJQYXRjaGVzXCIpLmdlbmVyYXRlUGFYhlcoXGcdFxXHRcdHNYXRlLFxuXHRcdFxXHRwYXRoLFxuXHRcdFxXHRybUNvcGUucGFYhlcsXGcdFxXHRcdHJvbRTYwZSpbnZlcnNlUGFYhlchXGcdFxXHQpXGcdFxfVxuXHRXGcdHJldHVybiBzdGFZSjbBXxufVxuXGmdWjdGlvbiBmaWhbGlZVBybBlcnRKFxuXHRybUNvcGUIEltbWVyUNvcGUsXGcdHBhcmVudFNYXRlOiBbmRlZmluZWQgfCBJbWlclNYXRlLFxuXHRYXJnZXRPYmplYQIGFueSxcblxcHJvcDogcRyaWnIHwgbnVtYmVyLFxuXHRjaGlsZFZhbHVlOiBhbnksXGcdHJvbRQYXRoPzogUGFYhQYXRoXGpIHtcblxaWYgKFfREVWXgJiYgYhpbGRWYWxZSAPTgdGFyZVTJqZWNKSBkaWUoNSlcblxaWYgKGlzRHJhZnQoYhpbGRWYWxZSkpIHtcblxXHRjbzdCBwYXRoIDcblxXHRcdHJvbRQYXRoICYmXGcdFxXHRwYXJlbnRTdGFZSAmJlxuXHRcdFxcGFyZWURhdGUhLnRcGVfICEPSBQcmeVRcGUuUVICYmICvIFNldCBvYmplYRzIGFyZSBhdGtaWMgcluYUgdGhleSBoYXZlIGvIGtleXMuXGcdFxXHQhaGFzKChwYXJlbnRTdGFZSBhcyBFeGNsdWRlPEltbWVyURhdGUsIFNldFNYXRlPikuYXNzaWduZWRfISwgcHJvcCkgLygUtpcCBkZWVwIHBhdGNoZXMgZmyIGFzclnbmVkIGtleXMuXGcdFxXHRcdDgcmvdFBhdGghLmNvbmNhdChwcmwKVxuXHRcdFxXHQIHVuZGVmaWlZFxuXHRcdCvIERyYWZcyBvdlZCBieSBgcNvcGVgIGFyZSBmaWhbGlZWQgaGVyZScblxXHRjbzdCByZXMgPSBmaWhbGlZShybUNvcGUsIGNoaWxkVmFsdWUsIHBhdGgpXGcdFxcVKHRhcmdldEiamVjdCwgcHJvcCwgcmVzKVxuXHRcdCvIERyYWZcyBmcmtIGFubRoZXIgcNvcGUgbXVzdCBwcmVZWZWQgdGgYmUgZnJvemVuXGcdFxLygaWYgdUgZIGEgZHJhZnQgYmFjayBmcmtIGZpbmFsaXplLCBZSdyZSBpbiBhIGlcRlZCBwcmkdWNlIGFuZCBzaGbGRuJQgZnJlZXplXGcdFxaWYgKGlzRHJhZnQocmVzKSkgexuXHRcdFxcmvdFNjbBlLmNhbkFdGGcmVlemVfIDgZmFscVcblxXHRIGVscUgcmVdXJuXGcdHcblxLygUVhcmNoIGldyBvYmplYRzIGZvciBbmZpbmFsaXplZCBkcmFmdHMuIEZybplbiBvYmplYRzIHNobVsZCBuZXZlciBjbYWluIGRyYWZcycblxaWYgKGlzRHJhZnRhYmxlKGNoaWxkVmFsdWUpICYmICFpcZybplbihjaGlsZFZhbHVlKSkgexuXHRcdGlmICghcmvdFNjbBlLmltbWVyXyhdXRvRnJlZXplXyAmJiBybUNvcGUudWmaWhbGlZWREcmFmdHNfIDwgMSkgexuXHRcdFxLygbBaWpemFaWuOiBpZiBhbiBvYmplYQgaXMgbmIGEgZHJhZnQsIGFuZCBZSBkbndCBoYXZlIHRvXGcdFxXHQvLyBkZWVwZnJlZXplIGVZXJdGhpbmcsIGFuZCBZSBhcmUgcVyZSBaGFIGvIGRyYWZcyBhcmUgbGVmdCBpbiBaGUgcmVtYWluaWnIGiamVjdFxuXHRcdFxLygYFcUgdUgcFIGFuZCBmaWhbGlZWQgYWxsIGRyYWZcyBhbHJlYWROyBZSBjYWgcRvcCBaXNpdGluZyBaGUgcmVzdCBvZiBaGUgdHJlZScblxXHRcdCvIFRoaXMgYmVuZWZpdHMgZXNwZWNpYWxseSBhZGRpbmcgbGFyZUgZGFYSBcmVlJMgdlaGdCBmdXJaGVyIHBybNlcNpbmcuXGcdFxXHQvLyBTZWUgYWRkLWRhdGEuanMgcGVyZiBZXNXGcdFxXHRyZXRcmcblxXHRXGcdFxZmluYWxpemUocmvdFNjbBlLCBjaGlsZFZhbHVlKVxuXHRcdCvIGltbWVyIGRlZXAgZnJlZXplcyBwbGFpbiBvYmplYRzLCBzbyBpZiBaGVyZSBpcyBubyBwYXJlbnQgcRhdGUsIHdlIGZyZWVZSBhcyBZWxsXGcdFxaWYgKCFwYXJlbnRTdGFZSBfCAhcGFyZWURhdGUucNvcGVfLnBhcmVudFpXGcdFxXHRtYXliZUZyZWVZShybUNvcGUsIGNoaWxkVmFsdWUpXGcdHcbncblxuZnVuYRpbgbWFYmVGcmVlemUocNvcGUIEltbWVyUNvcGUsIHZhbHVlOiBhbnksIGRlZXAgPSBmYWxzZSkgexuXHRpZiAocNvcGUuaWtZXJfLmFdGGcmVlemVfICYmIHNjbBlLmNhbkFdGGcmVlemVfKSBXGcdFxZnJlZXplKHZhbHVlLCBkZWVwKVxuXHRXGXGiLCAiaWwbJIHtcblxZWFjaCxcblxaGFzLFxuXHRpcyxcblxaXNEcmFmdGFibGUsXGcdHNoYWxsbdDbBLFxuXHRsYXRlcQsXGcdEltbWVyQmFzZVNYXRlLFxuXHRJbWlclNYXRlLFxuXHREcmFmdGVkLFxuXHRBbnlPYmplYQsXGcdEFueUFycmFLFxuXHRPYmplYRpcgsXGcdGdldENcnJlbnRTYwZSxcblxRFJBRlRfURBVEUsXGcdGRpZSxcblxYJlYXRlUHJveHksXGcdFBybhVHlwZVxufSBmcmtIFwiLivaWZXJuYWxcIlxuXGpbnRlcmZhYUgUHJveHlCYXNlURhdGUgZXhZWkcyBJbWlckJhcVTdGFZSBXGcdGFzclnbmVkXzogexuXHRcdFtwcmwZXJeTogcRyaWnXTogYmvbGVhblxuXHRXGcdHBhcmVudF/OiBJbWlclNYXRlXGcdHJldmrZVoKTogdmpZFxufVxuXGleHBvcnQgaWZXJmYWNlIFBybhTJqZWNURhdGUgZXhZWkcyBQcmeUJhcVTdGFZSBXGcdHRcGVfOiBQcmeVRcGUuUHJveHlPYmplYRcblxYmFzZVIGFueVxuXHRjbBXzogYWXGcdGRyYWZXzogRHJhZnRlZDxBbnlPYmplYQsIFBybhTJqZWNURhdGU+XGXGcbmVcGydCBpbnRlcmZhYUgUHJveHlBcnJheVNYXRlIGVdGVuZHMgUHJveHlCYXNlURhdGUgexuXHReXBlXzogUHJveHlUeXBlLlBybhQXJyYXlcblxYmFzZVIEFueUFycmFXGcdGNvcHlfOiBBbnlBcnJheSBIGbGxcblxZHJhZnRfOiBEcmFmdGVkPEFueUFycmFLCBQcmeUFycmFURhdGU+XGXGcbnRcGUgUHJveHlTdGFZSAIFBybhTJqZWNURhdGUgfCBQcmeUFycmFURhdGVcblxuLyoqXGgKiBSZXRcmzIGEgbmVIGRyYWZIGmIHRoZSBgYmFzZWAgbJqZWNLlxuICpcbiAqIFRoZSBzZWNvbmQgYXJndWlbnQgaXMgdGhlIHBhcmVudCBkcmFmdCzdGFZSAodXNlZCBpbnRlcmhbGxKScbiAqLxuZXhwbJIGZbmNaWuIGNyZWFZVBybhUHJveHkVCBleHRlbmRzIEiamVjdGlzaDoXGcdGJhcUIFQsXGcdHBhcmVudDIEltbWVyURhdGVcbikIERyYWZZWQVCwgUHJveHlTdGFZTgexuXHRjbzdCBpcFycmFIDgQXJyYXkuaXNBcnJheShiYXNlKVxuXHRjbzdCBzdGFZTogUHJveHlTdGFZSAIHtcblxXHReXBlXzogaXNBcnJheSA/IFBybhVHlwZSQcmeUFycmFIDogKFBybhVHlwZSQcmeUiamVjdCBhcyBhbnkpLFxuXHRcdCvIFRyYWNrIHdoaWNoIHBybRYUgYFsbCBaGlzIGlzIGFzcjaWFZWQgdlaCcblxXHRzYwZVIHBhcmVudCA/IHBhcmVudCzYwZVgOiBnZXRDdXJyZWUNvcGUoKSEsXGcdFxLygVHJZSBmbIgYmaCBzaGFsbGIGFuZCBkZWVwIGNoYWnZXMuXGcdFxbWkaWZpZWRfOiBmYWxzZSxcblxXHQvLyBVcVkIGRcmluZyBmaWhbGlYXRpbuXGcdFxZmluYWxpemVkXzogZmFscUsXGcdFxLygVHJhYsgdhpYggcHJvcGVydGllcyBoYXZlIGJlZWgYXNzaWduZWQgKHRydWUpIGyIGRlbGVZWQgKGZhbHNlKScblxXHRhcNpZlZFIHtLFxuXHRcdCvIFRoZSBwYXJlbnQgZHJhZnQgcRhdGUuXGcdFxcGFyZWXzogcGFyZWLFxuXHRcdCvIFRoZSBiYXNlIHNYXRlLlxuXHRcdGJhcVfOiBiYXNlLFxuXHRcdCvIFRoZSBiYXNlIHBybhLlxuXHRcdGRyYWZXzogbnVsbCBhcyBhbnksICvIHNldCBiZWxvdxuXHRcdCvIFRoZSBiYXNlIGNvcHkgdlaCBhbnkgdXBkYXRlZCBYWxZXMuXGcdFxYweVIGbGwsXGcdFxLygQFsbGVkIGJIHRoZSBgcHJvZHVjZWAgZnVuYRpbuXGcdFxcmVbtlXzogbnVsbCBhcyBhbnksXGcdFxaXNNYWYWxfOiBmYWxzZVxuXHRXGcblxLygdGhlIHRyYXBzIGcQgdGFyZVIHNvbWVaGluZywgYSBiaXQgbGlrZSBaGUgJJlYWwnIGJhcUuXGcdCvIGJdCBhbHNvLCBZSBuZWVkIHRvIGJlIGFibGUgdGgZGVZXJtaWlIGZybgdGhlIHRhcmdldCBaGFIHRoZSByZWxldmFudCBzdGFZSBpcxuXHQvLyAodGgYXZvaWQgYJlYXRpbmcgdHJhcHMgcGVyIGlucRhbmNlIHRvIGNhcHRcmUgdGhlIHNYXRlIGluIGNsbNcmUsXGcdCvIGFuZCBbyBhdmpZCBjcmVhdGluZyBZWlyZCBoaWRkZWgcHJvcGVydGllcyBhcyBZWxsKVxuXHQvLyBTbyBaGUgdHJpYsgaXMgdGgdXNlICdzdGFZScgYXMgdGhlIGFjdHVhbCAndGFyZVJyEgKGFuZCBtYWtlIHNcmUgdUgaWZXJjZXBIGVZXJdGhpbmcpXGcdCvIEvdGUgdGhhdCBpbiBaGUgYFzZSBvZiBhbiBhcnJheSwgdUgcHVIHRoZSBzdGFZSBpbiBhbiBhcnJheSBbyBoYXZlIGJldHRlciBSZWZsZWNIGRlZmFbHRzIGvdGJcblxbGVIHRhcmdldDogVCAIHNYXRlIGFzIGFueVxuXHRsZXQgdHJhcHMIFBybhSGFuZGxlcjxvYmplYQgfCBBcnJheTxhbnk+PiAIGiamVjdFRyYXBzXGcdGlmIChpcFycmFKSBXGcdFxdGFyZVIDgWNYXRlXSBhcyBhbnlcblxXHRcmFwcyAIGFycmFVHJhcHNcblxfVxuXGcdGNvbnNIHtyZXZvaUsIHBybhfSAIFBybhLnJldmjYWJsZShYXJnZXQsIHRyYXBzKVxuXHRzdGFZSkcmFmdFgPSBwcmeSBhcyBhbnlcblxcRhdGUucmVbtlXyAIHJldmrZVxuXHRyZXRcmgcHJveHkgYXMgYWXGXGcbiqKlxuICogTJqZWNIGRyYWZcxuICovXGleHBvcnQgYucQgbJqZWNVHJhcHMIFBybhSGFuZGxlcjxQcmeVNYXRlPiAIHtcblxZVKHNYXRlLCBwcmwKSBXGcdFxaWYgKHBybAgPTIERSQUZUXNUQVRFKSByZXRcmgcRhdGVcblxuXHRcdGNvbnNIHNvdXJjZSAIGxhdGVzdChzdGFZSlcblxXHRpZiAoIWhhcyhzbVyYUsIHBybApKSBXGcdFxXHQvLyBubtZXhpcRpbmcgbIgbmuLWbiBwcmwZXJeSuLlxuXHRcdFxcmVdXJuIHJlYWRQcmwRnJvbVBybRvKHNYXRlLCBzbVyYUsIHBybApXGcdFxfVxuXHRcdGNvbnNIHZhbHVlIDgccmNlWBybBdXGcdFxaWYgKHNYXRlLmZpbmFsaXplZFgfHwgIWlzRHJhZnRhYmxlKHZhbHVlKSkgexuXHRcdFxcmVdXJuIHZhbHVlXGcdFxfVxuXHRcdCvIENoZWNrIGZvciBleGlzdGluZyBkcmFmdCBpbiBtbRpZmllZCBzdGFZScblxXHQvLyBBcNpZlZCBYWxZXMgYXJlIGldmVyIGRyYWZZWQuIFRoaXMgYFYhlcyBhbnkgZHJhZnRzIHdlIGNyZWFZWQsIHRvbycblxXHRpZiAodmFsdWUgPTIHBlZWsocRhdGUuYmFzZVsIHBybApKSBXGcdFxXHRwcmVwYXJlQweShzdGFZSlcblxXHRcdHJldHVybiAocRhdGUuYweVhWBybAgYXMgYWXSAIGNyZWFZVBybhKFxuXHRcdFxXHRzdGFZSzYwZVuaWtZXJfLFxuXHRcdFxXHRYWxZSxcblxXHRcdFxcRhdGVcblxXHRcdCkpXGcdFxfVxuXHRcdHJldHVybiBYWxZVxuXHRLFxuXHRoYXMocRhdGUsIHBybApIHtcblxXHRyZXRcmgcHJvcCBpbiBsYXRlcQocRhdGUpXGcdHsXGcdGbktleXMocRhdGUpIHtcblxXHRyZXRcmgUmVmbGVjdCvdLZXlzKGxhdGVzdChzdGFZSkpXGcdHsXGcdHNldChcblxXHRzdGFZTogUHJveHlPYmplYRTdGFZSxcblxXHRwcmwOiBzdHJpbmcgLyogcRyaWNbHkgbmLCBidXQgaGVscHMgVFMgKisXGcdFxdmFsdWVcblxKSBXGcdFxYucQgZGVzYyAIGdldERlcNyaXBbJGcmtUHJvdGobGFZXNKHNYXRlKSwgcHJvcClcblxXHRpZiAoZGVzYzucVKSBXGcdFxXHQvLyBzcGVjaWFsIGNhcUIGlmIHRoaXMgdJpdGUgaXMgYFwdHVyZWQgYnkgYSBzZXRZXIsIHdlIGhhdmVcblxXHRcdCvIHRvIHRyaWdnZXIgaXQgdlaCBaGUgYycmVjdCBjbZXhXGcdFxXHRkZXNjLnNldCjYWxsKHNYXRlLmRyYWZXywgdmFsdWUpXGcdFxXHRyZXRcmgdHJZVxuXHRcdHcblxXHRpZiAoIXNYXRlLmvZGlmaWVkXykgexuXHRcdFxLygdGhlIGxhcQgYhlYsgaXMgYmVjYXVzZSBZSBuZWVkIHRvIGJlIGFibGUgdGgZGlzdGluZVpcggcVdGluZyBhIGvbileGlzdGluZyBbyBbmRlZmluZWQgKHdoaWNoIGlzIGEgYhhbmdlKVxuXHRcdFxLygZnJvbSBzZXRaWnIGFuIGVaXNaWnIHBybBlcnRIHdpdGggdmFsdWUgdWkZWZpbmVkIHRvIHVuZGVmaWlZCAodhpYggaXMgbmIGEgYhhbmdlKVxuXHRcdFxYucQgYVycmVudCAIHBlZWsobGFZXNKHNYXRlKSwgcHJvcClcblxXHRcdCvIHNwZWNpYWwgYFzZSwgaWYgdUgYXNzaWduaWnIHRoZSBvcmlnaWhbCBYWxZSBbyBhIGRyYWZLCBZSBjYWgaWdubJlIHRoZSBhcNpZtZWXGcdFxXHRjbzdCBjdXJyZWURhdGUIFBybhTJqZWNURhdGUgPSBjdXJyZWPybRFJBRlRfURBVEVdXGcdFxXHRpZiAoYVycmVudFNYXRlICYmIGNcnJlbnRTdGFZSiYXNlXyAPTgdmFsdWUpIHtcblxXHRcdFxcRhdGUuYweVhWBybBdIDgdmFsdWVcblxXHRcdFxcRhdGUuYXNzaWduZWRfWBybBdIDgZmFscVcblxXHRcdFxcmVdXJuIHRydWVcblxXHRcdHcblxXHRcdGlmIChpcyhYWxZSwgYVycmVudCkgJiYgKHZhbHVlICEPSBbmRlZmluZWQgfHwgaGFzKHNYXRlLmJhcVfLCBwcmwKSkpXGcdFxXHRcdHJldHVybiBcnVlXGcdFxXHRwcmVwYXJlQweShzdGFZSlcblxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdHcblxuXHRcdGlmIChcblxXHRcdHNYXRlLmNvcHlfIVtwcmwXSAPTgdmFsdWUgJiZcblxXHRcdCvIHNwZWNpYWwgYFzZTogTmFOXGcdFxXHReXBlbYgdmFsdWUgITIFwibnVtYmVyXCIgJiZcblxXHRcdCvIHNwZWNpYWwgYFzZTogaGFuZGxlIGldyBwcmwcyBaXRoIHZhbHVlICdbmRlZmluZWQnXGcdFxXHQodmFsdWUgITIHVuZGVmaWlZCBfCBwcmwIGluIHNYXRlLmNvcHlfKVxuXHRcdClcblxXHRcdHJldHVybiBcnVlXGcblxXHQvLyBAdHMtaWdubJlXGcdFxcRhdGUuYweVhWBybBdIDgdmFsdWVcblxXHRzdGFZShcNpZlZFbcHJvcFgPSBcnVlXGcdFxcmVdXJuIHRydWVcblxfSxcblxZGVsZXRlUHJvcGVydHkocRhdGUsIHBybAIHNcmluZykgexuXHRcdCvIFRoZSBgdWkZWZpbmVkYCBjaGVjayBpcyBhIGZhcQgcGFaCBmbIgcHJlLWVaXNaWnIGtleXMuXGcdFxaWYgKHBlZWsocRhdGUuYmFzZVsIHBybApICEPSBbmRlZmluZWQgfHwgcHJvcCBpbiBzdGFZSiYXNlXykgexuXHRcdFxcRhdGUuYXNzaWduZWRfWBybBdIDgZmFscVcblxXHRcdHByZXBhcmVDbBKHNYXRlKVxuXHRcdFxbWFyaNoYWnZWQocRhdGUpXGcdFxfSBlbHNlIHtcblxXHRcdCvIGlmIGFuIGyaWdpbmFsbHkgbmIGFzclnbmVkIHBybBlcnRIHdhcyBkZWxldGVkXGcdFxXHRkZWxldGUgcRhdGUuYXNzaWduZWRfWBybBdXGcdFxfVxuXHRcdCvIEBcypZvcmVcblxXHRpZiAocRhdGUuYweVpIGRlbGVZSBzdGFZSjbBXtwcmwXVxuXHRcdHJldHVybiBcnVlXGcdHsXGcdCvIEvdGUIFdlIGldmVyIGNvZXJjZSBgZGVzYyYWxZWAgaWbyBhbiBJbWlciBkcmFmdCwgYmVjYXVzZSBZSBjYWndCBtYWtlXGcdCvIHRoZSBzYWlIGdYXJhbnRlZSBpbiBFUzUgbWkZScblxZVTduUHJvcGVydHlEZXNjcmlwdGyKHNYXRlLCBwcmwKSBXGcdFxYucQgbduZXIgPSBsYXRlcQocRhdGUpXGcdFxYucQgZGVzYyAIFJlZmxlYQuZVTduUHJvcGVydHlEZXNjcmlwdGyKGbmVyLCBwcmwKVxuXHRcdGlmICghZGVzYykgcmVdXJuIGRlcNcblxXHRyZXRcmgexuXHRcdFxdJpdGFibGUIHRydWUsXGcdFxXHRjbmaWdcmFibGUIHNYXRlLnRcGVfICEPSBQcmeVRcGUuUHJveHlBcnJheSBfCBwcmwICEPSBcImxlbmdaFwiLFxuXHRcdFxZWbWVyYWJsZTogZGVzYylbnVtZXJhYmxlLFxuXHRcdFxdmFsdWUIGbmVyWBybBdXGcdFxfVxuXHRLFxuXHRkZWZpbmVQcmwZXJeSgpIHtcblxXHRkaWUoMTEpXGcdHsXGcdGdldFBybRvdHlwZUmKHNYXRlKSBXGcdFxcmVdXJuIEiamVjdCnZXRQcmbRcGVPZihzdGFZSiYXNlXylcblxfSxcblxcVUHJvdGeXBlTYoKSBXGcdFxZGllKDEyKVxuXHRXGXGcbiqKlxuICogQXJyYXkgZHJhZnRzXGgKicblxuYucQgYXJyYXlUcmFwczogUHJveHlIYWkbGVyPFtQcmeUFycmFURhdGVdPiAIHtXGlYWNoKGiamVjdFRyYXBzLCAoaVLCBmbikgPTgexuXHQvLyBAdHMtaWdubJlXGcdGFycmFVHJhcHNbaVXSAIGZbmNaWuKCkgexuXHRcdGFyZVtZWcswXSAIGFyZVtZWcswXVswXVxuXHRcdHJldHVybiBmbihcHBseShaGlzLCBhcmdbWVudHMpXGcdHcbnpXGhcnJheVRyYXBzLmRlbGVZVBybBlcnRIDgZnVuYRpbocRhdGUsIHBybApIHtcblxaWYgKFfREVWXgJiYgaXNOYUocGFycVJbnQocHJvcCBhcyBhbnkpKSkgZGllKDEzKVxuXHQvLyBAdHMtaWdubJlXGcdHJldHVybiBhcnJheVRyYXBzLnNldCEuYFsbChaGlzLCBzdGFZSwgcHJvcCwgdWkZWZpbmVkKVxufVxuYXJyYXlUcmFwcyzZXQgPSBmdWjdGlvbihzdGFZSwgcHJvcCwgdmFsdWUpIHtcblxaWYgKFfREVWXgJiYgcHJvcCAhPTgXCJsZWndGhcIiAmJiBpchTihwYXJzZUludChwcmwIGFzIGFueSkpKSBkaWUoMTQpXGcdHJldHVybiBvYmplYRUcmFwcyzZXQhLmNhbGwodGhpcywgcRhdGVbMFsIHBybAsIHZhbHVlLCBzdGFZVswXSlcbncblxuLygQWNjZXNzIGEgcHJvcGVydHkgdlaGdCBjcmVhdGluZyBhbiBJbWlciBkcmFmdCcbmZbmNaWuIHBlZWsoZHJhZnQIERyYWZZWQsIHBybAIFBybBlcnRSVKSBXGcdGNvbnNIHNYXRlIDgZHJhZnRbRFJBRlRfURBVEVdXGcdGNvbnNIHNvdXJjZSAIHNYXRlIDgbGFZXNKHNYXRlKSAIGRyYWZXGcdHJldHVybiBzbVyYVbcHJvcFcbncblxuZnVuYRpbgcmVhZFBybBGcmtUHJvdGocRhdGUIEltbWVyURhdGUsIHNvdXJjZTogYWLCBwcmwOiBQcmwZXJeUtleSkgexuXHRjbzdCBkZXNjIDgZVRGVzYJpcHRvckZybQcmbyhzbVyYUsIHBybApXGcdHJldHVybiBkZXNjXGcdFxPyBgdmFsdWVgIGluIGRlcNcblxXHRcdDgZGVzYyYWxZVxuXHRcdFxOiAvLyBUaGlzIGlzIGEgdmVyeSBzcGVjaWFsIGNhcUsIGlmIHRoZSBwcmwIGlzIGEgZVdGVyIGRlZmluZWQgYnkgdGhlXGcdFxXHQgICvIHBybRvdHlwZSwgdUgchvdWxkIGludmrZSBpdCBaXRoIHRoZSBkcmFmdCBhcyBjbZXhIVxuXHRcdFxICBkZXNjLmdldDuYFsbChzdGFZSkcmFmdFpXGcdFxOiBbmRlZmluZWRcbncblxuZnVuYRpbgZVRGVzYJpcHRvckZybQcmbyhcblxccmNlOiBhbnksXGcdHBybAIFBybBlcnRSVXGpOiBQcmwZXJeURlcNyaXBbIgfCBbmRlZmluZWQgexuXHQvLyAnaWnIGNoZWNrcyBwcmbyFcblxaWYgKCEocHJvcCBpbiBzbVyYUpKSByZXRcmgdWkZWZpbmVkXGcdGxldCBwcmbyAIEiamVjdCnZXRQcmbRcGVPZihzbVyYUpXGcdHdoaWxlIChwcmbykgexuXHRcdGNvbnNIGRlcMgPSBPYmplYQuZVTduUHJvcGVydHlEZXNjcmlwdGyKHBybRvLCBwcmwKVxuXHRcdGlmIChkZXNjKSByZXRcmgZGVzYxuXHRcdHBybRvIDgTJqZWNLmdldFBybRvdHlwZUmKHBybRvKVxuXHRXGcdHJldHVybiBbmRlZmluZWRcbncblxuZXhwbJIGZbmNaWuIGhcmtDaGFuZVkKHNYXRlOiBJbWlclNYXRlKSBXGcdGlmICghcRhdGUubWkaWZpZWRfKSBXGcdFxcRhdGUubWkaWZpZWRfIDgdHJZVxuXHRcdGlmIChzdGFZSwYXJlbnRfKSBXGcdFxXHRtYXJrQhhbmdlZChzdGFZSwYXJlbnRfKVxuXHRcdHcblxfVxufVxuXGleHBvcnQgZnVuYRpbgcHJlcGFyZUNvcHkocRhdGUIHtiYXNlXzogYWOyBjbBXzogYWfSkgexuXHRpZiAoIXNYXRlLmNvcHlfKSBXGcdFxcRhdGUuYweVgPSBzaGFsbGQweShzdGFZSiYXNlXylcblxfVxufVxuIiwgImltcGydCBXGcdElQcmkdWNlVlaFBhdGNoZXMsXGcdElQcmkdWNlLFxuXHRJbWlclNYXRlLFxuXHREcmFmdGVkLFxuXHRpcRyYWZYWJsZSxcblxcHJvYVzcJlcVsdCxcblxUGFYgsXGcdEiamVjdGlzaCxcblxRFJBRlRfURBVEUsXGcdERyYWZLFxuXHRQYXRjaExpcRlbmVyLFxuXHRpcRyYWZLFxuXHRpchcCxcblxaXNTZXQsXGcdGNyZWFZVBybhUHJveHksXGcdGdldFBsdWdpbixcblxZGllLFxuXHRoYXNQcmaWVzLFxuXHRlbnRlclNjbBlLFxuXHRyZXZvaVTYwZSxcblxbGVhdmVTYwZSxcblxdXNlUGFYhlcluUNvcGUsXGcdGdldENcnJlbnRTYwZSxcblxTkUSElORyxcblxZnJlZXplLFxuXHRjdXJyZWXGIGZybgXCIuLipbnRlcmhbFwiXGcbmludGVyZmFjZSBQcmkdWNlcnNGbnMgexuXHRwcmkdWNlOiBJUHJvZHVjZVxuXHRwcmkdWNlVlaFBhdGNoZXMIElQcmkdWNlVlaFBhdGNoZXNcbncblxuZXhwbJIGNsYXNzIEltbWVyIGltcGxlbWVudHMgUHJvZHVjZXJzRmzIHtcblxdXNlUHJveGllcIGJvbxlYWgPSBoYXNQcmaWVzXGcblxYXVbZyZWVZVIGJvbxlYWgPSBcnVlXGcblxYucRydWNbIoYuZmlnPzogeVzZVBybhpZXM/OiBibsZWFuOyBhdXRvRnJlZXplPzogYmvbGVhbnpIHtcblxXHRpZiAodHlwZWmIGNvbmZpZzudXNlUHJveGllcyAPTgXCJibsZWFuXCIpXGcdFxXHRaGlzLnNldFVzZVBybhpZXMoYuZmlnIScVQcmaWVzKVxuXHRcdGlmICheXBlbYgYuZmlnPyhdXRvRnJlZXplIDPSBcImJvbxlYWcIilcblxXHRcdHRoaXMucVQXVbZyZWVZShjbmaWchLmFdGGcmVlemUpXGcdHcblxuXHQvKipcblxICogVGhlIGBwcmkdWNlYCBmdWjdGlvbiBYWtlcyBhIHZhbHVlIGFuZCBhIFwicmVjaXBlIGZbmNaWuXCIgKHdobNlXGcdCAqIHJldHVybiBYWxZSBvZnRlbiBkZXBlbmRzIGuIHRoZSBiYXNlIHNYXRlKSgVGhlIHJlYlwZSBmdWjdGlvbiBpcxuXHQgKiBmcmVlIHRvIGdGFZSBpdHMgZmlycQgYXJndWlbnQgaGZXZlciBpdCBYWcygQWxsIGdGFaWucyBhcmVcblxICogbseSBldmVyIGFwcGxpZWQgdGgYSBfXNvcHlfXyBvZiBaGUgYmFzZSBzdGFZScblxICpcblxICogUGFzcyBvbmxIGEgZnVuYRpbgdGgYJlYXRlIGEgXCJjdXJyaWVkIHBybRYVyXCIgdhpYggcmVsaWVZXMgeWXGcdCAqIGZybgcGFzcluZyBaGUgcmVjaXBlIGZbmNaWuIGVZXJIHRpbWUuXGcdCAqXGcdCAqIEubHkgcGxhaWgbJqZWNcyBhbmQgYXJyYXlzIGFyZSBtYWRlIGdGFibGUuIEFsbCBvdGhlciBvYmplYRzIGFyZVxuXHQgKiBjbzaWRlcmVkIHVuYweWFibGUuXGcdCAqXGcdCAqIEvdGUIFRoaXMgZnVuYRpbgaXMgXibVuZFfIHRvIGlcyBgSWtZXJgIGlucRhbmNlLlxuXHQgKlxuXHQgKiBAcGFyYWgeFueXgYmFzZSAtIHRoZSBpbmlaWFsIHNYXRlXGcdCAqIEBwYXJhbSBRnVuYRpbIHBybRYVyICgZnVuYRpbgdGhhdCByZWNlaXZlcyBhIHBybhIGmIHRoZSBiYXNlIHNYXRlIGFzIGZpcnNIGFyZVtZWIGFuZCBaGljaCBjYWgYmUgZnJlZWxIGvZGlmaWVkXGcdCAqIEBwYXJhbSBRnVuYRpbIHBhdGNoTGlzdGVuZXIgLSBvcHRpbhbCBmdWjdGlvbiBaGFIHdpbGwgYmUgYFsbGVkIHdpdGggYWxsIHRoZSBwYXRjaGVzIHBybRYVkIGhlcmVcblxICogQHJldHVybnMgeFueXgYSBuZXcgcRhdGUsIGyIHRoZSBpbmlaWFsIHNYXRlIGlmIGvdGhpbmcgdFzIGvZGlmaWVkXGcdCAqLxuXHRwcmkdWNlOiBJUHJvZHVjZSAIChiYXNlOiBhbnksIHJlYlwZTIGFueSwgcGFYhMaXNZWlcjIGFueSkgPTgexuXHRcdCvIGNcnJpZWQgaWbNhdGlvblxuXHRcdGlmICheXBlbYgYmFzZSAPTgXCJmdWjdGlvblwiICYmIHRcGVvZiByZWNpcGUgITIFwiZnVuYRpbcIikgexuXHRcdFxYucQgZGVmYXVsdEJhcUgPSByZWNpcGVcblxXHRcdHJlYlwZSAIGJhcVcblxuXHRcdFxYucQgcVsZiAIHRoaXNcblxXHRcdHJldHVybiBmdWjdGlvbiBjdXJyaWVkUHJvZHVjZShcblxXHRcdFxdGhpczogYWLFxuXHRcdFxXHRiYXNlIDgZGVmYXVsdEJhcUsXGcdFxXHRcdCuLmFyZMIGFueVtdXGcdFxXHQpIHtcblxXHRcdFxcmVdXJuIHNlbGYucHJvZHVjZShiYXNlLCAoZHJhZnQIERyYWZZWQpID+IHJlYlwZSjYWxsKHRoaXMsIGRyYWZLCAuLihcmdzKSkgLygcHJldHRpZXItaWdubJlXGcdFxXHRXGcdFxfVxuXGcdFxaWYgKHRcGVvZiByZWNpcGUgITIFwiZnVuYRpbcIikgZGllKDYpXGcdFxaWYgKHBhdGNoTGlzdGVuZXIgITIHVuZGVmaWlZCAmJiBeXBlbYgcGFYhMaXNZWlciAhPTgXCJmdWjdGlvblwiKVxuXHRcdFxZGllKDcpXGcblxXHRsZXQgcmVzdWxXGcblxXHQvLyBPbmxIHBsYWluIGiamVjdHMsIGFycmFcywgYWkIFwiaWtZXJhYmxlIGNsYXNzZXNcIiBhcmUgZHJhZnRlZCcblxXHRpZiAoaXNEcmFmdGFibGUoYmFzZSkpIHtcblxXHRcdGNvbnNIHNjbBlIDgZWZXJTYwZShaGlzKVxuXHRcdFxYucQgcHJveHkgPSBjcmVhdGVQcmeShaGlzLCBiYXNlLCBbmRlZmluZWQpXGcdFxXHRsZXQgaGFzRXJybIgPSBcnVlXGcdFxXHRcnkgexuXHRcdFxXHRyZXNbHQgPSByZWNpcGUocHJveHkpXGcdFxXHRcdGhhcVycmyIDgZmFscVcblxXHRcdHgZmluYWxseSBXGcdFxXHRcdCvIGZpbmFsbHkgaWzdGVhZCBvZiBjYXRjaCArIHJldGhybcgYmVdGVyIHByZXNlcnZlcyBvcmlnaWhbCBzdGFjaxuXHRcdFxXHRpZiAoaGFzRXJybIpIHJldmrZVNjbBlKHNjbBlKVxuXHRcdFxXHRlbHNlIGxlYXZlUNvcGUocNvcGUpXGcdFxXHRXGcdFxXHRpZiAodHlwZWmIFBybpcUgITIFwidWkZWZpbmVkXCIgJiYgcmVzdWxIGlucRhbmNlbYgUHJvbWlzZSkgexuXHRcdFxXHRyZXRcmgcmVzdWxLnRoZWoXGcdFxXHRcdFxcmVzdWxID+IHtcblxXHRcdFxXHRcdHVzZVBhdGNoZXNJblNjbBlKHNjbBlLCBwYXRjaExpcRlbmVyKVxuXHRcdFxXHRcdFxcmVdXJuIHBybNlcNSZXNbHQocmVzdWxLCBzYwZSlcblxXHRcdFxXHRLFxuXHRcdFxXHRcdGVycmyID+IHtcblxXHRcdFxXHRcdHJldmrZVNjbBlKHNjbBlKVxuXHRcdFxXHRcdFxdGhybcgZXJybJcblxXHRcdFxXHRXGcdFxXHRcdClcblxXHRcdHcblxXHRcdHVzZVBhdGNoZXNJblNjbBlKHNjbBlLCBwYXRjaExpcRlbmVyKVxuXHRcdFxcmVdXJuIHBybNlcNSZXNbHQocmVzdWxLCBzYwZSlcblxXHRIGVscUgaWYgKCFiYXNlIHxIHRcGVvZiBiYXNlICEPSBcImiamVjdFwiKSBXGcdFxXHRyZXNbHQgPSByZWNpcGUoYmFzZSlcblxXHRcdGlmIChyZXNbHQgPTIHVuZGVmaWlZCkgcmVzdWxIDgYmFzZVxuXHRcdFxaWYgKHJlcVsdCAPTgTkUSElORykgcmVzdWxIDgdWkZWZpbmVkXGcdFxXHRpZiAodGhpcyhdXRvRnJlZXplXykgZnJlZXplKHJlcVsdCwgdHJZSlcblxXHRcdGlmIChwYXRjaExpcRlbmVyKSBXGcdFxXHRcdGNvbnNIHAIFBhdGNoWgPSBbXVxuXHRcdFxXHRjbzdCBpcDogUGFYhbXSAIFtdXGcdFxXHRcdGdldFBsdWdpbihcIlBhdGNoZXNcIikuZVuZXJhdGVSZXBsYWNlbWVudFBhdGNoZXNfKGJhcUsIHJlcVsdCwgcCwgaXApXGcdFxXHRcdHBhdGNoTGlzdGVuZXIocCwgaXApXGcdFxXHRXGcdFxXHRyZXRcmgcmVzdWxXGcdFxfSBlbHNlIGRpZSgyMSwgYmFzZSlcblxfVxuXGcdHBybRYVXaXRoUGFYhlczogSVBybRYVXaXRoUGFYhlcyAIChcblxXHRhcmcxOiBhbnksXGcdFxYXJnMjIGFueSxcblxXHRhcmczPzogYWXGcdCkIGFueSAPiBXGcdFxaWYgKHRcGVvZiBhcmcxIDPSBcImZbmNaWuXCIpIHtcblxXHRcdHJldHVybiAocRhdGUIGFueSwgLiuYXJnczogYWWpID+XGcdFxXHRcdHRoaXMucHJvZHVjZVdpdGhQYXRjaGVzKHNYXRlLCAoZHJhZnQIGFueSkgPTgYXJnMShkcmFmdCwgLiuYXJncykpXGcdFxfVxuXGcdFxbGVIHBhdGNoZXMIFBhdGNoWsIGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdFxYucQgcmVzdWxIDgdGhpcywcmkdWNlKGFyZzEsIGFyZzIsIChwOiBQYXRjaFtdLCBpcDogUGFYhbXSkgPTgexuXHRcdFxcGFYhlcyAIHBcblxXHRcdGludmVycVQYXRjaGVzIDgaXBcblxXHRKVxuXGcdFxaWYgKHRcGVvZiBQcmtaXNlICEPSBcInVuZGVmaWlZFwiICYmIHJlcVsdCBpbnNYWjZWmIFBybpcUpIHtcblxXHRcdHJldHVybiByZXNbHQudGhlbihuZXhURhdGUgPTgWleHRTdGFZSwgcGFYhlcyEsIGludmVycVQYXRjaGVzIVpXGcdFxfVxuXHRcdHJldHVybiBbcmVzdWxLCBwYXRjaGVzISwgaWZXJzZVBhdGNoZXMhXVxuXHRXGcblxYJlYXRlRHJhZnQVCBleHRlbmRzIEiamVjdGlzaDoYmFzZTogVCkIERyYWZPFQ+IHtcblxXHRpZiAoIWlzRHJhZnRhYmxlKGJhcUpKSBkaWUoOClcblxXHRpZiAoaXNEcmFmdChiYXNlKSkgYmFzZSAIGNcnJlbnQoYmFzZSlcblxXHRjbzdCBzYwZSAIGVudGVyUNvcGUodGhpcylcblxXHRjbzdCBwcmeSAIGNyZWFZVBybhKHRoaXMsIGJhcUsIHVuZGVmaWlZClcblxXHRwcmeVtEUkFGVFTVEFURVuaXNNYWYWxfIDgdHJZVxuXHRcdGxlYXZlUNvcGUocNvcGUpXGcdFxcmVdXJuIHBybhIGFzIGFueVxuXHRXGcblxZmluaXNoRHJhZnQRCBleHRlbmRzIERyYWZPGFueT+KFxuXHRcdGRyYWZOiBELFxuXHRcdHBhdGNoTGlzdGVuZXI/OiBQYXRjaExpcRlbmVyXGcdCkIEQgZXhZWkcyBEcmFmdDxpbmZlciBUPiA/IFQgOiBuZXZlciBXGcdFxYucQgcRhdGUIEltbWVyURhdGUgPSBkcmFmdCAmJiAoZHJhZnQgYXMgYWKVtEUkFGVFTVEFURVcblxXHRpZiAoXERVZfXykgexuXHRcdFxaWYgKCFzdGFZSBfCAhcRhdGUuaXNNYWYWxfKSBkaWUoOSlcblxXHRcdGlmIChzdGFZSmaWhbGlZWRfKSBkaWUoMTApXGcdFxfVxuXHRcdGNvbnNIHtzYwZVIHNjbBlfSAIHNYXRlXGcdFxdXNlUGFYhlcluUNvcGUocNvcGUsIHBhdGNoTGlzdGVuZXIpXGcdFxcmVdXJuIHBybNlcNSZXNbHQodWkZWZpbmVkLCBzYwZSlcblxfVxuXGcdCqKlxuXHQgKiBQYXNzIHRydWUgdGgYXVbhdGljYWxseSBmcmVlemUgYWxsIGNvcGllcyBjcmVhdGVkIGJIEltbWVyLlxuXHQgKlxuXHQgKiBCeSBkZWZhdWxLCBhdXRvLWZyZWVaWnIGlzIGVuYWJsZWQuXGcdCAqLxuXHRzZXRBdXRvRnJlZXplKHZhbHVlOiBibsZWFuKSBXGcdFxdGhpcyhdXRvRnJlZXplXyAIHZhbHVlXGcdHcblxuXHQvKipcblxICogUGFzcyBcnVlIHRvIHVzZSBaGUgRVMyMDEIGBQcmeWAgYxhcMgdhlbiBjcmVhdGluZyBkcmFmdHMsIHdoaWNoIGlzXGcdCAqIGFsdFcyBmYXNZXIgdGhhbiBcluZyBFUzUgcHJveGllcycblxICpcblxICogQnkgZGVmYXVsdCwgZmVhdHVyZSBkZXRlYRpbgaXMgdXNlZCwgcgYFsbGluZyBaGlzIGlzIHJhcmVseSBuZWNlcNhcnkuXGcdCAqLxuXHRzZXRVcVQcmaWVzKHZhbHVlOiBibsZWFuKSBXGcdFxaWYgKHZhbHVlICYmICFoYXNQcmaWVzKSBXGcdFxXHRkaWUoMjApXGcdFxfVxuXHRcdHRoaXMudXNlUHJveGllcgPSBYWxZVxuXHRXGcblxYXBwbHlQYXRjaGVzPFQgZXhZWkcyBPYmplYRpcg+KGJhcUIFQsIHBhdGNoZXMIFBhdGNoWpOiBUIHtcblxXHQvLyBJZiBhIHBhdGNoIHJlcGxhYVzIHRoZSBlbnRpcmUgcRhdGUsIHRhaUgdGhhdCByZXBsYWNlbWVudCBhcyBiYXNlXGcdFxLygYmVmbJlIGFwcGxaWnIHBhdGNoZXNcblxXHRsZXQgaTogbnVtYmVyXGcdFxZmyIChpIDgcGFYhlcysZWndGggLSAxOyBpIDIDAIGktLSkgexuXHRcdFxYucQgcGFYggPSBwYXRjaGVzWldXGcdFxXHRpZiAocGFYgucGFaCsZWndGggPTIDAgJiYgcGFYgubAgPTIFwicmVwbGFjZVwiKSBXGcdFxXHRcdGJhcUgPSBwYXRjaCYWxZVxuXHRcdFxXHRicmVhaxuXHRcdFxfVxuXHRcdHcblxXHQvLyBJZiBaGVyZSBYXMgYSBwYXRjaCBaGFIHJlcGxhYVkIHRoZSBlbnRpcmUgcRhdGUsIHNYXJIGZybgdGhlXGcdFxLygcGFYggYWZZXIgdGhhdCcblxXHRpZiAoaSA+ICxKSBXGcdFxXHRwYXRjaGVzIDgcGFYhlcyzbGljZShpICsgMSlcblxXHRXGcblxXHRjbzdCBhcHBseVBhdGNoZXNJbXBsIDgZVUGxZluKFwiUGFYhlcwiKShcHBseVBhdGNoZXNfXGcdFxaWYgKGlzRHJhZnQoYmFzZSkpIHtcblxXHRcdCvIEuQjogbmVZXIgaGlcyBpZiBzblIHBhdGNoIGEgcmVwbGFjZWlbnQsIHBhdGNoZXMgYXJlIGldmVyIGRyYWZcxuXHRcdFxcmVdXJuIGFwcGxUGFYhlcltcGwoYmFzZSwgcGFYhlcylcblxXHRXGcdFxLygTRoZXJaXNlLCBwcmkdWNlIGEgYweSBvZiBaGUgYmFzZSBzdGFZScblxXHRyZXRcmgdGhpcywcmkdWNlKGJhcUsIChkcmFmdDogRHJhZnRlZCkgPTcblxXHRcdGFwcGxUGFYhlcltcGwoZHJhZnQsIHBhdGNoZXMpXGcdFxKVxuXHRXGXGcbmVcGydCBmdWjdGlvbiBjcmVhdGVQcmeTxUIGVdGVuZHMgTJqZWNaXNoPihcblxaWtZXIIEltbWVyLFxuXHRYWxZTogVCxcblxcGFyZWPzogSWtZXJTdGFZVxuKTogRHJhZnRlZDxULCBJbWlclNYXRlPiBXGcdCvIHByZWNvbmRpdGlvbjogYJlYXRlUHJveHkgchvdWxkIGJlIGdYXJkZWQgYnkgaXNEcmFmdGFibGUsIHNvIHdlIGtubcgdUgYFuIHNhZmVseSBkcmFmdFxuXHRjbzdCBkcmFmdDogRHJhZnRlZCAIGlzTWFwKHZhbHVlKVxuXHRcdDgZVUGxZluKFwiTWFwUVXCIpLnBybhTWFwXyhYWxZSwgcGFyZWKVxuXHRcdDogaXNTZXQodmFsdWUpXGcdFxPyBnZXRQbHVnaWoXCJNYXBTZXRcIikucHJveHlTZXRfKHZhbHVlLCBwYXJlbnQpXGcdFxOiBpbWlcicVQcmaWVzXxuXHRcdDgYJlYXRlUHJveHlQcmeShYWxZSwgcGFyZWKVxuXHRcdDogZVUGxZluKFwiRVMXCIpLmNyZWFZUVTNVBybhXyhYWxZSwgcGFyZWKVxuXGcdGNvbnNIHNjbBlIDgcGFyZWIDgcGFyZWLnNjbBlXyAIGdldENcnJlbnRTYwZSgpXGcdHNjbBlLmRyYWZcucHVzaChkcmFmdClcblxcmVdXJuIGRyYWZXGXGiLCAiaWwbJIHtcblxZGllLFxuXHRpcRyYWZLFxuXHRzaGFsbGQweSxcblxZWFjaCxcblxRFJBRlRfURBVEUsXGcdGdldCxcblxcVLFxuXHRJbWlclNYXRlLFxuXHRpcRyYWZYWJsZSxcblxQXJjaHRcGUsXGcdGdldEFyYheXBlLFxuXHRnZXRQbHVnaWcbngZnJvbSBcIiuLludGVybmFsXCJcblxuLyoqIFRhaVzIGEgchcHNobQgbYgdGhlIGNcnJlbnQgcRhdGUgbYgYSBkcmFmdCBhbmQgZmluYWxpemVzIGlIChidXQgdlaGdCBmcmVlemluZykuIFRoaXMgaXMgYSBncmVhdCBdGlsaXRIHRvIHByaWIHRoZSBjdXJyZWIHNYXRlIGRcmluZyBkZWJZdpbmcgKGvIFBybhpZXMgaWgdGhlIHdheSkuIFRoZSBvdXRwdXQgbYgYVycmVudCBjYWgYWxzbyBiZSBzYWZlbHkgbGVhaVkIGdHNpZGUgdGhlIHBybRYVyLiAqLxuZXhwbJIGZbmNaWuIGNcnJlbnQVDodmFsdWUIFQpOiBUXGleHBvcnQgZnVuYRpbgYVycmVudChYWxZTogYWKTogYWIHtcblxaWYgKCFpcRyYWZKHZhbHVlKSkgZGllKDIyLCBYWxZSlcblxcmVdXJuIGNcnJlbnRJbXBsKHZhbHVlKVxufVxuXGmdWjdGlvbiBjdXJyZWSWwbChYWxZTogYWKTogYWIHtcblxaWYgKCFpcRyYWZYWJsZShYWxZSkpIHJldHVybiBYWxZVxuXHRjbzdCBzdGFZTogSWtZXJTdGFZSBIHVuZGVmaWlZCAIHZhbHVlWRSQUZUXNUQVRFXVxuXHRsZXQgYweTogYWXGcdGNvbnNIGFyYhUeXBlIDgZVQXJjaHRcGUodmFsdWUpXGcdGlmIChzdGFZSkgexuXHRcdGlmIChcblxXHRcdCFzdGFZStbRpZmllZFgJiZcblxXHRcdChzdGFZSeXBlXyAIDQgfHwgIWdldFBsdWdpbihcIkVTNVwiKSoYXNDaGFuZVzXyhzdGFZSBhcyBhbnkpKVxuXHRcdClcblxXHRcdHJldHVybiBzdGFZSiYXNlXxuXHRcdCvIEwdGltaXphdGlvbjogYXZvaWQgZVuZXJhdGluZyBuZXcgZHJhZnRzIGRcmluZyBjbBaWnXGcdFxcRhdGUuZmluYWxpemVkXyAIHRydWVcblxXHRjbBIDgYweUhlbHBlcihYWxZSwgYXJjaFRcGUpXGcdFxcRhdGUuZmluYWxpemVkXyAIGZhbHNlXGcdHgZWxzZSBXGcdFxYweSAIGNvcHlIZWxwZXIodmFsdWUsIGFyYhUeXBlKVxuXHRXGcblxZWFjaChjbBLCAoaVLCBjaGlsZFZhbHVlKSAPiBXGcdFxaWYgKHNYXRlICYmIGdldChzdGFZSiYXNlXywgaVKSAPTgYhpbGRWYWxZSkgcmVdXJuICvIGvIGlZWQgdGgYweSBvciBzZWFyYggaWgctZXRoaWnIHRoYXQgZGlkbidIGNoYWnZVxuXHRcdHNldChjbBLCBrZXksIGNcnJlbnRJbXBsKGNoaWxkVmFsdWUpKVxuXHRKVxuXHQvLyBJbiBaGUgZnVdXJlLCBZSBtaWdodCBjbzaWRlciBmcmVlemluZyBoZXJlLCBiYXNlZCBvbiBaGUgYVycmVudCBzZXRaWncxuXHRyZXRcmgYXJjaFRcGUgPTIEFyYheXBlLlNldCA/IGldyBTZXQoYweSkgOiBjbBXGXGcbmZbmNaWuIGNvcHlIZWxwZXIodmFsdWUIGFueSwgYXJjaFRcGUIGbWJlcikIGFueSBXGcdCvIGNyZWFZXMgYSBzaGFsbGIGNvcHksIGVZWgaWYgaXQgaXMgYSBtYXAgbIgcVXGcdHNaXRjaCAoYXJjaFRcGUpIHtcblxXHRjYXNlIEFyYheXBlLkhcDpcblxXHRcdHJldHVybiBuZXcgTWFwKHZhbHVlKVxuXHRcdGNhcUgQXJjaHRcGUuUVOlxuXHRcdFxLygUVIHdpbGwgYmUgYxvbmVkIGFzIGFycmFIHRlbXBvcmFyaWxLCBzbyBaGFIHdlIGNhbiByZXBsYWNlIGluZGlaWRYWwgaXRlbXNcblxXHRcdHJldHVybiBBcnJheSmcmtKHZhbHVlKVxuXHRXGcdHJldHVybiBzaGFsbGQweShYWxZSlcbncbiIsICJpbXBvcnQgexuXHRJbWlclNYXRlLFxuXHREcmFmdGVkLFxuXHRFUzVBcnJheVNYXRlLFxuXHRFUzVPYmplYRTdGFZSxcblxZWFjaCxcblxaGFzLFxuXHRpcRyYWZLFxuXHRsYXRlcQsXGcdERSQUZUXNUQVRFLFxuXHRpcyxcblxbGhZFBsdWdpbixcblxSWtZXJTYwZSxcblxUHJveHlUeXBlLFxuXHRnZXRDdXJyZWUNvcGUsXGcdGRpZSxcblxbWFyaNoYWnZWQsXGcdGiamVjdFRyYXBzLFxuXHRvdLZXlzLFxuXHRnZXRPdQcmwZXJeURlcNyaXBbJzXGIGZybgXCIuLipbnRlcmhbFwiXGcbnRcGUgRVMURhdGUgPSBFUzVBcnJheVNYXRlIHwgRVMTJqZWNURhdGVcblxuZXhwbJIGZbmNaWuIGVuYWJsZUVTNSgpIHtcblxZnVuYRpbgdlsbEZpbmFsaXplRVMXyhcblxXHRzYwZTogSWtZXJTYwZSxcblxXHRyZXNbHQIGFueSxcblxXHRpcJlcGxhYVkOiBibsZWFuXGcdCkgexuXHRcdGlmICghaXNSZXBsYWNlZCkgexuXHRcdFxaWYgKHNjbBlLnBhdGNoZXNfKSBXGcdFxXHRcdGhcmtDaGFuZVzUmVjdXJzaXZlbHkocNvcGUuZHJhZnRzXyFbMFpXGcdFxXHRXGcdFxXHQvLyBUaGlzIGlzIGZhcRlciBaGVuIHdlIGRvbidIGNhcmUgYWJvdXQgdhpYggYXRcmlidXRlcyBjaGFuZVkLlxuXHRcdFxbWFyaNoYWnZXNTdVlcChzYwZSkcmFmdHNfKVxuXHRcdHcblxXHQvLyBXaGVuIGEgYhpbGQgZHJhZnQgaXMgcmVdXJuZWQsIGxvbsgZmyIGNoYWnZXMuXGcdFxZWxzZSBpZiAoXGcdFxXHRpcRyYWZKHJlcVsdCkgJiZcblxXHRcdChyZXNbHRbRFJBRlRfURBVEVdIGFzIEVTNVNYXRlKSzYwZVgPTIHNjbBlXGcdFxKSBXGcdFxXHRtYXJrQhhbmdlcNZWVwKHNjbBlLmRyYWZcpXGcdFxfVxuXHRXGcblxZnVuYRpbgYJlYXRlRVMRHJhZnQoaXNBcnJheTogYmvbGVhbiwgYmFzZTogYWKSBXGcdFxaWYgKGlzQXJyYXkpIHtcblxXHRcdGNvbnNIGRyYWZIDgbmVIEFycmFKGJhcUubGVuZRoKVxuXHRcdFxZmyIChsZXQgaSAIDAIGkgPCBiYXNlLmxlbmdaDsgaSsrKVxuXHRcdFxXHRPYmplYQuZGVmaWlUHJvcGVydHkoZHJhZnQsIFwiXCIgKyBpLCBwcmeVBybBlcnRKGksIHRydWUpKVxuXHRcdFxcmVdXJuIGRyYWZXGcdFxfSBlbHNlIHtcblxXHRcdGNvbnNIGRlcNyaXBbJzIDgZVTduUHJvcGVydHlEZXNjcmlwdGycyhiYXNlKVxuXHRcdFxZGVsZXRlIGRlcNyaXBbJzWRSQUZUXNUQVRFIGFzIGFueVcblxXHRcdGNvbnNIGtleXMgPSBvdLZXlzKGRlcNyaXBbJzKVxuXHRcdFxZmyIChsZXQgaSAIDAIGkgPCBrZXlzLmxlbmdaDsgaSsrKSBXGcdFxXHRcdGNvbnNIGtleTogYWIDgaVctpXVxuXHRcdFxXHRkZXNjcmlwdGyctrZXldIDgcHJveHlQcmwZXJeShcblxXHRcdFxXHRrZXksXGcdFxXHRcdFxaXNBcnJheSBfCAhIWRlcNyaXBbJzWtleVuZWbWVyYWJsZVxuXHRcdFxXHQpXGcdFxXHRXGcdFxXHRyZXRcmgTJqZWNLmNyZWFZShPYmplYQuZVUHJvdGeXBlTYoYmFzZSksIGRlcNyaXBbJzKVxuXHRcdHcblxfVxuXGcdGZbmNaWuIGNyZWFZUVTNVBybhXzxUPihcblxXHRiYXNlOiBULFxuXHRcdHBhcmVudDIEltbWVyURhdGVcblxKTogRHJhZnRlZDxULCBFUzVPYmplYRTdGFZSBIEVTNUFycmFURhdGU+IHtcblxXHRjbzdCBpcFycmFIDgQXJyYXkuaXNBcnJheShiYXNlKVxuXHRcdGNvbnNIGRyYWZIDgYJlYXRlRVMRHJhZnQoaXNBcnJheSwgYmFzZSlcblxuXHRcdGNvbnNIHNYXRlOiBFUzVPYmplYRTdGFZSBIEVTNUFycmFURhdGUgPSBXGcdFxXHReXBlXzogaXNBcnJheSA/IFBybhVHlwZSFUzVBcnJheSAIChQcmeVRcGUuRVMTJqZWNIGFzIGFueSksXGcdFxXHRzYwZVIHBhcmVudCA/IHBhcmVudCzYwZVgOiBnZXRDdXJyZWUNvcGUoKSxcblxXHRcdGvZGlmaWVkXzogZmFscUsXGcdFxXHRmaWhbGlZWRfOiBmYWxzZSxcblxXHRcdGFzclnbmVkXzogesXGcdFxXHRwYXJlbnRfOiBwYXJlbnQsXGcdFxXHQvLyBiYXNlIGlzIHRoZSBvYmplYQgdUgYXJlIGRyYWZaWnXGcdFxXHRiYXNlXzogYmFzZSxcblxXHRcdCvIGRyYWZIGlzIHRoZSBkcmFmdCBvYmplYQgaXRzZWxmLCBaGFIHRyYXBzIGFsbCByZWFkcyBhbmQgcmVhZHMgZnJvbSBlaXRoZXIgdGhlIGJhcUgKGlmIHVubWkaWZpZWQpIGyIGNvcHkgKGlmIGvZGlmaWVkKVxuXHRcdFxZHJhZnRfOiBkcmFmdCxcblxXHRcdGNvcHlfOiBudWxsLFxuXHRcdFxcmVbtlZFIGZhbHNlLFxuXHRcdFxaXNNYWYWxfOiBmYWxzZVxuXHRcdHcblxuXHRcdEiamVjdCkZWZpbmVQcmwZXJeShkcmFmdCwgRFJBRlRfURBVEUsIHtcblxXHRcdHZhbHVlOiBzdGFZSxcblxXHRcdCvIGVudWlcmFibGUIGZhbHNlIDwtIHRoZSBkZWZhdWxXGcdFxXHRcmlYWJsZTogdHJZVxuXHRcdHpXGcdFxcmVdXJuIGRyYWZXGcdHcblxuXHQvLyBwcmwZXJeSBkZXNjcmlwdGycyBhcmUgcmVjeWNsZWQgdGgbWFrZSBzdXJlIHdlIGRvbidIGNyZWFZSBhIGdldCBhbmQgcVIGNsbNcmUgcGVyIHBybBlcnRLFxuXHQvLyBidXQgchhcmUgdGhlbSBhbGwgaWzdGVhZFxuXHRjbzdCBkZXNjcmlwdGyczogetwcmwOiBzdHJpbmddOiBQcmwZXJeURlcNyaXBbJIDgecblxuXHRmdWjdGlvbiBwcmeVBybBlcnRKFxuXHRcdHBybAIHNcmluZyBIGbWJlcixcblxXHRlbnVtZXJhYmxlOiBibsZWFuXGcdCkIFBybBlcnRRGVzYJpcHRvciBXGcdFxbGVIGRlcMgPSBkZXNjcmlwdGyctwcmwXVxuXHRcdGlmIChkZXNjKSBXGcdFxXHRkZXNjLmVudWlcmFibGUgPSBlbnVtZXJhYmxlXGcdFxfSBlbHNlIHtcblxXHRcdGRlcNyaXBbJzWBybBdIDgZGVzYyAIHtcblxXHRcdFxYuZmlndXJhYmxlOiBcnVlLFxuXHRcdFxXHRlbnVtZXJhYmxlLFxuXHRcdFxXHRnZXQodGhpczogYWKSBXGcdFxXHRcdFxYucQgcRhdGUgPSBaGlzWRSQUZUXNUQVRFXVxuXHRcdFxXHRcdGlmIChfXRFVlfKSBhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHRcdFxLygQHRzLWlnbmyZVxuXHRcdFxXHRcdHJldHVybiBvYmplYRUcmFwcynZXQocRhdGUsIHBybApXGcdFxXHRcdHsXGcdFxXHRcdHNldChaGlzOiBhbnksIHZhbHVlKSBXGcdFxXHRcdFxYucQgcRhdGUgPSBaGlzWRSQUZUXNUQVRFXVxuXHRcdFxXHRcdGlmIChfXRFVlfKSBhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHRcdFxLygQHRzLWlnbmyZVxuXHRcdFxXHRcdGiamVjdFRyYXBzLnNldChzdGFZSwgcHJvcCwgdmFsdWUpXGcdFxXHRcdHcblxXHRcdHcblxXHRXGcdFxcmVdXJuIGRlcNcblxfVxuXGcdCvIFRoaXMgbGvaMgZXhwZWzaXZlLCBidXQgbseSBwcmaWVzIGFyZSBaXNpdGVkLCBhbmQgbseSBvYmplYRzIHdpdGhvdXQgavdgYhhbmdlcyBhcmUgcNhbmlZCcblxZnVuYRpbgbWFyaNoYWnZXNTdVlcChkcmFmdHMIERyYWZZWQYWLCBJbWlclNYXRlPltdKSBXGcdFxLygVGhlIGhdHVyYWwgbJkZXIgbYgZHJhZnRzIGluIHRoZSBgcNvcGVgIGFycmFIGlzIGJhcVkIGuIHdoZWgdGhleVxuXHRcdCvIHdlcmUgYWNjZXNzZWQuIEJIHBybNlcNpbmcgZHJhZnRzIGluIHJldmVycUgbmFdXJhbCBvcmRlciwgdUgaGFZSBhXGcdFxLygYmVdGVyIGNoYWjZSBvZiBwcmjZXNzaWnIGxlYWYgbmkZXMgZmlycQuIFdoZWgYSBsZWFmIGvZGUgaXMgavdgdGcblxXHQvLyBoYXZlIGNoYWnZWQsIHdlIGNhbiBhdmpZCBhbnkgdHJhdmVycFsIGmIGlcyBhbmNlcRvciBubRlcycblxXHRmbIgKGxldCBpIDgZHJhZnRzLmxlbmdaCAtIDEIGkgPjgMDsgaStKSBXGcdFxXHRjbzdCBzdGFZTogRVMURhdGUgPSBkcmFmdHNbaVbRFJBRlRfURBVEVdXGcdFxXHRpZiAoIXNYXRlLmvZGlmaWVkXykgexuXHRcdFxXHRzdlYggKHNYXRlLnRcGVfKSBXGcdFxXHRcdFxYFzZSBQcmeVRcGUuRVMQXJyYXkXGcdFxXHRcdFxXHRpZiAoaGFzQXJyYXlDaGFuZVzKHNYXRlKSkgbWFyaNoYWnZWQocRhdGUpXGcdFxXHRcdFxXHRicmVhaxuXHRcdFxXHRcdGNhcUgUHJveHlUeXBlLkVTNUiamVjdDpcblxXHRcdFxXHRcdGlmIChoYXNPYmplYRDaGFuZVzKHNYXRlKSkgbWFyaNoYWnZWQocRhdGUpXGcdFxXHRcdFxXHRicmVhaxuXHRcdFxXHRXGcdFxXHRXGcdFxfVxuXHRXGcblxZnVuYRpbgbWFyaNoYWnZXNSZWNcnNpdmVseShvYmplYQIGFueSkgexuXHRcdGlmICghbJqZWNIHxIHRcGVvZiBvYmplYQgITIFwibJqZWNXCIpIHJldHVyblxuXHRcdGNvbnNIHNYXRlOiBFUzVTdGFZSBIHVuZGVmaWlZCAIGiamVjdFtEUkFGVFTVEFURVcblxXHRpZiAoIXNYXRlKSByZXRcmcblxXHRjbzdCBYmFzZVsIGRyYWZXywgYXNzaWduZWRfLCBeXBlXgPSBzdGFZVxuXHRcdGlmICheXBlXyAPTgUHJveHlUeXBlLkVTNUiamVjdCkgexuXHRcdFxLygTGvayBmbIgYWRkZWQgaVcycblxXHRcdCvIHBybJhYmxIHRoZXJlIGlzIGEgZmFzdGVyIHdheSBbyBkZXRlYQgYhhbmdlcywgYXMgcdlZXAgKyByZWNcnNlIHNlZWzIHRvIGRvIHNvbWVcblxXHRcdCvIHVubmVjZXNzYXJIHdvcmsuXGcdFxXHQvLyBhbHNvOiBwcmiYWJseSBZSBjYWgcRvcmUgdGhlIGluZmybWFaWuIHdlIGRldGVjdCBoZXJlLCBbyBzcGVlZCBcCBcmVlIGZpbmFsaXphdGlvbiFcblxXHRcdGVhYgoZHJhZnRfLCBrZXkgPTgexuXHRcdFxXHRpZiAoKGtleSBhcyBhbnkpIDPSBEUkFGVFTVEFURSkgcmVdXJuXGcdFxXHRcdCvIFRoZSBgdWkZWZpbmVkYCBjaGVjayBpcyBhIGZhcQgcGFaCBmbIgcHJlLWVaXNaWnIGtleXMuXGcdFxXHRcdGlmICgoYmFzZVgYXMgYWKVtrZXldIDPSBbmRlZmluZWQgJiYgIWhhcyhiYXNlXywgaVKSkgexuXHRcdFxXHRcdGFzclnbmVkXtrZXldIDgdHJZVxuXHRcdFxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxXHRIGVscUgaWYgKCFhcNpZlZFbaVXSkgexuXHRcdFxXHRcdCvIEubHkgdWbVjaGVkIHBybBlcnRpZXMgdHJpZdlciByZWNcnNpbuXGcdFxXHRcdFxbWFyaNoYWnZXNSZWNcnNpdmVseShkcmFmdFbaVXSlcblxXHRcdFxfVxuXHRcdFxfSlcblxXHRcdCvIExvbsgZmyIHJlbWZWQgaVcycblxXHRcdGVhYgoYmFzZVsIGtleSAPiBXGcdFxXHRcdCvIFRoZSBgdWkZWZpbmVkYCBjaGVjayBpcyBhIGZhcQgcGFaCBmbIgcHJlLWVaXNaWnIGtleXMuXGcdFxXHRcdGlmIChkcmFmdFbaVXSAPTgdWkZWZpbmVkICYmICFoYXMoZHJhZnRfLCBrZXkpKSBXGcdFxXHRcdFxYXNzaWduZWRfWtleVgPSBmYWxzZVxuXHRcdFxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxXHRXGcdFxXHRKVxuXHRcdHgZWxzZSBpZiAodHlwZVgPTIFBybhVHlwZSFUzVBcnJheSkgexuXHRcdFxaWYgKGhhcFycmFQhhbmdlcyhzdGFZSBhcyBFUzVBcnJheVNYXRlKSkgexuXHRcdFxXHRtYXJrQhhbmdlZChzdGFZSlcblxXHRcdFxYXNzaWduZWRfLmxlbmdaCAIHRydWVcblxXHRcdHcblxuXHRcdFxaWYgKGRyYWZXysZWndGggPCBiYXNlXysZWndGgpIHtcblxXHRcdFxZmyIChsZXQgaSAIGRyYWZXysZWndGgIGkgPCBiYXNlXysZWndGgIGkrKykgYXNzaWduZWRfWldIDgZmFscVcblxXHRcdHgZWxzZSBXGcdFxXHRcdGZvciAobGVIGkgPSBiYXNlXysZWndGgIGkgPCBkcmFmdFubGVuZRoOyBpKyspIGFzclnbmVkXtpXSAIHRydWVcblxXHRcdHcblxuXHRcdFxLygTWluaWbSBjbVudCBpcyBlbmZgsIHRoZSBvdGhlciBwYXJcyBoYXMgYmVlbiBwcmjZXNzZWQuXGcdFxXHRjbzdCBtaWgPSBNYXRoLmpbihkcmFmdFubGVuZRoLCBiYXNlXysZWndGgpXGcblxXHRcdGZvciAobGVIGkgPSAwOyBpIDwgbWluOyBpKyspIHtcblxXHRcdFxLygTseSBbnRvdWNoZWQgaWkaWNlcyBcmlnZVyIHJlYVyclvbicblxXHRcdFxaWYgKCFkcmFmdFuaGFzTduUHJvcGVydHkoaSkpIHtcblxXHRcdFxXHRhcNpZlZFbaVgPSBcnVlXGcdFxXHRcdHcblxXHRcdFxaWYgKGFzclnbmVkXtpXSAPTgdWkZWZpbmVkKSBtYXJrQhhbmdlcJlYVyclZWxKGRyYWZXtpXSlcblxXHRcdHcblxXHRXGcdHcblxuXHRmdWjdGlvbiBoYXNPYmplYRDaGFuZVzKHNYXRlOiBFUzVPYmplYRTdGFZSkgexuXHRcdGNvbnNIHtiYXNlXywgZHJhZnRffSAIHNYXRlXGcblxXHQvLyBTZWFyYggZmyIGFkZGVkIGtleXMgYWkIGNoYWnZWQgaVcygURhcnQgYXQgdGhlIGJhYssIGJlYFcVcblxXHQvLyBubtbnVtZXJpYyBrZXlzIGFyZSBvcmRlcmVkIGJIHRpbWUgbYgZGVmaWpdGlvbiBvbiBaGUgbJqZWNLlxuXHRcdGNvbnNIGtleXMgPSBvdLZXlzKGRyYWZXylcblxXHRmbIgKGxldCBpIDgaVcysZWndGggLSAxOyBpIDIDAIGktLSkgexuXHRcdFxYucQgaVOiBhbnkgPSBrZXlzWldXGcdFxXHRpZiAoaVIDPSBEUkFGVFTVEFURSkgYudGludWVcblxXHRcdGNvbnNIGJhcVWYWxZSAIGJhcVfWtleVcblxXHRcdCvIFRoZSBgdWkZWZpbmVkYCBjaGVjayBpcyBhIGZhcQgcGFaCBmbIgcHJlLWVaXNaWnIGtleXMuXGcdFxXHRpZiAoYmFzZVZhbHVlIDPSBbmRlZmluZWQgJiYgIWhhcyhiYXNlXywgaVKSkgexuXHRcdFxXHRyZXRcmgdHJZVxuXHRcdFxfVxuXHRcdFxLygTjZSBhIGJhcUgaVIGlzIGRlbGVZWQsIGZdHVyZSBjaGFuZVzIGdvIHVuZGVZWNZWQsIGJlYFcUgaXRzXGcdFxXHQvLyBkZXNjcmlwdGyIGlzIGVyYXNlZCgVGhpcyBicmFuYggZGVZWNcyBhbnkgbWlzcVkIGNoYWnZXMuXGcdFxXHRlbHNlIHtcblxXHRcdFxYucQgdmFsdWUgPSBkcmFmdFbaVXVxuXHRcdFxXHRjbzdCBzdGFZTogSWtZXJTdGFZSAIHZhbHVlICYmIHZhbHVlWRSQUZUXNUQVRFXVxuXHRcdFxXHRpZiAocRhdGUgPyBzdGFZSiYXNlXyAhPTgYmFzZVZhbHVlIDogIWlzKHZhbHVlLCBiYXNlVmFsdWUpKSBXGcdFxXHRcdFxcmVdXJuIHRydWVcblxXHRcdFxfVxuXHRcdFxfVxuXHRcdHcblxuXHRcdCvIEFIHRoaXMgcGpbnQsIGvIGtleXMgdVyZSBhZGRlZCBvciBjaGFuZVkLlxuXHRcdCvIENvbXBhcmUgaVIGNvdWIHRvIGRldGVybWluZSBpZiBrZXlzIHdlcmUgZGVsZXRlZCcblxXHRjbzdCBiYXNlSXNEcmFmdCAICEhYmFzZVbRFJBRlRfURBVEUgYXMgYWXVxuXHRcdHJldHVybiBrZXlzLmxlbmdaCAhPTgbduSVcyhiYXNlXykubGVuZRoICsgKGJhcVJcRyYWZIDgMCAIDEpICvICsgMSBbyBjbJyZWNIGZvciBEUkFGVFTVEFURVxuXHRXGcblxZnVuYRpbgaGFzQXJyYXlDaGFuZVzKHNYXRlOiBFUzVBcnJheVNYXRlKSBXGcdFxYucQgeRyYWZXgPSBzdGFZVxuXHRcdGlmIChkcmFmdFubGVuZRoICEPSBzdGFZSiYXNlXysZWndGgpIHJldHVybiBcnVlXGcdFxLygUVlICMxMTZcblxXHQvLyBJZiBZSBmaXJzdCBzaGydGVuIHRoZSBsZWndGgsIGciBhcnJheSBpbnRlcmNlcHRvcnMgdlsbCBiZSByZWvdmVkLlxuXHRcdCvIElmIGFmdGVyIHRoYXQgbmVIGlZWzIGFyZSBhZGRlZCwgcmVzdWxIGluIHRoZSBzYWlIGyaWdpbmFsIGxlbmdaCxcblxXHQvLyBaGzZSBsYXNIGlZWzIHdpbGwgaGFZSBubyBpbnRlcmNlcHRpbmcgcHJvcGVydHkuXGcdFxLygUgaWYgdGhlcmUgaXMgbmgbduIGRlcNyaXBbIgbgdGhlIGxhcQgcGzaXRpbsIHdlIGtubcgdGhhdCBpdGVtcyBZXJlIHJlbWZWQgYWkIGFkZGVkXGcdFxLygTiCLjogcBsaWNlLCBbnNoaWZLCBldGMgbseSBzaGlmdCBYWxZXMgYXJvdWkLCBidXQgbmIHBybAgZGVzYJpcHRvcnMsIHNvIHdlIGubHkgaGFZSBbyBjaGVjaxuXHRcdCvIHRoZSBsYXNIGuZVxuXHRcdCvIGxhcQgZGVzYJpcHRvciBjYWgYmUgbmIGEgdHJhcCwgaWYgdGhlIGFycmFIHdhcyBleHRlbmRlZFxuXHRcdGNvbnNIGRlcNyaXBbIgPSBPYmplYQuZVTduUHJvcGVydHlEZXNjcmlwdGyKFxuXHRcdFxZHJhZnRfLFxuXHRcdFxZHJhZnRfLmxlbmdaCAtIDFcblxXHQpXGcdFxLygZGVzYJpcHRvciBjYWgYmUgbnVsbCwgYnVIGubHkgZmyIGldxIGNyZWFZWQgcBhcnNlIGFycmFcywgZWcuIGldyBBcnJheSgxMClcblxXHRpZiAoZGVzYJpcHRvciAmJiAhZGVzYJpcHRvcinZXQpIHJldHVybiBcnVlXGcdFxLygaWYgdUgbWlzcyBhIHBybBlcnRLCBpdCBoYXMgYmVlbiBkZWxldGVkLCBzbyBhcnJheSBwcmibJhbHkgYhhbmdlZFxuXHRcdGZvciAobGVIGkgPSAwOyBpIDwgZHJhZnRfLmxlbmdaDsgaSsrKSBXGcdFxXHRpZiAoIWRyYWZXyoYXNPdQcmwZXJeShpKSkgcmVdXJuIHRydWVcblxXHRXGcdFxLygRmyIGFsbCBvdGhlciBjYXNlcywgdUgZGuJQgaGFZSBbyBjbwYXJlLCBhcyBaGVIHdvdWxkIGhhdmUgYmVlbiBwaWNrZWQgdXAgYnkgdGhlIGluZGVIHNldHRlcnNcblxXHRyZXRcmgZmFscVcblxfVxuXGcdGZbmNaWuIGhhcNoYWnZXNfKHNYXRlOiBFUzVTdGFZSkgexuXHRcdHJldHVybiBzdGFZSeXBlXyAPTgUHJveHlUeXBlLkVTNUiamVjdFxuXHRcdFxPyBoYXNPYmplYRDaGFuZVzKHNYXRlKVxuXHRcdFxOiBoYXNBcnJheUNoYWnZXMocRhdGUpXGcdHcblxuXHRmdWjdGlvbiBhcNlcnRVbnJldmrZWQocRhdGUIGFueSAvKkVTNVNYXRlIHwgTWFwURhdGUgfCBTZXRTdGFZSovKSBXGcdFxaWYgKHNYXRlLnJldmrZWRfKSBkaWUoMywgSlNPTizdHJpbmdpZnkobGFZXNKHNYXRlKSkpXGcdHcblxuXHRsbFkUGxZluKFwiRVMXCIsIHtcblxXHRjcmVhdGVFUzVQcmeVsXGcdFxdlsbEZpbmFsaXplRVMXyxcblxXHRoYXNDaGFuZVzXxuXHRKVxufVxuIiwgImltcGydCBaWtZXJhYmxlfSBmcmtIFwiLivaWtZXJcIlxuaWwbJIHtcblxSWtZXJTdGFZSxcblxUGFYgsXGcdFNldFNYXRlLFxuXHRFUzVBcnJheVNYXRlLFxuXHRQcmeUFycmFURhdGUsXGcdEhcFNYXRlLFxuXHRFUzVPYmplYRTdGFZSxcblxUHJveHlPYmplYRTdGFZSxcblxUGFYhQYXRoLFxuXHRnZXQsXGcdGVhYgsXGcdGhhcyxcblxZVQXJjaHRcGUsXGcdGlzUVLFxuXHRpchcCxcblxbGhZFBsdWdpbixcblxUHJveHlUeXBlLFxuXHRBcmNodHlwZSxcblxZGllLFxuXHRpcRyYWZLFxuXHRpcRyYWZYWJsZSxcblxTkUSElORxufSBmcmtIFwiLivaWZXJuYWxcIlxuXGleHBvcnQgZnVuYRpbgZWhYmxlUGFYhlcygpIHtcblxYucQgUkVQTEFDRSAIFwicmVwbGFjZVwiXGcdGNvbnNIEFERCAIFwiYWRkXCJcblxYucQgUkVNTZFIDgXCJyZWvdmVcIlxuXGcdGZbmNaWuIGdlbmVyYXRlUGFYhlcoXGcdFxcRhdGUIEltbWVyURhdGUsXGcdFxYmFzZVBhdGgIFBhdGNoUGFaCxcblxXHRwYXRjaGVzOiBQYXRjaFtdLFxuXHRcdGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdCkIHZvaWQgexuXHRcdHNaXRjaCAocRhdGUudHlwZVpIHtcblxXHRcdGNhcUgUHJveHlUeXBlLlBybhTJqZWNOlxuXHRcdFxYFzZSBQcmeVRcGUuRVMTJqZWNOlxuXHRcdFxYFzZSBQcmeVRcGUuTWFwOlxuXHRcdFxXHRyZXRcmgZVuZXJhdGVQYXRjaGVzRnJvbUFzclnbmVkKFxuXHRcdFxXHRcdHNYXRlLFxuXHRcdFxXHRcdGJhcVQYXRoLFxuXHRcdFxXHRcdHBhdGNoZXMsXGcdFxXHRcdFxaWZXJzZVBhdGNoZXNcblxXHRcdFxKVxuXHRcdFxYFzZSBQcmeVRcGUuRVMQXJyYXkXGcdFxXHRjYXNlIFBybhVHlwZSQcmeUFycmFOlxuXHRcdFxXHRyZXRcmgZVuZXJhdGVBcnJheVBhdGNoZXMocRhdGUsIGJhcVQYXRoLCBwYXRjaGVzLCBpbnZlcnNlUGFYhlcylcblxXHRcdGNhcUgUHJveHlUeXBlLlNldDpcblxXHRcdFxcmVdXJuIGdlbmVyYXRlUVUGFYhlcyhcblxXHRcdFxXHQocRhdGUgYXMgYWKSBhcyBTZXRTdGFZSxcblxXHRcdFxXHRiYXNlUGFaCxcblxXHRcdFxXHRwYXRjaGVzLFxuXHRcdFxXHRcdGludmVycVQYXRjaGVzXGcdFxXHRcdClcblxXHRXGcdHcblxuXHRmdWjdGlvbiBnZWlcmFZUFycmFUGFYhlcyhcblxXHRzdGFZTogRVMQXJyYXlTdGFZSBIFBybhQXJyYXlTdGFZSxcblxXHRiYXNlUGFaDogUGFYhQYXRoLFxuXHRcdHBhdGNoZXMIFBhdGNoWsXGcdFxaWZXJzZVBhdGNoZXMIFBhdGNoWcblxKSBXGcdFxbGVIHtiYXNlXywgYXNzaWduZWRffSAIHNYXRlXGcdFxbGVIGNvcHlfIDgcRhdGUuYweVhXGcblxXHQvLyBSZWRYUgYtcGxleGleSBieSBlbnNcmluZyBgYmFzZWAgaXMgbmVZXIgbGuZVyLlxuXHRcdGlmIChjbBXysZWndGggPCBiYXNlXysZWndGgpIHtcblxXHRcdCvIEBcypZvcmVcblxXHRcdDtbYmFzZVsIGNvcHlfXSAIFtjbBXywgYmFzZVdXGcdFxXHQWBhdGNoZXMsIGludmVycVQYXRjaGVzXSAIFtpbnZlcnNlUGFYhlcywgcGFYhlccblxXHRXGcblxXHQvLyBQcmjZXNzIHJlcGxhYVkIGluZGljZXMuXGcdFxZmyIChsZXQgaSAIDAIGkgPCBiYXNlXysZWndGgIGkrKykgexuXHRcdFxaWYgKGFzclnbmVkXtpXSAmJiBjbBXtpXSAhPTgYmFzZVbaVpIHtcblxXHRcdFxYucQgcGFaCAIGJhcVQYXRoLmNvbmNhdChbaVpXGcdFxXHRcdHBhdGNoZXMucHVzaChXGcdFxXHRcdFxbAIFJFUExBQUsXGcdFxXHRcdFxcGFaCxcblxXHRcdFxXHQvLyBOZWVkIHRvIGheWJlIGNsblIGlLCBhcyBpdCBjYWgaWgZmFjdCBiZSBaGUgbJpZluYWwgdmFsdWVcblxXHRcdFxXHQvLyBkdWUgdGgdGhlIGJhcUvYweSBpbnZlcnNpbgYXQgdGhlIHNYXJIGmIHRoaXMgZnVuYRpbcblxXHRcdFxXHRYWxZTogYxvbmVQYXRjaFZhbHVlSWZOZWVkZWQoYweVbaVpXGcdFxXHRcdHpXGcdFxXHRcdGludmVycVQYXRjaGVzLnBcgoexuXHRcdFxXHRcdGwOiBSRVBMQUNFLFxuXHRcdFxXHRcdHBhdGgsXGcdFxXHRcdFxdmFsdWUIGNsblUGFYhWYWxZUlmTmVlZGVkKGJhcVfWldKVxuXHRcdFxXHRKVxuXHRcdFxfVxuXHRcdHcblxuXHRcdCvIFBybNlcMgYWRkZWQgaWkaWNlcycblxXHRmbIgKGxldCBpIDgYmFzZVubGVuZRoOyBpIDwgYweVubGVuZRoOyBpKyspIHtcblxXHRcdGNvbnNIHBhdGggPSBiYXNlUGFaCjbjYXQoWldKVxuXHRcdFxcGFYhlcywdXNoKHtcblxXHRcdFxbAIEFERCxcblxXHRcdFxcGFaCxcblxXHRcdFxLygTmVlZCBbyBtYXliZSBjbGuZSBpdCwgYXMgaXQgYFuIGluIGZhYQgYmUgdGhlIGyaWdpbmFsIHZhbHVlXGcdFxXHRcdCvIGRZSBbyBaGUgYmFzZSjbBIGludmVyclvbiBhdCBaGUgcRhcnQgbYgdGhpcyBmdWjdGlvblxuXHRcdFxXHRYWxZTogYxvbmVQYXRjaFZhbHVlSWZOZWVkZWQoYweVbaVpXGcdFxXHRKVxuXHRcdHcblxXHRpZiAoYmFzZVubGVuZRoIDwgYweVubGVuZRoKSBXGcdFxXHRpbnZlcnNlUGFYhlcywdXNoKHtcblxXHRcdFxbAIFJFUExBQUsXGcdFxXHRcdHBhdGgIGJhcVQYXRoLmNvbmNhdChbXCJsZWndGhcIlpLFxuXHRcdFxXHRYWxZTogYmFzZVubGVuZRoXGcdFxXHRKVxuXHRcdHcblxfVxuXGcdCvIFRoaXMgaXMgdXNlZCBmbIgYmaCBNYXAgbJqZWNcyBhbmQgbmybWFsIGiamVjdHMuXGcdGZbmNaWuIGdlbmVyYXRlUGFYhlcZybBcNpZlZChcblxXHRzdGFZTogTWFwURhdGUgfCBFUzVPYmplYRTdGFZSBIFBybhTJqZWNURhdGUsXGcdFxYmFzZVBhdGgIFBhdGNoUGFaCxcblxXHRwYXRjaGVzOiBQYXRjaFtdLFxuXHRcdGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdCkgexuXHRcdGNvbnNIHtiYXNlXywgYweVIDgcRhdGVcblxXHRlYWNoKHNYXRlLmFzclnbmVkXyEsIChrZXksIGFzclnbmVkVmFsdWUpID+IHtcblxXHRcdGNvbnNIGyaWdWYWxZSAIGdldChiYXNlXywgaVKVxuXHRcdFxYucQgdmFsdWUgPSBnZXQoYweVhLCBrZXkpXGcdFxXHRjbzdCBvcCAICFhcNpZlZFZhbHVlIDgUkVNTZFIDogaGFzKGJhcVfLCBrZXkpIDgUkVQTEFDRSAIEFERFxuXHRcdFxaWYgKGyaWdWYWxZSAPTgdmFsdWUgJiYgbAgPTIFJFUExBQUpIHJldHVyblxuXHRcdFxYucQgcGFaCAIGJhcVQYXRoLmNvbmNhdChrZXkgYXMgYWKVxuXHRcdFxcGFYhlcywdXNoKGwIDPSBSRUPVkUgPyBbAsIHBhdGhIDogewLCBwYXRoLCBYWxZXpXGcdFxXHRpbnZlcnNlUGFYhlcywdXNoKFxuXHRcdFxXHRvcCAPTgQUREXGcdFxXHRcdFxPyBbAIFJFTUWRSwgcGFaHcblxXHRcdFxXHQIGwIDPSBSRUPVkVcblxXHRcdFxXHQ/IHtvcDogQURELCBwYXRoLCBYWxZTogYxvbmVQYXRjaFZhbHVlSWZOZWVkZWQobJpZZhbHVlKXcblxXHRcdFxXHQIHtvcDogUkVQTEFDRSwgcGFaCwgdmFsdWUIGNsblUGFYhWYWxZUlmTmVlZGVkKGyaWdWYWxZSlXGcdFxXHQpXGcdFxfSlcblxfVxuXGcdGZbmNaWuIGdlbmVyYXRlUVUGFYhlcyhcblxXHRzdGFZTogUVURhdGUsXGcdFxYmFzZVBhdGgIFBhdGNoUGFaCxcblxXHRwYXRjaGVzOiBQYXRjaFtdLFxuXHRcdGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdCkgexuXHRcdGxldCBYmFzZVsIGNvcHlffSAIHNYXRlXGcblxXHRsZXQgaSAIDBcblxXHRiYXNlXymbJFYWNoKChYWxZTogYWKSAPiBXGcdFxXHRpZiAoIWNvcHlfISoYXModmFsdWUpKSBXGcdFxXHRcdGNvbnNIHBhdGggPSBiYXNlUGFaCjbjYXQoWldKVxuXHRcdFxXHRwYXRjaGVzLnBcgoexuXHRcdFxXHRcdGwOiBSRUPVkUsXGcdFxXHRcdFxcGFaCxcblxXHRcdFxXHRYWxZVxuXHRcdFxXHRKVxuXHRcdFxXHRpbnZlcnNlUGFYhlcybnNoaWZKHtcblxXHRcdFxXHRvcDogQURELFxuXHRcdFxXHRcdHBhdGgsXGcdFxXHRcdFxdmFsdWVcblxXHRcdFxfSlcblxXHRcdHcblxXHRcdGkrKxuXHRcdHpXGcdFxaSAIDBcblxXHRjbBXyEuZmyRWFjaCgodmFsdWUIGFueSkgPTgexuXHRcdFxaWYgKCFiYXNlXyoYXModmFsdWUpKSBXGcdFxXHRcdGNvbnNIHBhdGggPSBiYXNlUGFaCjbjYXQoWldKVxuXHRcdFxXHRwYXRjaGVzLnBcgoexuXHRcdFxXHRcdGwOiBBREQsXGcdFxXHRcdFxcGFaCxcblxXHRcdFxXHRYWxZVxuXHRcdFxXHRKVxuXHRcdFxXHRpbnZlcnNlUGFYhlcybnNoaWZKHtcblxXHRcdFxXHRvcDogUkVNTZFLFxuXHRcdFxXHRcdHBhdGgsXGcdFxXHRcdFxdmFsdWVcblxXHRcdFxfSlcblxXHRcdHcblxXHRcdGkrKxuXHRcdHpXGcdHcblxuXHRmdWjdGlvbiBnZWlcmFZVJlcGxhYVtZWUGFYhlcoXGcdFxYmFzZVZhbHVlOiBhbnksXGcdFxcmVwbGFjZWlbnQIGFueSxcblxXHRwYXRjaGVzOiBQYXRjaFtdLFxuXHRcdGludmVycVQYXRjaGVzOiBQYXRjaFtdXGcdCkIHZvaWQgexuXHRcdHBhdGNoZXMucHVzaChXGcdFxXHRvcDogUkVQTEFDRSxcblxXHRcdHBhdGgIFtdLFxuXHRcdFxdmFsdWUIHJlcGxhYVtZWIDPSBOTRISUHIDgdWkZWZpbmVkIDogcmVwbGFjZWlbnRcblxXHRKVxuXHRcdGludmVycVQYXRjaGVzLnBcgoexuXHRcdFxbAIFJFUExBQUsXGcdFxXHRwYXRoOiBbXSxcblxXHRcdHZhbHVlOiBiYXNlVmFsdWVcblxXHRKVxuXHRXGcblxZnVuYRpbgYXBwbHlQYXRjaGVzXzxUPihkcmFmdDogVCwgcGFYhlczogUGFYhbXSkIFQgexuXHRcdHBhdGNoZXMuZmyRWFjaChwYXRjaCAPiBXGcdFxXHRjbzdCBcGFaCwgbBIDgcGFYhcblxuXHRcdFxbGVIGJhcUIGFueSAIGRyYWZXGcdFxXHRmbIgKGxldCBpIDgMDsgaSAIHBhdGgubGVuZRoICgMTsgaSsrKSBXGcdFxXHRcdGNvbnNIHBhcmVudFRcGUgPSBnZXRBcmNodHlwZShiYXNlKVxuXHRcdFxXHRjbzdCBwIDgXCJcIiArIHBhdGhbaVcblxXHRcdFxLygUVlICMMzgsIGFblkIHBybRvdHlwZSBwbxsdXRpbcblxXHRcdFxaWYgKFxuXHRcdFxXHRcdChwYXJlbnRUeXBlIDPSBBcmNodHlwZSPYmplYQgfHwgcGFyZWVHlwZSAPTgQXJjaHRcGUuQXJyYXkpICYmXGcdFxXHRcdFxKHAgPTIFwiXwcmbfXCIgfHwgcCAPTgXCJjbzdHJYRvclwiKVxuXHRcdFxXHQpXGcdFxXHRcdFxZGllKDIKVxuXHRcdFxXHRpZiAodHlwZWmIGJhcUgPTIFwiZnVuYRpbcIiAmJiBwIDPSBcInBybRvdHlwZVwiKSBkaWUoMjQpXGcdFxXHRcdGJhcUgPSBnZXQoYmFzZSwgcClcblxXHRcdFxaWYgKHRcGVvZiBiYXNlICEPSBcImiamVjdFwiKSBkaWUoMTUsIHBhdGguampbihcIicIikpXGcdFxXHRXGcblxXHRcdGNvbnNIHRcGUgPSBnZXRBcmNodHlwZShiYXNlKVxuXHRcdFxYucQgdmFsdWUgPSBkZWVwQxvbmVQYXRjaFZhbHVlKHBhdGNoLnZhbHVlKSAvLyBcVkIHRvIGNsblIHBhdGNoIHRvIGVucVyZSBvcmlnaWhbCBwYXRjaCBpcyBubQgbWkaWZpZWQsIHNlZSAjNDExXGcdFxXHRjbzdCBrZXkgPSBwYXRoWBhdGgubGVuZRoICgMVcblxXHRcdHNaXRjaCAobApIHtcblxXHRcdFxYFzZSBSRVBMQUNFOlxuXHRcdFxXHRcdHNaXRjaCAodHlwZSkgexuXHRcdFxXHRcdFxYFzZSBBcmNodHlwZSNYXAXGcdFxXHRcdFxXHRcdHJldHVybiBiYXNlLnNldChrZXksIHZhbHVlKVxuXHRcdFxXHRcdFxLyogaXNYWidWwgaWdubJlIGleHQgKicblxXHRcdFxXHRcdGNhcUgQXJjaHRcGUuUVOlxuXHRcdFxXHRcdFxXHRkaWUoMTYpXGcdFxXHRcdFxXHRkZWZhdWxOlxuXHRcdFxXHRcdFxXHQvLyBpZiBYWxZSBpcyBhbiBvYmplYQsIHRoZWgaXQncyBhcNpZlZCBieSByZWZlcmVuYVcblxXHRcdFxXHRcdFxLygaWgdGhlIGZvbGxvdluZyBhZGQgbIgcmVtbZlIGwcywgdGhlIHZhbHVlIGZpZWxkIGluclkZSBaGUgcGFYggdlsbCBhbHNvIGJlIGvZGlmeWVkXGcdFxXHRcdFxXHRcdCvIHNvIHdlIHVzZSBYWxZSBmcmtIHRoZSBjbGuZWQgcGFYhcblxXHRcdFxXHRcdFxLygQHRzLWlnbmyZVxuXHRcdFxXHRcdFxXHRyZXRcmgKGJhcVbaVXSAIHZhbHVlKVxuXHRcdFxXHRcdHcblxXHRcdFxYFzZSBBREQXGcdFxXHRcdFxcdpdGNoICheXBlKSBXGcdFxXHRcdFxXHRjYXNlIEFyYheXBlLkFycmFOlxuXHRcdFxXHRcdFxXHRyZXRcmgaVIDPSBcIicIlxuXHRcdFxXHRcdFxXHRcdDgYmFzZSwdXNoKHZhbHVlKVxuXHRcdFxXHRcdFxXHRcdDogYmFzZSzcGxpYUoaVIGFzIGFueSwgMCwgdmFsdWUpXGcdFxXHRcdFxXHRjYXNlIEFyYheXBlLkhcDpcblxXHRcdFxXHRcdFxcmVdXJuIGJhcUucVKGtleSwgdmFsdWUpXGcdFxXHRcdFxXHRjYXNlIEFyYheXBlLlNldDpcblxXHRcdFxXHRcdFxcmVdXJuIGJhcUuYWRkKHZhbHVlKVxuXHRcdFxXHRcdFxZGVmYXVsdDpcblxXHRcdFxXHRcdFxcmVdXJuIChiYXNlWtleVgPSBYWxZSlcblxXHRcdFxXHRXGcdFxXHRcdGNhcUgUkVNTZFOlxuXHRcdFxXHRcdHNaXRjaCAodHlwZSkgexuXHRcdFxXHRcdFxYFzZSBBcmNodHlwZSBcnJheTpcblxXHRcdFxXHRcdFxcmVdXJuIGJhcUucBsaWNlKGtleSBhcyBhbnksIDEpXGcdFxXHRcdFxXHRjYXNlIEFyYheXBlLkhcDpcblxXHRcdFxXHRcdFxcmVdXJuIGJhcUuZGVsZXRlKGtleSlcblxXHRcdFxXHRcdGNhcUgQXJjaHRcGUuUVOlxuXHRcdFxXHRcdFxXHRyZXRcmgYmFzZSkZWxldGUocGFYgudmFsdWUpXGcdFxXHRcdFxXHRkZWZhdWxOlxuXHRcdFxXHRcdFxXHRyZXRcmgZGVsZXRlIGJhcVbaVXVxuXHRcdFxXHRcdHcblxXHRcdFxZGVmYXVsdDpcblxXHRcdFxXHRkaWUoMTcsIGwKVxuXHRcdFxfVxuXHRcdHpXGcblxXHRyZXRcmgZHJhZnRcblxfVxuXGcdCvIGwdGltaXplOiBaGlzIGlzIHFaXRlIGEgcGVyZmybWFuYUgaGlLCBjYWgdUgZGVZWNIGludGVsbGlnZWbHkgdhlbiBpdCBpcyBuZWVkZWQ/XGcdCvIEUuZygYXVbykcmFmdCBaGVuIGldyBvYmplYRzIGZybgbVclkZSBhcmUgYXNzaWduZWQgYWkIGvZGlmaWVkPxuXHQvLyAoUVlIGZhaWxpbmcgdGVzdCBaGVuIGRlZXBDbGuZSBqdXNIHJldHVybnMgbJqKVxuXHRmdWjdGlvbiBkZWVwQxvbmVQYXRjaFZhbHVlPFQ+KGiajogVCkIFRcblxZnVuYRpbgZGVlcENsblUGFYhWYWxZShvYmoIGFueSkgexuXHRcdGlmICghaXNEcmFmdGFibGUobJqKSkgcmVdXJuIGialxuXHRcdGlmIChBcnJheSpcFycmFKGiaikpIHJldHVybiBvYmoubWFwKGRlZXBDbGuZVBhdGNoVmFsdWUpXGcdFxaWYgKGlzTWFwKGiaikpXGcdFxXHRyZXRcmgbmVIEhcChcblxXHRcdFxQXJyYXkuZnJvbShvYmouZWcmllcygpKStYXAoKFtrLCBXSkgPTgWssIGRlZXBDbGuZVBhdGNoVmFsdWUodildKVxuXHRcdFxKVxuXHRcdGlmIChpcNldChvYmopKSByZXRcmgbmVIFNldChBcnJheSmcmtKGiaikubWFwKGRlZXBDbGuZVBhdGNoVmFsdWUpKVxuXHRcdGNvbnNIGNsblZCAIEiamVjdCjcmVhdGUoTJqZWNLmdldFBybRvdHlwZUmKGiaikpXGcdFxZmyIChjbzdCBrZXkgaWgbJqKSBjbGuZWRbaVXSAIGRlZXBDbGuZVBhdGNoVmFsdWUobJqWtleVpXGcdFxaWYgKGhhcyhvYmosIGltbWVyYWJsZSkpIGNsblZFtpbWlcmFibGVdIDgbJqWltbWVyYWJsZVcblxXHRyZXRcmgYxvbmVkXGcdHcblxuXHRmdWjdGlvbiBjbGuZVBhdGNoVmFsdWVJZklZWRlZDxUPihvYmoIFQpOiBUIHtcblxXHRpZiAoaXNEcmFmdChvYmopKSBXGcdFxXHRyZXRcmgZGVlcENsblUGFYhWYWxZShvYmopXGcdFxfSBlbHNlIHJldHVybiBvYmpcblxfVxuXGcdGxvYWRQbHVnaWoXCJQYXRjaGVzXCIsIHtcblxXHRhcHBseVBhdGNoZXNfLFxuXHRcdGdlbmVyYXRlUGFYhlcsXGcdFxZVuZXJhdGVSZXBsYWNlbWVudFBhdGNoZXNfXGcdHpXGXGiLCAiLygdHlwZXMgbseSFcbmltcGydCBXGcdEltbWVyURhdGUsXGcdEFueUhcCxcblxQWUVLFxuXHRNYXBTdGFZSxcblxUVURhdGUsXGcdERSQUZUXNUQVRFLFxuXHRnZXRDdXJyZWUNvcGUsXGcdGxhdGVzdCxcblxaXRlcmFbJTeWibwsXGcdGlzRHJhZnRhYmxlLFxuXHRjcmVhdGVQcmeSxcblxbGhZFBsdWdpbixcblxbWFyaNoYWnZWQsXGcdFBybhVHlwZSxcblxZGllLFxuXHRlYWNoXGIGZybgXCIuLipbnRlcmhbFwiXGcbmVcGydCBmdWjdGlvbiBlbmFibGVNYXBTZXQoKSBXGcdCqIGlzdGFuYnVsIGlnbmyZSBuZXhICovXGcdHZhciBleHRlbmRTdGFaWNzIDgZnVuYRpboZDogYWLCBiOiBhbnkpOiBhbnkgexuXHRcdGVdGVuZFNYXRpYMgPVxuXHRcdFxTJqZWNLnNldFBybRvdHlwZUmIHxXGcdFxXHQoefcHJvdGfXzogWIGlucRhbmNlbYgQXJyYXkgJiZcblxXHRcdFxZnVuYRpboZCwgYikgexuXHRcdFxXHRcdGQuXwcmbfIDgYlxuXHRcdFxXHRKSBfFxuXHRcdFxZnVuYRpboZCwgYikgexuXHRcdFxXHRmbIgKHZhciBwIGluIGIpIGlmIChiLmhhcblBybBlcnRKHApKSBkWBdIDgYltwXVxuXHRcdFxfVxuXHRcdHJldHVybiBleHRlbmRTdGFaWNzKGQsIGIpXGcdHcblxuXHQvLyBVZxIGhhYsgdGgcmVzbxZSAjNTAyIGFuZCBpbmhlcmlIGJaWxIGluIEhcCAvIFNldFxuXHRmdWjdGlvbiBfXVdGVuZHMoZDogYWLCBiOiBhbnkpOiBhbnkgexuXHRcdGVdGVuZFNYXRpYMoZCwgYilcblxXHRmdWjdGlvbiBfXyhaGlzOiBhbnkpOiBhbnkgexuXHRcdFxdGhpcyjbzdHJYRvciAIGRcblxXHRXGcdFxZCwcmbRcGUgPVxuXHRcdFxLygQHRzLWlnbmyZVxuXHRcdFxKChfXywcmbRcGUgPSBiLnBybRvdHlwZSksIGldyBfXygpKVxuXHRXGcblxYucQgRHJhZnRNYXAgPSAoZnVuYRpboXNcGVyKSBXGcdFxXleHRlbmRzKERyYWZTWFwLCBfcVwZXIpXGcdFxLygQJlYXRlIGNsYXNzIGhbnVhbGxLCBjYXVzZSAjNTAyXGcdFxZnVuYRpbgRHJhZnRNYXAodGhpczogYWLCBYXJnZXQIEFueUhcCwgcGFyZWPzogSWtZXJTdGFZSkIGFueSBXGcdFxXHRaGlzWRSQUZUXNUQVRFXSAIHtcblxXHRcdFxdHlwZVIFBybhVHlwZSNYXAsXGcdFxXHRcdHBhcmVudFIHBhcmVudCxcblxXHRcdFxcNvcGVfOiBwYXJlbnQgPyBwYXJlbnQucNvcGVfIDogZVQVycmVudFNjbBlKCkhLFxuXHRcdFxXHRtbRpZmllZFIGZhbHNlLFxuXHRcdFxXHRmaWhbGlZWRfOiBmYWxzZSxcblxXHRcdFxYweVIHVuZGVmaWlZCxcblxXHRcdFxYXNzaWduZWRfOiBbmRlZmluZWQsXGcdFxXHRcdGJhcVfOiBYXJnZXQsXGcdFxXHRcdGRyYWZXzogdGhpcyBhcyBhbnksXGcdFxXHRcdGlzTWFudWFsXzogZmFscUsXGcdFxXHRcdHJldmrZWRfOiBmYWxzZVxuXHRcdFxfSBhcyBNYXBTdGFZVxuXHRcdFxcmVdXJuIHRoaXNcblxXHRXGcdFxYucQgcCAIERyYWZTWFwLnBybRvdHlwZVxuXGcdFxTJqZWNLmRlZmluZVBybBlcnRKHAsIFwiclZVwiLCBXGcdFxXHRnZXQIGZbmNaWuKCkgexuXHRcdFxXHRyZXRcmgbGFZXNKHRoaXNbRFJBRlRfURBVEVdKSzaXplXGcdFxXHRXGcdFxXHQvLyBlbnVtZXJhYmxlOiBmYWxzZSxcblxXHRcdCvIGNvbmZpZVyYWJsZTogdHJZVxuXHRcdHpXGcblxXHRwLmhhcyAIGZbmNaWuKGtleTogYWKTogYmvbGVhbiBXGcdFxXHRyZXRcmgbGFZXNKHRoaXNbRFJBRlRfURBVEVdKSoYXMoaVKVxuXHRcdHcblxuXHRcdHAucVIDgZnVuYRpboaVOiBhbnksIHZhbHVlOiBhbnkpIHtcblxXHRcdGNvbnNIHNYXRlOiBNYXBTdGFZSAIHRoaXNbRFJBRlRfURBVEVdXGcdFxXHRhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHRpZiAoIWxhdGVzdChzdGFZSkuaGFzKGtleSkgfHwgbGFZXNKHNYXRlKSnZXQoaVKSAhPTgdmFsdWUpIHtcblxXHRcdFxcHJlcGFyZUhcENvcHkocRhdGUpXGcdFxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxXHRzdGFZShcNpZlZFhLnNldChrZXksIHRydWUpXGcdFxXHRcdHNYXRlLmNvcHlfISzZXQoaVLCBYWxZSlcblxXHRcdFxcRhdGUuYXNzaWduZWRfISzZXQoaVLCBcnVlKVxuXHRcdFxfVxuXHRcdFxcmVdXJuIHRoaXNcblxXHRXGcblxXHRwLmRlbGVZSAIGZbmNaWuKGtleTogYWKTogYmvbGVhbiBXGcdFxXHRpZiAoIXRoaXMuaGFzKGtleSkpIHtcblxXHRcdFxcmVdXJuIGZhbHNlXGcdFxXHRXGcblxXHRcdGNvbnNIHNYXRlOiBNYXBTdGFZSAIHRoaXNbRFJBRlRfURBVEVdXGcdFxXHRhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHRwcmVwYXJlTWFwQweShzdGFZSlcblxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxaWYgKHNYXRlLmJhcVfLmhhcyhrZXkpKSBXGcdFxXHRcdHNYXRlLmFzclnbmVkXyEucVKGtleSwgZmFscUpXGcdFxXHRIGVscUgexuXHRcdFxXHRzdGFZShcNpZlZFhLmRlbGVZShrZXkpXGcdFxXHRXGcdFxXHRzdGFZSjbBXyEuZGVsZXRlKGtleSlcblxXHRcdHJldHVybiBcnVlXGcdFxfVxuXGcdFxcCjbGVhciAIGZbmNaWuKCkgexuXHRcdFxYucQgcRhdGUIEhcFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGFzcVydFVucmVbtlZChzdGFZSlcblxXHRcdGlmIChsYXRlcQocRhdGUpLnNpemUpIHtcblxXHRcdFxcHJlcGFyZUhcENvcHkocRhdGUpXGcdFxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxXHRzdGFZShcNpZlZFgPSBuZXcgTWFwKClcblxXHRcdFxZWFjaChzdGFZSiYXNlXywgaVID+IHtcblxXHRcdFxXHRzdGFZShcNpZlZFhLnNldChrZXksIGZhbHNlKVxuXHRcdFxXHRKVxuXHRcdFxXHRzdGFZSjbBXyEuYxlYXIoKVxuXHRcdFxfVxuXHRcdHcblxuXHRcdHAuZmyRWFjaCAIGZbmNaWuKFxuXHRcdFxYIIChYWxZTogYWLCBrZXkIGFueSwgcVsZjogYWKSAPiBblkLFxuXHRcdFxdGhpcFyZzIGFueVxuXHRcdCkgexuXHRcdFxYucQgcRhdGUIEhcFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGxhdGVzdChzdGFZSkuZmyRWFjaCgoXZhbHVlOiBhbnksIGtleTogYWLCBfbWFwOiBhbnkpID+IHtcblxXHRcdFxYIuYFsbChaGlzQXJnLCBaGlzLmdldChrZXkpLCBrZXksIHRoaXMpXGcdFxXHRKVxuXHRcdHcblxuXHRcdHAuZVIDgZnVuYRpboaVOiBhbnkpOiBhbnkgexuXHRcdFxYucQgcRhdGUIEhcFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGFzcVydFVucmVbtlZChzdGFZSlcblxXHRcdGNvbnNIHZhbHVlIDgbGFZXNKHNYXRlKSnZXQoaVKVxuXHRcdFxaWYgKHNYXRlLmZpbmFsaXplZFgfHwgIWlzRHJhZnRhYmxlKHZhbHVlKSkgexuXHRcdFxXHRyZXRcmgdmFsdWVcblxXHRcdHcblxXHRcdGlmIChYWxZSAhPTgcRhdGUuYmFzZVuZVKGtleSkpIHtcblxXHRcdFxcmVdXJuIHZhbHVlICvIGVpdGhlciBhbHJlYWRIGRyYWZZWQgbIgcmVhcNpZlZFxuXHRcdFxfVxuXHRcdFxLygZGVzcGlZSBaGFIGlIGxvbtzLCBaGlzIGNyZWFZXMgYSBkcmFmdCBvbmxIGuYUsIHNlZSBhYmZSBjbkaXRpbcblxXHRcdGNvbnNIGRyYWZIDgYJlYXRlUHJveHkocRhdGUucNvcGVfLmltbWVyXywgdmFsdWUsIHNYXRlKVxuXHRcdFxcHJlcGFyZUhcENvcHkocRhdGUpXGcdFxXHRzdGFZSjbBXyEucVKGtleSwgZHJhZnQpXGcdFxXHRyZXRcmgZHJhZnRcblxXHRXGcblxXHRwLmtleXMgPSBmdWjdGlvbigpOiBJdGVyYWJsZUlZXJhdGyPGFueTgexuXHRcdFxcmVdXJuIGxhdGVzdChaGlzWRSQUZUXNUQVRFXSkuaVcygpXGcdFxfVxuXGcdFxcCYWxZXMgPSBmdWjdGlvbigpOiBJdGVyYWJsZUlZXJhdGyPGFueTgexuXHRcdFxYucQgaXRlcmFbIgPSBaGlzLmtleXMoKVxuXHRcdFxcmVdXJuIHtcblxXHRcdFxWlZXJhdGyUltYmsXTogKCkgPTgdGhpcyYWxZXMoKSxcblxXHRcdFxbmVdDogKCkgPTgexuXHRcdFxXHRcdGNvbnNIHIgPSBpdGVyYXRvciuZXhKClcblxXHRcdFxXHQvKiBpcRhbmJbCBpZvcmUgbmVdCAqLxuXHRcdFxXHRcdGlmIChyLmRvbmUpIHJldHVybiByXGcdFxXHRcdFxYucQgdmFsdWUgPSBaGlzLmdldChyLnZhbHVlKVxuXHRcdFxXHRcdHJldHVybiBXGcdFxXHRcdFxXHRkblOiBmYWxzZSxcblxXHRcdFxXHRcdHZhbHVlXGcdFxXHRcdFxfVxuXHRcdFxXHRXGcdFxXHRIGFzIGFueVxuXHRcdHcblxuXHRcdHAuZWcmllcyAIGZbmNaWuKCkIElZXJhYmxlSXRlcmFbIWFueSwgYWXTgexuXHRcdFxYucQgaXRlcmFbIgPSBaGlzLmtleXMoKVxuXHRcdFxcmVdXJuIHtcblxXHRcdFxWlZXJhdGyUltYmsXTogKCkgPTgdGhpcylbnRyaWVzKCksXGcdFxXHRcdGleHQICgpID+IHtcblxXHRcdFxXHRjbzdCByIDgaXRlcmFbIubmVdCgpXGcdFxXHRcdFxLyogaXNYWidWwgaWdubJlIGleHQgKicblxXHRcdFxXHRpZiAocikblKSByZXRcmgclxuXHRcdFxXHRcdGNvbnNIHZhbHVlIDgdGhpcynZXQociYWxZSlcblxXHRcdFxXHRyZXRcmgexuXHRcdFxXHRcdFxZGuZTogZmFscUsXGcdFxXHRcdFxXHRYWxZTogWIudmFsdWUsIHZhbHVlXVxuXHRcdFxXHRcdHcblxXHRcdFxfVxuXHRcdFxfSBhcyBhbnlcblxXHRXGcblxXHRwWlZXJhdGyUltYmsXSAIGZbmNaWuKCkgexuXHRcdFxcmVdXJuIHRoaXMuZWcmllcygpXGcdFxfVxuXGcdFxcmVdXJuIERyYWZTWFwXGcdHpKEhcClcblxuXHRmdWjdGlvbiBwcmeUhcFVCBleHRlbmRzIEFueUhcDodGFyZVOiBULCBwYXJlbnQ/OiBJbWlclNYXRlKTogVCBXGcdFxLygQHRzLWlnbmyZVxuXHRcdHJldHVybiBuZXcgRHJhZnRNYXAodGFyZVLCBwYXJlbnQpXGcdHcblxuXHRmdWjdGlvbiBwcmVwYXJlTWFwQweShzdGFZTogTWFwURhdGUpIHtcblxXHRpZiAoIXNYXRlLmNvcHlfKSBXGcdFxXHRzdGFZShcNpZlZFgPSBuZXcgTWFwKClcblxXHRcdHNYXRlLmNvcHlfIDgbmVIEhcChzdGFZSiYXNlXylcblxXHRXGcdHcblxuXHRjbzdCBEcmFmdFNldCAIChmdWjdGlvbihfcVwZXIpIHtcblxXHRfXVdGVuZHMoRHJhZnRTZXQsIFzdXBlcilcblxXHQvLyBDcmVhdGUgYxhcMgbWFudWFsbHksIGNhdXNlICMMDJcblxXHRmdWjdGlvbiBEcmFmdFNldChaGlzOiBhbnksIHRhcmdldDogQWUVLCBwYXJlbnQ/OiBJbWlclNYXRlKSBXGcdFxXHRaGlzWRSQUZUXNUQVRFXSAIHtcblxXHRcdFxdHlwZVIFBybhVHlwZSTZXQsXGcdFxXHRcdHBhcmVudFIHBhcmVudCxcblxXHRcdFxcNvcGVfOiBwYXJlbnQgPyBwYXJlbnQucNvcGVfIDogZVQVycmVudFNjbBlKCkhLFxuXHRcdFxXHRtbRpZmllZFIGZhbHNlLFxuXHRcdFxXHRmaWhbGlZWRfOiBmYWxzZSxcblxXHRcdFxYweVIHVuZGVmaWlZCxcblxXHRcdFxYmFzZVIHRhcmdldCxcblxXHRcdFxZHJhZnRfOiBaGlzLFxuXHRcdFxXHRkcmFmdHNfOiBuZXcgTWFwKCksXGcdFxXHRcdHJldmrZWRfOiBmYWxzZSxcblxXHRcdFxaXNNYWYWxfOiBmYWxzZVxuXHRcdFxfSBhcyBTZXRTdGFZVxuXHRcdFxcmVdXJuIHRoaXNcblxXHRXGcdFxYucQgcCAIERyYWZUVLnBybRvdHlwZVxuXGcdFxTJqZWNLmRlZmluZVBybBlcnRKHAsIFwiclZVwiLCBXGcdFxXHRnZXQIGZbmNaWuKCkgexuXHRcdFxXHRyZXRcmgbGFZXNKHRoaXNbRFJBRlRfURBVEVdKSzaXplXGcdFxXHRXGcdFxXHQvLyBlbnVtZXJhYmxlOiBcnVlLFxuXHRcdHpXGcblxXHRwLmhhcyAIGZbmNaWuKHZhbHVlOiBhbnkpOiBibsZWFuIHtcblxXHRcdGNvbnNIHNYXRlOiBTZXRTdGFZSAIHRoaXNbRFJBRlRfURBVEVdXGcdFxXHRhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHQvLyBiaXQgbYgdHJpYtlcnkgaGVyZSwgdGgYmUgYWJsZSBbyByZWNvZpemUgYmaCBaGUgdmFsdWUsIGFuZCBaGUgZHJhZnQgbYgaXRzIHZhbHVlXGcdFxXHRpZiAoIXNYXRlLmNvcHlfKSBXGcdFxXHRcdHJldHVybiBzdGFZSiYXNlXyoYXModmFsdWUpXGcdFxXHRXGcdFxXHRpZiAocRhdGUuYweVuaGFzKHZhbHVlKSkgcmVdXJuIHRydWVcblxXHRcdGlmIChzdGFZSkcmFmdHNfLmhhcyhYWxZSkgJiYgcRhdGUuYweVuaGFzKHNYXRlLmRyYWZcuZVKHZhbHVlKSkpXGcdFxXHRcdHJldHVybiBcnVlXGcdFxXHRyZXRcmgZmFscVcblxXHRXGcblxXHRwLmFkZCAIGZbmNaWuKHZhbHVlOiBhbnkpOiBhbnkgexuXHRcdFxYucQgcRhdGUIFNldFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGFzcVydFVucmVbtlZChzdGFZSlcblxXHRcdGlmICghdGhpcyoYXModmFsdWUpKSBXGcdFxXHRcdHByZXBhcmVTZXRDbBKHNYXRlKVxuXHRcdFxXHRtYXJrQhhbmdlZChzdGFZSlcblxXHRcdFxcRhdGUuYweVhLmFkZChYWxZSlcblxXHRcdHcblxXHRcdHJldHVybiBaGlzXGcdFxfVxuXGcdFxcCkZWxldGUgPSBmdWjdGlvbihYWxZTogYWKTogYWIHtcblxXHRcdGlmICghdGhpcyoYXModmFsdWUpKSBXGcdFxXHRcdHJldHVybiBmYWxzZVxuXHRcdFxfVxuXGcdFxXHRjbzdCBzdGFZTogUVURhdGUgPSBaGlzWRSQUZUXNUQVRFXVxuXHRcdFxYXNzZXJVWyZXZvaVkKHNYXRlKVxuXHRcdFxcHJlcGFyZVNldENvcHkocRhdGUpXGcdFxXHRtYXJrQhhbmdlZChzdGFZSlcblxXHRcdHJldHVybiAoXGcdFxXHRcdHNYXRlLmNvcHlfISkZWxldGUodmFsdWUpIHxXGcdFxXHRcdChzdGFZSkcmFmdHNfLmhhcyhYWxZSlcblxXHRcdFxXHQ/IHNYXRlLmNvcHlfISkZWxldGUocRhdGUuZHJhZnRzXynZXQodmFsdWUpKVxuXHRcdFxXHRcdDogLyogaXNYWidWwgaWdubJlIGleHQgKigZmFscUpXGcdFxXHQpXGcdFxfVxuXGcdFxcCjbGVhciAIGZbmNaWuKCkgexuXHRcdFxYucQgcRhdGUIFNldFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGFzcVydFVucmVbtlZChzdGFZSlcblxXHRcdGlmIChsYXRlcQocRhdGUpLnNpemUpIHtcblxXHRcdFxcHJlcGFyZVNldENvcHkocRhdGUpXGcdFxXHRcdGhcmtDaGFuZVkKHNYXRlKVxuXHRcdFxXHRzdGFZSjbBXyEuYxlYXIoKVxuXHRcdFxfVxuXHRcdHcblxuXHRcdHAudmFsdWVzIDgZnVuYRpboKTogSXRlcmFibGVJdGVyYXRvcjxhbnk+IHtcblxXHRcdGNvbnNIHNYXRlOiBTZXRTdGFZSAIHRoaXNbRFJBRlRfURBVEVdXGcdFxXHRhcNlcnRVbnJldmrZWQocRhdGUpXGcdFxXHRwcmVwYXJlUVQweShzdGFZSlcblxXHRcdHJldHVybiBzdGFZSjbBXyEudmFsdWVzKClcblxXHRXGcblxXHRwLmVudHJpZXMgPSBmdWjdGlvbiBlbnRyaWVzKCkIElZXJhYmxlSXRlcmFbIWFueSwgYWXTgexuXHRcdFxYucQgcRhdGUIFNldFNYXRlIDgdGhpctEUkFGVFTVEFURVcblxXHRcdGFzcVydFVucmVbtlZChzdGFZSlcblxXHRcdHByZXBhcmVTZXRDbBKHNYXRlKVxuXHRcdFxcmVdXJuIHNYXRlLmNvcHlfISlbnRyaWVzKClcblxXHRXGcblxXHRwLmtleXMgPSBmdWjdGlvbigpOiBJdGVyYWJsZUlZXJhdGyPGFueTgexuXHRcdFxcmVdXJuIHRoaXMudmFsdWVzKClcblxXHRXGcblxXHRwWlZXJhdGyUltYmsXSAIGZbmNaWuKCkgexuXHRcdFxcmVdXJuIHRoaXMudmFsdWVzKClcblxXHRXGcblxXHRwLmZvckVhYggPSBmdWjdGlvbiBmbJFYWNoKGNiOiBhbnksIHRoaXNBcmc/OiBhbnkpIHtcblxXHRcdGNvbnNIGlZXJhdGyIDgdGhpcyYWxZXMoKVxuXHRcdFxbGVIHJlcVsdCAIGlZXJhdGyLmleHQoKVxuXHRcdFxdhpbGUgKCFyZXNbHQuZGuZSkgexuXHRcdFxXHRjYijYWxsKHRoaXNBcmcsIHJlcVsdCYWxZSwgcmVzdWxLnZhbHVlLCBaGlzKVxuXHRcdFxXHRyZXNbHQgPSBpdGVyYXRvciuZXhKClcblxXHRcdHcblxXHRXGcblxXHRyZXRcmgRHJhZnRTZXRcblxfSkoUVKVxuXGcdGZbmNaWuIHBybhUVXzxUIGVdGVuZHMgQWUVPihYXJnZXQIFQsIHBhcmVudDIEltbWVyURhdGUpOiBUIHtcblxXHQvLyBAdHMtaWdubJlXGcdFxcmVdXJuIGldyBEcmFmdFNldChYXJnZXQsIHBhcmVudClcblxfVxuXGcdGZbmNaWuIHByZXBhcmVTZXRDbBKHNYXRlOiBTZXRTdGFZSkgexuXHRcdGlmICghcRhdGUuYweVpIHtcblxXHRcdCvIGNyZWFZSBkcmFmdHMgZmyIGFsbCBlbnRyaWVzIHRvIHByZXNlcnZlIGlucVydGlvbiBvcmRlclxuXHRcdFxcRhdGUuYweVgPSBuZXcgUVKClcblxXHRcdHNYXRlLmJhcVfLmZvckVhYgodmFsdWUgPTgexuXHRcdFxXHRpZiAoaXNEcmFmdGFibGUodmFsdWUpKSBXGcdFxXHRcdFxYucQgZHJhZnQgPSBjcmVhdGVQcmeShzdGFZSzYwZVuaWtZXJfLCBYWxZSwgcRhdGUpXGcdFxXHRcdFxcRhdGUuZHJhZnRzXyzZXQodmFsdWUsIGRyYWZKVxuXHRcdFxXHRcdHNYXRlLmNvcHlfIShZGQoZHJhZnQpXGcdFxXHRcdHgZWxzZSBXGcdFxXHRcdFxcRhdGUuYweVhLmFkZChYWxZSlcblxXHRcdFxfVxuXHRcdFxfSlcblxXHRXGcdHcblxuXHRmdWjdGlvbiBhcNlcnRVbnJldmrZWQocRhdGUIGFueSAvKkVTNVNYXRlIHwgTWFwURhdGUgfCBTZXRTdGFZSovKSBXGcdFxaWYgKHNYXRlLnJldmrZWRfKSBkaWUoMywgSlNPTizdHJpbmdpZnkobGFZXNKHNYXRlKSkpXGcdHcblxuXHRsbFkUGxZluKFwiTWFwUVXCIsIHtwcmeUhcFsIHBybhUVXpXGXGiLCAiaWwbJIHtlbmFibGVFUzVIGZybgXCIuLVzNVwiXGpbXBvcnQgeVuYWJsZUhcFNldHgZnJvbSBcIivbWFwcVXCJcbmltcGydCBZWhYmxlUGFYhlcgZnJvbSBcIivcGFYhlcwiXGcbmVcGydCBmdWjdGlvbiBlbmFibGVBbGxQbHVnaWzKCkgexuXHRlbmFibGVFUzUoKVxuXHRlbmFibGVNYXBTZXQoKVxuXHRlbmFibGVQYXRjaGVzKClcbncbiIsICJpbXBvcnQgexuXHRJUHJvZHVjZSxcblxSVBybRYVXaXRoUGFYhlcyxcblxSWtZXIsXGcdERyYWZLFxuXHRJbWdGFibGVcbngZnJvbSBcIivaWZXJuYWxcIlxuXGleHBvcnQgexuXHREcmFmdCxcblxSWtdXRhYmxlLFxuXHRQYXRjaCxcblxUGFYhMaXNZWlcixcblxbJpZluYWwsXGcdGNcnJlbnQsXGcdGlzRHJhZnQsXGcdGlzRHJhZnRhYmxlLFxuXHROTRISUHIGFzIGvdGhpbmcsXGcdERSQUZUQUJMRSBhcyBpbWlcmFibGUsXGcdGZyZWVZVxufSBmcmtIFwiLipbnRlcmhbFwiXGcbmNvbnNIGltbWVyIDgbmVIEltbWVyKClcblxuLyoqXGgKiBUaGUgYHBybRYVgIGZbmNaWuIHRhaVzIGEgdmFsdWUgYWkIGEgXCJyZWNpcGUgZnVuYRpbcIiAodhvcVcbiAqIHJldHVybiBYWxZSBvZnRlbiBkZXBlbmRzIGuIHRoZSBiYXNlIHNYXRlKSgVGhlIHJlYlwZSBmdWjdGlvbiBpcxuICogZnJlZSBbyBtdXRhdGUgaXRzIGZpcnNIGFyZVtZWIGhvdVZXIgaXQgdFudHMuIEFsbCBtdXRhdGlvbnMgYXJlXGgKiBvbmxIGVZXIgYXBwbGllZCBbyBhIFfYweVfIGmIHRoZSBiYXNlIHNYXRlLlxuICpcbiAqIFBhcMgbseSBhIGZbmNaWuIHRvIGNyZWFZSBhIFwiYVycmllZCBwcmkdWNlclwiIHdoaWNoIHJlbGlldmVzIHlvdVxuICogZnJvbSBwYXNzaWnIHRoZSByZWNpcGUgZnVuYRpbgZXZlcnkgdGltZScbiAqXGgKiBPbmxIHBsYWluIGiamVjdHMgYWkIGFycmFcyBhcmUgbWFkZSBtdXRhYmxlLiBBbGwgbRoZXIgbJqZWNcyBhcmVcbiAqIGNvbnNpZGVyZWQgdWjbBYWJsZScbiAqXGgKiBObRlOiBUaGlzIGZbmNaWuIGlzIFfYmbmRfXyBbyBpdHMgYEltbWVyYCBpbnNYWjZScbiAqXGgKiBAcGFyYWgeFueXgYmFzZSAtIHRoZSBpbmlaWFsIHNYXRlXGgKiBAcGFyYWgeZbmNaWufSBwcmkdWNlciAtIGZbmNaWuIHRoYXQgcmVjZWlZXMgYSBwcmeSBvZiBaGUgYmFzZSBzdGFZSBhcyBmaXJzdCBhcmdbWVudCBhbmQgdhpYggYFuIGJlIGZyZWVseSBtbRpZmllZFxuICogQHBhcmFtIHtGdWjdGlvbngcGFYhMaXNZWlciAtIGwdGlvbmFsIGZbmNaWuIHRoYXQgdlsbCBiZSBjYWxsZWQgdlaCBhbGwgdGhlIHBhdGNoZXMgcHJvZHVjZWQgaGVyZVxuICogQHJldHVybnMgeFueXgYSBuZXcgcRhdGUsIGyIHRoZSBpbmlaWFsIHNYXRlIGlmIGvdGhpbmcgdFzIGvZGlmaWVkXGgKicbmVcGydCBjbzdCBwcmkdWNlOiBJUHJvZHVjZSAIGltbWVyLnBybRYVcbmVcGydCBkZWZhdWxIHBybRYVcblxuLyoqXGgKiBMaWtlIGBwcmkdWNlYCwgYnVIGBwcmkdWNlVlaFBhdGNoZXNgIGFsdFcyByZXRcmzIGEgdHVwbGVcbiAqIFtuZXhURhdGUsIHBhdGNoZXMsIGludmVycVQYXRjaGVzXSAoaWzdGVhZCBvZiBqdXNIHRoZSBuZXhIHNYXRlKVxuICovXGleHBvcnQgYucQgcHJvZHVjZVdpdGhQYXRjaGVzOiBJUHJvZHVjZVdpdGhQYXRjaGVzIDgaWtZXIucHJvZHVjZVdpdGhQYXRjaGVzLmJpbmQoXGcdGltbWVyXGpXGcbiqKlxuICogUGFzcyBcnVlIHRvIGFdGtYXRpYFsbHkgZnJlZXplIGFsbCBjbBpZXMgYJlYXRlZCBieSBJbWlcicbiAqXGgKiBBbHdheXMgZnJlZXplIGJIGRlZmFbHQsIGVZWgaWgcHJvZHVjdGlvbiBtbRlXGgKicbmVcGydCBjbzdCBzZXRBdXRvRnJlZXplIDgaWtZXIucVQXVbZyZWVZSiaWkKGltbWVyKVxuXGvKipcbiAqIFBhcMgdHJZSBbyBcUgdGhlIEVTMjAxNSBgUHJveHlgIGNsYXNzIHdoZWgYJlYXRpbmcgZHJhZnRzLCBaGljaCBpcxuICogYWxYXlzIGZhcRlciBaGFuIHVzaWnIEVTNSBwcmaWVzLlxuICpcbiAqIEJIGRlZmFbHQsIGZlYXRcmUgZGVZWNaWuIGlzIHVzZWQsIHNvIGNhbGxpbmcgdGhpcyBpcyByYXJlbHkgbmVjZXNzYXJLlxuICovXGleHBvcnQgYucQgcVVXNlUHJveGllcyAIGltbWVyLnNldFVzZVBybhpZXMuYmluZChpbWlcilcblxuLyoqXGgKiBBcHBseSBhbiBhcnJheSBvZiBJbWlciBwYXRjaGVzIHRvIHRoZSBmaXJzdCBhcmdbWVudCcbiAqXGgKiBUaGlzIGZbmNaWuIGlzIGEgcHJvZHVjZXIsIHdoaWNoIGlYWzIGNvcHktbtdJpdGUgaXMgaWgZWZmZWNLlxuICovXGleHBvcnQgYucQgYXBwbHlQYXRjaGVzIDgaWtZXIuYXBwbHlQYXRjaGVzLmJpbmQoaWtZXIpXGcbiqKlxuICogQJlYXRlIGFuIEltbWVyIGRyYWZIGZybgdGhlIGdpdmVuIGJhcUgcRhdGUsIHdoaWNoIGheSBiZSBhIGRyYWZIGlcVsZicbiAqIFRoZSBkcmFmdCBjYWgYmUgbWkaWZpZWQgdWaWwgeWIGZpbmFsaXplIGlIHdpdGggdGhlIGBmaWpchEcmFmdGAgZnVuYRpbuXGgKicbmVcGydCBjbzdCBjcmVhdGVEcmFmdCAIGltbWVyLmNyZWFZURyYWZLmJpbmQoaWtZXIpXGcbiqKlxuICogRmluYWxpemUgYWgSWtZXIgZHJhZnQgZnJvbSBhIGBjcmVhdGVEcmFmdGAgYFsbCwgcmVdXJuaWnIHRoZSBiYXNlIHNYXRlXGgKiAoaWYgbmgYhhbmdlcyBZXJlIGhZGUpIGyIGEgbWkaWZpZWQgYweSgVGhlIGRyYWZIGcQgKmvdCogYmVcbiAqIGdGFZWQgYWZZXJYXJkcycbiAqXGgKiBQYXNzIGEgZnVuYRpbgYXMgdGhlIDJuZCBhcmdbWVudCBbyBnZWlcmFZSBJbWlciBwYXRjaGVzIGJhcVkIGuIHRoZVxuICogYhhbmdlcyBaGFIHdlcmUgbWFkZScbiAqLxuZXhwbJIGNvbnNIGZpbmlzaERyYWZIDgaWtZXIuZmluaXNoRHJhZnQuYmluZChpbWlcilcblxuLyoqXGgKiBUaGlzIGZbmNaWuIGlzIGFjdHVhbGxIGEgbmtbAsIGJdCBjYWgYmUgdXNlZCBbyBjYXNIGFuIGltbXVYWJsZSBeXBlXGgKiBbyBhbiBkcmFmdCBeXBlIGFuZCBtYWtlIFRcGVTYJpcHQgaGFwcHlcbiAqXGgKiBAcGFyYWgdmFsdWVcbiAqLxuZXhwbJIGZbmNaWuIGNhcREcmFmdDxUPihYWxZTogVCkIERyYWZPFQ+IHtcblxcmVdXJuIHZhbHVlIGFzIGFueVxufVxuXGvKipcbiAqIFRoaXMgZnVuYRpbgaXMgYWNdWFsbHkgYSBubyvcCwgYnVIGNhbiBiZSBcVkIHRvIGNhcQgYSBtdXRhYmxlIHRcGVcbiAqIHRvIGFuIGltbXVYWJsZSBeXBlIGFuZCBtYWtlIFRcGVTYJpcHQgaGFwcHlcbiAqIEBwYXJhbSBYWxZVxuICovXGleHBvcnQgZnVuYRpbgYFzdEltbXVYWJsZTxUPihYWxZTogVCkIEltbXVYWJsZTxUPiBXGcdHJldHVybiBYWxZSBhcyBhbnlcbncblxuZXhwbJIHtJbWlcncblxuZXhwbJIHtlbmFibGVFUzVIGZybgXCIuLBsdWdpbnMvZXMXCJcbmVcGydCBZWhYmxlUGFYhlcgZnJvbSBcIivcGxZlucywYXRjaGVzXCJcbmVcGydCBZWhYmxlTWFwUVfSBmcmtIFwiLiwbHVnaWzLhcHNldFwiXGleHBvcnQgeVuYWJsZUFsbFBsdWdpbnNIGZybgXCIuLBsdWdpbnMvYWxsXCJcbiIsICIvLyBTaGbGQgYmUgbmgaWwbJcyBoZXJlIVxuXGvLyBTblIHRoaWncyBaGFIHNobVsZCBiZSBldmFsdWFZWQgYmVmbJlIGFsbCBlbHNlLiuXGcbivIFdlIGubHkgdFudCBbyBrbmIGlmIGvbiwbxZmlsbGVkIHNbWJvbHMgYXJlIGFYWlsYWJsZVxuYucQgaGFzUltYmsIDcblxdHlwZWmIFNbWJvbCAhPTgXCJbmRlZmluZWRcIiAmJiBeXBlbYgUltYmsKFwieFwiKSAPTgXCJzeWibxcIlxuZXhwbJIGNvbnNIGhhchcCAIHRcGVvZiBNYXAgITIFwidWkZWZpbmVkXCJcbmVcGydCBjbzdCBoYXNTZXQgPSBeXBlbYgUVICEPSBcInVuZGVmaWlZFwiXGleHBvcnQgYucQgaGFzUHJveGllcyAXGcdHRcGVvZiBQcmeSAhPTgXCJbmRlZmluZWRcIiAmJlxuXHReXBlbYgUHJveHkucmVbNhYmxlICEPSBcInVuZGVmaWlZFwiICYmXGcdHRcGVvZiBSZWZsZWNICEPSBcInVuZGVmaWlZFwiXGcbiqKlxuICogVGhlIHNlbnRpbmVsIHZhbHVlIHJldHVybmVkIGJIHBybRYVycyBbyByZXBsYWNlIHRoZSBkcmFmdCBaXRoIHVuZGVmaWlZCcbiAqLxuZXhwbJIGNvbnNIEPVEhJTkcIEvdGhpbmcgPSBoYXNTeWibxcblxPyBTeWibwuZmyKFwiaWtZXItbmaGluZwiKVxuXHQIChWwiaWtZXItbmaGluZwiXTogdHJZXgYXMgYWKVxuXGvKipcbiAqIFRvIGxldCBJbWlciBcmVhdCBbVyIGNsYXNzIGlucRhbmNlcyBhcyBwbGFpbiBpbWdGFibGUgbJqZWNcxuICogKGFsYmVpdCBaXRoIGEgYVzdGtIHBybRvdHlwZSksIHlvdSBtdXNIGRlZmluZSBlaXRoZXIgYWgaWzdGFuYUgcHJvcGVydHlcbiAqIGyIGEgcRhdGljIHBybBlcnRIGuIGVhYggbYgeWciBjdXNbgYxhcNlcycbiAqXGgKiBPdGhlcndpcUsIHlvdXIgYxhcMgaWzdGFuYUgdlsbCBuZXZlciBiZSBkcmFmdGVkLCBaGljaCBtZWFucyBpdCBbndCBiZVxuICogcFmZSBbyBtdXRhdGUgaWgYSBwcmkdWNlIGNhbGxiYWNrLlxuICovXGleHBvcnQgYucQgRFJBRlRBQkxFOiBbmlxdWUgcltYmsIDgaGFzUltYmsXGcdDgUltYmsLmZvcihcImltbWVyLWRyYWZYWJsZVwiKVxuXHQIChcIlfJGltbWVyXRyYWZYWJsZVwiIGFzIGFueSlcblxuZXhwbJIGNvbnNIERSQUZUXNUQVRFOiBbmlxdWUgcltYmsIDgaGFzUltYmsXGcdDgUltYmsLmZvcihcImltbWVyLXNYXRlXCIpXGcdDogKFwiXkaWtZXJfcRhdGVcIiBhcyBhbnkpXGcbivIEVZWgYSBwbxZmlsbGVkIFNbWJvbCBtaWdodCBwcmaWRlIFNbWJvbCpdGVyYXRvclxuZXhwbJIGNvbnNIGlZXJhdGyUltYmsOiBeXBlbYgUltYmsLmlZXJhdGyIDcblxKHRcGVvZiBTeWibwgITgXCJbmRlZmluZWRcIiAmJiBTeWibwuaXRlcmFbIpIHxIChcIkBAaXRlcmFbJcIiBhcyBhbnkpXGcbiqKiBVcUgYSBjbGFzcyBeXBlIGZvciBgbmaGluZAgcgaXRzIHRcGUgaXMgdWpcXVlICovXGleHBvcnQgYxhcMgTmaGluZyBXGcdCvIFRoaXMgbGVcyBcyBkbyBgRXhjbHVkZTxULCBObRoaWnPmBcblxLygQHRzLWlnbmyZVxuXHRwcmlYXRlIFhOiBbmlxdWUgcltYmsXGXGiLCAiaWwbJIFwiLipYuLWhbmFnZXIubGVzcwiOxuXGpbXBvcnQgeyBlbmFibGVNYXBTZXQgfSBmcmtIFwiaWtZXJcIjtcbmltcGydCBIEvZGFsLCBzZXRJYuIHgZnJvbSBcImiclkaWFuXCIXGpbXBvcnQgUmVhYQsIHtcbiAgYJlYXRlQudGVdCxcbiAgdXNlQudGVdCxcbiAgdXNlRWZmZWNLFxuICBcVNZWvLFxuICBcVTdGFZSxcbngZnJvbSBcInJlYWNXCIXGpbXBvcnQgUmVhYRETgZnJvbSBcInJlYWNLWRvbVwiOxuaWwbJIHsgdXNlSWtZXIgfSBmcmtIFwidXNlLWltbWVyXCIXGcbmltcGydCBQYWNrTWFuYWdlciBmcmtIFwiLivaWNvbiwYWNrcywYWNrLWhbmFnZXJcIjtcbmltcGydCBIEZpbGVJYuSWmbywgSWNvbkluZmgfSBmcmtIFwiLivaWNvbiwYWNrcyeXBlcwiOxuaWwbJIEljbTQyBmcmtIFwiLivaXNjLWhaWcIjtcbmltcGydCBJYuUHJldmlldyBmcmtIFwiLipYuLXByZXZpZXdcIjtcblxuZWhYmxlTWFwUVKCkXGcbnRcGUgaWNvbnMgPSBSZWNvcmQXCJcmFzaFwiIHwgXCJwZWjaWxcIiBIFwicRhclwiIHwgXCJjaGVjahcmtcIiwgcRyaWnPjtcbmNvbnNIGdldEljbzIDgKCkIGljbzID+IHtcbiAgYucQgdGVtcEVsIDgYJlYXRlRGlKCksXGgICAgcmVdXJuczogUGFydGlhbDxpYuczgPSBfTtcbiAgZmyIChjbzdCBpYuIGmIFtcInRyYXNoXCIsIFwicGVuYlsXCIsIFwicRhclwiLCBcImNoZWNrbWFyawiXSBhcyBjbzdCkgexuICAgIHRlbXBFbClbXBeSgpOxuICAgIHNldEljbodGVtcEVsLCBpYuLCAxNCkXGgICAgcmVdXJuctpYuXSAIHRlbXBFbCpbmlckhUTUwXGgIHcbiAgcmVdXJuIHJldHVybnMgYXMgaWNvbnMXGOxuXGleHBvcnQgYucQgQudGVdCAIGNyZWFZUNvbnRleHQeyBwYWNrczogUGFjahbmFnZXIIGljbzOiBpYucyBPihcbiAgbnVsbCBhcyBhbnksXGpOxuXGjbzdCBBTExfVVBEQVRFXtFWSAIFwiJUFMTCVcIjtcblxuZXhwbJIGRlZmFbHQgYxhcMgSWNvbkhbmFnZXIgZXhZWkcyBNbRhbCBXGgIGNvbnNcnVjdGyKHBYmxpYyBwbHVnaWIEljbTQywgcHVibGljIHBhYsIHNcmluZykgexuICAgIHNcGVyKHBsdWdpbihcHApOxuICAgIHRoaXMudGlbGVFbCzZXRUZXhKGAkeBhYtIEljbzYCkXGgICAgdGhpcytbRhbEVsLmFkZENsYXNzZXMoWwiaXNjLWljbtbWFuYWdlclwiLCBcImvZCjbtdWpdHktdGhlbWVcIlpOxuICBXGcbiAgYXNbmMgbPcGVuKCkgexuICAgIHRoaXMuYudGVudEVsLmVtcHRKCkXGgICAgUmVhYRETucmVuZGVyKFxuICAgICAgPENvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgdmFsdWUesgcGFjaMIHRoaXMucGxZluLnBhYtNYWhZVyLCBpYuczogZVSWNvbnMoKSBfVxuICAgICAgPlxuICAgICAgICASWNvbnMgcGFjazdGhpcywYWNrfSAvPlxuICAgICAgPCDbZXhLlBybZpZGVyPixcbiAgICAgIHRoaXMuYudGVudEVsLFxuICAgICkXGgIHcbiAgbDbGzZSgpIHtcbiAgICBSZWFjdERPTSbmvdWQtcGuZWQXRObRlKHRoaXMuYudGVudEVsKTtcbiAgfVxufVxuYucQgYtcGFyZUljbJZCAIChhOiBJYuSWmbywgYjogSWNvbkluZmpOiBudWiZXIgPTcbiAgYSuYWlLmxvYFsZUNvbXBhcmUoYiuYWlKTtcbmNvbnNIEljbzIDgKHsgcGFjayBOiBIHBhYsIHNcmluZyBKSAPiBXGgIGlmIChwYWNrIDPSBcImVtbppXCIpIHRocmIGldyBUeXBlRXJybIoXCJFbWqaSBubQgcVwcGydGVkXCIpOxuXGgIGNvbnNIHsgcGFjaMgfSAIHVzZUNvbnRleHQoQudGVdCkXGgIGNvbnNIFtmaWxZXIsIHNldEZpbHRlclgPSBcVTdGFZShcIlwiKTtcbiAgYucQgWFmZmVjdGVkLCBzZXRBZmZlYRlZFgPSBcVJbWlcihuZXcgTWFwPHNcmluZywgbnVtYmVyPigpKTtcbiAgYucQgaWRzIDgdXNlTWVtbyhcbiAgICAoKSAPiBXGgICAgICBsZXQgYXJyIDgcGFjaNcbiAgICAgICAgLnNlYXJjaChmaWxZXIgPyBmaWxZXIudHJpbSgpLnNwbGlKFwiIFwiKSAIFtdLCBbcGFjasIEluZmluaXRKVxuICAgICAgICAvLyBhZGQgYWgdXBkYXRlZCBwcmwZXJeSBbyBmbJjZSBhbiBpYuIHVwZGFZSBpbnRlcmhbGxXGgICAgICAgICtYXAoKHsgaXRlbSBKSAPiBpdGVtIGFzIEZpbGVJYuSWmbykXGgICAgICBpZiAoIWZpbHRlcikgYXJyLnNvcnQoYtcGFyZUljbJZCkXGgICAgICByZXRcmgYXJyOxuICAgIHsXGgICAgLygZXNsaWLWRpcFibGUtbmVdCsaWlIHJlYWNLWhvbtzLVaGFcRpdmUtZGVwcxuICAgIFtmaWxZXIsIHBhYssIGFmZmVjdGVkXSxcbiAgKTtcbiAgdXNlRWZmZWNKCgpID+IHtcbiAgICBjbzdCBldmVudFJlZiAIHBhYtzLmuKFwiYhhbmdlZFwiLCAoXFwaSwgYWZmZWNZWQpID+XGgICAgICBzZXRBZmZlYRlZCgoZHJhZnQpID+IHtcbiAgICAgICAgaWYgKGFmZmVjdGVkKVxuICAgICAgICAgIGFmZmVjdGVkLmZvckVhYgoKGlkOiBzdHJpbmcpID+XGgICAgICAgICAgICBkcmFmdCzZXQoaWQsIChkcmFmdCnZXQoaWQpIHxIDApICsgMSksXGgICAgICAgICAgKTtcbiAgICAgICAgZWxzZSBkcmFmdCzZXQoQUxMXVQREFURVLRVksIChkcmFmdCnZXQoQUxMXVQREFURVLRVkpIHxIDApICsgMSkXGgICAgICBKSxcbiAgICApOxuICAgIHJldHVybiAoKSAPiBwYWNrcyvZmZyZWYoZXZlbnRSZWYpOxuICAgICvIGVzbGludCkaXNhYmxlLWleHQtbGluZSByZWFjdCobrcyleGhhdXNaXZlLWRlcHNcbiAgfSwgWBhYtzXSkXGcbiAgcmVdXJuIChcbiAgICAPlxuICAgICAgPGRpdiBjbGFzchbWUXCJmaWxZXJcIjcbiAgICAgICAgPGlucHVXGgICAgICAgICAgdHlwZTcInRleHRcIlxuICAgICAgICAgIHBsYWNlaGsZGVyPVwiRmlsdGVyXCJcbiAgICAgICAgICBYWxZTZmlsdGVyfVxuICAgICAgICAgIGuQhhbmdlPXsoZXZKSAPiBzZXRGaWxZXIoZXZLnRhcmdldCYWxZSlXGgICAgICAgIC+XGgICAgICALRpdjcbiAgICAgIDxkaXYgYxhcNOYWlPVwiaWNvbnNcIjcbiAgICAgICAgelkcytYXAoKGlZWpID+IHtcbiAgICAgICAgICBjbzdCBcGRhdGVkIDcbiAgICAgICAgICAgIChhZmZlYRlZCnZXQoaXRlbSpZCkgPzgMCkgKyAoYWZmZWNZWQuZVKEFMTFVUERBVEVfSVZKSA/PyAwKTtcbiAgICAgICAgICByZXRcmgKFxuICAgICAgICAgICAgPEljbQcmVaWVXGgICAgICAgICAgICAgIGljbJbmZvPXtpdGVtfVxuICAgICAgICAgICAgICBcGRhdGVkPXtcGRhdGVkfVxuICAgICAgICAgICAgICBrZXkelZWuaWQgKyBcGRhdGVkfVxuICAgICAgICAgICAgLzcbiAgICAgICAgICApOxuICAgICAgICBKXcbiAgICAgIDwvZGlPlxuICAgIDwvPlxuICApOxufTtcbiIsICJpbXBvcnQgcHJvZHVjZSwgeyBEcmFmdCwgbmaGluZywgZnJlZXplIHgZnJvbSBcImltbWVyXCIXGpbXBvcnQgeyBcVTdGFZSwgdXNlUmVkdWNlciwgdXNlQFsbGJhYssIHVzZUlbWsIERpcBhdGNoIHgZnJvbSBcInJlYWNXCIXGcbmVcGydCBeXBlIFJlZHVjZXIUyAIGFueSwgQSAIGFueTgPSAoXGgIGRyYWZURhdGUIERyYWZPFM+LFxuICBhYRpbIEFcbikgPTgdmpZCBIChTIGVdGVuZHMgdWkZWZpbmVkIDgdHlwZWmIGvdGhpbmcgOiBTKTtcbmVcGydCBeXBlIERyYWZRnVuYRpbUzgPSAoZHJhZnQIERyYWZPFM+KSAPiBblkOxuZXhwbJIHRcGUgVXBkYXRlcjxTPiAIChhcmcIFMgfCBEcmFmdEZbmNaWuPFM+KSAPiBblkOxuZXhwbJIHRcGUgSWtZXJIbrPFM+IDgWMsIFVwZGFZXIUzdOxuZXhwbJIGZbmNaWuIHVzZUltbWVyPFMgPSBhbnk+KGluaXRpYWxWYWxZTogUyBICgoKSAPiBTKSkIEltbWVySGvazxTPjtcblxuZXhwbJIGZbmNaWuIHVzZUltbWVyKGluaXRpYWxWYWxZTogYWKSBXGgIGNvbnNIFtYWwsIHVwZGFZVZhbHVlXSAIHVzZVNYXRlKCgpID+XGgICAgZnJlZXplKFxuICAgICAgdHlwZWmIGluaXRpYWxWYWxZSAPTgXCJmdWjdGlvblwiIDgaWpdGlhbFZhbHVlKCkgOiBpbmlaWFsVmFsdWUsXGgICAgICBcnVlXGgICAgKVxuICApOxuICByZXRcmgWxuICAgIHZhbCxcbiAgICBcVDYWxsYmFjaygodXBkYXRlcikgPTgexuICAgICAgaWYgKHRcGVvZiBcGRhdGVyIDPSBcImZbmNaWuXCIpIHVwZGFZVZhbHVlKHBybRYUodXBkYXRlcikpOxuICAgICAgZWxzZSBcGRhdGVWYWxZShmcmVlemUodXBkYXRlcikpOxuICAgIHsIFtdKSxcbiAgXTtcbncblxuZXhwbJIGZbmNaWuIHVzZUltbWVyUmVkdWNlcjxTIDgYWLCBBIDgYWPihcbiAgcmVkdWNlcjogUmVkdWNlcjxTLCBBPixcbiAgaWpdGlhbFNYXRlOiBTLFxuICBpbmlaWFsQWNaWuPzogKGluaXRpYWwIGFueSkgPTgUxuKTogWMsIERpcBhdGNoPEE+XTtcbmVcGydCBmdWjdGlvbiBcVJbWlclJlZHVjZXIoXGgIHJlZHVjZXIIGFueSxcbiAgaWpdGlhbFNYXRlOiBhbnksXGgIGluaXRpYWxBYRpbIGFueVxuKSBXGgIGNvbnNIGNhYhlZFJlZHVjZXIgPSBcVNZWvKCgpID+IHBybRYUocmVkdWNlciksIFtyZWRYVyXSkXGgIHJldHVybiBcVSZWRYVyKGNhYhlZFJlZHVjZXIsIGluaXRpYWxTdGFZSBhcyBhbnksIGluaXRpYWxBYRpbpOxufVxuIiwgImltcGydCBcIiuLludmFsaWQubGVzcwiOxuXGpbXBvcnQgYxzIGZybgXCJjbGFzchbWVzXCIXGpbXBvcnQgeyBObRpYUgfSBmcmtIFwibJzaWRpYWcIjtcbmltcGydCBSZWFjdCwgexuICBIVEMQXRcmlidXRlcyxcbiAgVGVdGFyZWFIVEMQXRcmlidXRlcyxcbiAgdXNlQudGVdCxcbiAgdXNlTWVtbyxcbiAgdXNlURhdGUsXGIGZybgXCJyZWFjdFwiOxuXGpbXBvcnQgeyBGaWxlSWNvbkluZmgfSBmcmtIFwiLivaWNvbiwYWNrcyeXBlcwiOxuaWwbJIHsgcFuaXRpemVOYWlIHgZnJvbSBcIiuLljbtcGFjaMvdXRpbHNcIjtcbmltcGydCBIENvbnRleHQgfSBmcmtIFwiLipYuLWhbmFnZXJcIjtcblxuaWZXJmYWNlIEljbQcmVaWVUHJvcHMgexuICBpYuSWmbzogRmlsZUljbJbmZvOxuICBcGRhdGVkOiBudWiZXIXGXGcbmNvbnNIEljbQcmVaWVIDgKHsgaWNvbkluZmsIHVwZGFZWQgfTogSWNvblByZXZpZXdQcmwcykgPTgexuICBjbzdCBIHBhYtzLCBpYucyBIDgdXNlQudGVdChDbZXhKSxcbiAgICBIHRyYXNoLCBwZWjaWwsIHNYXIsIGNoZWNrbWFyayBIDgaWNvbnMXGcbiAgYucQgWlucHVLCBzZXRJbnBdFgPSBcVTdGFZShpYuSWmbyuYWlLnJlcGxhYUoLstXvZywgXCIgXCIpKSxcbiAgICBbaXNFZGlaWnLCBzZXRJcVkaXRpbmddIDgdXNlURhdGUoZmFscUpOxuXGgIGNvbnNIGlucHVSWQgPSBgJHtpYuSWmbywYWNrfVkeNhbmlaXplTmFtZShpbnBdClYCxcbiAgICBpclucHVVmFpbGQgPSBpbnBdElkIDPSBpYuSWmbypZCBfCAhcGFjaMuaGFzSWNvbihpbnBdElkKTtcblxuICAvLyBlcxpbnQtZGlzYWJsZSuZXhLWxpbmUgcmVhYQtaGvaMvZXhoYXVzdGlZSkZXBzXGgIGNvbnNIGljbTcmMgPSBcVNZWvKFxuICAgICgpID+IHBhYtzLmdldEljboaWNvbkluZmuaWQsIHRydWUpLFxuICAgICvIGVzbGludCkaXNhYmxlLWleHQtbGluZSByZWFjdCobrcyleGhhdXNaXZlLWRlcHNcbiAgICBbaWNvbkluZmuaWQsIHVwZGFZWRdLFxuICApOxuICBjbzdCByZWhbWVJYuIDgYXNbmMgKHJlbmFtZVRvOiBzdHJpbmcpID+IHtcbiAgICBjbzdCBuZXdOYWlIDgYXdhaXQgcGFjaMucmVuYWlKGljbJbmZvLmlkLCByZWhbWVUbykXGgICAgaWYgKCFuZXdOYWlKVxuICAgICAgbmVIEvdGljZShgRmFpbGVkIHRvIHJlbmFtZSBbyAkelucHVfSwgYhlYsgbGnIGZvciBkZXRhaWxzYCkXGgICAgZWxzZSBXGgICAgICBuZXcgTmaWNlKGBUaGUgaWNvbiBpcyByZWhbWVkIHRvICRbmVTmFtZXgKTtcbiAgICAgIHNldElzRWRpdGluZyhmYWxzZSkXGgICAgfVxuICBOxuXGgIHJldHVybiAoXGgICAgPGRpdiBjbGFzchbWUXCJpdGVtXCI+XGgICAgICAZGlIGNsYXNzTmFtZTcImljbcIjcbiAgICAgICAgPGltZyBjbGFzchbWUXCJpcMtaWNvblwiIHNyYzaWNvblNyYyA/PyBbmRlZmluZWRIC+XGgICAgICALRpdjcbiAgICAgIDxkaXYgYxhcNOYWlPVwibmFtZVwiPlxuICAgICAgICBaXNFZGlaWnIDgKFxuICAgICAgICAgIDxUZXhXGgICAgICAgICAgICBjbGFzchbWUeNscyhIGludmFsaWQICFpclucHVVmFpbGQgfSlXGgICAgICAgICAgICBvbkNoYWnZTKGVdCkgPTgcVSWwdXQoZXZLnRhcmdldCYWxZSlXGgICAgICAgICAgICBYWxZTaWwdXRXGgICAgICAgICAgLzcbiAgICAgICAgKSAIChcbiAgICAgICAgICAcBhbjaWwdXRPCzcGFuPlxuICAgICAgICApfVxuICAgICAgPCkaXY+XGgICAgICAZGlIGNsYXNzTmFtZTcImJdHRvbnNcIjcbiAgICAgICAgPEiQnVdGuXGgICAgICAgICAgYnRuVHlwZTcImNYVwiXGgICAgICAgICAgaWNvbjcRhcncbiAgICAgICAgICBvbkNsaWNrPXthcluYyAoKSAPiBXGgICAgICAgICAgICBsZXQgbmVTmFtZTtcbiAgICAgICAgICAgIGlmICgobmVTmFtZSAIGFYWlIHBhYtzLnNYXIoaWNvbkluZmuaWQpKSkgexuICAgICAgICAgICAgICBuZXcgTmaWNlKGAkeljbJbmZvLmlkfSBpcyBubcgJHtuZXdOYWlfWApOxuICAgICAgICAgICAgfVxuICAgICAgICAgIHXGgICAgICAgIC+XGgICAgICAgIDxPYkJdHRvblxuICAgICAgICAgIGJblRcGUXCJjdGFcIlxuICAgICAgICAgIGljbelzRWRpdGluZyA/IGNoZWNrbWFyayAIHBlbmNpbHcbiAgICAgICAgICBvbkNsaWNrPXthcluYyAoKSAPiBXGgICAgICAgICAgICBpZiAoaXNFZGlaWnKSBXGgICAgICAgICAgICAgIGlmIChpclucHVVmFpbGQpIHtcbiAgICAgICAgICAgICAgICBpZiAoaWwdXRJZCAhPTgaWNvbkluZmuaWQpIHtcbiAgICAgICAgICAgICAgICAgIGFYWlIHJlbmFtZUljboaWwdXRJZCkXGgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHNldElzRWRpdGluZyhmYWxzZSkXGgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBIGVscUgexuICAgICAgICAgICAgICAgIGldyBObRpYUoYFVuYWJsZSBbyByZWhbWUgdGgJHtpbnBdHsIGdpdmVuIGlkIGludmFsaWRgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcVSXNFZGlaWnKHRydWUpOxuICAgICAgICAgICAgfVxuICAgICAgICAgIHXGgICAgICAgIC+XGgICAgICAgIDxPYkJdHRvblxuICAgICAgICAgIGJblRcGUXCJYXJuaWnXCJcbiAgICAgICAgICBpYuPXtcmFzaHcbiAgICAgICAgICBvbkNsaWNrPXthcluYyAoKSAPiBXGgICAgICAgICAgICBpZiAoYXdhaXQgcGFjaMuZGVsZXRlKGljbJbmZvLmlkKSkgexuICAgICAgICAgICAgICBuZXcgTmaWNlKGAkeljbJbmZvLmlkfSBpcyByZWvdmVkIGZybgdGhlIHBhYtgKTtcbiAgICAgICAgICAgIHcbiAgICAgICAgICBfVxuICAgICAgICAvPlxuICAgICAgPCkaXY+XGgICAgPCkaXY+XGgICkXGOxuXGleHBvcnQgZGVmYXVsdCBJYuUHJldmlldztcblxuYucQgTJCdXRbgPSAoXGgIHBybBzOiBIVEMQXRcmlidXRlczxIVEMQnVdGuRWxlbWVudDgJiBXGgICAgYnRuVHlwZTIFwidFybmluZwiIHwgXCJjdGFcIjtcbiAgICBpbnZhbGlkPzogYmvbGVhbjtcbiAgICBpYuOiBzdHJpbmcXGgIHsXGpID+IHtcbiAgYucQgeyBidGUeXBlLCBpYuLCAuLiyZXNIHgPSBwcmwcztcbiAgcmVdXJuIChcbiAgICAYnVdGuXGgICAgICBLiucmVzdHcbiAgICAgIGNsYXNzTmFtZTYxzKHsgWwibWkLVwiICsgYnRuVHlwZVICEhYnRuVHlwZSBKXcbiAgICAgIGRhbmdlcmcxUVSWuZXJIVEMPXtIFfaHRtbDogaWNvbiBfVxuICAgIC+XGgICkXGOxuXGjbzdCBUZXhIDgKFxuICBwcmwczogUGljazxcbiAgICBUZXhYXJlYUhUTUxBdHRyaWJdGVzPEhUTUxUZXhQXJlYUVsZWlbnQ+LFxuICAgIFwibDaGFuZVcIiBIFwidmFsdWVcIiBIFwiYxhcNOYWlXCJcbiAgPixcbikgPTgPHRleHRhcmVhIHNwZWxsQhlYsXCJmYWxzZVwiIHJvdMezJIHsuLiwcmwcgLzXGiXSwKICAibWFwcGluZMiOiAiOzsOzswMHRJQUFBLGCQVdBLEdBQUsUUFBVSxPQhqQixnQEwQkEsWUFBbIsRUFBTSxDQUNQixHQUFJLEBQUsSUFBUyxTQUNsQixLQUFNLElBQUksVFBVSxtQFBcUMsSFBSyxVQUFVLENBQUksQFBQyxDQUVqRixDQUdBLFlBQThCLEVBQUsRUFBZIsQFNbEQsTFMSSxHQUFNLEdBQsRUFBbIsRUFDcEIsRUFBWSxHQUNaLEVBQUsRUFDUCxFQUNLLEVBQUksRUFBRyxHQUFLLEVBQUssTFBUSxFQUFFLEVBQUcsQFDckMsRFBSSxFQUFJLEVBQUssTFDWCxFQUFPLEVBQUssVFBVyxDQUFDLEBQJCLElBQUksSUFBUyxHQUNoQixNQUVBLEVBQUsRFDVCxHQUFJLElBQVMsRFBVSxDQUNyQixHQUFJLEBQWMsRUFBSSxHQUFLLElBQVMsRFFNIsRFBSSxJQUFjLEVBQUksRFBSyxJQUFTLEVBQUcsQFDNUMsRFBSSxFQUFJLEBQVMsRFBSyxJQUFzQixHQUFLLEVBQUksVFBVyxFQUFJLEBQVMsQFBQyxJQUFNLElBQVksRUFBSSxXQUFXLEVBQUksTFBUyxDQUFDLElBQUsSUFDakksRFBSSxFQUFJLEBQVMsRUFBRyxDQUNsQixHQUFJLEdBQWlCLEVBQUksWUFBWSxHQUFHLEVBQhDLEdBQUksSUFBbUIsRUFBSSxPQUFTLEVBQUcsQFDckMsQUFBSSxJQUFtQixHQUNyQixHQUFNLEdBQsRUFBbIsRFFcEIsRFBTSxFQUFJLEBQUsRUFBRyxDQUFjLEVBQpDLEVBQWCLEVBQUksTFBUyxFQUFJLEVBQUksWUFBWSxHQUFHLEdBRTFELEVBQVksRUFDWixFQUFPLEVBQAsUUFDRixDQUNGLFNBQVcsRUFBSSxTQUFXLEdBQUssRUFBSSxTQUFXLEVBQUcsQFDLMsRUFBTSxHQUNOLEVBQWCLEVBQBCLEVBQVksRUFDWixFQUFPLEVBQAsUUFDRixFQUVGLEFBQUksRFDRixDQUFJLEVBQUksTFBUyxFQUNmLEdBQUsTUFFUCxFQUFNLEtBQIsRUFBbIsRUFFeEIsSFDRSxBQUFJLEdBQUksTFBUyxFQUNmLEdBQUsSUFBTSxFQUFLLEBQUsRUFBWSxFQUFHLENBQUMsRUFFeEMsRUFBTSxFQUFLLEBQUsRUFBWSxFQUFHLENBQUMsRUFDbkMsRUFBbIsRUFBSSxFQUFZLEVBRXRDLEVBQVksRUFDWixFQUFPLENBQQsSFBTyxBQUFJLEtBQVMsSUFBWSxJQUFTLEdBQZDLEVBQUUsRUFFRixFQUFPLEVBRVgsQFDQSxNQUFPLEVBQQsQFFQSxZQUFpQixFQUFLLEVBQVksQFDaEMsRFBSSxHQUFNLEVBQVcsSFBTyxFQUFXLEtBQDLEVBQUsRUFBVyxNQUFTLEdBQVcsTUFBUSxJQUFPLEdBQVcsSFBTyxJQUMzRSxNQUFLLEdBRQsSUFBUSxFQUFXLEtBQQsRUFBTSxFQUVSLEVBQUsRUFBTSxFQUxWLENBTVgsQFFQSxHQUFJLElBQVEsQFFVixRQUFTLFVBQWCLENBSzFCLEBSkksRFBZSxHQUNmLEVBQWCLEdBQCLEVBRUssRUFBSSxVQUFVLEBQVMsRUFBRyxHQUFLLElBQUsQFBQyxFQUFrQixJQUFLLENBQBFLEdBQUksRFZSixBQVhBLEFBQUksRFBSyxFQUNQLEVBQUsVUFBVSxHQUViLEtBQVEsUUFDVixHQUFNLFFBQVEsSUFBSSxHQUNwQixFQUFPLEdBRQsRFBVyxDQUFJLEVBRgsRUFBSyxTQUFXLEdBSXBCLEdBQWUsRUFBTyxJQUFNLEVBQzVCLEVBQWCLEVBQUssVFBVyxDQUFDLElBQUsRFDNUMsQFRQSxNQUZBLEdBQWUsRFBcUIsRUFBYyxDQUFDLENBQWdCLEVBRSELEVBQUsRUFBYSxPQUFTLEVBQpCLElBQUsRUFFTixJQUNBLEVBQWEsTFBUyxFQUNQixFQUVBLEdBRVgsRUFFQSxVQUFXLFNBQWCLEVBQUsQFHbEMsRFGQSxHQUFXLENBQUksRUFFWCxFQUFLLFNBQVcsRUFBRyxNQUFPLElBRTlCLEdBQUksRFBYSxFQUFLLFdBQVcsQFBQyxJQUFNLEdBQBDLEVBQWCLEVBQUssVFBVyxFQUFLLEBQVMsQFBQyxJQUFNLEdBUTdELEBTEEsRFBTyxHQUFxQixFQUFNLENBQUMsQFBVSxFQUVQyxFQUFLLFNBQVcsRFBSyxDQUFDLEdBQVksRFBTyxLQUNQyxFQUFLLEBQVMsRFBSyxHQUFtQixJQUFRLEtBRTlDLEVBQWCLElBQUsRUFDdEIsQFDVCxFQUVBLFdBQVksUFBbIsRUFBTSxDQUNwQyxVQUFXLENBQUksRUFDUixFQUFLLEBQVMsRFBSyxFQUFLLFdBQVcsQFBQyxJQUFNLEVBQELEVBRUEsSFBTSxVQUFnQixDQUNwQixHQUFJLFVBQVUsUFBVyxFQUNQixNQUFPLElBRVQsTFESSxHQUNLLEVBQUksRUFBRyxFQUFJLFVBQVUsTFBUSxFQUFFLEVBQUcsQFDekMsRFBSSxHQUFNLFVBQVUsRFDcEIsRFBVyxDQUFHLEVBQYsRUFBSSxPQUFTLEdBQYsQFBSSxJQUFXLEBQIsRUFBUyxFQUVULEdBQVUsSUFBTSxFQUVQixDQUNBLEBQUksSFBVyxPQUNOLElBQYsRFBTSxVQUFVLENBQUsQFDLIsRUFFQSxTQUFVLFNBQWtCLEVBQUsRUFBSSxDQVNwQyxHQVJBLEdBQVcsQFBSSxFQUNmLEdBQVcsQFBRSxFQUVULElBQVMsRFFYixHQUFPLEdBQUsUUFBUSxDQUFJLEVBQpCLEVBQUssRFBTSxRQUFRLENBQUUsRUFFakIsSUFBUyxHQUFJLEBQUsRFJeEIsTFESSxHQUFZLEVBQQsRUFBWSxFQUFLLFFBQxCLEVBQUssVFBVyxDQUFTLElBQUsRFETCxFQUFFLEVBQhDLENBUUYsTFMSSxHQUFVLEVBQUssTFDZixFQUFVLEVBQVUsRUFHcEIsRUFBVSxFQUNQLEVBQVUsRUFBRyxRQUNkLEVBQUcsVFBVyxDQUFPLElBQUsRFETCxFQUFFLEVBQzVCLENBVUYsTFQSSxHQUFRLEVBQUcsTFDWCxFQUFRLEVBQVEsRUFHaEIsRUFBUyxFQUFVLEVBQVEsRUFBVSxFQUNyQyxFQUFnQixHQUNoQixFQUFJLEVBQQsRFBSyxFQUFRLEVBQUUsRUFBRyxDQUNQixHQUFJLElBQUsRUFBUSxDQUNoQixHQUFJLEVBQVEsRUFBUSxDQUNsQixHQUFJLEVBQUcsVFBVyxFQUFVLENBQUMsSUFBTSxHQUdqQyxNQUFPLEdBQUcsTUFBTSxFQUFVLEVBQUksQFBQyxFQUMxQixHQUFJLElBQUsRUFHZixNQUFPLEdBQUcsTUFBTSxFQUFVLENBQUMsQFFLIsSFBTyxBQUFJLEdBQVUsRFDbkIsQFBSSxFQUFLLFdBQVcsRUFBWSxDQUFDLElBQUsRFHckMsRUFBZIsRUFDUCxJQUFNLEdBRYsRFBZIsSUFHcEIsSFDRixDQUNBLEdBQUksRFBVyxFQUFLLFdBQVcsRUFBWSxDQUFDLEVBQhDLEVBQVMsRUFBRyxXQUFXLEVBQVUsQFBQyxFQUNQyxHQUFJLElBQWEsRUFDZixNQUNHLEFBQUksSUFBYSxJQUNwQixHQUFnQixFQUNwQixDQUVBLEdBQUksRFBTSxHQUdWLElBQUssRUFBSSxFQUFZLEVBQWdCLEVBQUcsRFBSyxFQUFTLEVBQUUsRUFDdEQsQUFBSSxLQUFNLEdBQVcsRUFBSyxXQUFXLENBQUMsSUFBTSxLQUMxQyxDQUFJLEVBQUksUFBVyxFQUNqQixHQUFPLEtBRVAsRFBTyxPQUiLEBQUksRFBSSxPQUFTLEVBQIsRUFBTSxFQUFHLEBQUsRUFBVSxDQUFhLEVBRTdDLElBQVcsRUFDUCxFQUFHLFdBQVcsQFBTyxJQUFNLElBQzdCLEVBQUUsRUFDRyxFQUFHLEBQUsQFBTyxFQUUzQixFQUVBLFVBQVcsUFBbUIsRUFBTSxDQUNsQyxNQUFPLEVBQQsRUFFQSxRQUFTLFNBQWlCLEVBQUsQFFOUIsRFEQSxHQUFXLENBQUksRUFDWCxFQUFLLFNBQVcsRUFBRyxNQUFPLElBSzlCLEBSkksRFBTyxFQUFLLFdBQVcsQFBQyxFQUNQixFQUFVLElBQVMsRFDbkIsRUFBTSxHQUNOLEVBQWUsRFDVixFQUFJLEVBQUssTFBUyxFQUFHLEdBQUssRUFBRyxFQUFFLEVBRXRDLEdBREEsRUFBTyxFQUFLLFdBQVcsQFBQyxFQUNwQixJQUFTLElBQQsRFBSSxDQUFDLEVBQWMsQFDakIsRUFBTSxFQUNOLEtBQYsTUFHRixHQUFlLEdBSWCLEBQUksSFBUSxHQUFXLEVBQVUsSUFBTSxJQUNuQyxHQUFXLElBQVEsRUFBVSxLQUMxQixFQUFLLEBQUsRUFBRyxDQUFHLENBQzFCLEVBRUEsUFBVSxTQUFrQixFQUFNLEVBQUssQFDckMsRFBSSxJQUFRLFFBQWEsTUFBTyxJQUFRLFNBQVUsSFBTSxJQUFJLFdBQVUsaUNBQWlDLEVBQZHLEdBQVcsQFBSSxFQUVmLEdBQUksRFBUSxFQUNSLEVBQUsRFDTixFQUFlLEdBQYsRUFFSixHQUFJLElBQVEsUUFBYSxFQUFJLEBQVMsRFBSyxFQUFJLFFBQVUsRUFBSyxPQUFRLENBQBFLEdBQUksRUFBSSxTQUFXLEVBQUssUUFBVSxJQUFRLEVBQUsTUFBTyxHQUNRCxHQUFJLEdBQVMsRUFBSSxPQUFTLEVBQRCLEVBQWCLEdBQZCLElBQUssRUFBSSxFQUFLLEBQVMsRUFBRyxHQUFLLEVBQUcsRUFBRSxFQUFHLENBQJDLEdBQUksRFBTyxFQUFLLFdBQVcsQFBQyxFQUMQixHQUFJLElBQVMsSUFHVCxHQUFJLENBQUMsRUFBYyxDQUNqQixFQUFRLEVBQUksRUFDWixLQUNGLEBRUYsQUFBSSxLQUFxQixJQUdQixHQUFlLEdBQYsRUFBbUIsRUFBSSxHQUVyQixHQUFVLEdBRVosQFBSSxJQUFTLEVBQUksVFBVyxDQUFNLEVBQzVCLEVBQUUsSUFBVyxJQUdmLEdBQUsRFLUixHQUFTLEdBQQsRUFBTSxHQUlkLENBRUEsTUFBSSxLQUFVLEVBQUssRUFBTSxFQUEwQixJQUFRLElBQUksRFBTSxFQUFLLFFBQFLEVBQUssTUFBTSxFQUFPLENBQUcsQFDOUIsSFBTyxDQUNMLElBQUssRUFBSSxFQUFLLEBQVMsRUFBRyxHQUFLLEVBQUcsRUFBRSxFQUNsQyxHQUFJLEVBQUssVFBVyxDQUFDLElBQUsSUFHdkIsRFBSSxDQUFDLEVBQWMsQFDakIsRUFBUSxFQUFJLEVBQosSFDRixNQUNLLEFBQUksSFBUSxJQUduQixHQUFlLEdBQYsRUFBTSxFQUFJLEdBSWQsTUFBSSxLQUFRLEdBQVcsRFDaEIsRUFBSyxNQUFNLEVBQUsQFBRyxDQUMQixDQUNGLEVBRUEsUUFBUyxTQUFpQixFQUFNLENBQzlCLEdBQVcsQFBSSxFQVFmLEBUEksRFBVyxHQUNYLEVBQVksRUFDWixFQUFNLEdBQsRUFBZSxHQUdmLEVBQWMsRUFDVCxFQUFJLEVBQUssTFBUyxFQUFHLEdBQUssRUFBRyxFQUFFLEVBQUcsQFDekMsRFBSSxHQUFPLEVBQUssVFBVyxDQUFDLEVBQzVCLEdBQUksSUFBUyxHQUFVLENBRCLEdBQUksQFBQyxFQUFjLENBQpCLEVBQVksRUFBSSxFQUNoQixLQUNGLENBQEsUUFDRixDQUNGLEFBQUksSUFBUSxJQUdWLEdBQWUsRFDZixFQUFNLEVBQUksRFFWixBQUFJLElBQVMsRFFVCxBQUFJLElBQWEsRFDZixFQUFXLEVBQosSUFBZIsRFDdkIsRFBYyxHQUNULElBQWEsSUFHdEIsRFBYyxHQUVsQixDQUVBLEBQUksSFBYSxJQUFNLElBQVEsSUFFMIsSUFBZIsRFFaEIsSUFBZIsRFBSyxJQUFhLEVBQUsRFBSyxJQUFhLEVBQVksRUFDakUsRFFRixFQUFLLEBQUsRUFBVSxDQUFHLENBQpDLEVBRUEsTFBUSxTQUFnQixFQUFZLENBQxDLEdBQUksSUFBZSxNQUFRLEBQUsSUFBZSxTQUMvQyxLQUFNLElBQUksVFBVSxtRUFBcUUsTUFBTyxFQUFVLEVBRTVHLEBQUsSUFBUSxJQUFLLENBQVUsQFDaEMsRUFFQSxNQUFPLFNBQWUsRUFBTSxDQUMxQixHQUFXLENBQUksRUFFZixHQUFJLEdBQUsQFBRSxLQUFNLEdBQUksSUFBSyxHQUFJLEtBQUsRFBSSxJQUFLLEdBQUksSFBTSxFQUFHLEVBQzNELEdBQUksRUFBSyxTQUFXLEVBQUcsTUFBTyxHQUMQixHQUFJLEdBQUsRUFBSyxXQUFXLENBQUMsRUFDeEIsRUFBYSxJQUFTLEdBQRCLEVBQosQUFBSSxFQUNGLEdBQUksSFBTyxJQUNYLEVBQVEsRFFUixFQUFRLEVBYVYsTFYSSxHQUFXLEdBQgsRUFBWSxFQUNaLEVBQUsRFDTixFQUFlLEdBQYsRUFBSSxFQUFLLEBQVMsRUFJbEIsRUFBYyxFQUdYLEdBQUssRUFBTyxFQUFFLEVBQUcsQFFdEIsRFEQSxFQUFPLEVBQUssVFBVyxDQUFDLEVBQBCLElBQVMsRFBVSxDQUduQixHQUFJLENBQUMsRUFBYyxDQUNqQixFQUFZLEVBQUksRUFDaEIsSFDRixDQUNBLFFBQYsQFDRixBQUFJLElBQVEsSUFHVixHQUFlLEdBQYsRUFBTSxFQUFJLEdBRVosQUFBSSxJQUFTLEdBRVQsQUFBSSxJQUFhLEdBQUksRUFBVyxFQUFXLElBQWdCLEdBQUcsRFBYyxHQUNuRSxJQUFhLElBRhCLEdBQWMsRFFbEIsQFFQSxNQUFJLEtBQWEsSUFBTSxJQUFRLElBRSCLElBQWdCLEdBRWhCLElBQWdCLEdBQUssSUFBYSxFQUFNLEdBQUssSUFBYSxFQUFZLEVBQhFLElBQVEsSUFDVixDQUFJLElBQWMsRFBSyxFQUFZLEVBQUksSFBTyxFQUFJLEtBQUsRUFBSyxNQUFNLEVBQUcsQFBRyxFQUFPLEVBQUksSFBTyxFQUFJLEtBQUsRUFBSyxNQUFNLEVBQVcsQFBRyxHQUdsSSxDQUFJLElBQWMsRFBSyxFQUNyQixHQUFJLEtBQUsRUFBSyxNQUFNLEVBQUcsQFBUSxFQUNqQyxFQUFJLEtBQUsRUFBSyxNQUFNLEVBQUcsQFBRyxHQUUQixHQUFJLEtBQUsRUFBSyxNQUFNLEVBQVcsQFBUSxFQUNQyxFQUFJLEtBQUsRUFBSyxNQUFNLEVBQVcsQFBRyxHQUVQyxFQUFJLElBQUsRUFBSyxNQUFNLEVBQVUsQFBRyxHQUdwQyxBQUFJLEVBQVksRUFBRyxFQUFJLElBQUsRUFBSyxNQUFNLEVBQUcsRUFBWSxDQUFDLEVBQVcsRFBWSxHQUFJLElBQUsSFFbEYsQFDVCxFQUVBLElBQUssSUFDTCxVQUFXLElBQgsTUFBTyxLQUNQLEBQUsSUFDVCxFQUVBLEdBQUsTUFBUSxHQUVkLEdBQUsUUFBVSxLQhoQmpCLDJCQWNBLEdBQUksSUFBSyxLQUNMLEdBQVUsSFBZIsUUFPMUIsRFBcIsMEJBQRCLEdBQWCLFdBTZCLEdBQVEsUUFBVSxHQUNsQixHQUFRLFNBQVcsQFBRSxPQUFRLEVBQVEsRUFDckMsRFBUSxZQUFjLEdBQRCLEdBQVEsVUFBWSxHQUNwQixHQUFRLFdBQWEsTFBTyxPQUFPLElBQUksRUFDdkMsRFBUSxPQUFTLEdBQpCLEdBQVEsTUFBUSxPQUFPLEBQUsSUFBSSxFQUdsQyxHQUFhLEdBQVEsVFBWSxHQUFRLEtBQUssRUFTOUMsWUFBaIsRUFBTSxDQUNQixHQUFJLENBQUMsRFBUSxNQUFPLElBQVMsUFDMIsTUFBTyxHQUlULEdBQUksRFBUSxHQUFvQixLQUFLLENBQUksRUFDckMsRUFBTyxHQUFTLEdBQUcsRUFBTSxHQUFHLFlBQVksRFFNUMsTUFBSSxJQUFRLEVBQUssUUFDUixFQUFLLFFBSVYsRFBUyxHQUFpQixLQUFLLEVBQUsRUFBRSxFQUNsQyxRQUdGLEVBQQsQFTQSxZQUFzQixFQUFLLENBRXpCLEdBQUksQFBQyxHQUFPLEBQUsSUFBUSxTQUNQixNQUFPLEdBRQsRFBSSxHQUFPLEVBQUksUUFBUSxHQUFHLElBQUsRFDNUIsRFBUSxPQUFPLENBQUcsRUFDbEIsRUFFSixHQUFJLENBQUMsRUFDSCxNQUFPLEdBSVQsRFBSSxFQUFLLFFBQVEsUFBUyxJQUFNLEdBQUksQFDbEMsRFBSSxHQUFVLEdBQVEsUUFBUSxDQUFJLEVBQxDLEFBQUksRFBUyxJQUFRLGFBQWUsRUFBUSxZQUFZLEVBQzFELENBRUEsTUFBTyxFQUNULENBUEsWUFBbIsRUFBTSxDQUNQixHQUFJLENBQUMsRFBUSxNQUFPLElBQVMsUFDMIsTUFBTyxHQUlULEdBQUksRFBUSxHQUFvQixLQUFLLENBQUksRUFHckMsRUFBTyxHQUFTLEdBQVEsVFBVyxFQUFNLEdBQUcsWUFBWSxHQUURCxNQUFJLENBQUMsRFBUSxDQUFDLEVBQUssTFDVixHQUdGLEVBQUssRUFDZCxDQVNBLFlBQWlCLEVBQUsQFDckIsRFBSSxDQUFDLEdBQVEsTUFBTyxJQUFTLFNBQzNCLEBQUsRFJVCxHQUFJLEdBQVksRFBUSxLQUFPLENBQUksRUFDaEMsWUFBWSxFQUNaLEBQUsQFBQyxFQUVYLEBQUssSUFJRSxHQUFRLEBQUsSUFBYyxFQUNyQyxDQUBLFlBQXVCLEVBQVksRUFBTyxDQUVQyxHQUFJLEdBQWEsQFBQyxRQUFTLFNBQVUsTFBVyxNQUFNLEVBRXRELEBQUsSFBSyxFQUFFLEVBQUUsUUFBUSxTQUEwQixFQUFNLENBQRELEdBQUksRFBTyxHQUFHLEdBQYsRUFBTyxFQUFLLFdBRWhCLEdBQUksRFBQyxHQUFRLENBQUMsRUFBSyxRQUtuQixHQUFXLEdBQVEsRUFHbkIsTFBUyxHQUFJLEVBQUcsRUFBSSxFQUFLLEBQVEsSUFBSyxDQUNwQyxHQUFJLEdBQVksRUFBSyxHQUVyQixHQUFJLEVBQUsRFBWSxDQUNwQixHQUFJLEdBQUsRUFBVyxRQUFRLEdBQUcsRUFBTSxJQUFZLEBQUsRUFDckQsRUFBSyxFQUFXLFFBQVEsRUFBSyxNQUFNLEVBRXZDLEdBQUksRUFBTSxLQUFlLDRCQUNQixHQUFPLEdBQUsSUFBUyxHQUFNLEVBQUsRFBVyxPQUFPLEVBQUcsRUFBRSxJQUFNLGdCQUVqRSxRQUVKLENBREsRUFBTSxHQUFhLENBQJCLEVBQYsQFBQyxDQUNILElDMxBLGCQUNBLEdBQUksSUFBYSxNQUFPLFNBQVUsVUFBWSxRQUFVLEBQUsUFBVyxRQUFVLEBRXBGLEdBQUsUUFBVSxLQhqQixzQkFBSSxJQUFhLEtBRIsRFBVyxNQUFPLEBQVEsVUFBWSxNQUFRLEtBQUssUFBVyxRQUFVLEtBRhFLEdBQUsSUFBYyxJQUFZLFNBQVMsYUFBYSxFQUFFLEVBRTdELEdBQUsUUFBVSxLQJqQixzQkFBSSxJQUFPLEtBRAsRFBUyxHQUFLLEBRWxCLEdBQUsUUFBVSxLQxqQixtQkFRQSxZQUFtQixFQUFRLEVBQUsQFDaEMsRFBSSxHQUFRLEdBQIsRUFBUyxFQUFPLEBRBCLElBREEsRFBVSxHQUFRLEBQUsQFBTSxHQUNQixFQUFFLEVBQVEsRFDZixFQUFNLEdBQVMsRUFBTyxHQUVQixNQUFPLEVBQQsQFFQSxHQUFPLFFBQVUsSNuQmpCLHNCQUFJLElBQVMsSFHVCxHQUFjLEBQUsVUFHckIsRFBaUIsRFBWSxlQUQixHQUFQixHQUFZLFNBRDLEdBQWlCLEdBQVMsRFBTyxZQUFjLEBUELFlBQWCLEVBQUsQFDeEIsRFBSSxHQUFRLEdBQWUsSFBSyxFQUFPLEVBQWMsRUFDakQsRUFBTSxFQUFNLElBRWhCLEdBQUksQFDRixFQUFNLElBQWtCLEBQhCLEdBQUksRFBVyxFQUNqQixNQUFFLENBQVcsQFFYixHQUFJLEdBQVMsRFBcUIsSFBSyxDQUFLLEVBQzVDLEBQUksSUFDRixDQUFJLEVBQYsRUFBTSxJQUFrQixFQUVQixNQUFPLEdBQUsSFHVixDQUNULENBRUEsRFBTyxRQUFVLEtDNNqQixtQkFDQSxHQUFJLElBQWMsTFBTyxVQUyQixHQUFQixHQUFZLFNBUZDLFlBQXdCLEVBQUsQFDNIsTUFBTyxJQUFxQixLQUFLLENBQUssQFDeEMsQFFQSxHQUFPLFFBQVUsSNyQmpCLHNCQUFJLElBQVMsSFDVCxHQUFZLEtBQosRFBaUIsSFHakIsRFBVSxnQkFDVixHQUFlLHFCQUdmLEdBQWlCLEdBQVMsRFBTyxZQUFjLEBUELFlBQWCLEVBQUsQFDekIsTUFBSSxJQUFTLEtBQosSUFBVSxPQUFZLEdBQWUsRFFdEMsSUFBaIsSFBaIsUUFBTyxDQUFLLEVBQBELEdBQVUsQFBSyxFQUNmLEdBQWUsQFBSyxDQUMxQixDQUVBLEdBQUsUUFBVSxLQzNCakIsbUJBeUJBLFlBQWtCLEVBQUsQFDdkIsRFBSSxHQUFPLEBQUsRFDbEIsTUFBTyxJQUFTLEBQVMsSUFBUSxVQUFZLEdBQVEsVFDdkQsQFFQSxHQUFPLFFBQVUsSMQmpCLHNCQUFJLElBQWEsSFDYixHQUFXLEtBRgsRFBVyxQkFDWCxHQUFVLGCQUNWLEdBQVMsNkJBQQsRFBVyxpQkFtQmYsWUFBbIsRUFBTyxDQUNQixHQUFJLENBQUMsRFBUyxDQUFLLEVBQpCLEBQUsRFJVCxHQUFJLEdBQUsRFBVyxDQUFLLEVBQzFCLEBQUsSUFBTyxJQUFXLEdBQUsSUFBVSxHQUFPLElBQVksRFBTyxFQUNRSxDQUVBLEdBQUsUUFBVSxLQBDakIscJBQUksSUFBTyxLQUdQLEdBQWEsRFBSyxzQkFFdEIsRFBTyxRQUFVLEtDTGpCLHNCQUFJLElBQWEsSFHYixHQUFjLFVBQVcsQFDMIsRFBSSxHQUFNLFNBQVMsSFBSyxJQUFjLEdBQVcsTUFBUSxHQUFXLEtBQUssVUFBWSxFQUFFLEVBQZGLEBQUsRFBTyxpQkFBbUIsRUFBTyxFQUMxQyxFQUFFLEVBUYsWUFBaIsRUFBTSxDQUNQixNQUFPLENBQUMsQFBQyxJQUFlLEtBQWMsRUFDeEMsQFFQSxHQUFPLFFBQVUsSNuQmpCLGCQUNBLEdBQUksSUFBWSxTQUFTLFVBRJCLEdBQWUsRFBVSxTQVMQixZQUFrQixFQUFNLENBQRCLEdBQUksRFBUSxLQUFNLENBQhCLEdBQUksQFDRixNQUFPLElBQWEsSFBSyxDQUFJLENBQyCLEBQUUsQFBVyxDQUNiLEdBQUksQFDRixNQUFRLEdBQUsRUFDakIsTUFBRSxDQUFXLENBQYsQFDQSxNQUFPLEVBQQsQFFQSxHQUFPLFFBQVUsSNQmpCLHNCQUFJLElBQWEsSFDYixHQUFXLEtBQgsRFBVyxLQUNYLEdBQVcsSFNWCxHQUFlLHNCQUdmLEdBQWUsOEJBRYsRFBWSxTQUFTLFVBQJCLEdBQWMsTFBTyxVQUdyQixHQUFlLEdBQVUsUFHekIsRFBaUIsRFBWSxlQUcQixHQUFhLEBQUsSUFDdEIsRFBYSxLQUFLLEVBQWMsRUFBRSxRQUFRLEdBQWMsTUFBTSxFQUMRCxRQUFRLHlEQUEwRCxPQUFPLEVBQUksRFDaEYsRUFVQSxZQUFzQixFQUFPLENBQzNCLEdBQUksQFBQyxHQUFTLENBQUssRFBSyxHQUFTLENBQUssRUFDcEMsTUFBTyxHQUVULEdBQUksRFBVSxHQUFXLENBQUssRUFBSSxHQUFhLEdBQyDLEBQUsRFBUSxLQUFLLEdBQVMsQFBSyxDQUFDLENBQJDLENBRUEsRFBTyxRQUFVLEtDOUNqQixtQkFRQSxZQUFrQixFQUFRLEVBQUssQFDNIsTUFBbMsSFBTyxFQUMQyxDQUVBLEdBQUsUUFBVSxLQpqQixzQkFBSSxJQUFlLEtBQYsRFBVyxLQVVmLFlBQWCLEVBQVEsRUFBSyxDQUMQixHQUFJLEdBQVEsRFBUyxFQUFRLENBQUcsRUFDaEMsTUFBTyxJQUFhLENBQUssRUFBSSxFQUFRLEBQZDLENBRUEsRFBTyxRQUFVLEtDaEJqQixzQkFBSSxJQUFZLEtBQosRFBTyxLQUdQLEdBQVcsRFBVSxHQUFNLFVBQVUsRUFFekMsRFBTyxRQUFVLEtDTmpCLHNCQUFJLElBQVksSFDWixHQUFPLEtBRAsRFBTSxHQUFVLEdBQUsSFBSyxFQUUvQixHQUFPLFFBQVUsSNOakIscJBQUksSUFBWSxLQUNaLEdBQUsSFHUCxHQUFVLEdBQVUsRFBTSxTQUFTLEVBRXZDLEdBQUsUUFBVSxLQqQixzQkFBSSxJQUFZLEtBQosRFBTyxLQUdQLEdBQUsRFBVSxHQUFNLEtBQUssRUFFLIsRFBTyxRQUFVLEtDTmpCLHNCQUFJLElBQVksSFDWixHQUFPLEtBRAsRFBVSxHQUFVLEdBQUsUFBUyxFQUVQyxHQUFPLFFBQVUsSNOakIscJBQUksSUFBVyxLQUNYLEdBQUsSFDTixHQUFVLEtBQYsRFBTSxLQUNOLEdBQVUsSFDVixHQUFhLEtBQIsRFBVyxLQUdYLEdBQVMsZUFDVCxHQUFZLGtCQUNaLEdBQWEsbUJBQIsRFBUyxlQUNULEdBQWEsbUJBRWIsRFBYyxvQkFHZCxHQUFxQixHQUFTLEVBQVEsRUFDdEMsRFBZIsRFBUyxFQUFHLEVBQzVCLEdBQWCLEdBQVMsRUFBTyxFQUNwQyxHQUFnQixHQUFTLEVBQUcsRUFDNUIsRFBbIsRFBUyxFQUFPLEVBUBDLEdBQVMsRFHYixBQUFLLEtBQVksRFBTyxHQUFJLElBQVMsRFBSSxhQUFZLENBQUMsQFBQyxDQUFDLEdBQUssSUFDeEQsSUFBTyxHQUFPLEdBQUksRFBRyxHQUFLLElBQzFCLElBQVcsRFBTyxHQUFRLFFBQVEsQFBQyxHQUFLLElBQhDLElBQUsRFBTyxHQUFJLEdBQUcsRFBSyxJQUMxQixJQUFXLEdBQUsRFBSSxHQUFPLEdBQUssSFDckMsSUFBUyxTQUFTLEVBQUsQFDdkIsRFBSSxHQUFTLEdBQVcsQFBSyxFQUNQixFQUFPLEdBQVUsRFBWSxFQUFNLFlBQWMsTFDakQsRUFBYSxFQUFPLEdBQVMsQFBSSxFQUFJLEdBRXpDLEdBQUksRUFDRixPQUFRLEBQQsSUFBbIsTUFBTyxRQUMzQixJQUFlLEBQUsUUFDdEIsSUFBbUIsTUFBTyxRQUMxQixJQUFlLEBQUsUUFDdEIsSUFBbUIsTUFBTyxJQUduQyxNQUFPLEVBQQsRFHRixHQUFPLFFBQVUsSNRGpCLGCQUNBLEdBQUksSUFBbUIsaUJBNEJQixZQUFrQixFQUFPLENBQZCLEBQUsTFBTyxJQUFTLFVBQJCLEVBQVEsSUFBTSxFQUFRLEdBQUssRFBSyxHQUFTLEVBQzdDLENBRUEsRFBTyxRQUFVLEtDbENqQixzQkFBSSxJQUFhLEtBQIsRFBVyxLQTJCZixZQUFxQixFQUFPLENBQzFCLEBQUsSUFBUyxNQUFRLEdBQVMsRUFBTSxNQUFNLEdBQUssQFBQyxHQUFXLENBQUssQFDckUsQFFQSxHQUFPLFFBQVUsSNoQpCLGCQXVCQSxHQUFJLElBQVUsTUFBTSxRQUVwQixHQUFPLFFBQVUsSNQmpCLGCQXdCQSxZQUFzQixFQUFPLENBQzNCLEBQUsSUFBUyxNQUFRLEBQUsSUFBUyxRQUMxQyxDQUVBLEdBQUsUUFBVSxLQzVCakIscJBQUksSUFBYSxLQUNiLEdBQVUsSFDVixHQUFlLEtBRYsRFBWSxrQkFtQmhCLFlBQWtCLEVBQUsQFDdkIsTUFBTyxPQUFPLElBQVMsVUFDcEIsQFBQyxHQUFRLENBQUssRFBSyxHQUFhLENBQUssRFBSyxHQUFXLENBQUssRFBSyxFQUNwRSxDQUVBLEdBQUsUUFBVSxLQzdCakIsbUJBTEsWUFBeUIsRUFBVSxDQUlqQyxPQUhJLEdBQEsRUFBUyxDQUFDLEVBRVAsQFBRSxHQUFPLEVBQVMsSFBSyxHQUFHLEBQyCLEVBQUsSFBSyxFQUFLLEtBQUssRUFFeEIsTUFBTyxFQUNULENBRUEsRFBTyxRQUFVLEtDakJqQixtQkFPQSxZQUFvQixFQUFLLENBQZCLEdBQUksRFBUSxHQUNSLEVBQVMsTUFBTSxFQUFJLElBQUksRUFFMIsUFBSSxRQUFRLFNBQVMsRUFBTyxFQUFLLENBQyCLEVBQUsRUFBRSxHQUFTLENBQUMsRUFBSyxDQUFLLENBQyCLENBQUMsRUFDTSxDQUNULENBRUEsRFBTyxRQUFVLEtDakJqQixtQkFPQSxZQUFvQixFQUFLLENBQZCLEdBQUksRFBUSxHQUNSLEVBQVMsTUFBTSxFQUFJLElBQUksRUFFMIsUFBSSxRQUFRLFNBQVMsRUFBTyxDQUMxQixFQUFPLEVBQUUsRFBUyxDQUNwQixDQUFDLEVBQsQFDVCxDQUVBLEdBQUsUUFBVSxLQpCakIsbUJBTEsWUFBcIsRUFBUSxDQUMQixNQUFPLEdBQUsTUFBTSxFQUFFLENBQhCLENBRUEsRFBTyxRQUFVLEtDWGpCLGCQUNBLEdBQUksSUFBZIsaJBQhCLEdBQWCLGtCQUNwQixHQUFQixrQkFDeEIsRFBcIsaJBQRCLEdBQWUsRFBbIsRFBdIsRFDMQsRFBYSxpQkFHYixHQUFRLFVBRIsRFBZSxPQUFPLElBQUsRFBUSxHQUFpQixHQUFlLEdBQWEsRFBRyxFQVNRixZQUFvQixFQUFRLENBQzFCLEBQUsSUFBYSxLQUFLLENBQUsQFDakMsQFFQSxHQUFPLFFBQVUsSNQmpCLGCQUNBLEdBQUksSUFBZIsaJBQhCLEdBQWCLGtCQUNwQixHQUFQixrQkFDeEIsRFBcIsaJBQRCLEdBQWUsRFBbIsRFBdIsRFDMQsRFBYSxpQkFHYixHQUFXLElBQUsRFBZIsSUFDakMsRFBVSxJQUFNLEdBQWUsSUFDLIsRFBUywyQkFDVCxHQUFhLEBQVEsRFBVSxJQUFNLEdBQVMsSUFDOUMsRFBYyxLQUFPLEdBQWdCLElBQJDLEdBQWEsaNBQIsRFBYSxxQFDYixHQUFRLFVBRIsRFBVyxHQUFhLElBQhCLEdBQVcsSUFBTSxHQUFhLEtBQzlCLEdBQVksTUFBUSxHQUFRLEBQVEsQFBQyxHQUFhLEdBQVksRUFBVSxFQUFFLEtBQUssRFBRyxFQUFJLElBQUsRFBVyxHQUFXLEtBQxILEdBQVEsRFBVyxHQUFXLEdBQzlCLEdBQVcsTUFBUSxDQUFDLEdBQWMsRFBVSxJQUFLLEdBQVMsRFBWSxHQUFZLEVBQVEsRUFBRSxLQUFLLEdBQUcsRUFBSSxJQUdRyxHQUFZLEBQUsRFBUyxNQUFRLEdBQVMsSFBTyxHQUFXLEdBQUsRFBRyxFQVMRSxZQUFQixFQUFRLENBQzlCLEBQUsRFBTyxNQUFNLEVBQVMsRFBSyxDQUFDLENBQJDLENBRUEsRFBTyxRQUFVLEtDdkNqQixzQkFBSSxJQUFlLEtBQYsRFBYSxLQUNiLEdBQWlCLEtBUJCLFlBQXVCLEVBQVEsQFDNIsTUFBTyxJQUFXLENBQUsRUFDcEIsRFBZSxDQUFNLEVBQJCLEdBQWEsQFBTSxDQUNQixDQUVBLEdBQUsUUFBVSxLQpCakIsbUJBUEsWUFBaIsRUFBTyxFQUFVLENBSpDLEBSkksRFBUSxHQUNSLEVBQVMsRFBUyxLQUFPLEVBQUksRUFBTSxPQUNuQyxFQUFTLEBQUsQFBTSxFQUVsQixFQUFFLEVBQVEsRFDZixFQUFPLEdBQVMsRUFBUyxFQUFNLEdBQVEsRUFBTyxDQUFLLEVBRXJELEBQUsRUFDVCxDQUVBLEdBQUsUUFBVSxLQBCakIscJBQUksSUFBVyxLQVlmLFlBQWCLEVBQVEsRUFBTyxDQUNqQyxNQUFPLElBQVMsRUFBTyxTQUFTLEVBQUssQFDbkMsTUFBTyxHQUFPLEVBQhCLENBQUMsQFDSCxDQUVBLEdBQUsUUFBVSxLQxCakIsbUJBUEsWUFBbUIsRUFBRyxFQUFVLENBSTlCLEBSEksRFBUSxHQUNSLEVBQVMsTUFBTSxDQUFDLEVBRWIsRUFBRSxFQUFRLEdBQYsRUFBTyxHQUFTLEVBQVMsQFBSyxFQUVoQyxNQUFPLEVBQQsQFFQSxHQUFPLFFBQVUsSNuQmpCLHNCQUFJLElBQWEsSFDYixHQUFlLEtBRYsRFBVSxxQkFTZCxZQUFQixFQUFPLENBQzlCLEBQUsSUFBYSxDQUFLLEdBQUssRFBVyxDQUFLLEdBQUssRUFDckQsQFFQSxHQUFPLFFBQVUsSNqQmpCLHNCQUFJLElBQWtCLEtBQxCLEdBQWUsSFHZixHQUFjLEBQUsVUFHckIsRFBaUIsRFBWSxlQUcQixHQUFQixHQUFZLHFCQWCbkMsRFBYyxHQUFnQixVQUFXLENBQUUsTUFBTyxVQUFXLEVBQUUsQFBQyxFQUFJLEdBQWtCLFNBQVMsRUFBTyxDQUNRyxNQUFPLElBQWEsQFBSyxHQUFLLEdBQWUsSFBSyxFQUFPLFFBQVEsRFDLQsQFBQyxHQUFxQixLQUFLLEVBQUsUUFBUSxDQUMQyxFQUVBLEdBQUsUUFBVSxLQDakIsbUJBYUEsYUFBcUIsQFDbkIsTUFBTyxFQUNULENBRUEsRFBTyxRQUFVLEtDakJqQixzQkFBSSxJQUFPLEtBQAsRFBWSxLQUdaLEdBQWMsTUFBTyxLQUFXLFVBQVksSUFBVyxDQUFDLEdBQVEsVUFBWSxHQUcRSxHQUFhLElBQWUsTUFBTyxLQUFVLFVBQVksSUFBVSxDQUFDLEdBQUsVUFBWSxHQUdRixHQUFnQixJQUFjLEdBQVcsVUFBWSxHQUdyRCxHQUFTLEdBQWdCLEdBQUssTFBUyxPQUdQyxHQUFpQixHQUFTLEdBQUsUFBVyxPQWCNUMsRFBVyxJQUFrQixHQUVqQyxHQUFPLFFBQVUsSNyQpCLGCQUNBLEdBQUksSUFBbUIsaUJBRCLEdBQVcsbUJBVWYsWUFBaUIsRUFBTyxFQUFRLENBQzlCLEdBQUksRFBTyxNQUFPLEdBQxCLFNBQVMsRFBaUIsRFFbkIsQFBQyxDQUFDLEdBQsSUFBUSxVQUNOLEdBQVEsVUFBWSxHQUFTLEtBQUssQFBSyxJQUNyQyxFQUFRLElBQUsRUFBUSxHQUFLLEdBQUssRUFBUSxDQUNqRCxDQUVBLEdBQUsUUFBVSxLQhCakIscJBQUksSUFBYSxLQUNiLEdBQVcsSFDWCxHQUFlLEtBRYsRFBVSxxQkFDVixHQUFXLGlCQUNYLEdBQVUsbUJBQYsRFBVSxnQkFDVixHQUFXLGlCQUNYLEdBQVUsbJBQYsRFBUyxlQUNULEdBQVksaJBQosRFBWSxrQkFDWixHQUFZLGtCQUNaLEdBQVMsZUFDVCxHQUFZLGtCQUNaLEdBQWEsbUJBRWIsRFBaUIsdUJBQpCLEdBQWMsbJBQQsRFBYSxQkFDYixHQUFhLHdCQUNiLEdBQVUscUJBQYsRFBVyxzQkFDWCxHQUFXLHNCQUNYLEdBQVcscJBQgsRFBaIsNkJBQxCLEdBQVksdUJBQosRFBWSxQkFHWixHQUFpQixDQUFDLEVBQRCLEdBQWUsSUFBYyxHQUFlLElBQzVDLEdBQWUsSUFBVyxHQUFlLElBQpDLEdBQWUsSUFBWSxHQUFlLElBQzFDLEdBQWUsSUFBbUIsRFBZSxJQUNqRCxHQUFlLElBQWEsRFDNUIsRFBZSxJQUFXLEdBQWUsSUFDekMsRFBZSxJQUFrQixHQUFlLElBQhELEdBQWUsSUFBZSxHQUFlLElBQzdDLEdBQWUsSUFBWSxHQUFlLElBQzFDLEdBQWUsSUFBVSxHQUFlLElBQhDLEdBQWUsSUFBYSxHQUFlLElBQzNDLEdBQWUsSUFBVSxHQUFlLElBQhDLEdBQWUsSUFBYyxHQVMQixZQUEwQixFQUFPLENBQyCLEBQUsSUFBYSxDQUFLLEdBQZCLEdBQVMsRUFBTSxNQUFNLEdBQUssQFBQyxDQUFDLEdBQWUsRFBVyxDQUFLLEVBQyELENBRUEsRFBTyxRQUFVLEtDMRqQixtQkFPQSxZQUFtQixFQUFNLENBQZCLEBQUsVUFBUyxFQUFPLENBQJCLEBQUsRFBSyxDQUFLLENBQCLENBQYsQFFQSxHQUFPLFFBQVUsSNiakIscJBQUksSUFBYSxLQUdiLEdBQWMsTUFBTyxLQUFXLFVBQVksSUFBVyxDQUFDLEdBQVEsVUFBWSxHQUcRSxHQUFhLElBQWUsTUFBTyxLQUFVLFVBQVksSUFBVSxDQUFDLEdBQUsVUFBWSxHQUdRixHQUFnQixJQUFjLEdBQVcsVUFBWSxHQUdyRCxHQUFjLElBQWlCLEdBQVcsUUFHMUMsRFBWSxVQUFXLENBQpCLEdBQUksQFFRixHQUFJLEdBQVEsSUFBYyxHQUFXLFNBQVcsRFBVyxRQUFRLEBQUsRUFBRSxNQUUzRSxNQUFJLElBScsSUFBZSxHQUFZLFNBQVcsRFBWSxRQUFRLEBQUsQFDekUsTUFBRSxDQUFXLENBQYsRUFBRSxFQUVGLEdBQUsUUFBVSxLQzdCakIscJBQUksSUFBbUIsSFDbkIsRFBWSxLQUNaLEdBQVcsSFHWCxHQUFtQixJQUFZLEdBQVMsYUFtQnhDLEdBQWUsRFBbUIsRFBVSxFQUFnQixFQUFJLEdBRXBFLEdBQUsUUFBVSxLQzFCakIscJBQUksSUFBWSxLQUNaLEdBQWMsSFDZCxHQUFVLEtBQYsRFBVyxLQUNYLEdBQVUsSFDVixHQUFlLEtBRYsRFBYyxPQUFPLFVBRJCLEdBQWlCLEdBQVksZUFVakMsWUFBdUIsRUFBTyxFQUFXLENBQZDLEdBQUksRFBUSxHQUFRLENBQUssRUFDckIsRUFBUSxDQUFDLEdBQVMsRFBWSxDQUFLLEVBQDLEVBQVMsQFBQyxHQUFTLENBQUMsRFBUyxHQUFTLENBQUssRUFDMMsRUFBUyxDQUFDLEdBQVMsQFBQyxHQUFTLENBQUMsRFBVSxHQUFhLENBQUssRUFDMUQsRUFBYyxHQUFTLEdBQVMsRFBVSxFQUMxQyxFQUFTLEVBQWMsRFBVSxFQUFNLEBQVEsTUFBTSxFQUFJLENBQUMsRUFDMUQsRUFBUyxFQUFPLEBRXBCLEBQVMsSFBTyxHQUNkLEFBQUssSUFBYSxHQUFlLEtBQUssRUFBTyxDQUFHLElBQzVDLENBQUUsSUFFQyxJQUFPLFVBRUsRFBVyxJQUFPLFVBQVksRFBTyxXQUVyQyxHQUFXLElBQUsVUFBWSxHQUFPLGNBQWdCLEdBQUsZUFFNQsRFBUSxFQUFLLENBQUsSFFeEIsRUFBTyxLQUFLLENBQUcsRUFHbkIsTUFBTyxFQUNULENBRUEsRFBTyxRQUFVLEtDaERqQixtQkFDQSxHQUFJLElBQWMsTFBTyxVQVNQixZQUFxQixFQUFPLENBQzFCLEdBQUksRFBTyxHQUFTLEVBQUsWUFDdEIsRUFBUyxNQUFPLElBQVEsWUFBYyxFQUFLLFdBQWMsRFFNQsTUFBTyxLQUFVLENBQCLENBRUEsRFBTyxRQUFVLEtDakJqQixtQkFRQSxZQUFpQixFQUFNLEVBQVcsQFDaEMsTUFBTyxVQUFTLEVBQUssQFDbkIsTUFBTyxHQUFLLEVBQVUsQFBRyxDQUFDLENBQzVCLENBQYsQFFQSxHQUFPLFFBQVUsSNkakIscJBQUksSUFBVSxLQUdWLEdBQWEsRFBUSxPQUFPLEtBQUsTUFBTSxFQUUQyxHQUFPLFFBQVUsSNMakIscJBQUksSUFBYyxLQUNkLEdBQWEsSFHYixHQUFjLEBQUsVUFHckIsRFBaUIsRFBWSxlQVNqQyxZQUFrQixFQUFRLENBQhCLEdBQUksQFBQyxHQUFZLENBQUsRUFDckIsTUFBTyxJQUFXLENBQUsRUFFMUIsRFBSSxHQUFTLENBQUMsRUFDZCxPQUFTLEtBQUsUUFBTyxDQUFNLEVBQzNCLEFBQUksRFBZSxLQUFLLEVBQVEsQFBRyxHQUFLLEdBQUsZUFDNMsRUFBTyxLQUFLLENBQUcsRUFHbkIsTUFBTyxFQUNULENBRUEsRFBTyxRQUFVLEtDNJqQixzQkFBSSxJQUFnQixLQUNoQixHQUFXLEtBQgsRFBYyxLQThCbEIsWUFBYyxFQUFRLENBQBCLEBQUsSUFBWSxDQUFNLEVBQUksRFBYyxDQUFNLEVBQUksRFBUyxDQUFNLENBQRFLENBRUEsRFBTyxRQUFVLEtDcENqQixzQkFBSSxJQUFhLEtBQIsRFBTyxLQTRCWCxZQUFnQixFQUFRLENBQRCLEBQUsSUFBVSxLQUFPLENBQUMsRUFBSSxHQUFXLEVBQVEsRFBSyxDQUFNLENBQUMsQFDOUQsQFFQSxHQUFPLFFBQVUsSNqQpCLHNCQUFJLElBQVMsSFDVCxHQUFZLEtBQosRFBUyxLQUNULEdBQWMsSFDZCxHQUFXLEtBQgsRFBaIsSFDbEIsRFBYSxLQUNiLEdBQWEsSFDYixHQUFnQixLQUNoQixHQUFTLEtBRQsRFBUyxlQUNULEdBQVMsZUFHVCxHQUFjLEdBQVMsRFBTyxTQUFXLEBeUIQyxZQUFpQixFQUFPLENBQRCLEdBQUksQFBQyxFQUNILEBQUsQFBQyxFQUVWLEdBQUksRFBWSxDQUFLLEVBQCLEBQUsSUFBUyxDQUFLLEVBQUksRFBYyxDQUFLLEVBQUksRFBVSxDQUFLLEVBRWpFLEdBQUksSUFBZSxFQUFNLElBQZCLEBQUsSUFBZIsRUFBTSxJQUFhLENBQUMsRUFFNMsRFBSSxHQUFNLEdBQUsQFBSyxFQUNsQixFQUFPLEdBQUsRFBUyxHQUFjLEdBQUsRFBUyxHQUFhLEdBRXRFLEBQUsRFBSyxDQUFLLENBQCLENBRUEsRFBTyxRQUFVLHVcURDekRqQixtQkFDQSxHQUFJLElBQVUsSFDVixHQUFjLEtBTQsRFBaUIseUJBTWpCLEdBQWlCLHFDQVFyQixZQUFzQixFQUFLLENBQpCLEdBQUksRFBYSxFQUFJLFFBQVEsRFBRyxFQUNoQyxNQUFJLEdBQWEsRFFWCxJQUFlLEVBQUksTFBUyxFQUMQixHQUFNLEVBQUksVUFBVSxFQUFHLENBQVUsRUFDMUIsRFBWSxDQUFHLEdBRXRCLEdBQUsRUFBSSxPQUFPLEVBQWEsQFBQyxFQUNQixHQUFZLENBQUcsRFJbkIsQFDVCxDQVFBLFlBQXFCLEVBQUssQFDeEIsTUFBUSxPQUFPLElBQVEsVUFBWSxFQUFJLEBQVMsRUFBSyxJQUFNLEVBQUsSUFBTSxDQUNRSxDQVFBLFlBQXVCLEVBQUssQFDMUIsTUFBUSxPQUFPLElBQVEsVUFBWSxFQUFJLEtBQUsSUFBTyxHQUFXLENBQUcsRUFBSSxDQUNRSxDQUBLEdBQUksSUFBbUIsTFBTyxhQUFhLEtBQUssRUFDNUMsRFBaIsRFBSSxRQUFPLEdBQWtCLEdBQUcsRUFJdEQsWUFBbUIsRUFBTSxDQUNQixNQUFPLEdBQUssUUFBUSxHQUFpQixFQUFFLENBQpDLENBSEsRFBSSxJQUFjLEBQUsSFBSyxFQUFXLEVBQUUsTFBTyxTQUFTLEVBQUUsRUFBRyxDQUMRCxTQUFFLEdBQVMsRFBWSxFQUFFLEdBQUssRUFDdkIsQFDVCxFQUFHLENBQUMsQFBQyxFQUtELEdBQVEsQFDVixNQUFPLEVBQQsRUFPQSxHQUFNLEtBQUsUFBZSxFQUFPLENBQpDLEBQUksSUFBWSxHQUFTLENBQUssRFDckIsRUFDRSxHQUFZLGVBQWUsQFBSyxFQUNsQyxHQUFZLEdBRQsRFBYSxDQUFLLENBQzNCLEVBTEsRFBTSxJQUFNLFNBQWMsRUFBTyxDQUMvQixTQUFRLEdBQVksQFBSyxFQUVsQixHQUFNLEtBQUssQFBSyxDQUNQixFQUBLEdBQUsSFBTyxTQUFlLEVBQVksQFDdEMsTUFBTyxJQUFNLFdBQVcsQFBVSxHQUFLLEdBQUsVFBVyxDQUFVLENBQBFLEVBTEsRFBTSxXQUFhLFNBQXFCLEVBQUsQFDNUMsRFBSSxHQUFXLEdBQVksQFBSSxFQUMzQixFQUFRLEdBQVksRFFeEIsTUFBTyxHQUFTLENBQUUsTUFBTyxFQUFPLElBQUssQFBUyxFQUFLLEBQJELEVBTEsRFBTSxXQUFhLFNBQXFCLEVBQUsQFDNUMsRFBSSxHQUFXLEdBQVMsQFBSSxFQUNQixFQUFPLEdBQVksRFHdkIsTUFBTyxHQUFRLENBQUUsTUFBTyxHQUFZLEdBQUsSUFBSyxDQUFLLEVBQUssTUFDNUQsRUFRQSxHQUFNLFNBQVcsUFBbUIsRUFBWSxDQUMQyxNQUFPLElBQUsZUFBZSxDQUFVLEdBQUssRFBTSxlQUFlLENBQVUsQFDNUUsRUFPQSxHQUFNLGVBQWlCLFNBQXlCLEVBQUsQFDcEQsRFBSSxHQUFTLEdBQUsVFBVyxDQUFJLEVBQxDLEBQUsQFBQyxDQUFDLEdBQVUsRUFBTyxNQUFRLEdBQVksQFBSSxDQUNwRCxFQUBLEdBQUsZUFBaUIsUFBeUIsRUFBTSxDQUNwRCxHQUFJLEdBQVMsRFBTSxXQUFXLENBQUksRUFDbEMsTUFBTyxDQUFDLENBQUMsRFBVSxHQUFTLEVBQUsSFBSyxJQUFNLEdBQVMsQFBSSxDQUMRCxFQVFBLEdBQUsTUFBUSxTQUFnQixFQUFZLEVBQWUsQFDdkQsRFBSSxHQUFPLEdBQVMsQFBVSxFQUMxQixFQUFPLEdBQVksRFFdkIsTUFBTyxHQUFnQixHQUFXLENBQUksRUFBSSxDQUMQyxFQVNBLEdBQUsUUFBVSxTQUFrQixFQUFLLEVBQVksRUFBUSxDQUNRCxNQUFLLEdBRUUsRUFBSSxNQUFNLEVBQWMsRUFDcEIsSUFBSSxTQUFvQixFQUFHLEVBQUcsQFFNIsRFBSSxFQUFJLElBQUsRUFBRyxNQUFPLEdBQhCLEdBQUksRFBUSxHQUFNLEtBQUssQFBQyxFQUNwQixFQUFZLEVBQUsUUFBUSxHQUFHLEVBQUksRFFckMsTUFBSSxJQUFhLEBQUsSUFBZSxXQUMQixFQUFXLENBQUMsRUFHakIsQFBQyxHQUFhLEBQUsSUFBVyxXQUMzQixFQUFPLEVBQUsQFBQyxFQUdqQixDQUNULENBQUMsRUFDQSxLQUFLLEVBQUUsRUFuQkQsRUFxQmCLEVBTUEsRFBTSxPQUFTLFVBQWCLENBQhDLEdBQUksRFBWSxPQUFPLEtBQUssRUFBVyxFQUNuQyxFQUFjLEtBQUssTUFBTSxLQUFLLEBQUsRUFBSSxFQUFVLEBQUsRUFDekQsRUFBTSxFQUFVLEdBQhCLEVBQVEsRFBTSxLQUFLLENBQUcsRUFDMUIsTUFBTyxDQUFFLElBQUssRUFBSyxNQUFPLENBQUsQFDbEMsRUFPQSxHQUFNLEBQVMsUFBaUIsRUFBSyxDQUNuQyxHQUFJLEdBQVksTFBTyxLQUFLLEVBQVcsRUFDbkMsRUFBVSxHQUFZLENBQUcsRUFDekIsRUFBZSxFQUFVLEBQUsUFBUyxFQUFLLENBQhELEBQUsRFBSSxTQUFTLEVBQUUsUUFBUSxDQUFPLElBQUsQFDNMsQFBQyxFQUNELEBQUsRFBYSxJQUFJLFNBQVMsRUFBSyxDQUNwQyxNQUFPLENBQwsSUFBSyxFQUNMLEBQUsRFBTSxLQUFLLENBQUcsQFDdkIsQFDRixDQUFDLENBQgsRUFPQSxHQUFNLFVBQVksUFBbIsRUFBSyxDQUNQyxHQUFJLENBQUMsRUFBSyxNQUFPLEdBQpCLEdBQUksRFBUSxHQUFRLENBQUcsRUFFdkIsTUFBTyxHQUFNLElBQUksUFBUyxFQUFNLENBQzlCLEBQUsSUFBTSxNQUFNLEVBQUsRUFBSSxHQUFLLENBQBDLENBQUMsRUFBRSxLQUFLLEVBQUUsQFDWixFQVNBLEdBQUsUUFBVSxTQUFrQixFQUFLLEVBQWEsRUFBYSxDQUMvRCxHQUFJLENBQUMsRUFBSyxNQUFPLEdBRWpCLEdBQUksRFBVSxNQUFPLElBQWdCLFdBQWEsRUFBYyxVQUFXLENBQUUsTUFBTyxFQUFhLEVBQzdGLEVBQVEsRFBUSxDQUFHLEVBRWCLEVBQVcsRUFBTSxJQUFJLFNBQVMsRUFBTSxFQUFLLENBQzNDLEdBQUksRFBUSxHQUFNLFdBQVcsQFBSSxFQUVqQyxNQUFJLElBQVMsRFBZSxFQUFNLEVBQUsSFBTyxLQUMQyxHQUFNLEVBQUsRFBSyxJQUdaLEVBQVEsRUFBUSxDQUFLLEVBQUksQFDbEMsQFBQyxFQUFFLEtBQUssRUFBRSxFQUVWLEBQUsRFBYyxFQUFTLFFBQVEsRFBZIsRUFBRSxFQUFJLENBQzlELEVBUUEsRFBTSxNQUFRLFNBQWdCLEVBQUssQFDakMsTUFBTyxJQUFNLFFBQVEsRUFBSyxHQUFJLEVBQUksQFDcEMsRUFFQSxHQUFPLFFBQVUsSMUpCLHNCQUFPLFFBQVUsTNBakIsbUJBTEsQUFBQyxXQUFZLENBQosYUFFQSxHQUFJLEdBQVMsQFBQyxFQUFFLGVBRWhCLFlBQXNCLENBRJCLEBRkksRFBVSxDQUFDLEVBRUsRUFBSSxFQUFHLEVBQUksVUFBVSxPQUFRLElBQUssQFDMUMsRFBSSxHQUFNLFVBQVUsRFDcEIsRFBSSxFQUFDLEVBRUwsSUFBSSxHQUFVLEBQUsRFFckIsRFBSSxJQUFZLFVBQVksSUFBWSxTQUNQyxFQUFRLEtBQUssQFBRyxVQUNOLEBQUsUUFBUSxDQUFHLEdBQzNCLEdBQUksRUFBSSxPQUFRLENBQYsRFBSSxHQUFRLEVBQVcsTUFBTSxLQUFNLENBQUcsRUFDdEMsQUFBSSxHQUNILEVBQVEsSFBSyxDQUFLLENBRXBCLFVBQUsSUFBWSxTQUNQixHQUFJLEVBQUksVFBYSxPQUFPLFVBQVUsUFDckMsTFBUyxLQUFPLEdBQYsQUFBSSxFQUFPLEtBQUssRUFBSyxDQUFHLEdBQUssRUFBSSxJQUNoQyxFQUFRLEtBQUssQFBRyxNQUlsQixHQUFRLEtBQUssRUFBSSxTQUFTLENBQUMsRUFHOUIsQFFQSxNQUFPLEdBQVEsSFBSyxHQUFHLENBQhCLENBRUEsQUFBSSxNQUFPLElBQVcsSFBZSxHQUFPLFFBQzNDLEdBQVcsUUFBVSxFQUNyQixHQUFPLFFBQVUsRFDWCxBQUFJLEBQUsUFBVyxZQUFjLEBQUsUUFBTyxLQUFRLFVBQVksTFBTyxJQUVuRixPQUFPLGFBQWMsQFBQyxFQUFHLFVBQVksQFDcEMsTUFBTyxFQUNSLENBQUMsRUFFRCxPQUFPLFdBQWEsQFFdEIsRFBRSxJQpERiwyQkFDQSxPQUFPLGVBQWUsRFBUyxhQUFjLENBQUUsTUFBTyxFQUFLLENBQUMsRUEwQjVELFlBQXFCLEVBQUsRUFBUyxDQUNqQyxHQUFJLEVBQEsTUFBTyxHQUVYLEtBQUsSUFBSSxPQUFNLHlDQUEyQyxLQUFLLFVBQVUsQFBSyxDQUFDLENBQBGLENBQEsRFBUSxZQUFjLEdBQRCLEdBQVEsUUFBVSxLQxDbEIsbUJBWUEsQUFBQyxVQUFTLEVBQUUsQFBQyxBQUFHLEFBQVUsTUFBTyxLQUFqQixVQUEwQixBQUFhLEBQUsSUFBcEIsSUFBMkIsRFBTyxRQUFRLEVBQUUsRUFBTyxBQUFHLEFBQVksTUFBTyxTQUFuQixZQUEyQixPQUFPLElBQUksTFBTyxDQUFDLEVBQUUsQFBQyxFQUFRLENBQWEsTUFBTyxRQUFwQixJQUEyQixPQUFPLEFBQWEsTUFBTyxRQUFwQixJQUEyQixPQUFPLEFBQWEsTUFBTyxNQUFwQixJQUFQixLQUFLLEBQUsTUFBTSxFQUFFLENBQUUsRFBRSxVQUFVLENBQUMsTUFBTyxZQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsRFBRyxDQUFDLEVBQUUsRFBRyxDQUFDLEdBQUksRFBRSxBQUFZLEBQUsVUFBbkIsWUFBNEIsUUFBUSxHQUFHLENBQUMsRFBRyxFQUFFLEBQUsRFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTyxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUksRFBRSxHQUFJLEBQUsdUJBQXVCLEVBQUUsRFBRyxFQUFFLEtBQUsRFBRSxLQUFLLGCQUFtQixDQUFDLENBQUMsRFBSSxHQUFFLEVBQUUsRFBRyxDQUFDLFFBQVEsQFBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLEdBQUcsSFBSyxFQUFFLFFBQVEsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRFBRyxHQUFHLEdBQUcsTUFBTyxHQUFFLEdBQUcsQFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQFBQyxDQUFDLENBQUMsTUFBTyxHQUFFLEdBQUcsTFBTyxDQUFDLEBQVEsRFBRSxBQUFZLEBQUsVUFBbkIsWUFBNEIsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsbVBQWFLEVBQUUsTFBTyxTQUFTLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEFBQVcsRUFBRSxVQUFVLENBQUMsSUFBeEIsUFBMEIsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFHLEdBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRFBSSxHQUFFLEVBQUUsVFBVyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxXQUFXLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLFdBQVcsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRyxHQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUcsSUFBRyxJQUFJLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsTFBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLEVBQUUsTFBTyxDQUFDLENBQUMsRUFBRSxNQUFPLEdBQUUsSFBSyxFQUFFLENBQUMsRUFBRSxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsUUFBUSxHQUFHLEVBQUUsTFBTyxFQUFFLEVBQUUsTUFBTSxJQUFJLEVBQUUsSFBTSxJQUFJLEBQUsaURBQWlELEVBQUUsRFBSSxHQUFFLEVBQUUsRUFBRyxHQUFFLEVBQUUsUUFBUSxzQkFBcIsRUFBRSxHQUFHLEBQUsRUFBRSxHQUFHLEVBQUUsTFBTyxFQUFFLEBQUsQFBQyxJQUFJLEVBQUUsTFBTyxFQUFFLEdBQUcsSUFBSSxFQUFFLEBQUsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFFLEBQUsRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEVBQUUsSFBTSxJQUFJLEBQUsMkNBQTJDLEVBQUUsSUFBSSxFQUFFLEVBQUUsVFBVyxHQUFJLFlBQVcsRUFBRSxDQUFDLEVBQUUsRFBSSxPQUFNLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsTFBTyxHQUFHLENBQUMsRFBRyxFQUFHLEdBQUUsRUFBRSxRQUFRLEVBQUUsTFBTyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUcsSUFBRyxJQUFJLEVBQUcsRFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEdBQUcsQFBQyxJQUFJLEVBQUUsRUFBRyxHQUFFLElBQUksRUFBRyxHQUFFLEVBQUUsUUFBUSxFQUFFLEBQUsRFBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsQUFBSyxJQUFMLElBQVMsRFBRSxLQUFLLEdBQUcsQUFBSyxJQUFMLElBQVMsRFBRSxLQUFLLEdBQUcsTUFBTyxFQUFDLENBQUMsRUFBRSxDQUFDLFlBQVksRFBRyxVQUFVLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLHFCQUFxQixFQUFFLEVBQUUsRUFBRSxxQkFBcUIsRUFBRSxFQUFFLEVBQUUsMEJBQTBCLEVBQUUsVFBVyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxLQUFLLGVBQWUsRUFBRSxLQUFLLGlCQUFpQixFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssWUFBWSxFQUFFLEtBQUssaJBQWtCLENBQUMsQFBQyxFQUFFLFVBQVUsQFBQyxpQkFBaUIsVUFBVSxDQUFDLEdBQUksRFBRSxHQUFJLEdBQUUsRUFBRSxRQUFRLFFBQVEsSFBSyxpQkFBaUIsQFBQyxFQUFFLEtBQUssSFBSyxZQUFZLGlCQUFpQixDQUFDLEVBQUUsSFBSyxHQUFJLEdBQUUsYUFBYSxDQUFDLEVBQUUsRUFBRSxLQUFLLEBQUsRFBRSxHQUFHLEBQUsVUFBVSxDQUFDLEdBQUcsSFBSyxXQUFXLGNBQWMsRUFBRSxpQkFBaUIsSFBTSxJQUFJLEBQUsdUNBQXVDLENBQUMsQFBQyxFQUFFLENBQUMsRUFBRSxvQkFBbIsVUFBVSxDQUFDLEBQUsSUFBSSxHQUFFLEVBQUUsUUFBUSxRQUFRLEtBQUssaUJBQWlCLENBQUMsRUFBRSxlQUFlLGlCQUFpQixLQUFLLGNBQWMsRUFBRSxlQUFlLGCQUFtQixLQUFLLGdCQUFnQixFQUFFLGVBQWUsUUFBUSxLQUFLLEtBQUssRUFBRSxlQUFlLGNBQWMsSFBSyxXQUFXLENBQUMsQFBQyxFQUFFLEVBQUUsaUJBQWlCLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxNQUFPLEdBQUUsSFBSyxHQUFJLEVBQUMsRUFBRSxLQUFLLEdBQUksRFBRSxrQkFBaIsQFBQyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsQFBQyxFQUFFLEtBQUssRFBSSxHQUFFLGdCQUFnQixDQUFDLEVBQUUsZUFBZSxjQUFjLENBQUMsQFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQFBQyxhQUFhLEVBQUUscJBQXNCLEdBQUcsMkJBQTJCLEdBQUcscJBQXNCLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxQkFBdIsRUFBRSxFQUFFLEBQUsQFBQyxNQUFNLEBQUsZUFBZSxTQUFTLEVBQUUsQFBQyxNQUFPLElBQUksRFBRSxtQkFBbUIsQFBQyxFQUFFLGlCQUFpQixVQUFVLENBQUMsTUFBTyxJQUFJLEdBQUUscUJBQXFCLENBQUMsQFBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLFNBQVMsQFBQyxFQUFFLENBQUMsVUFBVSxFQUFFLHlCQUFQixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsUFBUyxFQUFNLEVBQUUsVUFBVSxDQUFDLEBQVEsRFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLElBQUksQFBQyxFQUFFLEVBQUUsTFBUSxHQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVFBVyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRFBRyxDQUFDLENBQUMsTUFBTyxFQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEFBQVMsSFBVCxRQUFZLEVBQUUsTFBTyxBQUFXLEVBQUUsVUFBVSxDQUFDLElBQXhCLFNBQTBCLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRyxPQUFRLEdBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLElBQUssRFBRSxFQUFFLEtBQUssTUFBTSxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRyxPQUFRLEdBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLElBQUssRFBRSxFQUFFLFdBQVcsQFBQyxJQUFJLEBQUsRFBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEVBQUUsTFBTyxHQUFHLEVBQUUsTFBTyxHQUFHLEVBQUUsSUFBSSxHQUFHLEVBQUUsYFBYyxHQUFHLEVBQUUsSFBSyxLQUFLLEVBQUUsWUFBWSxLQUFLLEVBQUUsbUJBQWCLEtBQUssRUFBRSxRQUFRLEtBQUssRUFBRSxnQkFBZIsSFBSyxFQUFFLGVBQWUsSUFBSSxFQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsSFBSyxFQUFFLEFBQWEsTUFBTyxTQUFwQixJQUEQixRQUFRLEVBQUUsSFBSyxFQUFFLEVBQUUsUUFBUSxDQUFDLFFBQVEsQFBQyxDQUFDLEVBQUUsQFBQyxJQUFJLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsQUFBYSxNQUFPLFlBQXBCLEtBQWdDLEFBQWEsTUFBTyxhQUFwQixLQUFpQyxBQUFhLEBQUsYUFBcEIsSUFBZMsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsRUFBRSxQkFBdIsRUFBRSxFQUFFLEVBQUUsYUFBYSxRQUFRLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssZUFBZSxDQUFDLEVBQUUsSFBSyxNQUFNLEtBQUssSFBSyxZQUFZLEVBQUUsSFBSyxhQUFhLEVBQUUsSFBSyxLQUFLLENBQUMsQFBQyxDQUFDLEVBQUUsTUFBTSxPQUFPLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsYUFBYSxTQUFTLEVBQUUsQFBQyxLQUFLLEtBQUssRUFBRSxLQUFLLEFBQUsSFBSyxRQUFaLEBQWCLEtBQUssWUFBWSxFQUFFLEtBQUssTUFBTSxLQUFLLEVBQUUsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsVUFBVSxNQUFNLFVBQVUsQFBQyxFQUFFLFVBQVUsTUFBTSxLQUFLLElBQUksRUFBRSxBQUFPLEtBQUssUUFBWixNQUFtQixLQUFLLFlBQVksRUFBRSxLQUFLLEBQUsSFBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLFFBQVEsVUFBVSxDQUFDLEVBQUUsVUFBVSxRQUFRLEtBQUssSUFBSSxFQUFFLEtBQUssTUFBTSxJQUFJLEVBQUUsRUFBRSxVQUFVLFlBQVksVUFBVSxDQUFDLEtBQUssTUFBTSxHQUFJLEdBQUUsSFBSyxhQUFhLENBQUMsSUFBSSxHQUFHLEBQUsSFBSyxhQUFhLEBQUsRUFBRSxDQUFDLEVBQUUsRFBSSxHQUFFLEtBQUssSFBSyxNQUFNLEBQUsUFBUyxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsSFBSyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxlQUFlLFNBQVMsRUFBRSxDQUFDLEBQUsSUFBSSxHQUFFLFVBQVUsQFBQyxDQUFDLEVBQUUsRUFBRSxpQkFBaUIsVUFBVSxDQUFDLEBQUsSUFBSSxHQUFFLFVBQVUsQFBQyxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMseUJBQXlCLEdBQUcsVUFBVSxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLFdBQVcsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRFBRyxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxHQUFHLEBQUsYUFBYSxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTyxFQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxFQUFFLFlBQVksUFBUyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLFlBQVksUFBUyxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsWUFBWSxTQUFTLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLFlBQVksUFBUyxFQUFFLFdBQVcsQFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLEBQUsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEdBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEdBQUUsQFBQyxNQUFNLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixDQUFDLEVBQUUsRFBRyxDQUFDLEdBQUksSUFBRSxNQUFNLEVBQUUsTUFBTSxHQUFFLGVBQWUsRUFBRSxlQUFlLEdBQUUsaUJBQWlCLEVBQUUsaJBQWtCLEdBQUksRFBRSxFQUFFLEdBQUksSUFBRyxHQUFHLEdBQUcsQFBQyxHQUFHLENBQUMsRFBSSxJQUFHLEBQUsRFBSSxHQUFFLEVBQUUsRFBRSxFQUFFLElBQUksSUFBRyxJQUFJLEFBQVMsSUFBVCxPQUFZLElBQUUsSUFBSSxHQUFHLFNBQVMsRUFBRSxHQUFFLENBQUMsRFBSSxJQUFFLEVBQUUsTUFBTyxJQUFJLElBQUUsRFBRSxNQUFNLEBQVEsTFBTSxLQUFJLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFDLEdBQUksSUFBRSxHQUFHLEdBQUcsUFBUyxFQUFFLENBQUMsTUFBTyxJQUFJLElBQUcsRUFBRSxFQUFFLEVBQUUsYFBYyxHQUFHLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsRUFBRSxFQUFFLEVBQUUsZUFBZSxFQUFFLEtBQUssSUFBSSxFQUFFLEdBQUcsRUFBRSxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsRFBRyxFQUFFLFdBQVcsRUFBRSxHQUFJLEdBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsSFBSyxFQUFFLEVBQUUsTFBTyxDQUFDLEVBQUUsRFBRyxHQUFJLEdBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsSFBSyxFQUFFLEVBQUUsTFBTyxDQUFDLEVBQUUsRFBRyxHQUFJLEdBQUUsRFBRyxNQUFPLElBQUcQUFBQSxJQUFPLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRFBRyxFQUFFLEVBQUUsQFBQyxFQUFFLEdBQUcsRUFBRSxHQUFFLEBQUsQFBQyxFQUFFLEdBQUcsRUFBRSxHQUFFLGVBQWUsQFBQyxFQUFFLEdBQUcsRUFBRSxHQUFFLGlCQUFpQixDQUFDLEVBQUUsRFBRyxFQUFFLEVBQUUsTFBTyxDQUFDLEVBQUUsRFBRyxFQUFFLEVBQUUsTFBTyxDQUFDLEVBQUUsQFBQyxXQUFXLEVBQUUsaJBQWtCLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxvQkFBbIsRUFBRSxHQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQFBQyxDQUFDLENBQUMsRFBSSxHQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxQkFBeUIsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEtBQUssSFBSyxlQUFlLEVBQUUsSFBSyxhQUFhLEVBQUUsSFBSyxXQUFXLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxlQUFlLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxXQUFXLEdBQUcsSFBSyxjQUFjLENBQUMsRUFBRSxLQUFLLFdBQVcsQFBQyxFQUFFLEtBQUssbJBQWCLEVBQUUsSFBSyxhQUFhLEVBQUUsSFBSyxZQUFZLEtBQUssSFBSyxTQUFTLENBQUMsQFBQyxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsSFBSyxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxLQUFLLFNBQVMsRUFBRSxFQUFFLEtBQUssYUFBYSxFQUFFLEtBQUssUFBUyxPQUFPLEtBQUssVFBVyxLQUFLLGNBQWMsSFBSyxDQUFDLEVBQUcsTUFBSyxjQUFjLEVBQUUsSFBSyxPQUFPLEVBQUUsVUFBVSxLQUFLLEtBQUssSFBSyxDQUFDLEtBQUssRUFBRSxLQUFLLEtBQUssQFBQyxZQUFZLEtBQUssWUFBWSxRQUFRLEVBQUcsRFBRSxJQUFLLEdBQUUsRUFBRSxJQUFJLEVBQUUsRFBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsVUFBVSxhQUFhLFNBQVMsRUFBRSxDQUFDLEtBQUssbJBQWCLEtBQUssYUFBYSxLQUFLLFlBQVksRUFBRSxLQUFLLEtBQUssRFBSSxHQUFFLEtBQUssYUFBYSxDQUFDLEVBQUUsSFBSyxJQUFJLEdBQUcsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEtBQUssbJBQWCLEtBQUssWUFBWSxLQUFLLGNBQWMsRUFBRSxLQUFLLEtBQUssQFBQyxLQUFLLEVBQUUsVFBVyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQFBQyxDQUFDLEtBQUsTUFBSyxXQUFXLEVBQUUsRUFBRSxFQUFFLFVBQVUsYUFBYSxTQUFTLEVBQUUsQFBQyxLQUFLLFdBQVcsRFBRyxHQUFJLEdBQUUsSFBSyxhQUFhLENBQUMsRUFBRSxLQUFLLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEtBQUssbJBQWCLEtBQUssWUFBWSxLQUFLLGNBQWMsRUFBRSxHQUFHLEtBQUssVFBVyxLQUFLLEVBQUUsUFBUyxFQUFFLEVBQUUsSFBSyxLQUFLLENBQUMsSFBSyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsZJBQWdCLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsZUFBZSxDQUFDLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSFBSyxDQUFDLFFBQVEsRFBRyxDQUFDLENBQUMsTUFBTyxLQUFJLEtBQUssSFBSyxDQUFDLEtBQUssRUFBRSxXQUFXLEtBQUssQFBQyxRQUFRLENBQUMsQFBQyxDQUFDLEVBQUUsSFBSyxjQUFjLFFBQVEsSFBSyxLQUFLLEtBQUssYFBYyxNQUFNLENBQUMsRUFBRSxLQUFLLFlBQVksSUFBSSxFQUFFLEVBQUUsVUFBVSxNQUFNLFVBQVUsQFBQyxPQUFRLEdBQUUsSFBSyxhQUFhLEVBQUUsRUFBRSxFQUFFLEtBQUssVFBVyxPQUFPLElBQUksSFBSyxLQUFLLENBQUMsSFBSyxLQUFLLFdBQVcsRFBRyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQFBQyxFQUFFLEdBQUksRFBRSxLQUFLLGFBQWEsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsWUFBWSxTQUFTLEVBQUUsQFBQyxDQUFDLEVBQUUsTUFBTyxHQUFFLHNCQUFzQixXQUFXLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLENBQUMsRUFBRSxLQUFLLFdBQVcsTFBTyxFQUFFLEVBQUUsSFBSyxXQUFXLEtBQUssYFBYyxFQUFFLEtBQUssSFBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxVQUFVLGtCQUFrQixVQUFVLENBQUMsSFBSyxTQUFTLEtBQUssUFBUyxNQUFNLEVBQUUsSFBSyxhQUFhLEtBQUssUFBUyxVQUFVLEVBQUUsSFBSyxTQUFTLEtBQUssUFBUyxNQUFNLEVBQUUsSFBSyxTQUFTLEBQUsQFBQyxFQUFFLEVBQUUsVUFBVSxpQkFBaUIsUFBUyxFQUFFLENBQUMsSFBSyxTQUFTLEtBQUssQFBQyxFQUFFLEdBQUksRFBRSxLQUFLLEBQUsRFBRSxHQUFHLEBQUsUFBUyxFQUFFLENBQUMsRUFBRSxhQUFhLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLEBQUsVUFBVSxDQUFDLEVBQUUsYUFBYSxFQUFFLFNBQVMsVUFBVSxFQUFFLEVBQUUsUFBUyxPQUFPLEVBQUUsaJBQWtCLEVBQUUsRUFBRSxJQUFJLENBQUMsQFBQyxFQUFFLEVBQUUsRFBRyxRQUFRLFNBQVMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQFBQyxFQUFFLElBQUksRUFBRSxFQUFFLFVBQVUsTFBTyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxVQUFVLEBQUsSFBSyxJQUFJLEdBQUksRUFBQyxLQUFLLFVBQVUsSFBSyxTQUFTLEBQVEsTUFBSyxrQkFBaIsRUFBRSxJQUFJLEtBQUssVUFBVSxLQUFLLFNBQVMsUUFBUSxLQUFLLGVBQWUsTFBUSxNQUFLLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEtBQUssUFBUyxHQUFHLENBQUMsRUFBRSxVQUFVLEBQUsSFBSyxLQUFLLENBQUMsRUFBRSxNQUFNLEdBQUcsTFBUSxHQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxHQUFHLENBQUMsRUFBRSxHQUFHLEBQUsQFBQyxDQUFDLEBQUMsQFBUyxDQUFDLEBQUsRUFBRSxFQUFFLEVBQUUsVUFBVSxLQUFLLFVBQVUsQFBQyxFQUFFLFVBQVUsSFBSyxLQUFLLElBQUksRUFBRSxPQUFRLEdBQUUsSFBSyxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxJQUFJLEVBQUUsRFBRyxLQUFLLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsVFBVyxFQUFFLGVBQWUsRFBRywwQkFBMEIsRFBRyxVQUFVLEdBQUcsVFBVyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsZUFBZSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUksRFBRSxFQUFFLFlBQVksRUFBRSxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsRUFBRSxFQUFFLEdBQUcsQFBQyxFQUFFLFFBQVEsUFBUyxFQUFFLEVBQUUsQFBQyxJQUFJLEdBQUksRFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRyxDQUFDLEVBQUUsSFBTSxJQUFJLEBQUsRUFBRSxzQFBcMsRUFBRSxNQUFPLEVBQUMsRUFBRSxFQUFFLFFBQVEsWUFBWSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsUUFBUSxvQkFBbIsRUFBRSxvQkFBbIsQFBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsZJBQWdCLEVBQUUsQFBQyxFQUFFLGVBQWUsTFBTyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSFBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLEdBQUcsZJBQWdCLEVBQUUsZJBQWdCLGVBQWUsRUFBRSxjQUFjLENBQUMsRUFBRSxLQUFLLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxhQUFhLENBQUMsTFBTyxFQUFOLENBQVMsRUFBRSxNQUFNLENBQUMsQFBQyxDQUFDLEBQUsRUFBQyxDQUFDLEVBQUUsQFBQyxrQkFBaIsRUFBRSxrQkFBaIsQFBQyxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLFlBQVksQFBQyxHQUFHLENBQUUsZJBQWdCLElBQUcsTUFBTyxJQUFJLEdBQUUsRFBRyxVQUFVLEBQUsSFBTSxJQUFJLEBQUsZdBQWdHLEVBQUUsSFBSyxNQUFNLEBQUsTFBTyxJQUFJLEVBQUUsSFBSyxRQUFRLEtBQUssSFBSyxLQUFLLEdBQUcsSFBSyxNQUFNLFVBQVUsQFBQyxHQUFJLEdBQUUsRFBSSxHQUFFLEBQVEsSFBSyxNQUFLLEFBQVksTUFBTyxNQUFLLElBQXhCLFlBQTZCLEdBQUUsRFBRyxLQUFLLElBQUksTUFBTyxFQUFDLENBQUMsQFBQyxBQUFDLEdBQUUsVUFBVSxFQUFFLFVBQVUsRFBRyxVQUFVLEVBQUUsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxVQUFVLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTyxJQUFJLEtBQUcsVUFBVSxFQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsUFBUyxFQUFFLFlBQVksRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGFBQWEsRUFBRSxTQUFTLEdBQUcsVFBVyxHQUFHLFlBQVksRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxFQUFFLEVBQUUscUJBQXFCLEVBQUUsRUFBRSxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsQFBQyxNQUFPLElBQUksRFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsYUFBYSxpQkFBaUIsRUFBRSxLQUFLLEdBQUksRUFBQyxFQUFFLEVBQUUsRFBRyxRQUFRLFNBQVMsRUFBRSxDQUFDLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEBQUsVUFBVSxDQUFDLEVBQUUsVFBVyxRQUFRLEVBQUUsYUFBYSxNQUFNLEVBQUUsRFBSSxPQUFNLGdDQUFnQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEtBQUssTUFBTyxHQUFFLEVBQUUsTFBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEBQUsRFBRyxXQUFXLEdBQUcscJBQXNCLEdBQUcsYFBYyxHQUFHLGVBQWUsRUFBRSxVQUFVLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxTQUFTLENBQUMsRUFBRSxFQUFFLFFBQVEsTFBTyxHQUFJLEBQUscRBQXNELENBQUMsRUFBRSxFQUFFLGVBQWUscJBQXNCLEVBQUUsRFBRyxFQUFFLHNCQUFzQixFQUFFLEBQUsRUFBRSxLQUFLLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFJLEdBQUUsQFBQyxFQUFFLEBQUsRFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxDQUFDLEVBQUUsUUFBUSxRQUFRLENBQUMsQFBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEdBQUcsRUFBRSxXQUFXLEBQVEsRFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxNQUFPLEdBQUUsUUFBUSxJQUFJLENBQUMsQFBQyxDQUFDLEVBQUUsSFBSyxTQUFTLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLElBQUksQFBQyxHQUFJLEdBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxRQUFRLEVBQUUsVFBVyxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsYUFBYSxDQUFDLEBQUsRFBRyxzQkFBcIsRFBRyxLQUFLLEVBQUUsSFBSyxJQUFJLEVBQUUsSUFBSSxRQUFRLEVBQUUsZUFBZSxPQUFPLEVBQUUsZUFBZSxLQUFLLGdCQUFnQixFQUFFLGdCQUFnQixlQUFlLEVBQUUsZUFBZSxjQUFjLEVBQUUsYUFBYSxDQUFDLEVBQUUsRUFBRSxLQUFNLEdBQUUsSFBSyxDQUFDLEVBQUUsbUJBQWCLEVBQUUsQFBQyxNQUFPLEdBQUUsVFBVyxRQUFTLEdBQUUsUUFBUSxFQUFFLFlBQVksQFBQyxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGdCQUFnQixHQUFHLHNCQUFzQixHQUFHLFNBQVMsRFBRyxVQUFVLEdBQUcsZUFBZSxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxQkFBeUIsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLEVBQUUsSFBSyxLQUFLLGDQUFtQyxDQUFDLEVBQUUsSFBSyxlQUFlLEdBQUcsSFBSyxZQUFZLENBQUMsQFBQyxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsWUFBWSxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsSFBSyxBQUFDLEBQUssUUFBUSxHQUFHLEBQUsRUFBRSxFQUFFLEdBQUcsTFBTyxTQUFTLEVBQUUsQFBQyxFQUFFLEtBQUssQFBQyxLQUFLLEVBQUUsSFBSyxDQUFDLFFBQVEsQFBQyxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRFBRyxRQUFRLFNBQVMsRUFBRSxDQUFDLEVBQUUsUFBUyxLQUFLLGVBQWUsRUFBRSxFQUFFLEBQUsQFBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEBQUsVUFBVSxDQUFDLEVBQUUsUFBUyxFQUFFLGVBQWUsRFBRyxFQUFFLElBQUksQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFVBQVUsTUFBTSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxVQUFVLEBQUsSFBSyxJQUFJLEdBQUksTUFBSyxRQUFRLEBQUsRUFBRSxHQUFHLEVBQUUsRUFBRSxVQUFVLEBQUsVUFBVSxDQUFDLEBQUsQFBQyxDQUFDLEVBQUUsVUFBVSxPQUFPLEtBQUssSUFBSSxHQUFJLEBQUssZUFBZSxLQUFLLElBQUksRUFBRSxLQUFLLFFBQVEsTFBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsMEJBQTBCLEdBQUcsVFBVyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEVBQUUsUFBUyxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssQFBQyxFQUFFLEtBQUssUUFBUSxFQUFFLEdBQUksRFBRSxLQUFLLEVBQUUsRFBRyxPQUFPLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsRFBRyxFQUFFLFFBQVEsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQFBQyxFQUFFLEdBQUcsUUFBUSxTQUFTLEVBQUUsQFBQyxFQUFFLEtBQUssUUFBUSxDQUFDLENBQUMsQFBQyxFQUFFLEdBQUcsTUFBTSxVQUFVLENBQUMsRUFBRSxLQUFLLElBQUksQFBQyxDQUFDLENBQUMsQFBQyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEVBQUUsVUFBVSxNQUFNLFVBQVUsQFBQyxLQUFLLFFBQVEsTFBTyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRFBRyxrQkFBaIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLEBQUsQUFBYSxNQUFPLFFBQXBCLElBQTJCLGNBQWMsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFHLEBQUsTUFBTSxPQUFPLEBQUsVFBVyxLQUFLLEBQUsUUFBTyxLQUFLLEVBQUUsQFBQyxFQUFFLEdBQUcsQUFBVSxNQUFPLElBQWpCLFNBQWCLEtBQUsSUFBSSxPQUFNLDBDQUEwQyxFQUFFLEBQUsSUFBSSxRQUFPLEVBQUUsQFBQyxDQUFDLEVBQUUsWUFBWSxTQUFTLEVBQUUsQFBQyxHQUFHLEBQUsTUFBTSxNQUFPLFFBQUsTUFBTSxDQUFDLEVBQUUsRFBSSxHQUFFLEdBQUksUUFBTyxDQUFDLEVBQUUsTUFBTyxHQUFFLEtBQUssQFBQyxFQUFFLENBQUMsRUFBRSxTQUFTLFNBQVMsRUFBRSxDQUFDLEBQUsUUFBTyxTQUFTLENBQUMsQFBQyxFQUFFLFNBQVMsUFBUyxFQUFFLENBQUMsTUFBTyxJQUFHLEFBQVksTUFBTyxHQUFFLElBQXJCLFlBQXlCLEFBQVksTUFBTyxHQUFFLEBQXJCLFlBQTRCLEFBQVksTUFBTyxHQUFFLFFBQXJCLFVBQTJCLENBQUMsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxVQUFVLENBQUMsRUFBRSxFQUFFLEVBQUUsTFBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxHQUFJLEBQUssQUFBTyxFQUFFLGNBQVQsTUFBdUIsRFBRSxZQUFZLEVBQUUsWUFBWSxZQUFZLEdBQUcsQUFBVSxNQUFPLEdBQUUsaUJBQWCLFVBQXFDLEdBQUUsZJBQWdCLFNBQVMsRUFBRSxnQkFBZIsQFBQyxHQUFHLEVBQUUsaUJBQWlCLEBQUsRUFBRSxpQkFBaIsRFBRSxJQUFJLElBQUksRUFBRSxnQkFBZIsRFBRyxFQUFFLGdCQUFpQixHQUFFLElBQUksSUFBSSxFQUFFLEtBQUsRFBRSxFQUFFLENBQUMsRFBRyxFQUFFLGVBQWdCLEdBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxLQUFLLEtBQUssRUFBRSxFQUFFLEVBQUUsRFBSSxHQUFFLEFBQVcsSUFBWCxVQUFjLEFBQUssRUFBRSxTQUFQLElBQWUsQUFBSyxFQUFFLFNBQVAsRFBYyxHQUFHLEFBQVMsRUFBRSxTQUFYLFFBQWCLEdBQUUsTFBTyxDQUFDLEdBQUksYUFBYSxJQUFHLEFBQUksRUFBRSxtQkFBTixHQUFQixFQUFFLEtBQUssQFBQyxHQUFHLEFBQUksRUFBRSxTQUFOLElBQWdCLEdBQUUsTFBTyxHQUFHLEVBQUUsTFBTyxHQUFHLEVBQUUsRFBRyxFQUFFLFlBQVksUUFBUSxFQUFFLFVBQVUsRFBSSxHQUFFLEtBQUssRUFBRSxZQUFhLElBQUcsWUFBYSxHQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsUFBUyxDQUFDLEVBQUUsRFBSSxHQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsZUFBZSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUscJBQXNCLEVBQUUsTUFBTSxFQUFFLEdBQUksRFBRSxHQUFJLEdBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLEBQUsRFBRyxDQUFDLENBQUMsRFBSSxHQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLHdCQUFQixFQUFFLEVBQUUsRUFBRSxQkFBdUIsRUFBRSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxvQkFBbIsRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUUsbUNBQWDLEVBQUUsRUFBRSxTQUFTLEVBQUUsQFBQyxBQUFNLEVBQUUsTUFBTSxFQUFFLElBQWhCLEtBQWCLEdBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxPQUFPLENBQUMsRFBRyxHQUFJLEdBQUUsRUFBRSxZQUFZLEdBQUcsRUFBRSxNQUFPLEdBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLENBQUMsTUFBTSxBQUFNLEdBQUUsTUFBTSxFQUFFLElBQWhCLEtBQWCLElBQUcsSFBSyxDQUFDLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxBQUFTLElBQVQsTFBVyxFQUFFLEVBQUUsYFBYyxFQUFFLEVBQUUsQFBQyxFQUFFLEtBQUssTUFBTSxJQUFJLEVBQUUsSFBSyxLQUFLLEVBQUUsSFBSyxDQUFDLElBQUksRFBRyxjQUFjLENBQUMsQFBQyxFQUFFLEtBQUssTUFBTSxFQUFFLEVBQUUsVFBVyxFQUFFLENBQUMsTUFBTSxBQUFvQixRQUFPLFVBQVUsUFBUyxLQUFLLENBQUMsSUFBcEQsaUJBQXFELENBQUMsRFBSSxHQUFFLENBQUMsSFBSyxVQUFVLENBQUMsSFBTSxJQUFJLEBQUsNEVBQTRFLENBQUMsRUFBRSxRQUFRLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsSUFBSSxJQUFLLEBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxHQUFJLEdBQUUsRUFBRSxNQUFNLEtBQUssSFBSyxPQUFPLEVBQUUsTUFBTSxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssSFBSyxNQUFNLElBQUksSFBSyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxDQUFDLEVBQUUsTUFBTyxNQUFLLFFBQVEsUFBUyxFQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxHQUFHLEVBQUUsSFBSyxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsRUFBRSxLQUFLLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFHLEFBQUksVUFBVSxTQUFkLEVBQXFCLEBQUsRFBRSxLQUFLLEtBQUssRUFBRSxFQUFFLEtBQUssSFBSyxFQUFFLEVBQUUsQFBQyxFQUFFLEtBQUssRFBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEBQUsTUFBSyxPQUFPLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsSFBSyxFQUFFLEtBQUssQFBQyxDQUFDLENBQUMsQFBQyxDQUFDLEdBQUksRFBRSxLQUFLLEBQUsSFBSyxLQUFLLEdBQUcsTUFBTyxJQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsRFBRyxDQUFDLEVBQUUsTUFBTyxNQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUUsTUFBTyxNQUFLLEBQUsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEdBQUUsSFBSyxFQUFFLEtBQUssQFBQyxDQUFDLENBQUMsRUFBRSxHQUFJLEdBQUUsSFBSyxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssSFBSyxDQUFDLEVBQUUsRUFBRSxLQUFLLEBQUsRUFBRSxNQUFPLEdBQUUsSFBSyxFQUFFLEtBQUssQFBQyxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssRUFBRSxHQUFJLEdBQUUsSFBSyxNQUFNLEdBQUcsRFBRyxHQUFJLENBQUsRUFBRSxNQUFNLEVBQUUsSUFBaEIsSFBbIsSUFBRyxLQUFLLEVBQUUsSFBSyxNQUFNLElBQUksRFBRyxDQUFDLEVBQUUsSUFBSSxNQUFPLEBQUssTUFBTSxPQUFRLFFBQVEsRFBRSxLQUFLLEBQUsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEdBQUUsSFBSyxNQUFNLEVBQUUsRUFBRSxNQUFNLElBQUksQFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLElBQUksTUFBTyxNQUFLLEBQUsRUFBRSxHQUFHLEBQUsTUFBTyxLQUFJLEVBQUUsUFBUyxTQUFTLEVBQUUsQFBQyxLQUFNLElBQUksTFBTSwRUFBNEUsQFBQyxFQUFFLHVCQUFQixTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLEdBQUksRFBRSxFQUFFLEBQUsRFBRyxDQUFDLEVBQUUsQFBQyxZQUFZLEdBQUcsWUFBWSxRQUFRLGCQUFtQixLQUFLLEtBQUssRFBRyxTQUFTLEBQUsUUFBUSxLQUFLLFNBQVMsaJBQWtCLGVBQWUsRUFBRSxVQUFVLENBQUMsRFBRyxLQUFLLEVBQUUsSFBSyxZQUFZLEVBQUUsRUFBRSxZQUFZLEVBQUUsWUFBWSxZQUFZLEVBQUUsQUFBaUIsRUFBRSxPQUFuQixnQkFBMEIsRFBRSxLQUFLLFVBQVUsQFBQyxFQUFFLEtBQUssSFBTSxJQUFJLEBQUsMkJBQTJCLEVBQUUsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLEFBQVcsRUFBRSxXQUFiLFVBQXVCLEFBQVksRUFBRSxXQUFkLFdBQXdCLEFBQVUsRUFBRSxXQUFaLFNBQXNCLEFBQVUsRUFBRSxXQUFaLFNBQXVCLEdBQUUsUFBUyxRQUFRLEFBQVUsRUFBRSxXQUFaLFNBQXVCLEdBQUUsUFBUyxPQUFPLEdBQUksRFBRSxFQUFFLFNBQVMsSFBSyxTQUFTLEdBQUcsRUFBRSxFQUFFLGVBQWUsSFBSyxFQUFFLENBQUMsQFBQyxPQUFPLEVBQUsQFBUyxBQUFDLEdBQUUsRFBSSxHQUFFLEBQUsRFBRyxNQUFNLENBQUMsQFBQyxDQUFDLEBQUsSUFBSSxHQUFFLEVBQUUsRUFBRSxNQUFNLFNBQVMsRUFBRSxRQUFRLENBQUMsRUFBRSxjQUFjLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTyxNQUFLLHVCQUFQixDQUFDLEVBQUUsVFBVyxDQUFDLENBQUMsRUFBRSxtQkFBbUIsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEdBQUUsRFBRyxDQUFDLEdBQUcsTUFBTyxHQUFFLEtBQUssYFBYyxLQUFLLHVCQUFQixDQUFDLEVBQUUsZUFBZSxDQUFDLENBQUMsQFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQFBQyxxQkFBcUIsRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLGDQUFvQyxHQUFHLGdCQUFnQixHQUFHLHlCQUFQixHQUFHLHdCQUFQixHQUFHLFNBQVMsRFBRyxVQUFVLEdBQUcsYFBYyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsTFBTyxNQUFNLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsYFBYyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsSFBSyxLQUFLLENBQUMsRUFBRSxPQUFRLEdBQUUsRUFBRSxFQUFFLEtBQUssSFBSyxPQUFPLElBQUksRUFBRSxHQUFHLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsTFBTyxTQUFTLEVBQUUsQFBQyxNQUFPLEBQUssSFBSyxLQUFLLEtBQUssRUFBRSxFQUFFLEVBQUUsVUFBVSxxQkFBcUIsUFBUyxFQUFFLENBQUMsTFBUSxHQUFFLEVBQUUsVFBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsQFBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLEVBQUUsVFBVyxDQUFDLEVBQUUsRUFBRSxLQUFLLEBQUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsSFBSyxLQUFLLEtBQUssRFBRyxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsSFBSyxLQUFLLEVBQUUsSFBSyxHQUFHLEtBQUssSFBSyxFQUFFLEtBQUssRUFBRSxNQUFPLEdBQUUsSFBSyxLQUFLLEBQUsRUFBRSxFQUFFLEVBQUUsVUFBVSxzQkFBcIsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsVFBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsQFBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLEVBQUUsVFBVyxDQUFDLEVBQUUsRUFBRSxLQUFLLFNBQVMsQFBQyxFQUFFLEBQUsSFBSSxFQUFFLElBQUksSUFBSSxFQUFFLElBQUksSUFBSSxFQUFFLElBQUksSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsUFBUyxTQUFTLEVBQUUsQFBQyxHQUFHLEtBQUssWUFBWSxDQUFDLEVBQUUsQUFBSSxJQUFKLEVBQUsTUFBTSxDQUFDLEVBQUUsRFBSSxHQUFFLEtBQUssSFBSyxNQUFNLEtBQUssSFBSyxLQUFLLEBQUsSFBSyxLQUFLLEtBQUssTUFBTSxDQUFDLEVBQUUsTUFBTyxNQUFLLEBQUsRUFBRSxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRFBRyxlQUFlLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxVQUFVLEVBQUUsVFBVyxFQUFFLENBQUMsSFBSyxLQUFLLEVBQUUsSFBSyxPQUFPLEVBQUUsTFBTyxLQUFLLEBQUsRUFBRSxLQUFLLEtBQUssQFBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLFlBQVksUFBUyxFQUFFLENBQUMsSFBSyxXQUFXLEtBQUssTUFBTSxDQUFDLENBQUMsRUFBRSxXQUFXLFNBQVMsRUFBRSxDQUFDLEdBQUcsSFBSyxPQUFPLEtBQUssSFBSyxHQUFHLEVBQUUsRUFBRSxLQUFNLElBQUksTFBTSxzQFBcMsSFBSyxPQUFPLGCQUFtQixFQUFFLGCQUFvQixDQUFDLEVBQUUsUFBUyxTQUFTLEVBQUUsQFBQyxLQUFLLFdBQVcsQFBQyxFQUFFLEtBQUssTUFBTSxDQUFDLEVBQUUsSFBSyxTQUFTLEVBQUUsQFBQyxLQUFLLFNBQVMsSFBSyxNQUFNLENBQUMsQFBQyxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsRUFBRSxRQUFRLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsSUFBSSxLQUFLLFlBQVksQFBQyxFQUFFLEVBQUUsSFBSyxNQUFNLEVBQUUsRUFBRSxHQUFHLEtBQUssTUFBTSxJQUFJLEVBQUcsSUFBRyxHQUFHLEtBQUssTFBTyxDQUFDLEVBQUUsTUFBTyxNQUFLLEBQUsRUFBRSxDQUFDLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsWUFBWSxTQUFTLEtBQUssUFBUyxDQUFDLENBQUMsQFBQyxFQUFFLFNBQVMsUFBUyxFQUFFLENBQUMsRUFBRSxxQkFBcUIsUFBUyxFQUFFLENBQUMsRUFBRSxzQkFBcIsUFBUyxFQUFFLENBQUMsRUFBRSxTQUFTLFVBQVUsQFBQyxHQUFJLEdBQUUsSFBSyxRQUFRLENBQUMsRUFBRSxNQUFPLElBQUksTUFBSyxLQUFLLElBQUksSFBTSxJQUFHLEdBQUcsSFBTSxJQUFHLEdBQUcsSUFBSSxFQUFFLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRUFBRSxHQUFJLElBQUcsSUFBSSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLGCQUFvQixFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsSFBSyxLQUFLLENBQUMsQFBQyxDQUFDLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLFNBQVMsUFBUyxFQUFFLENBQUMsSFBSyxZQUFZLENBQUMsRUFBRSxHQUFJLEdBQUUsSFBSyxLQUFLLEBQUsSFBSyxLQUFLLEtBQUssTUFBTSxLQUFLLEtBQUssSFBSyxNQUFNLENBQUMsRUFBRSxNQUFPLEBQUssTFBTyxFQUFFLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsVFBVyxHQUFHLHFCQUFxQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsYFBYyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsSFBSyxLQUFLLENBQUMsQFBQyxDQUFDLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsTUFBTyxNQUFLLEtBQUssVFBVyxLQUFLLEtBQUssQFBQyxDQUFDLEVBQUUsRUFBRSxVQUFVLHFCQUFxQixTQUFTLEVBQUUsQFBQyxNQUFPLEBQUssSFBSyxZQUFZLENBQUMsRUFBRSxLQUFLLElBQUksRUFBRSxFQUFFLFVBQVUscJBQXNCLFNBQVMsRUFBRSxDQUFDLEBQUsSFBSSxLQUFLLFNBQVMsQFBQyxDQUFDLEVBQUUsRUFBRSxVQUFVLFNBQVMsUFBUyxFQUFFLENBQUMsSFBSyxZQUFZLENBQUMsRUFBRSxHQUFJLEdBQUUsSFBSyxLQUFLLEBQUsSFBSyxLQUFLLEtBQUssTUFBTSxLQUFLLEtBQUssSFBSyxNQUFNLENBQUMsRUFBRSxNQUFPLEBQUssTFBTyxFQUFFLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsVFBVyxHQUFHLGVBQWUsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsQFBQyxFQUFFLEtBQUssSFBSyxDQUFDLENBQUMsQFBQyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEVBQUUsVUFBVSxTQUFTLFNBQVMsRUFBRSxDQUFDLEdBQUcsSFBSyxZQUFZLENBQUMsRUFBRSxBQUFJLElBQUosRUFBTSxNQUFPLElBQUksWUFBVyxDQUFDLEVBQUUsRFBSSxHQUFFLEtBQUssSFBSyxTQUFTLEtBQUssSFBSyxLQUFLLEBQUsSFBSyxLQUFLLEtBQUssTUFBTSxDQUFDLEVBQUUsTUFBTyxNQUFLLEBQUsRUFBRSxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRFBRyxnQkFBZIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxlQUFlLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxvQkFBbIsRUFBRSxFQUFFLEVBQUUsbJBQWCLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLFVBQVUsQFBQyxFQUFFLEBQUsRFBRSxhQUFhLENBQUMsRUFBRSxBQUFXLElBQVgsVUFBYyxFQUFFLFdBQVcsQUFBZSxJQUFmLGFBQWlCLEdBQUksRFBRSxDQUFDLEVBQUUsRUFBRSxXQUFXLEdBQUksRFBRSxFQUFFLFlBQVksYUFBYSxDQUFDLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxZQUFZLFFBQVEsQFBQyxDQUFDLEVBQUUsRFBSSxHQUFFLENBQUMsQFBQyxDQUFDLEVBQUUsQFBQyxhQUFhLEdBQUcsVFBVyxHQUFHLGdCQUFnQixHQUFHLHFCQUFxQixHQUFHLGlCQUFpQixHQUFHLHFCQUFxQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRUFBRSxrQkFBaIsTFBTyxFQUFFLGCQUFvQixPQUFPLEVBQUUscJBQXNCLEBQUsRUFBRSxnQFBZMsVUFBTyxFQUFFLDRCQUEQixPQUFPLEVBQUUsZJBQWdCLFVBQUsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsQFBQyxFQUFFLEtBQUssSFBSyxvQkFBbIsQFBQyxFQUFFLEtBQUssUFBUyxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEVBQUUsVUFBVSxhQUFhLFNBQVMsRUFBRSxDQUFDLEtBQUssSFBSyxDQUFDLEtBQUssRUFBRSxZQUFZLEtBQUssUFBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsVFBVyxHQUFHLGtCQUFrQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUMsRUFBRSxLQUFLLEtBQUssWUFBWSxFQUFFLEtBQUssZUFBZSxRQUFRLENBQUMsQFBQyxDQUFDLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLGFBQWEsUFBUyxFQUFFLENBQUMsSFBSyxXQUFXLEBQUsRUFBRSxFQUFFLEtBQUssSFBSyxXQUFXLEBQUsQFBQyxFQUFFLEtBQUssSFBSyxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsVFBVyxFQUFFLFdBQVcsRFBRyxrQkFBaIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsVFBVyxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssdUJBQXVCLENBQUMsRUFBRSxLQUFLLFNBQVMsRUFBRSxLQUFLLGVBQWUsRUFBRSxDQUFDLENBQUMsQFBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLGFBQWEsUFBUyxFQUFFLENBQUMsRFBRyxFQUFFLENBQUMsRFBSSxHQUFFLEtBQUssVFBVyxLQUFLLFdBQVcsRUFBRSxLQUFLLFdBQVcsSFBSyxVQUFVLEVBQUUsRUFBRSxLQUFLLEBQUsQFBQyxFQUFFLFVBQVUsYUFBYSxLQUFLLEtBQUssQFBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRFBRyxrQkFBaIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsVFBVyxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssWUFBWSxFQUFFLEdBQUksRFBRSxLQUFLLEtBQUssWUFBWSxHQUFHLEtBQUssTUFBTSxFQUFFLEtBQUssSUFBSSxFQUFFLEtBQUssSFBSyxLQUFLLEtBQUssSFBSyxHQUFHLEtBQUssZUFBZSxHQUFHLEVBQUUsSFBSyxTQUFTLEVBQUUsQFBQyxFQUFFLFlBQVksRFBRyxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRFBRyxFQUFFLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsRUFBRSxFQUFFLFVBQVUsRUFBRSxlQUFlLENBQUMsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEBQUsQFBQyxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsUUFBUSxVQUFVLENBQUMsRUFBRSxVQUFVLFFBQVEsSFBSyxJQUFJLEVBQUUsSFBSyxLQUFLLElBQUksRUFBRSxFQUFFLFVBQVUsTFBTyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxVQUFVLEBQUsSFBSyxJQUFJLEdBQUksRUFBQyxLQUFLLGdCQUFnQixLQUFLLGFBQWMsTUFBSyxlQUFlLEdBQUcsRUFBRSxNQUFNLEtBQUssZUFBZSxDQUFDLEVBQUUsSUFBSSxHQUFHLEdBQUcsRUFBRSxFQUFFLFVBQVUsZUFBZSxVQUFVLENBQUMsSFBSyxlQUFlLEdBQUcsSFBSyxVQUFVLEtBQUssWUFBYSxNQUFLLEBQUsRUFBRSxLQUFLLFlBQWEsRFBRSxNQUFNLEtBQUssZUFBZSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssZUFBZSxJQUFJLEVBQUUsRUFBRSxVQUFVLEBQUsVUFBVSxDQUFDLEdBQUcsSFBSyxVQUFVLEtBQUssVFBVyxNQUFNLEdBQUcsRFBSSxHQUFFLEtBQUssRUFBRSxLQUFLLElBQUksSFBSyxJQUFJLEtBQUssTUFBTSxLQUFLLEVBQUUsRFBRyxLQUFLLEBQUsSFBSyxJQUFJLEBQUsTUFBSyxJQUFJLEVBQUUsTFBTyxLQUFLLFVBQVUsUFBUyxFQUFFLEtBQUssSFBSyxVQUFVLEtBQUssTUFBTSxDQUFDLEVBQUUsVUFBVSxhQUFhLEVBQUUsSFBSyxLQUFLLFNBQVMsSFBSyxNQUFNLENBQUMsRUFBRSxVQUFVLFlBQVksYUFBYSxFQUFFLEtBQUssSFBSyxNQUFNLEtBQUssTUFBTSxDQUFDLEVBQUUsTUFBTyxNQUFLLEBQUsRUFBRSxLQUFLLEtBQUssQFBQyxLQUFLLEVBQUUsSFBSyxDQUFDLFFBQVEsSFBSyxJQUFJLEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsRFBRyxrQkFBaIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLFdBQVcsRUFBRSxDQUFDLEtBQUssSFBSyxHQUFHLFVBQVUsSFBSyxXQUFXLENBQUMsRUFBRSxLQUFLLGVBQWUsSFBSyxLQUFLLGdCQUFnQixDQUFDLEVBQUUsSFBSyxTQUFTLEdBQUcsSFBSyxXQUFXLEdBQUcsSFBSyxTQUFTLEdBQUcsSFBSyxXQUFXLENBQUMsSFBSyxDQUFDLEVBQUUsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxLQUFLLFNBQVMsSUFBSSxDQUFDLEVBQUUsVUFBVSxDQUFDLEtBQUssUFBUyxFQUFFLENBQUMsSFBSyxLQUFLLEBQUsQFBQyxDQUFDLEVBQUUsSUFBSSxVQUFVLENBQUMsRFBRyxLQUFLLFdBQVcsTUFBTSxHQUFHLEtBQUssTUFBTSxFQUFFLEdBQUcsQFBQyxLQUFLLEtBQUssSFBSyxFQUFFLEtBQUssUUFBUSxFQUFFLEtBQUssVFBVyxFQUFFLEBQUsRUFBTixDQUFTLEtBQUssSFBSyxRQUFRLENBQUMsQFBQyxDQUFDLEBQUsRUFBRSxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssWUFBYSxNQUFLLFNBQVMsSFBSyxlQUFlLEVBQUcsTUFBSyxXQUFXLEdBQUcsSFBSyxLQUFLLFFBQVEsQFBQyxFQUFFLEtBQUssVUFBVSxLQUFLLFNBQVMsTUFBTSxDQUFDLEVBQUUsSFBSyxRQUFRLEdBQUcsRFBRyxFQUFFLEdBQUcsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEBQUssVFBVyxHQUFHLEtBQUssQFBQyxFQUFFLElBQUksRUFBRSxRQUFRLFVBQVUsQFBQyxLQUFLLFdBQVcsSFBSyxlQUFlLEtBQUssZJBQWdCLEtBQUssSFBSyxXQUFXLENBQUMsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLEVBQUUsQFBQyxHQUFHLEtBQUssVFBVyxHQUFHLEBQVEsRFBRSxFQUFFLEVBQUUsSFBSyxXQUFXLEdBQUcsTFBTyxJQUFJLEtBQUssVFBVyxHQUFHLEdBQUcsSFBSyxLQUFLLENBQUMsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLGlCQUFpQixJQUFJLENBQUMsRUFBRSxpQkFBaUIsUFBUyxFQUFFLENBQUMsRFBRyxLQUFLLFNBQVMsSFBTSxJQUFJLEBQUsZUFBZSxLQUFLLDBCQUEwQixFQUFFLEtBQUssVFBVyxFQUFFLFdBQVcsSFBSyxnQkFBZIsRUFBRSxLQUFLLFNBQVMsRUFBRSxHQUFJLEdBQUUsSFBSyxNQUFPLEdBQUUsRFBRyxPQUFPLFNBQVMsRUFBRSxDQUFDLEVBQUUsYUFBYSxDQUFDLENBQUMsQFBQyxFQUFFLEVBQUUsRFBRyxNQUFNLFVBQVUsQFBQyxFQUFFLElBQUksQFBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLFFBQVEsUFBUyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQFBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEBQUsVUFBVSxDQUFDLEBQUsQFBQyxLQUFLLFVBQVUsQFBQyxLQUFLLFlBQWEsTUFBSyxTQUFTLEdBQUcsSFBSyxVQUFVLEtBQUssUFBUyxNQUFNLEVBQUUsRFBRyxFQUFFLEBQUsVUFBVSxDQUFDLEdBQUcsQFBQyxLQUFLLFVBQVUsSFBSyxXQUFXLEBQUsRFBRyxHQUFJLEdBQUUsSFBSyxTQUFTLEdBQUcsTUFBTyxNQUFLLGdCQUFpQixNQUFLLEBQUsSFBSyxjQUFjLEVBQUUsRUFBRSxJQUFJLEtBQUssVUFBVSxLQUFLLFNBQVMsTFBTyxFQUFFLENBQUMsQFBQyxFQUFFLEBQUsVUFBVSxDQUFDLEVBQUUsYUFBYSxTQUFTLEVBQUUsQFBQyxLQUFLLEtBQUssQFBQyxDQUFDLEVBQUUsZUFBZSxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsTUFBSyxnQkFBZIsRFBRyxFQUFFLEtBQUssZJBQWdCLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixVQUFVLENBQUMsTFBUSxLQUFLLEBQUssZJBQWdCLEtBQUssZJBQWdCLGVBQWUsQFBQyxHQUFJLEBQUssVFBVyxHQUFHLEtBQUssZJBQWdCLEdBQUcsRUFBRSxLQUFLLFVBQVUsQFBQyxHQUFHLEtBQUssUFBUyxLQUFNLElBQUksTFBTSxlQUFlLEtBQUssMEJBQTBCLEVBQUUsSFBSyxTQUFTLEdBQUcsSFBSyxVQUFVLEtBQUssUFBUyxLQUFLLENBQUMsRUFBRSxTQUFTLFVBQVUsQFBQyxHQUFJLEdBQUUsVUFBVSxLQUFLLEtBQUssTUFBTyxNQUFLLFNBQVMsSFBSyxTQUFTLEBQUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLEtBQUssRFBRyxFQUFFLFdBQVcsRFBRyxDQUFDLEVBQUUsRUFBRSxxQFBcUMsQFBQyxNQUFDLENBQVMsQFBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLEBQUsSUFBSSxHQUFFLFFBQVEsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxjQUFjLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxVQUFVLEVBQUUsRFBRyxPQUFPLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxHQUFHLFFBQVEsUFBUyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQFBQyxFQUFFLEdBQUcsTUFBTSxVQUFVLENBQUMsRFBRyxDQUFDLEdBQUksRFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsTFBTyxPQUFPLEBQUsTUFBTyxHQUFFLFFBQVEsRUFBRSxZQUFZLGNBQWMsQFBQyxFQUFFLENBQUMsTUFBTSxTQUFTLEBQUsRFBRSxPQUFPLENBQUMsVUFBVSxNQUFPLEdBQUUsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxHQUFHLEVBQUUsRFBRyxPQUFPLEBQUsTFBTyxTQUFTLEBQUsRFBRSxLQUFLLEVBQUUsTUFBTSxRQUFRLEBQUsTFBTSxVQUFVLEBQUsTUFBTSxDQUFDLEVBQUUsQFBQyxNQUFNLGFBQWEsSUFBSSxFQUFFLEdBQUksWUFBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLElBQUksRUFBRSxJQUFJLEVBQUUsRFBRyxDQUFDLEVBQUUsRFBRyxFQUFFLEdBQUcsTFBTyxNQUFPLEBQUsYUFBYSxNQUFPLFFBQUsTFBTyxDQUFDLFVBQVUsSFBTSxJQUFJLEBQUsOEJBQThCLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxDQUFDLEBQUsRUFBTixDQUFTLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQFBQyxFQUFFLEBQUsQFBQyxDQUFDLENBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsTFBTyxPQUFPLFdBQVcsYFBYyxFQUFFLGFBQWEsVUFBVSxTQUFTLEVBQUUsUFBUyxHQUFHLENBQUMsSFBSyxjQUFjLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxVQUFVLEVBQUUsRUFBRSxhQUFhLENBQUMsRUFBRSxLQUFLLFFBQVEsRUFBRSxLQUFLLEdBQUksRFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLEtBQUssQFBQyxPQUFPLEVBQUsQFBUyxLQUFLLFFBQVEsRFBSSxHQUFFLEBQUsRUFBRSxLQUFLLFFBQVEsTUFBTSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLFdBQVcsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEtBQUssQFBQyxDQUFDLEVBQUUsRFBRyxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEBQUsQUFBUyxLQUFULEBQVcsSFBSyxRQUFRLEdBQUcsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQFBQyxFQUFFLEtBQUssUUFBUSxHQUFHLEVBQUUsVUFBVSxDQUFDLEVBQUUsTUFBTSxFQUFFLFVBQVUsQFBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsTFBTyxVQUFVLENBQUMsTUFBTyxHQUFFLEBQUsSFBSyxRQUFRLEBQUsQFBQyxFQUFFLEtBQUssTFBTyxFQUFFLElBQUksRUFBRSxNQUFNLFVBQVUsQFBQyxNQUFPLEBQUssUUFBUSxNQUFNLEVBQUUsSUFBSSxFQUFFLGVBQWUsUFBUyxFQUFFLENBQUMsRFBRyxFQUFFLGFBQWEsWUFBWSxFQUFFLEFBQWUsSFBSyxjQUFwQixhQUFnQyxLQUFNLElBQUksTFBTSxLQUFLLFlBQVksaNBQWtDLEVBQUUsTUFBTyxJQUFJLEdBQUUsSFBSyxDQUFDLFdBQVcsQUFBZSxLQUFLLGNBQXBCLFlBQStCLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxzQFBcMsRFBRyxhQUFhLEdBQUcsVFBVyxHQUFHLGtCQUFrQixHQUFHLGtCQUFrQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBRyxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRFBRyxFQUFFLFlBQVksQUFBYSxNQUFPLGFBQXBCLEtBQWlDLEFBQWEsTUFBTyxZQUFwQixJQUErQixFQUFFLFdBQVcsQUFBYSxNQUFPLFFBQXBCLElBQTJCLEVBQUUsVFBVyxBQUFhLEBQUsWUFBcEIsSUFBKIsQUFBYSxNQUFPLGFBQXBCLElBQWdDLEVBQUUsSFBSyxPQUFPLENBQUMsRFBSSxHQUFFLEdBQUksYUFBWSxDQUFDLEVBQUUsRFBRyxDQUFDLEVBQUUsSFBSyxBQUFJLEdBQUksTUFBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssaUJBQWlCLENBQUMsRUFBRSxPQUEzQyxDQUErQyxNQUFDLENBQVMsRFBRyxDQUFDLEdBQUksRFBRSxHQUFJLEBQUssYUFBYSxLQUFLLGCQUFtQixLQUFLLGdCQUFnQixLQUFLLGVBQWUsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLEtBQUssQUFBSSxFQUFFLFFBQVEsaUJBQWlCLEVBQUUsTFBakMsQFBcUMsTUFBQyxDQUFTLEVBQUUsSFBSyxFQUFFLENBQUMsQFBQyxDQUFDLEdBQUcsQFBQyxFQUFFLFdBQVcsQFBQyxDQUFDLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxNQUFDLENBQVMsRUFBRSxXQUFXLEVBQUUsQFBQyxFQUFFLENBQUMsaJBQWtCLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxPQUFRLEdBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsZUFBZSxFQUFFLEVBQUUsRUFBRSxQkFBdIsRUFBRSxFQUFFLEdBQUksTFBTSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsRFBRyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxZQUFZLENBQUMsRUFBRSxLQUFLLEtBQUssYFBYyxFQUFFLEtBQUssUFBUyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsSFBSyxLQUFLLGNBQWMsQFBQyxDQUFDLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsVFBVyxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxDQUFDLEtBQSCLEBQWDLEVBQUUsRUFBRSxHQUFHLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxFQUFFLENBQUMsSFBakMsTFBdUMsRFBRSxNQUFPLEdBQUUsTFBTyxJQUFLLEdBQUUsTFBTyxLQUFLLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxXQUFXLEdBQUksWUFBVyxDQUFDLEVBQUUsRFBSSxPQUFNLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxBQUFRLEBQUsRFBRSxFQUFFLFdBQVcsQFBQyxLQUEvQixPQUFvQyxFQUFFLEVBQUUsRFBRyxBQUFRLEBQUsRFBRSxFQUFFLFdBQVcsRUFBRSxDQUFDLEtBQWpDLEBQXVDLEdBQUUsTUFBTyxHQUFFLEBQUsSUFBSyxHQUFFLEBQUsSFBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUcsRFBRSxLQUFLLEVBQUUsSFBSyxJQUFJLElBQUksRUFBRyxHQUFFLEBQUsRUFBRSxLQUFLLElBQUksSUFBSSxHQUFJLEdBQUUsSFBSyxJQUFJLElBQUksRFBRyxFQUFFLEtBQUssSUFBSSxJQUFJLEdBQUcsSUFBSSxFQUFFLEtBQUssSUFBSSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssSUFBSSxHQUFHLEdBQUcsTUFBTyxFQUFDLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxXQUFXLFNBQVMsRUFBRSxDQUFDLEBQUsRFBRSxXQUFXLEVBQUUsWUFBWSxhQUFhLENBQUMsRUFBRSxTQUFTLEBQUsRUFBRSxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxHQUFJLEBQUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBSSxHQUFFLEVBQUUsTUFBTSxJQUFJLEVBQUUsSFBSyxVQUFVLEVBQUcsRFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEBQUsRFBRyxFQUFFLEBQUsQFBQyxJQUFJLEdBQUcsQUFBSSxJQUFKLEVBQUsRFBRyxBQUFJLElBQUosRUFBTSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSFBSyxJQUFJLEVBQUUsRUFBRSxFQUFFLEtBQUssTUFBTSxFQUFFLEBQUsRUFBRSxLQUFLLEVBQUcsSUFBRyxNQUFNLEVBQUUsSFBSyxNQUFNLEdBQUcsRFBRyxLQUFLLEVBQUUsSFBSyxNQUFNLEtBQUssRUFBRSxDQUFDLEBQUsRFBRSxTQUFTLEdBQUksRFBRSxTQUFTLEVBQUUsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEVBQUUsTFBTyxHQUFHLEVBQUUsaJBQWtCLENBQUMsQFBQyxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsVFBVyxhQUFhLFFBQVEsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLGFBQWEsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsWUFBWSxFQUFFLFdBQVcsYUFBYSxRQUFRLEVBQUUsSUFBSSxFQUFFLEdBQUcsSFBSyxVQUFVLEtBQUssUFBUyxPQUFPLENBQUMsRFBRyxFQUFFLFdBQVcsQFBQyxHQUFJLEdBQUUsRUFBRSxBQUFDLEdBQUUsRFBSSxZQUFXLEVBQUUsTFBTyxLQUFLLFNBQVMsTUFBTSxHQUFHLElBQUksSFBSyxTQUFTLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLFNBQVMsTUFBTSxDQUFDLEtBQUsRFBRSxLQUFLLFNBQVMsTFBTyxDQUFDLEVBQUUsSFBSyxTQUFTLElBQUksQFBQyxHQUFJLEdBQUUsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsSUFBSyxHQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUyxHQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsQUFBTSxLQUFJLEVBQUUsSFBWixLQUFpQixJQUFJLEBQUsRFBRSxHQUFJLEFBQUksSUFBSixFQUFGLEVBQVUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVMsRFBRSxXQUFZLEdBQUUsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLFNBQVMsRUFBRSxFQUFFLEBQUsRFBSSxHQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxLQUFLLFNBQVMsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLElBQUksSFBSyxLQUFLLENBQUMsSFBSyxFQUFFLFdBQVcsQFBQyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQFBQyxFQUFFLEVBQUUsVUFBVSxNQUFNLFVBQVUsQFBQyxLQUFLLFVBQVUsSFBSyxTQUFTLFFBQVMsTUFBSyxLQUFLLENBQUMsSFBSyxFQUFFLFdBQVcsSFBSyxRQUFRLEVBQUUsSFBSyxDQUFDLENBQUMsQFBQyxFQUFFLEtBQUssUFBUyxLQUFLLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLGFBQWEsUFBUyxFQUFFLENBQUMsSFBSyxLQUFLLENBQUMsSFBSyxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsSFBSyxFQUFFLElBQUksQFBQyxDQUFDLEVBQUUsRUFBRSxpQkFBaUIsQFBQyxFQUFFLENBQUMsZJBQWdCLEdBQUcseUJBQXlCLEdBQUcsWUFBWSxHQUFHLFVBQVUsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxlQUFlLEVBQUUsRUFBRSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsQFBQyxNQUFPLEVBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLEBQVEsRFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEdBQUcsSUFBSSxFQUFFLFdBQVcsQFBQyxFQUFFLEBQUsRUFBQyxDQUFDLEVBQUUsYFBYyxFQUFFLEVBQUUsUUFBUSxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsYUFBYSxNQUFNLEVBQUUsRFBRyxDQUFDLEBQUsSUFBSSxNQUFLLENBQUMsQFBQyxFQUFFLENBQUMsSFBSyxDQUFDLENBQUMsQFBQyxNQUFDLENBQVMsRFBRyxDQUFDLEdBQUksRFBRSxHQUFJLEBQUssYUFBYSxLQUFLLGCQUFtQixLQUFLLGdCQUFnQixLQUFLLGVBQWUsTUFBTyxHQUFFLEBQUsQFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsTUFBQyxDQUFTLEtBQUsSUFBSSxPQUFNLGlDQUFpQyxDQUFDLENBQUMsQFBQyxFQUFFLEdBQUksRFBRSxDQUFDLGlCQUFpQixTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRFBRyxHQUFHLEVBQUUsTUFBTyxRQUFPLGFBQWEsTUFBTSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsRFBRyxBQUFVLElBQVYsUFBYSxBQUFlLElBQWYsYUFBaUIsRUFBRSxLQUFLLEBQUsYUFBYSxNQUFNLEtBQUssRUFBRSxNQUFNLEVBQUUsSFBSyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxLQUFLLEBQUsYUFBYSxNQUFNLEtBQUssRUFBRSxTQUFTLEVBQUUsSFBSyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRFBRyxFQUFFLEBQUsRFBRSxLQUFLLEVBQUUsQFBQyxFQUFFLGdCQUFnQixTQUFTLEVBQUUsQFBQyxPQUFRLEdBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxHQUFHLEBQUsYUFBYSxFQUFFLEVBQUUsRUFBRSxNQUFPLEVBQUMsRUFBRSxlQUFlLENBQUMsVFBVyxVQUFVLENBQUMsRFBRyxDQUFDLEBQUsRFBRSxZQUFZLEFBQUksTFBTyxhQUFhLEBQUsSFBSyxHQUFJLFlBQVcsQFBQyxDQUFDLEVBQUUsUFBdEQsQFBNEQsTUFBQyxDQUFTLEBQUsRUFBRSxDQUFDLEVBQUUsRUFBRSxXQUFXLFVBQVUsQFBQyxHQUFHLENBQUMsTUFBTyxHQUFFLFlBQVksQUFBSSxPQUFPLGFBQWEsTUFBTSxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUMsRUFBRSxTQUFyRCxDQUEyRCxNQUFDLENBQVMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTSxFQUFFLEVBQUUsVUFBVSxDQUFDLEVBQUUsRUFBRSxHQUFHLEdBQUcsQUFBZSxJQUFmLGFBQWlCLEVBQUUsRUFBRSxlQUFlLFdBQVcsQUFBZSxJQUFmLGNBQWCLEdBQUUsRUFBRSxlQUFlLFlBQVksRUFBRSxLQUFLLEVBQUUsRFBRyxHQUFHLENBQUMsTUFBTyxHQUFFLGlCQUFpQixFQUFFLEVBQUUsQFBQyxDQUFDLEBQUMsQFBUyxFQUFFLEtBQUssTUFBTSxFQUFFLENBQUMsQFBQyxDQUFDLEBQUsRFBRSxnQkFBZIsQFBQyxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxJQUFJLEVBQUUsRFBRyxFQUFFLEdBQUcsTUFBTyxFQUFDLENBQUMsRUFBRSxrQkFBaIsRUFBRSxHQUFJLEdBQUUsQFBQyxFQUFFLEVBQUUsTFBTyxDQUFDLEBQUsRUFBRSxNQUFNLFNBQVMsRUFBRSxDQUFDLEBQUsRFBRSxFQUFFLEdBQUksTFBTSxFQUFFLEBQUsQFBQyxDQUFDLEVBQUUsWUFBWSxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsTFBTyxXQUFXLENBQUMsRUFBRSxNQUFNLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsRUFBRSxHQUFJLFlBQVcsRUFBRSxNQUFNLENBQUMsQFBQyxFQUFFLFdBQVcsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUMsQFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLEBQUsRUFBRSxNQUFNLEVBQUUsWUFBWSxTQUFTLEVBQUUsQFBQyxNQUFPLElBQUksWUFBVyxDQUFDLEVBQUUsTUFBTSxFQUFFLFdBQVcsUFBUyxFQUFFLENBQUMsTUFBTyxJQUFJLFlBQVcsQFBQyxDQUFDLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsYFBYyxDQUFDLENBQUMsQFBQyxFQUFFLEVBQUUsWUFBWSxDQUFDLEBQUsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEdBQUksWUFBVyxDQUFDLENBQUMsQFBQyxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEdBQUksWUFBVyxDQUFDLEVBQUUsRFBSSxPQUFNLEVBQUUsVUFBVSxDQUFDLENBQUMsRUFBRSxZQUFZLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxNQUFPLElBQUksWUFBVyxDQUFDLENBQUMsRUFBRSxXQUFXLFNBQVMsRUFBRSxDQUFDLEBQUsRFBRSxjQUFjLEdBQUksWUFBVyxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxXQUFXLENBQUMsTFBTyxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsRFBSSxPQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxZQUFZLFNBQVMsRUFBRSxDQUFDLEBQUsRFBRSxNQUFNLEVBQUUsVFBVyxFQUFFLFdBQVcsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLGNBQWMsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFdBQVcsQFBQyxPQUFPLEVBQUUsTUFBTSxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsRUFBRSxHQUFJLEBQUsRUFBRSxNQUFNLENBQUMsQFBQyxFQUFFLFlBQVksUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLFdBQVcsVFBVyxDQUFDLEVBQUUsTUFBTSxFQUFFLFdBQVcsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsRFBSSxZQUFXLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLFlBQVksUFBUyxFQUFFLEVBQUUsQFBQyxHQUFHLEVBQUUsRFBRyxHQUFHLENBQUMsRUFBRSxNQUFPLEdBQUUsRUFBRSxhQUFhLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxVQUFVLENBQUMsRUFBRSxNQUFPLEdBQUUsRFBRyxHQUFHLENBQUMsQFBQyxFQUFFLEVBQUUsUUFBUSxTQUFTLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxNQUFNLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxDQUFDLEdBQUksRFBRSxFQUFFLEdBQUcsQUFBTSxJQUFOLEtBQVMsQUFBSyxJQUFMLElBQVEsQUFBSSxJQUFKLEdBQUsSUFBSSxFQUFFLEBQUsRFBSSxDQUFPLElBQVAsSFBUyxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLENBQUMsTUFBTyxHQUFFLEtBQUssRFBRyxDQUFDLEVBQUUsRUFBRSxVQUFVLFNBQVMsRUFBRSxDQUFDLEBQUsQUFBVSxPQUFPLElBQWpCLFNBQWCLFNBQVMsQUFBbUIsTFBTyxVQUFVLFNBQVMsSFBSyxDQUFDLElBQWELGlCQUFxRCxRQUFRLEVBQUUsWUFBWSxFQUFFLFNBQVMsQFBQyxFQUFFLGFBQWEsRUFBRSxZQUFZLFlBQWEsWUFBVyxhQUFhLEVBQUUsYUFBYSxZQUFhLGFBQVksYFBYyxNQUFNLEVBQUUsRUFBRSxhQUFhLFNBQVMsRUFBRSxDQUFDLEdBQUcsQFBQyxFQUFFLEVBQUUsWUFBWSxHQUFHLEtBQUsSUFBSSxPQUFNLEVBQUUsbNBQWDLENBQUMsRUFBRSxFQUFFLGlCQUFpQixNQUFNLEVBQUUsaUJBQWlCLEdBQUcsRUFBRSxPQUFPLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRFBRyxJQUFJLEVBQUUsRUFBRSxFQUFHLElBQUcsSUFBSSxPQUFPLElBQUksRFBRyxNQUFRLElBQUUsRUFBRSxXQUFXLENBQUMsRFBRyxHQUFHLElBQUksSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFLFlBQVksRUFBRSxNQUFPLEVBQUMsRUFBRSxFQUFFLEBQUsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsVUFBVSxDQUFDLEVBQUUsTUFBTSxHQUFHLEtBQUssRFBRyxDQUFDLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFNBQVMsUFBUyxFQUFFLEVBQUUsQFBQyxZQUFZLENBQUMsQFBQyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsVUFBVSxHQUFJLEVBQUMsRUFBRSxFQUFFLEBQUsVUFBVSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxPQUFPLElBQUksSUFBSSxJQUFLLFdBQVUsRFBRyxVQUFVLEdBQUcsZUFBZSxDQUFDLEdBQUcsQUFBUyxFQUFFLEtBQVgsUUFBZIsRFBRSxHQUFHLFVBQVUsRFBRyxJQUFJLEBQUsRUFBQyxFQUFFLEVBQUUsZUFBZSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxRQUFRLFFBQVEsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEBQUsYUFBYSxPQUFNLEFBQUssQFBQyxnQkFBZIsZUFBZSxFQUFFLFFBQVEsTFBTyxVQUFVLFNBQVMsSFBSyxDQUFDLENBQUMsSUFBaEYsSFBbYsQUFBYSxNQUFPLFlBQXBCLElBQStCLEdBQUksRFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUksWUFBVyxFQUFFLEBQUsUFBUyxFQUFFLENBQUMsRUFBRSxFQUFFLEBQUsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxPQUFPLEtBQUssQFBQyxFQUFFLEVBQUUsaJBQWtCLENBQUMsQFBQyxDQUFDLEVBQUUsQFBQyxDQUFDLEVBQUUsSFBSyxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxVQUFVLENBQUMsRUFBRSxNQUFPLEdBQUcsQFBZIsSUFBaEIsYFBaIsRUFBRSxFQUFFLFlBQVksYUFBYSxDQUFDLEVBQUUsQUFBVyxJQUFYLFVBQWUsRFBRSxFQUFFLEVBQUUsTFBTyxDQUFDLEVBQUUsRFBRyxBQUFLLElBQUwsSUFBUyxHQUFFLFNBQVMsRUFBRSxDQUFDLEBQUsRFBRSxFQUFFLEVBQUUsVFBVyxHQUFJLFlBQVcsRUFBRSxNQUFNLEVBQUUsRFBSSxPQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksRFBRyxFQUFFLFFBQVEsTFBTyxHQUFJLEBQUsMkJBQTJCLEVBQUUsNEVBQTRFLENBQUMsQFBQyxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsVFBVyxFQUFFLGFBQWEsRUFBRSxnQkFBZIsRFBRyxZQUFZLEdBQUcsYUFBYSxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsbJBQWCLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRyxHQUFFLFFBQVEsRUFBRSxFQUFFLFdBQVcsRFBRyxXQUFXLEVBQUUsQFBQyxLQUFLLEBQUsQFBQyxFQUFFLEtBQUssWUFBWSxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsZUFBZSxTQUFTLEVBQUUsQFBQyxHQUFHLENBQUMsSFBSyxPQUFPLHNCQUFzQixDQUFDLEVBQUUsQFBQyxLQUFLLEBQUsTFBTyxFQUFFLEdBQUksRFBRSxLQUFLLEBQUsVFBVyxDQUFDLEVBQUUsSFBTSxJQUFJLEBQUsKNBQStDLEVBQUUsTFBTyxDQUFDLEVBQUUsYFBYyxFQUFFLEBQUsQFBQyxFQUFFLEdBQUcsQFBQyxDQUFDLEVBQUUsWUFBWSxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEBQUsTUFBTSxLQUFLLEBQUsUFBUyxDQUFDLEVBQUUsRFBSSxHQUFFLEtBQUssTFBTyxXQUFXLENBQUMsSUFBSSxFQUFFLEBQUsTUFBSyxPQUFPLFNBQVMsQFBQyxFQUFFLENBQUMsRUFBRSxzQkFBcIsVUFBVSxDQUFDLEtBQUssVFBVyxLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxQkFBdIsSFBSyxPQUFPLFFBQVEsQFBQyxFQUFFLEtBQUssNEJBQTRCLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxLQUFLLGtCQUFrQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxlQUFlLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxLQUFLLGlCQUFpQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxpQkFBaUIsSFBSyxPQUFPLFFBQVEsQFBQyxFQUFFLEdBQUksRFBRSxLQUFLLEBQUsUFBUyxLQUFLLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxXQUFXLGFBQWEsUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLENBQUMsRUFBRSxLQUFLLFdBQVcsSFBSyxZQUFZLGVBQWUsQFBQyxDQUFDLEVBQUUsMkJBQTJCLFVBQVUsQFBQyxLQUFLLHNCQUFzQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxPQUFPLEtBQUssQFBQyxFQUFFLEtBQUssVFBVyxLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxQkFBdIsSFBSyxPQUFPLFFBQVEsQFBQyxFQUFFLEtBQUssNEJBQTRCLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxLQUFLLGtCQUFrQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxlQUFlLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxLQUFLLGlCQUFpQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxvQkFBbIsQFBQyxFQUFFLEBQVEsRFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLHNCQUFzQixHQUFHLEVBQUUsRFBRyxFQUFFLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxFQUFFLEtBQUssTFBTyxRQUFRLENBQUMsRUFBRSxFQUFFLEtBQUssTFBTyxTQUFTLENBQUMsRUFBRSxLQUFLLGCQUFvQixHQUFHLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxNQUFNLENBQUMsQFBQyxFQUFFLGtDQUFrQyxVQUFVLENBQUMsRFBRyxLQUFLLDZCQUEQixLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsSFBSyxtQFBbUMsSFBSyxPQUFPLFFBQVEsQFBQyxFQUFFLEtBQUssVFBVyxLQUFLLEBQUsUUFBUSxDQUFDLEVBQUUsRUFBRSxLQUFLLFdBQVcsSFBTSxJQUFJLEBQUscUNBQXFDLENBQUMsRUFBRSxlQUFlLFVBQVUsQFBQyxHQUFJLEdBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEtBQUssTUFBTSxPQUFPLElBQUksRUFBRSxLQUFLLEBQUsRFBRyxLQUFLLEBQUsUFBUyxFQUFFLGlCQUFpQixFQUFFLEtBQUssZUFBZSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsYFBYyxLQUFLLEBQUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLGtCQUFrQixDQUFDLEVBQUUsZUFBZSxVQUFVLENBQUMsRFBSSxHQUFFLElBQUksSFBSyxPQUFPLFNBQVMsSFBSyxnQkFBZIsRUFBRSxLQUFLLEBQUscJBQXNCLEVBQUUsbUJBQWCLEdBQUcsQUFBQyxHQUFFLEdBQUksRFBRSxDQUFDLEBQUsSFBSyxLQUFLLEVBQUUsSFBSyxXQUFXLEdBQUcsZJBQWdCLEtBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxLQUFLLENBQUMsRUFBRSxHQUFHLEtBQUssbJBQWCLEtBQUssTUFBTSxRQUFRLEFBQUksSFBSyxvQkFBVCxHQUEQixBQUFJLEtBQUssTUFBTSxTQUFmLEVBQXNCLEtBQUsSUFBSSxPQUFNLGtDQUFrQyxLQUFLLGtCQUFrQixnQFBZMsSFBSyxNQUFNLEBQUsQFBQyxFQUFFLGlCQUFpQixVQUFVLENBQUMsRFBSSxHQUFFLEtBQUssTFBTyxxQkFBcUIsRUFBRSxxQkFBcUIsRUFBRSxHQUFHLEVBQUUsRUFBRSxLQUFLLEFBQUMsTUFBSyxZQUFZLEVBQUUsRUFBRSxpQkFBaUIsRUFBdUosRFBSSxPQUFNLGEQUFvRCxFQUFuTixHQUFJLEBQUseUlBQXlJLEVBQWtFLEtBQUssTFBTyxTQUFTLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxHQUFHLEtBQUssZUFBZSxFQUFFLHFCQUFxQixFQUFFLEtBQUsscJBQXNCLEVBQUUsSFBSyxhQUFhLEVBQUUsaJBQWtCLEtBQUssMEJBQTBCLEVBQUUsaJBQWtCLEtBQUssOEJBQThCLEVBQUUsaJBQWtCLEtBQUssbJBQWCLEVBQUUsaJBQWtCLEtBQUssaUJBQWlCLEVBQUUsaJBQWtCLEtBQUssbUJBQWCLEVBQUUsaUJBQWlCLENBQUMsRFBRyxLQUFLLEBQUsRFBSSxHQUFFLEtBQUssTFBTyxxQkFBcUIsRUFBRSwrQkFBKIsRFBRyxFQUFFLEtBQUsSUFBSSxPQUFNLHNFQUFzRSxFQUFFLEdBQUcsSFBSyxPQUFPLFNBQVMsQFBQyxFQUFFLEtBQUssZUFBZSxFQUFFLCtCQUErQixFQUFFLEtBQUssaNBQWtDLEVBQUUsQFBQyxLQUFLLFlBQVksSFBSyxtQFBbUMsRUFBRSwyQkFBMkIsRFBSSxNQUFLLGDQUFtQyxLQUFLLEBQUscUJBQXFCLEVBQUUsMkJBQTJCLEVBQUUsSFBSyxtQFBbUMsRFBRyxLQUFNLElBQUksTFBTSwREFBOEQsRUFBRSxLQUFLLEBQUsUFBUyxLQUFLLGtDQUFrQyxFQUFFLEtBQUssZUFBZSxFQUFFLDJCQUEyQixFQUFFLEtBQUssMkJBQTJCLENBQUMsQFBQyxHQUFJLEdBQUUsSFBSyxpQkFBaUIsSFBSyxlQUFlLEtBQUssTFBUSxJQUFHLEdBQUcsRFBRyxHQUFHLEtBQUssdUJBQXVCLEdBQUksRFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsSFBSyxZQUFZLEVBQUUsRUFBRSxtQkFBbUIsRFBSSxNQUFLLEBQUsSFBSyxXQUFXLEVBQUUsRUFBRSxLQUFNLElBQUksTFBTSwwQkFBMEIsSFBSyxJQUFJLENBQUMsRUFBRSxTQUFTLENBQUMsRUFBRSxjQUFjLFNBQVMsRUFBRSxDQUFDLEtBQUssTFBTyxFQUFFLENBQUMsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLENBQUMsSFBSyxjQUFjLENBQUMsRUFBRSxLQUFLLGlCQUFpQixFQUFFLEtBQUssZUFBZSxFQUFFLEtBQUssZUFBZSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxFQUFFLENBQUMscUJBQXFCLEdBQUcsYFBYyxHQUFHLFlBQVksRFBRyxTQUFTLEdBQUcsVUFBVSxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLGCQUFvQixFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLGCQUFvQixFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsZJBQWdCLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLEtBQUssUUFBUSxFQUFFLEtBQUssWUFBWSxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsWUFBWSxVQUFVLENBQUMsTUFBTyxBQUFJLEdBQUUsSFBSyxVQUFYLENBQWCLEVBQUUsUUFBUSxVQUFVLENBQUMsTUFBTyxBQUFPLEBQUssSFBSyxVQUFqQixJQUFQixFQUFFLGNBQWMsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRFBRyxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssZUFBZSxFQUFFLFFBQVEsQFBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxLQUFLLFNBQVMsRUFBRSxTQUFTLEtBQUssYFBYyxFQUFFLEVBQUUsSFBSyxDQUFDLEVBQUUsQUFBSyxLQUFLLGlCQUFWLElBQTBCLEFBQUssSFBSyxtQkFBVixHQUEyQixLQUFNLElBQUksTFBTSxvSUFBbksRUFBRSxHQUFHLEFBQVEsRFBRSxTQUFTLEVBQUUsQFBQyxPQUFRLEtBQUssRFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLFFBQVEsRUFBRSxNQUFPLEdBQUUsRFBRyxNQUFPLEtBQUksRUFBRSxLQUFLLGlCQUFpQixLQUEzSCxLQUESCxLQUFNLElBQUksTFBTSwrQkFBKIsRUFBRSxPQUFPLEtBQUssaUJBQWlCLEVBQUUsMEJBQTBCLEVBQUUsWUFBWSxTQUFTLEtBQUssUUFBUSxFQUFFLEdBQUcsRUFBRSxLQUFLLGFBQWEsRFBSSxHQUFFLEtBQUssZUFBZSxLQUFLLGlCQUFpQixLQUFLLEBQUsRUFBRSxFQUFFLFNBQVMsSFBSyxjQUFjLENBQUMsQFBQyxFQUFFLGdCQUFnQixTQUFTLEVBQUUsQFBQyxLQUFLLGNBQWMsRUFBRSxRQUFRLENBQUMsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEtBQUssUUFBUSxFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssaJBQWtCLEVBQUUsVFBVyxDQUFDLEVBQUUsSFBSyxLQUFLLEVBQUUsUFBUyxFQUFFLEtBQUssTUFBTSxFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssZUFBZSxFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssaUJBQWlCLEVBQUUsUUFBUSxDQUFDLEVBQUUsRFBSSxHQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsRFBRyxLQUFLLGtCQUFrQixFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssaJBQWtCLEVBQUUsUUFBUSxDQUFDLEVBQUUsSFBSyxnQkFBZIsRUFBRSxRQUFRLENBQUMsRUFBRSxLQUFLLHVCQUFQixFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssdUJBQXVCLEVBQUUsUUFBUSxDQUFDLEVBQUUsSFBSyxrQkFBaIsRUFBRSxRQUFRLENBQUMsRUFBRSxLQUFLLFlBQVksRUFBRSxLQUFNLElBQUksTFBTSxpQFBaUMsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEtBQUssZJBQWdCLENBQUMsRUFBRSxLQUFLLHFCQUFxQixDQUFDLEVBQUUsSFBSyxZQUFZLEVBQUUsUFBUyxLQUFLLGlCQUFpQixDQUFDLEVBQUUsaJBQWtCLFVBQVUsQFBQyxLQUFLLGdCQUFnQixLQUFLLEtBQUssZUFBZSxLQUFLLEdBQUksRFBRSxLQUFLLGVBQWUsRUFBRSxLQUFLLElBQUksQFBQyxDQUFFLElBQUcsSFBSyxQkFBdIsQUFBRyxHQUFILEdBQUsTUFBSyxlQUFlLEdBQUcsSFBSyxQkFBdIsQUFBRyxHQUFILEdBQUsTUFBSyxnQkFBZIsSFBSyxQkFBdIsRFBRyxPQUFPLEtBQUssSFBSyxBQUFNLEtBQUssWUFBWSxNQUFNLEVBQUUsSUFBLIsSFBbUMsTUFBSyxJQUFJLEdBQUcsRUFBRSxxQkFBcUIsUFBUyxFQUFFLENBQUMsRFBRyxLQUFLLFlBQVksRFBRyxDQUFDLEdBQUksRFBRSxFQUFFLEtBQUssWUFBWSxHQUFHLEtBQUssRUFBRSxLQUFLLGCQUFtQixFQUFFLGtCQUFtQixNQUFLLGlCQUFpQixFQUFFLFFBQVEsQFBQyxHQUFHLEtBQUssaUJBQWlCLEVBQUUsaJBQWCLEBQUssZUFBZSxFQUFFLFFBQVEsQFBQyxHQUFHLEtBQUssbJBQWCLEVBQUUsaJBQWCLEBQUssaJBQWtCLEVBQUUsUUFBUSxDQUFDLEdBQUcsSFBSyxrQkFBaIsRUFBRSxrQkFBbUIsTUFBSyxnQkFBZIsRUFBRSxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsZJBQWdCLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsSFBSyxrQkFBaIsSUFBSSxLQUFLLGFBQWMsTUFBSyxZQUFZLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLEVBQUUsRUFBRSxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsQFBQyxFQUFFLEtBQUssWUFBWSxHQUFHLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLFNBQVMsQFBQyxDQUFDLEVBQUUsVFBVyxVQUFVLENBQUMsRFBSSxHQUFFLEVBQUUsVFBVyxhQUFhLFFBQVEsRFBRyxLQUFLLFFBQVEsRUFBRSxLQUFLLFlBQVksRUFBRSxXQUFXLEtBQUssUUFBUSxFQUFFLEtBQUssZUFBZSxFQUFFLFdBQVcsSFBSyxXQUFXLEBQUsQFBQyxHQUFJLEdBQUUsSFBSywwQkFBMEIsRUFBRSxHQUFHLEFBQUsSUFBUCxLQUFTLEtBQUssWUFBWSxNQUFNLENBQUMsRFBSSxHQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssUUFBUSxFQUFFLEtBQUssWUFBWSxLQUFLLFlBQVksZUFBZSxDQUFDLENBQUMsQFBQyxHQUFJLEdBQUUsSFBSywQkFBNkIsRUFBRSxHQUFHLEFBQUsSUFBUCxLQUFTLEtBQUssZUFBZSxNQUFNLENBQUMsRFBSSxHQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssZUFBZSxLQUFLLFlBQVksZUFBZSxDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsMEJBQTBCLFVBQVUsQFBQyxHQUFJLEdBQUUsSFBSyxZQUFZLEBQUsRFBRyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTyxBQUFJLEdBQUUsUUFBUSxDQUFDLElBQWYsRFBcIsRUFBRSxLQUFLLFFBQVEsSUFBSSxFQUFFLFFBQVEsQFBQyxFQUFuQyxLQUEwQyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTFBTyxDQUFDLENBQUMsQFBQyxDQUFDLEBQUsSFBSSxFQUFFLDZCQUEQixVQUFVLENBQUMsRFBSSxHQUFFLEtBQUssWUFBWSxPQUFPLEdBQUcsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEBQUsQUFBSSxHQUFFLFFBQVEsQFBQyxJQUFmLEdBQXNCLEVBQUUsSFBSyxXQUFXLElBQUksRUFBRSxRQUFRLENBQUMsRUFBdEMsSFBNkMsRUFBRSxXQUFXLEVBQUUsUFBUyxFQUFFLEBQUsQFBQyxDQUFDLENBQUMsQFBQyxNQUFPLEtBQUksQFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQFBQyxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxVQUFVLEVBQUUscUJBQXFCLEdBQUcsWUFBWSxHQUFHLFNBQVMsRFBRyxVQUFVLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsSFBSyxLQUFLLEVBQUUsSFBSyxJQUFJLEVBQUUsSUFBSSxLQUFLLEtBQUssRUFBRSxLQUFLLEtBQUssUUFBUSxFQUFFLFFBQVEsSFBSyxnQkFBZIsRUFBRSxnQkFBZIsSFBSyxlQUFlLEVBQUUsZUFBZSxLQUFLLEBQUsRUFBRSxLQUFLLFlBQVksRUFBRSxPQUFPLEtBQUssUUFBUSxDQUFDLFlBQVksRUFBRSxZQUFZLGCQUFtQixFQUFFLGtCQUFrQixDQUFDLENBQUMsRFBSSxHQUFFLEVBQUUsdUJBQXVCLEVBQUUsRUFBRSxFQUFFLHFCQUFxQixFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLGCQUFvQixFQUFFLEVBQUUsRUFBRSxQkFBdIsRUFBRSxFQUFFLFVBQVUsQFBQyxlQUFlLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEVBQUUsUFBUyxHQUFHLENBQUMsRFBRyxDQUFDLEVBQUUsSFBTSxJQUFJLEBQUsMkJBQTJCLEVBQUUsRFBSSxHQUFFLEFBQVksRFBRSxFQUFFLFlBQVksSFBNUIsVUFBZMsQUFBUyxJQUFULEBQVcsQUFBaUIsSUFBakIsZJBQWCLEFBQVMsSUFBVCxRQUFhLEdBQUUsVUFBVSxFQUFFLEtBQUssaJBQWtCLEVBQUUsRFBSSxHQUFFLENBQUMsSFBSyxZQUFZLEdBQUcsQFBQyxHQUFJLEdBQUUsRUFBRSxLQUFLLEdBQUksRFBRSxnQkFBZIsRFBRyxDQUFDLEdBQUcsRFBSSxHQUFFLEVBQUUsSFBSyxHQUFJLEdBQUUsZJBQWdCLEVBQUUsTFBTyxFQUFOLENBQVMsQUFBQyxHQUFFLEdBQUksRFBRSxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsQFBQyxNQUFPLElBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsTUFBTSxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsTUFBSyxlQUFlLENBQUMsRUFBRSxXQUFXLENBQUMsQFBQyxFQUFFLFdBQVcsUFBUyxFQUFFLEVBQUUsQFBQyxNQUFPLEBQUssZUFBZSxHQUFHLFlBQVksRUFBRSxlQUFlLENBQUMsQFBQyxFQUFFLGdCQUFnQixTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUcsSFBSyxnQkFBaUIsSUFBRyxLQUFLLEBQUsWUFBWSxRQUFRLEVBQUUsTUFBTSxNQUFPLEBQUssTUFBTSxvQkFBbIsRUFBRSxHQUFJLEdBQUUsSFBSyxrQkFBaIsRUFBRSxNQUFPLEBQUssYUFBYyxHQUFFLEVBQUUsSFBSyxHQUFJLEdBQUUsZJBQWdCLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLGtCQUFrQixVQUFVLENBQUMsTUFBTyxNQUFLLGdCQUFpQixHQUFFLEtBQUssTUFBTSxpQkFBaUIsRUFBRSxLQUFLLGdCQUFpQixHQUFFLEtBQUssTUFBTSxHQUFJLEdBQUUsSFBSyxLQUFLLENBQUMsQFBQyxFQUFFLEBQVEsRFBRSxDQUFDLFNBQVMsVFBVyxlQUFlLGVBQWUsZUFBZSxFQUFFLEVBQUUsVUFBVSxDQUFDLEtBQUsSUFBSSxPQUFNLDRFQUERSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQFBQyxxQkFBcUIsRUFBRSxzQkFBcIsRFBRyxQkFBeUIsRFBRyxQkFBdIsRFBRyxTQUFTLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsQUFBQyxVQUFTLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxrQkFBaIsRUFBRSxQkFBdUIsRFBRyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxHQUFJLEdBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLGVBQWUsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsYFBYyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsQFBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQFBQyxDQUFDLFNBQVMsRUFBRSxjQUFjLEFBQVMsRUFBRSxpQkFBWCxPQUEwQixFQUFFLFlBQWEsSUFBRyxzQkFBdUIsRFBRSxTQUFTLGNBQWMsUUFBUSxFQUFFLFVBQVUsQFBQyxHQUFJLEdBQUUsRUFBRSxTQUFTLGNBQWMsUUFBUSxFQUFFLEVBQUUsbUJBQWCLFVBQVUsQFBQyxFQUFFLEVBQUUsRUFBRSxtQkFBbUIsSFBSyxFQUFFLFdBQVcsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLGdCQUFnQixZQUFZLENBQUMsQFBQyxFQUFFLFVBQVUsQFBQyxXQUFXLEVBQUUsQFBQyxDQUFDLEBQUsQFBQyxHQUFJLEdBQUUsRFBSSxHQUFFLGVBQWUsRUFBRSxNQUFNLFVBQVUsRUFBRSxFQUFFLFVBQVUsQFBQyxFQUFFLEBQUsWUFBWSxDQUFDLENBQUMsQFBQyxDQUFDLEdBQUksRFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRFBRyxPQUFRLEdBQUUsRUFBRSxPQUFPLEdBQUcsQFBQyxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLEVBQUUsQFBQyxFQUFFLFFBQVEsUFBUyxFQUFFLENBQUMsQUFBSSxFQUFFLEtBQUssQFBQyxJQUFaLEdBQWUsRFBRyxFQUFFLENBQUMsQFBQyxHQUFHLEtBQUssSFBSyxBQUFhLEBQUsUUFBcEIsSUFBMkIsTFBTyxBQUFhLEBQUsTUFBcEIsSUFBeUIsSFBSyxBQUFhLEBQUsUUFBcEIsSUFBMkIsTFBTyxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUMsRFBSSxHQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxFQUFFLEVBQUUsQFBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsQFBQyxHQUFHLEFBQVksTUFBTyxJQUFuQixXQUFxQixLQUFNLElBQUksVFBVSwQkFBNkIsRUFBRSxLQUFLLEBQUsRUFBRSxLQUFLLEBQUsQFBQyxFQUFFLEtBQUssUUFBUSxPQUFPLElBQUksRFBRyxFQUFFLEtBQUssQFBQyxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsRUFBRSxDQUFDLEtBQUssUUFBUSxFQUFFLEFBQVksTUFBTyxJQUFuQixZQUFQixNQUFLLFlBQVksRUFBRSxLQUFLLGNBQWMsSFBSyxvQkFBbIsQUFBWSxNQUFPLElBQWCLFlBQXVCLEBQUssVFBVyxFQUFFLEtBQUssYUFBYSxLQUFLLGtCQUFrQixDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLFVBQVUsQFBQyxHQUFJLEdBQUUsRFBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsTFBTyxFQUFOLENBQVMsTUFBTyxHQUFFLEBQUsRUFBRSxDQUFDLENBQUMsQFBQyxJQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUsRFBSSxXQUFVLGDQUFvQyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsQFBQyxDQUFDLENBQUMsQFBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFHLEVBQUUsSFBSyxHQUFHLEdBQUksQFBVSxNQUFPLElBQWpCLFVBQWCLEFBQVksTUFBTyxJQUFuQixhQUFQixBQUFZLEBQUsSUFBbkIsVFBcUIsTUFBTyxXQUFVLENBQUMsRUFBRSxNQUFNLEVBQUUsUFBUyxDQUFDLENBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFHLFdBQVcsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFHLEVBQUUsTFBTyxFQUFFLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLFVBQVUsQFBQyxFQUFFLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxBQUFVLEVBQUUsUFBWixTQUFvQixFQUFFLEVBQUUsSFBSyxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxFQUFFLEBQUsRUFBRSxDQUFDLEVBQUUsRUFBRSxPQUFPLFNBQVMsTFBTyxFQUFOLENBQVMsRUFBRSxPQUFPLFFBQVEsRUFBRSxNQUFNLENBQUMsQFBQyxNQUFPLEVBQUMsQFBQyxBQUFDLEdBQUUsUUFBUSxHQUFHLFVBQVUsUUFBUSxTQUFTLEVBQUUsQFBQyxHQUFHLEFBQVksTUFBTyxJQUFuQixXQUFxQixNQUFPLEBQUssRFBSSxHQUFFLEtBQUssWUFBWSxNQUFPLEBQUssSFBSyxTQUFTLEVBQUUsQFBQyxNQUFPLEdBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxLQUFLLFVBQVUsQFBQyxNQUFPLEVBQUMsQFBQyxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsSFBSyxVQUFVLENBQUMsSFBTSxFQUFDLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFVBQVUsTUFBTSxTQUFTLEVBQUUsQFBQyxNQUFPLEBQUssSFBSyxLQUFLLENBQUMsQFBQyxFQUFFLEVBQUUsVUFBVSxLQUFLLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBRyxBQUFZLEBQUsSUFBbkIsWUFBcIsSFBSyxRQUFRLEdBQUcsQUFBWSxNQUFPLElBQWCLFlBQXNCLEtBQUssUUFBUSxFQUFFLEBQUsTUFBSyxHQUFJLEdBQUUsRFBSSxNQUFLLFlBQVksQFBQyxFQUFFLFlBQUssUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLFFBQVEsRUFBRSxFQUFFLEVBQUUsSFBSyxPQUFPLEVBQUUsSFBSyxNQUFNLEtBQUssRFBSSxHQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBUyxDQUFDLEVBQUUsRUFBRSxVQUFVLGNBQWMsUFBUyxFQUFFLENBQUMsRUFBRSxRQUFRLEtBQUssUUFBUSxDQUFDLENBQUMsRUFBRSxFQUFFLFVBQVUsbUJBQWCLFNBQVMsRUFBRSxDQUFDLEVBQUUsSFBSyxRQUFRLEtBQUssWUFBWSxDQUFDLENBQUMsRUFBRSxFQUFFLFVBQVUsYUFBYSxTQUFTLEVBQUUsQFBQyxFQUFFLEBQUsSFBSyxRQUFRLENBQUMsQFBQyxFQUFFLEVBQUUsVUFBVSxrQkFBaIsUFBUyxFQUFFLENBQUMsRUFBRSxLQUFLLFFBQVEsSFBSyxXQUFXLENBQUMsQFBQyxFQUFFLEVBQUUsUUFBUSxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEdBQUcsQUFBVSxFQUFFLFNBQVosUUFBbUIsTUFBTyxHQUFFLEBQUsRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFJLEdBQUUsRUFBRSxNQUFNLEdBQUcsRUFBRSxFQUFFLEVBQUUsQFBQyxNQUFNLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsTFBUSxHQUFFLEdBQUcsRUFBRSxFQUFFLEBQUsTFBTyxFQUFFLEVBQUUsRFBRyxFQUFFLEBQUsRFBRyxjQUFjLENBQUMsQFBQyxDQUFDLEBQUsRUFBQyxFQUFFLEVBQUUsTFBTyxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLEBQVEsRFBRSxHQUFHLEVBQUUsRUFBRSxNQUFNLEBQUsRUFBRSxFQUFFLEdBQUcsRUFBRSxNQUFNLEdBQUcsYUFBYSxDQUFDLEVBQUUsTUFBTyxFQUFDLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxDQUFDLEBQUcsYUFBYSxNQUFZLEVBQVMsRUFBRSxRQUFRLEdBQUksTUFBSyxDQUFDLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxPQUFPLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFJLEBQUssQFBQyxFQUFFLEBQUsRFBRSxPQUFPLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEdBQUcsQUFBbUIsTFBTyxVQUFVLFNBQVMsSFBSyxDQUFDLElBQWELGlCQUFxRCxNQUFPLEBQUssTFBTyxHQUFJLFdBQVUsaJBQWtCLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxPQUFPLEVBQUUsRFBRyxHQUFHLENBQUMsRUFBRSxNQUFPLEBQUssUUFBUSxDQUFDLENBQUMsRUFBNEMsTFBdEMsRFBRSxHQUFJLEBQUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFJLEBQUssQFBQyxFQUFPLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxNQUFPLEdBQUUsVFBVyxFQUFFLEVBQUUsQFBQyxFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsRFBSSxHQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsQFBQyxFQUFFLEVBQUUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsQFBQyxFQUFFLENBQUMsQFBQyxDQUFDLEVBQUUsRUFBRSxLQUFLLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEdBQUcsQUFBbUIsTFBTyxVQUFVLFNBQVMsSFBSyxDQUFDLElBQWELGlCQUFxRCxNQUFPLEBQUssTFBTyxHQUFJLFdBQVUsaJBQWtCLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxPQUFPLEVBQUUsRFBRyxHQUFHLENBQUMsRUFBRSxNQUFPLEBQUssUUFBUSxDQUFDLENBQUMsRUFBeUIsTFBbkIsRFBRSxHQUFHLEVBQUUsRFBSSxNQUFLLENBQUMsRUFBTyxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRFBRyxFQUFFLFFBQVEsQFBQyxFQUFFLEtBQUssUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsQFBQyxFQUFFLEVBQUUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsTUFBTyxFQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxDQUFDLEVBQUUsQUFBQyxBQVpodWlELEdBWWtaUQsRUFBRSxvQkFBbIsRUFBRSxRQUFRLEVBQUUsRUFBRSxlQUFlLEVBQUUsRUFBRSxlQUFlLEVBQUUsRUFBRSxzQkFBcIsQFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLEVBQUUsQFBQyxnQkFBZIsRFBRyxnQkFBZIsRFBRyxxQkFBcUIsRFBRyxQkFBdUIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxnQkFBZIsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsRUFBRSxnQkFBZIsRUFBRSxFQUFFLEBQUsVUFBVSxTQUFTLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsQFBQyxHQUFHLENBQUUsZJBQWdCLElBQUcsTUFBTyxJQUFJLEdBQUUsQFBQyxFQUFFLEtBQUssUUFBUSxFQUFFLEBQUsQFBQyxNQUFNLEVBQUUsTFBTyxFQUFFLFVBQVUsTUFBTSxXQUFXLEdBQUcsUFBUyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLENBQUMsQFBQyxFQUFFLEdBQUksRFBRSxLQUFLLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxXQUFXLEVBQUUsVFBVyxDQUFDLEVBQUUsVFBVyxFQUFFLEBQUsRUFBRSxFQUFFLFlBQVksRUFBRSxXQUFXLElBQUssRFBRSxZQUFZLElBQUksSFBSyxJQUFJLEVBQUUsSFBSyxJQUFJLEdBQUcsSFBSyxNQUFNLEdBQUcsSFBSyxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUssRFBSSxHQUFFLEtBQUssSFBSyxVQUFVLEVBQUUsRFBSSxHQUFFLEVBQUUsYUFBYSxLQUFLLEtBQUssRUFBRSxNQUFNLEVBQUUsTFBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxFQUFFLEtBQUsSUFBSSxPQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEtBQUssSFBSyxFQUFFLEBQUsRUFBRSxFQUFFLFdBQVcsQFBQyxHQUFJLEdBQUUsRFBRyxFQUFFLEFBQVUsTUFBTyxHQUFFLFlBQWCLFNBQThCLEVBQUUsVFBVyxFQUFFLFVBQVUsRUFBRSxBQUFQixFQUFFLEtBQUssRUFBRSxVQUFVLElBQTVDLHVCQUEQyxHQUFJLFlBQVcsRUFBRSxVQUFVLEVBQUUsRUFBRSxXQUFZLEdBQUUsRUFBRSxxQkFBcUIsSFBSyxLQUFLLENBQUMsSFBSyxFQUFFLEtBQUsSUFBSSxPQUFNLEVBQUUsRUFBRSxFQUFFLEtBQUssVUFBVSxFQUFFLENBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxHQUFJLEdBQUUsQFBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxLQUFNLEdBQUUsSFBSyxFQUFFLEVBQUUsSFBSyxNQUFPLEdBQUUsTUFBTSxDQUFDLEVBQUUsVUFBVSxLQUFLLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxLQUFLLEtBQUssRUFBRSxLQUFLLFFBQVEsVUFBVSxHQUFHLEtBQUssTUFBTSxNQUFNLEdBQUcsRUFBRSxJQUFJLENBQUMsQFBQyxFQUFFLEVBQUUsQUFBSyxJQUFMLEdBQUsRUFBRSxFQUFFLEFBQVUsTUFBTyxJQUFqQixTQUFtQixFQUFFLEBQUsRUFBRSxXQUFXLENBQUMsRUFBRSxBQUFQixFQUFFLEtBQUssQFBQyxJQUFqQyxQkFBbUMsRUFBRSxNQUFNLEdBQUksWUFBVyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLEVBQUUsTUFBTSxPQUFPLEVBQUUsQFBQyxHQUFHLEFBQUksRUFBRSxZQUFOLEdBQWtCLEdBQUUsTFBTyxHQUFJLEdBQUUsSFBSyxDQUFDLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxVQUFVLEdBQUcsQUFBSyxHQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsSFBcEIsRFBdIsSUFBSSxFQUFFLEBQUsTUFBSyxNQUFNLENBQUMsRUFBRSxDQUFFLEBQUssTUFBTSxJQUFJLEFBQUksRUFBRSxZQUFOLEdBQWtCLENBQUksRUFBRSxXQUFOLEdBQWdCLEFBQUksSUFBSixHQUFPLEFBQUksSUFBSixJQUFTLENBQVcsSFBSyxRQUFRLEtBQXhCLFNBQTJCLEtBQUssTFBTyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsTFBTyxFQUFFLFFBQVEsQFBQyxDQUFDLEVBQUUsSFBSyxPQUFPLEVBQUUsVUFBVSxFQUFFLEBQUsRUFBRSxRQUFRLENBQUMsRUFBRSxPQUFRLEdBQUUsRUFBRSxVQUFVLEFBQUksRUFBRSxZQUFOLElBQWtCLEFBQUksSUFBSixHQUFPLEBQUsQUFBSSxLQUFKLEVBQUsRFBRSxFQUFFLFdBQVcsSFBSyxJQUFJLEVBQUUsSFBSyxNQUFNLENBQUMsRUFBRSxLQUFLLEBQUsRFBRyxJQUFJLEdBQUcsQUFBSSxJQUFKLEdBQVEsTUFBSyxNQUFNLENBQUMsRUFBRSxDQUFFLEdBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsSFBSyxPQUFPLEtBQUssQFBQyxDQUFDLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsSUFBSSxHQUFJLENBQVcsSFBSyxRQUFRLEtBQXhCLFNBQTJCLEtBQUssTFBTyxLQUFLLEBQUsSFBSyxFQUFFLEVBQUUsSFBSyxPQUFPLEVBQUUsYFBYyxLQUFLLEBQUsRFBRyxLQUFLLEBQUsQFBQyxFQUFFLEtBQUssSUFBSSxFQUFFLEtBQUssSUFBSSxLQUFLLEtBQUssRFBRyxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsVFBVyxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxHQUFHLENBQUMsRFBRyxJQUFJLEdBQUcsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsSFBSyxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxHQUFHLENBQUMsRFBRyxLQUFLLEdBQUcsRUFBRSxFQUFFLENBQUMsQFBQyxDQUFDLEVBQUUsQFBQyxpQkFBaUIsRFBRyxrQkFBaIsRFBRyxpQkFBaUIsRFBRyxrQkFBaIsRFBRyxpQkFBaUIsRUFBRSxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsRUFBRSxnQkFBZIsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsZJBQWdCLEVBQUUsRUFBRSxFQUFFLGlCQUFpQixFQUFFLEVBQUUsTFBTyxVQUFVLFNBQVMsVFBVyxFQUFFLENBQUMsRFBRyxDQUFFLGdCQUFnQixJQUFHLEBQUsSUFBSSxHQUFFLENBQUMsRUFBRSxLQUFLLFFBQVEsRUFBRSxPQUFPLENBQUMsVUFBVSxNQUFNLFdBQVcsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLENBQUMsQFBQyxFQUFFLEdBQUksRFBRSxLQUFLLFFBQVEsRUFBRSxLQUFLLEdBQUcsRUFBRSxZQUFZLEVBQUUsVFBVyxJQUFLLEdBQUUsVFBVyxDQUFDLEVBQUUsVFBVyxBQUFJLEVBQUUsYUFBTixHQUFtQixHQUFFLFdBQVcsTUFBTSxDQUFFLElBQUcsRUFBRSxZQUFZLEVBQUUsVFBVyxLQUFLLEdBQUcsRUFBRSxZQUFhLEdBQUUsWUFBWSxJQUFJLEdBQUcsRUFBRSxZQUFZLEVBQUUsVFBVyxJQUFJLEFBQUksSUFBRyxFQUFFLGFBQVQsRFBdUIsRFBRSxZQUFZLElBQUksSFBSyxJQUFJLEVBQUUsSFBSyxJQUFJLEdBQUcsSFBSyxNQUFNLEdBQUcsSFBSyxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUssRFBSSxHQUFFLEtBQUssSFBSyxVQUFVLEVBQUUsRFBSSxHQUFFLEVBQUUsYUFBYSxLQUFLLEtBQUssRUFBRSxVQUFVLEVBQUUsRFBRyxJQUFJLEVBQUUsSFBSyxLQUFNLElBQUksTFBTSxFQUFFLEVBQUUsRUFBRSxLQUFLLEBQUsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEtBQUssSFBSyxLQUFLLEBQUsQFBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEdBQUksRFBRSxDQUFDLEVBQUUsRFBRyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEtBQUsRFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEBQUsRFBRSxNQUFNLENBQUMsRUFBRSxVQUFVLEtBQUssUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxLQUFLLEVBQUUsSFBSyxRQUFRLFVBQVUsRUFBRSxLQUFLLFFBQVEsVFBVyxFQUFFLEdBQUcsRFBRyxLQUFLLEBQUsTUFBTSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFLEFBQUssSUFBTCxHQUFPLEVBQUUsUFBUyxFQUFFLFdBQVcsQUFBVSxNQUFPLElBQWpCLFNBQWCLEVBQUUsTUFBTSxFQUFFLGNBQWMsQFBQyxFQUFFLEFBQXlCLEVBQUUsSFBSyxDQUFDLElBQWpDLHVCQUFtQyxFQUFFLEBQUsRFBSSxZQUFXLENBQUMsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLEBQUsRUFBRSxDQUFDLEdBQUcsQUFBSSxFQUFFLFlBQUsRFBaIsRFBRSxPQUFPLEdBQUksRFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLFVBQVUsRFBSSxHQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsVUFBVSxLQUFLLEVBQUUsYUFBYSxHQUFJLEdBQUUsQUFBVSxNQUFPLElBQWpCLFNBQWCLEVBQUUsVFBVyxDQUFDLEVBQUUsQUFBeUIsRUFBRSxLQUFLLENBQUMsSUFBakMsdUJBQWDLEdBQUksWUFBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUscUJBQXFCLEtBQUssSFBSyxDQUFDLEdBQUcsSUFBSSxFQUFFLGFBQWEsQUFBSyxJQUFMLElBQVMsRFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLElBQUksRUFBRSxjQUFjLElBQUksRUFBRSxLQUFLLEBQUsTUFBSyxNQUFNLENBQUMsRUFBRSxDQUFFLEBQUssTUFBTSxJQUFJLEVBQUUsVUFBVyxDQUFJLEVBQUUsWUFBTixHQUFpQixJQUFJLEVBQUUsYFBZSxDQUFJLEVBQUUsVFBTixHQUFnQixJQUFJLEVBQUUsVUFBVSxJQUFJLEVBQUUsZUFBZIsQFBVyxLQUFLLFFBQVEsSFBeEIsUFBNEIsRFBRSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsTFBTyxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLEBQUsQFBQyxHQUFHLEtBQUssTFBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLElBQUksQUFBSSxFQUFFLFdBQUsRFBZIsQUFBSSxFQUFFLFlBQUsRFBaIsRFBRSxHQUFHLEBQVEsRFBRSxFQUFFLFVBQVUsQUFBSSxFQUFFLFlBQUsSUFBaIsSUFBSSxFQUFFLGNBQWMsTUFBTyxLQUFJLEVBQUUsYFBZSxHQUFFLEVBQUUsVUFBVSxJQUFJLEVBQUUsUFBVSxHQUFFLEVBQUUsVFBVyxLQUFLLElBQUksRUFBRSxLQUFLLEBQUsQFBQyxFQUFFLEtBQUssTUFBTSxHQUFHLElBQUksRUFBRSxNQUFNLElBQUksRUFBRSxjQUFlLEBQUssTUFBTSxFQUFFLElBQUksRUFBRSxDQUFFLEdBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsSFBSyxPQUFPLEtBQUssQFBQyxDQUFDLEVBQUUsRUFBRSxVQUFVLEBQUsUFBUyxFQUFFLENBQUMsSUFBSSxFQUFFLEBQUsQFBVyxLQUFLLFFBQVEsSFBeEIsUFBMkIsSFBSyxPQUFPLEtBQUssTFBTyxLQUFLLEVBQUUsRUFBRSxLQUFLLEBQUsRUFBRSxjQUFjLEtBQUssTUFBTSxHQUFHLEtBQUssTFBTyxDQUFDLEVBQUUsSFBSyxJQUFJLEVBQUUsSFBSyxJQUFJLEtBQUssSFBSyxHQUFHLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxXQUFXLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTyxHQUFFLEdBQUcsQFBQyxHQUFHLElBQUksRFBRyxFQUFFLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLGlCQUFpQixHQUFHLGtCQUFrQixHQUFHLGCQUFtQixHQUFHLGtCQUFrQixHQUFHLGlCQUFpQixHQUFHLGtCQUFrQixHQUFHLGlCQUFpQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEFBQWEsTUFBTyxZQUFwQixLQUFnQyxBQUFhLEBQUsYUFBcEIsSFBaUMsQUFBYSxNQUFPLFlBQXBCLElBQStCLEVBQUUsTFBTyxTQUFTLEVBQUUsQFBQyxPQUFRLEdBQUUsTUFBTSxVQUFVLEBQUsSFBSyxVQUFVLENBQUMsRUFBRSxFQUFFLFFBQVEsQFBQyxHQUFJLEdBQUUsRUFBRSxNQUFNLEVBQUUsRFBRyxFQUFFLENBQUMsRFBRyxBQUFVLEBQUsSUFBakIsUFBbUIsSFBTSxJQUFJLFdBQVUsRUFBRSxvQkFBbIsRUFBRSxPQUFRLEtBQUssRFBRSxFQUFFLGVBQWUsQFBQyxHQUFJLEdBQUUsRFBRyxFQUFFLEdBQUcsQFBQyxDQUFDLEBQUsRUFBQyxFQUFFLEVBQUUsVUFBVSxTQUFTLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsQFBQyxFQUFHLEdBQUUsTFBTyxFQUFFLEVBQUUsRUFBRSxHQUFJLEdBQUUsQFBQyxTQUFTLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBRyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEBQUsUUFBUSxHQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxjQUFjLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUUsSUFBSSxHQUFHLEVBQUUsRFBRyxPQUFPLElBQUksRUFBRSxHQUFJLFlBQVcsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsTFBTyxNQUFPLEVBQUMsQFBQyxFQUFFLEVBQUUsQFBQyxTQUFTLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsTFBUSxHQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxjQUFjLFNBQVMsRUFBRSxDQUFDLEBQUsQFBQyxFQUFFLEBQUsTUFBTSxDQUFDLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLFNBQVMsUFBUyxFQUFFLENBQUMsRUFBRyxHQUFFLEtBQUssVFBVyxFQUFFLEBQUsWUFBWSxFQUFFLEBQUsVFBVyxFQUFFLEBQUsRUFBRSxDQUFDLEdBQUksRFBRSxLQUFLLEBQUsRUFBRSxNQUFNLEBQUsRUFBRSxNQUFNLEBQUsRUFBRSxPQUFPLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLENBQUMsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxHQUFHLENBQUMsTFBTyxhQUFhLEBQUsSFBSyxDQUFDLENBQUMsQFBQyxDQUFDLEBQUMsQFBUyxFQUFFLEVBQUUsQFBQyxHQUFHLENBQUMsTFBTyxhQUFhLEBQUsSFBSyxHQUFJLFlBQVcsQFBQyxDQUFDLENBQUMsTUFBQyxDQUFTLEVBQUUsRUFBRSxDQUFDLEBQVEsRFBRSxHQUFJLEdBQUUsSFBSyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsRFBRyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLENBQUMsRFBRyxFQUFFLEBQVEsRFBRSxVQUFVLEdBQUcsQFBQyxFQUFFLFVBQVUsRFBRyxNQUFPLFFBQUsYUFBYSxNQUFNLEtBQUssRUFBRSxVQUFVLEVBQUUsQFBQyxDQUFDLEVBQUUsTFBUSxHQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEdBQUcsTFBTyxhQUFhLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBQyxDQUFDLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxFQUFFLFdBQVcsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxDQUFDLEtBQSCLEBQWDLEVBQUUsRUFBRSxHQUFHLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxFQUFFLENBQUMsSFBakMsTFBdUMsRFBRSxNQUFPLEdBQUUsTFBTyxJQUFLLEdBQUUsTFBTyxLQUFLLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsRFBSSxHQUFFLEtBQUssQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxDQUFDLEtBQSCLEBQWDLEVBQUUsRUFBRSxHQUFHLEFBQVEsTFBTyxHQUFFLEVBQUUsVFBVyxFQUFFLENBQUMsSFBakMsTFBdUMsRFBRSxNQUFPLEdBQUUsTFBTyxJQUFLLEdBQUUsTFBTyxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRyxHQUFFLEtBQUssRUFBRSxLQUFLLElBQUksSUFBSSxFQUFHLEdBQUUsTUFBTSxFQUFFLEtBQUssSUFBSSxJQUFJLEdBQUksRFBRSxLQUFLLElBQUksSUFBSSxHQUFHLEVBQUUsSFBSyxJQUFJLElBQUksRFBRyxJQUFJLEVBQUUsSFBSyxJQUFJLElBQUksRUFBRSxJQUFJLEVBQUUsSFBSyxJQUFJLEdBQUcsRFBRyxNQUFPLEVBQUMsRUFBRSxFQUFFLGNBQWMsUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLGNBQWMsUFBUyxFQUFFLENBQUMsTFBUSxHQUFFLEdBQUksRFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsRUFBRSxNQUFPLEVBQUMsRUFBRSxFQUFFLFdBQVcsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsTFBTyxFQUFFLEdBQUksTFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFJLEdBQUUsRUFBRSxNQUFNLElBQUksRUFBRSxLQUFLLFVBQVUsRUFBRyxHQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssTUFBTSxHQUFHLEVBQUUsTUFBTSxDQUFDLElBQUksRFBRyxBQUFJLElBQUosRUFBTSxHQUFHLEFBQUksSUFBSixFQUFNLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxLQUFLLElBQUksRUFBRSxFQUFFLEVBQUUsSFBSyxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRyxJQUFHLEBQUsRUFBRSxLQUFLLEBQUsRFBRyxHQUFHLEtBQUssRUFBRSxLQUFLLEBQUsSFBSyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxXQUFXLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLElBQUssRFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLFFBQVMsRFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLEFBQUsSFBSSxFQUFFLEtBQVosSFBaUIsSUFBSSxNQUFPLEdBQUUsRFBSSxBQUFJLElBQUosRUFBRixFQUFVLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLENBQUMsVFBVyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRUFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEBQVEsRFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLElBQUksRFBRyxNQUFNLEVBQUUsRUFBRSxFQUFFLEFBQUksSUFBSixHQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUcsRFBRSxFQUFFLEVBQUUsSFBSyxHQUFHLEVBQUUsRUFBRSxHQUFHLENBQUMsRFBRyxNQUFNLEdBQUcsSFBSyxDQUFDLEBQUsRFBRSxHQUFHLEdBQUcsQFBQyxDQUFDLEVBQUUsQFBQyxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLFdBQVcsRUFBRSxnQkFBZIsRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLFFBQVEsRFBRyxlQUFlLEdBQUcsYUFBYSxHQUFHLFlBQVksRFBRyxpQkFBaUIsRUFBRSxhQUFhLEVBQUUsbUJBQWCLEVBQUUscJBQXNCLEdBQUcsVFBVyxFQUFFLGVBQWUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLGCQUFtQixFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsQFBQyxDQUFDLEVBQUUsQFBQyxDQUFDLEVBQUUsRFBRyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsQFBQyxhQUFhLEdBQUksRFBRSxVQUFVLENBQUMsTFBUSxHQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksSUFBSSxDQUFDLEVBQUUsRUFBRSxPQUFRLEdBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxXQUFXLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxHQUFHLENBQUMsQFBQyxNQUFPLEVBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsTFBUSxHQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxJQUFLLEdBQUUsRUFBRSxLQUFLLEBQUsRFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxZQUFXLEVBQUUsRUFBRSxDQUFDLEBQUsRFBRSxJQUFJLEVBQUUsRFBRyxDQUFDLENBQUMsVFBVyxFQUFFLENBQUMsTUFBTyxJQUFHLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFlBQVcsRUFBRSxDQUFDLEBQVEsRFBRSxFQUFFLEBQUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQFBQyxXQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxXQUFZLEdBQUUsRUFBRSxXQUFXLEFBQUksSUFBSixHQUFRLEdBQUUsUFBUyxFQUFFLEBQUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsUFBUyxFQUFFLEFBQUksRUFBRSxVQUFOLEdBQWdCLEdBQUUsWUFBWSxHQUFHLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxFQUFFLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxZQUFZLEVBQUUsWUFBWSxHQUFHLEVBQUUsUFBUyxFQUFFLFlBQVksQFBQyxFQUFFLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxFQUFFLElBQUksQFBQyxDQUFDLFlBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLEVBQUUsVFBVyxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxFQUFFLFlBQVksRUFBRSxXQUFXLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLFdBQVcsSUFBSSxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxTQUFTLEVBQUUsTFBTyxFQUFFLEVBQUUsUFBVSxHQUFFLEBQUsRFBRyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsRFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsWUFBYSxLQUFJLEdBQUcsRUFBRSxFQUFFLFdBQVksRFBRSxFQUFFLFdBQVcsRUFBRyxJQUFHLEVBQUcsRFBRSxHQUFHLEtBQUssSUFBRyxFQUFFLEVBQUUsRUFBRSxLQUFLLElBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsTFBUSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRFBRyxFQUFFLEVBQUcsRFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsRFBSSxHQUFFLEdBQUcsTUFBTSxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEBQVMsRFBRSxFQUFFLEVBQUUsSUFBSSxHQUFHLEFBQUcsRUFBRSxHQUFMLEdBQVEsTUFBTyxJQUFHLEVBQUUsVUFBVSxFQUFFLEVBQUUsUFBUyxDQUFDLFlBQVcsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLENBQUMsRFBRyxFQUFFLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFHLEdBQUUsRFBRyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTFBTyxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxLQUFLLEVBQUUsRFBRyxFQUFFLEtBQUssRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsQFBQyxDQUFDLEdBQUcsQUFBSSxFQUFFLEtBQUssVFBWCxFQUFvQixNQUFNLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLFNBQVMsRUFBRSxHQUFJLEdBQUUsRFBRyxFQUFFLEFBQUksSUFBSixFQUFNLEVBQUcsRFBRSxVQUFVLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxBQUFJLEVBQUUsTUFBTSxPQUFaLEVBQWlCLEVBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQFBQyxFQUFFLEFBQUksRUFBRSxNQUFNLEBQVosRFBbUIsRFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsRUFBRSxVQUFVLEVBQUUsRFBRyxFQUFFLFdBQVcsRUFBRSxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsUFBUyxFQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsTFBTyxHQUFHLEVBQUUsTUFBTyxHQUFFLEBQUsRUFBRSxXQUFXLEVBQUUsTFBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsUUFBUyxHQUFFLEBQUsRFBRSxPQUFPLEVBQUUsVFBVyxFQUFFLEBQUsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSFBSyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSFBSyxFQUFFLEBQUsRUFBRSxJQUFJLEVBQUUsUFBUyxDQUFFLEdBQUUsVUFBVSxFQUFFLEBQUsSFBSyxDQUFDLEBQUsRUFBRSxVQUFVLEdBQUcsQUFBSSxFQUFFLEtBQUssVFBWCxFQUFvQixDQUFDLFlBQVcsRUFBRSxFQUFFLENBQUMsTFBUSxHQUFFLElBQUksQFBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLENBQUMsRFBRyxHQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsRFBRyxJQUFJLEVBQUUsTUFBTyxHQUFFLEdBQUcsQUFBSSxFQUFFLFlBQUsRUFBZIsSFBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsVFBVyxHQUFJLEdBQUUsTUFBTyxHQUFFLEBQUsRUFBRSxXQUFXLEVBQUUsTFBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQUUsSFBSyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsSFBSyxFQUFFLEBQUsRUFBRSxLQUFLLEVBQUUsTFBTyxFQUFFLFVBQVUsQUFBSSxJQUFKLEdBQUsRUFBRSxTQUFTLEdBQUcsRUFBRSxPQUFPLEdBQUksRFBRSxhQUFhLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsRFBRyxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsUFBUyxFQUFFLFlBQVksRUFBRSxhQUFhLENBQUMsRUFBRSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsYFBYyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsVFBVyxFQUFFLEBQUsRFBRSxPQUFPLEVBQUUsVFBVyxFQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSFBSyxFQUFFLEBQUsRUFBRSxTQUFTLEFBQUcsRUFBRSxFQUFFLGNBQVAsRFBcUIsQFBQyxFQUFFLFVBQVUsSFBTSxHQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxVQUFVLEVBQUUsTUFBTyxHQUFFLEBQUsRUFBRSxXQUFXLEVBQUUsTFBTyxFQUFFLFNBQVMsSUFBSSxFQUFFLGNBQWUsRFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLFNBQVMsRUFBRSxFQUFFLFlBQVksRUFBRSxXQUFXLEdBQUcsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRFBcIsTUFBTyxFQUFDLENBQUMsTUFBTyxHQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRyxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRUFBcUIsRUFBRSxHQUFHLEVBQUUsVUFBVyxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRFBcIsRUFBRSxDQUFDLENBQUMsWUFBVyxFQUFFLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxJQUFJLENBQUMsRFBRyxFQUFFLFVBQVUsRUFBRSxDQUFDLEdBQUcsRFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLEdBQUcsSUFBSSxFQUFFLEBQUsRFBRSxHQUFHLEFBQUksRUFBRSxZQUFOLEVBQWdCLEtBQUssQFBQyxHQUFHLEVBQUUsRUFBRSxFQUFFLFdBQVcsRFBSSxHQUFFLEBQUsRFBRSxPQUFPLEVBQUUsVFBVyxFQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSFBSyxFQUFFLEBQUsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxFQUFFLEFBQUksSUFBSixHQUFPLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRFBRyxFQUFFLEBQUsRFBSSxHQUFFLGFBQWEsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLGNBQWMsRFBSSxDQUFJLEVBQUUsVFBTixHQUFnQixFQUFFLGVBQWUsRFBRyxLQUFLLEVBQUUsUFBUyxFQUFFLGNBQWUsRFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLGFBQWEsRFBRyxFQUFFLGNBQWMsRUFBRSxZQUFZLENBQUMsSUFBSSxFQUFFLEVBQUUsUFBUyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsVFBVyxFQUFFLFlBQVksQFBQyxFQUFFLEVBQUUsVFBVyxFQUFFLFlBQVksRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsVUFBVSxHQUFJLEdBQUUsTUFBTyxHQUFFLEBQUsRUFBRSxXQUFXLEVBQUUsTFBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEVBQUUsSFBSyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsSFBSyxFQUFFLEBQUsRUFBRSxLQUFLLEVBQUUsTFBTyxFQUFFLFVBQVUsQUFBRyxFQUFFLEVBQUUsYUFBUCxHQUFvQixDQUFDLEdBQUcsRUFBRSxnQkFBZIsRUFBRSxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsVFBVyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsQUFBSSxFQUFFLEtBQUssWUFBWCxHQUFzQixNQUFPLEVBQUMsUFBUyxFQUFFLGlCQUFpQixHQUFJLEdBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsVFBVyxFQUFFLFlBQVksQUFBSSxFQUFFLEtBQUssWUFBWCxFQUFxQixNQUFPLEBQUsRFBRSxnQkFBZIsRUFBRSxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUMsTUFBTyxHQUFFLGlCQUFrQixHQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsUFBUyxFQUFFLEVBQUUsRUFBRSxnQkFBZIsRFBRyxFQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRyxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRUFBcUIsRUFBRSxHQUFHLEVBQUUsVUFBVyxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRFBcIsRUFBRSxDQUFDLENBQUMsWUFBVyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxLQUFLLFlBQVksRUFBRSxLQUFLLFNBQVMsRUFBRSxLQUFLLFlBQVksRUFBRSxLQUFLLFVBQVUsRUFBRSxLQUFLLEtBQUssQFBQyxDQUFDLGFBQVksQFBQyxLQUFLLEtBQUssSFBSyxLQUFLLEBQUsRUFBRSxLQUFLLFlBQVksSFBSyxLQUFLLGlCQUFpQixFQUFFLEtBQUssWUFBWSxFQUFFLEtBQUssUUFBUSxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssTFBTyxLQUFLLEtBQUssUUFBUSxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssVFBVyxHQUFHLEtBQUssTFBTyxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssTFBTyxLQUFLLEtBQUssWUFBWSxFQUFFLEtBQUssSFBSyxLQUFLLEtBQUssSFBSyxLQUFLLEtBQUssTUFBTSxFQUFFLEtBQUssVUFBVSxFQUFFLEtBQUssVUFBVSxFQUFFLEtBQUssVUFBVSxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssWUFBWSxFQUFFLEtBQUssYUFBYSxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssZJBQWdCLEVBQUUsSFBSyxTQUFTLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxVQUFVLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxpQkFBaUIsRUFBRSxLQUFLLGVBQWUsRUFBRSxLQUFLLEBQUsRUFBRSxLQUFLLFNBQVMsRUFBRSxLQUFLLFdBQVcsRUFBRSxLQUFLLFdBQVcsRUFBRSxLQUFLLFVBQVUsRFBSSxHQUFFLEBQUsRUFBRSxDQUFDLEVBQUUsSFBSyxVQUFVLEdBQUksRFBRSxNQUFNLEVBQUcsRFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLFFBQVEsRFBSSxHQUFFLEBQUsRUFBRyxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUUsSFBSyxTQUFTLEVBQUUsRFBRSxLQUFLLFNBQVMsRUFBRSxHQUFFLEtBQUssTFBTyxFQUFFLEtBQUssTFBTyxLQUFLLEtBQUssTFBTyxLQUFLLEtBQUssUUFBUSxLQUFLLEtBQUssUFBUyxHQUFJLEdBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQUssRFBSSxHQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEtBQUssSUFBSSxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssTUFBTSxHQUFJLEdBQUUsTUFBTSxFQUFFLEVBQUUsQFBQyxFQUFFLEdBQUUsSFBSyxLQUFLLEVBQUUsSFBSyxNQUFNLEVBQUUsSFBSyxZQUFZLEVBQUUsSFBSyxTQUFTLEVBQUUsSFBSyxNQUFNLEVBQUUsSFBSyxRQUFRLEVBQUUsSFBSyxXQUFXLEVBQUUsSFBSyxRQUFRLEVBQUUsSFBSyxPQUFPLEVBQUUsSFBSyxPQUFPLEVBQUUsSFBSyxTQUFTLENBQUMsQFBQyxZQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTyxJQUFHLEVBQUUsTUFBTyxHQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsRUFBRSxVQUFVLEVBQUcsRFBRSxFQUFFLEBQUsUUFBUSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsSFBSyxHQUFJLEdBQUUsSFBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEBQUsQUFBSSxFQUFFLEBQUsRUFBVyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFBRSxHQUFHLEdBQUUsRUFBRSxDQUFDLENBQUMsQFBQyxZQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsRFBRSxDQUFDLEVBQUUsTUFBTyxLQUFJLEdBQUcsUFBUyxFQUFFLENBQUMsRUFBRSxZQUFZLEVBQUUsRUFBRSxPQUFPLEdBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxlQUFlLEVBQUUsRUFBRSxPQUFPLFNBQVMsRUFBRSxXQUFXLEVBQUUsRUFBRSxPQUFPLFlBQVksRUFBRSxXQUFXLEVBQUUsRUFBRSxPQUFPLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEBQUsVUFBVSxFQUFFLFNBQVMsRUFBRSxFQUFFLFlBQVksRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsQFBQyxDQUFDLFlBQVcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFHLENBQUMsRUFBRSxNQUFPLEdBQUUsRFBSSxHQUFFLEVBQUUsRFBRyxJQUFJLEdBQUksRFBRSxHQUFHLEVBQUUsRUFBRyxHQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsRFBRyxHQUFJLEdBQUUsRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEVBQUUsRFBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLEdBQUcsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEVBQUUsTUFBTyxJQUFFLEVBQUUsQFBQyxFQUFFLEFBQUksSUFBSixHQUFRLEdBQUUsRFBRyxHQUFJLEdBQUUsRFBSSxJQUFFLEBQUsRFBRSxNQUFNLEdBQUcsSFBSyxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsTFBTyxLQUFLLEVBQUUsTFBTyxFQUFFLEVBQUUsTFBTyxHQUFHLEVBQUUsTFBTyxFQUFFLEBQUsRUFBRSxPQUFPLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLFVBQVUsRFBRyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLEVBQUUsVFBVyxDQUFDLENBQUcsSUFBRSxVQUFVLEVBQUUsRFBRyxHQUFHLEVBQUUsTFBTyxHQUFJLEdBQUUsSFBSyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsSFBSyxHQUFJLEdBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRFBSSxHQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsRUFBRSxZQUFZLEdBQUcsRUFBRSxFQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxZQUFZLEVBQUUsWUFBWSxHQUFJLEdBQUUsSFBSyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsWUFBWSxFQUFFLEBQUsRUFBRSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxPQUFPLEVBQUUsRFBRSxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsRFBSSxJQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTSxJQUFJLEVBQUUsRUFBRSxpQkFBaUIsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEtBQUssQFBQyxHQUFHLEVBQUUsVFBVyxFQUFFLENBQUMsRFBRyxHQUFFLENBQUMsRUFBRSxBQUFJLEVBQUUsWUFBTixHQUFpQixJQUFJLEVBQUUsTUFBTyxHQUFFLEdBQUcsQUFBSSxFQUFFLFlBQUsRUFBZIsSFBSyxDQUFDLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsRFBSSxHQUFFLEVBQUUsWUFBWSxFQUFvSCxHQUERyxDQUFJLEVBQUUsVFBTixHQUFnQixFQUFFLFVBQVUsSUFBSyxHQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLEVBQUUsSFBSyxZQUFYLElBQWtDLEVBQUUsUFBUyxFQUFFLGFBQWEsRUFBRSxPQUFPLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLEVBQUUsSFBSyxZQUFYLEdBQXNCLEBQUsRUFBQyxDQUFDLEBQUsRFBRSxPQUFPLEVBQUUsSUFBSSxFQUFHLEdBQUUsRUFBRSxFQUFFLEVBQUUsQUFBSSxFQUFFLEtBQUssWUFBWCxFQUFxQixFQUFFLEdBQUksRFBRSxTQUFTLEVBQUUsYUFBYyxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxXQUFXLEVBQUUsQFBQyxFQUFFLEdBQUksSUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUMsRUFBRSxHQUFJLElBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFDLEVBQUUsRFBSSxJQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsRUFBQyxFQUFFLEdBQUksSUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLEVBQUMsRUFBRSxHQUFJLElBQUUsRUFBRSxHQUFHLEdBQUcsRFBRyxFQUFDLEVBQUUsRFBSSxJQUFFLEVBQUUsRFBRyxJQUFJLElBQUksRUFBQyxFQUFFLEdBQUksSUFBRSxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUMsRUFBRSxHQUFJLElBQUUsRFBRyxJQUFJLElBQUksSFBSyxFQUFDLEVBQUUsRFBSSxJQUFFLEdBQUcsSUFBSSxJQUFJLEtBQUssRUFBQyxDQUFDLEVBQUUsRUFBRSxZQUFZLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTyxJQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLGFBQWEsRFBRSxFQUFFLGFBQWEsRFBRSxFQUFFLGlCQUFpQixHQUFFLEVBQUUsaUJBQWlCLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTyxJQUFHLEVBQUUsTUFBTSxBQUFJLEVBQUUsTUFBTSxPQUFaLEVBQWlCLEVBQUcsRFBRSxNQUFNLEBQUsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLFFBQVEsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsQFBQyxFQUFFLEBQUsRUFBRSxHQUFHLEVBQUUsRUFBRSxNQUFPLEdBQUUsRFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLFFBQVEsQFBQyxFQUFFLEBQUsQUFBSSxFQUFFLFdBQUsRFBZIsQUFBTSxFQUFFLFNBQVIsSFBZIsSUFBSSxFQUFFLEBQUsSUFBRSxFQUFFLEFBQUksRUFBRSxZQUFOLEVBQWdCLEdBQUcsQFBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsRUFBRSxTQUFTLEVBQUUsRFBRyxBQUFJLEVBQUUsTFBTixFQUFXLEVBQUUsTUFBTSxFQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsRFBRSxFQUFFLEdBQUcsRUFBRSxHQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsTFBUSxJQUFFLEVBQUcsRFBRSxPQUFPLEtBQUssRUFBRSxHQUFJLEdBQUUsTFBTyxLQUFLLEVBQUUsRFBSSxHQUFFLEBQUsTUFBTSxFQUFFLEdBQUksRFBRSxPQUFPLEtBQUssRUFBRSxHQUFJLEdBQUUsTFBTyxRQUFRLEdBQUcsRUFBRSxFQUFFLEdBQUUsRUFBRSxJQUFJLEVBQUUsTFBTyxJQUFJLEVBQUUsRFBRSxFQUFFLEVBQUUsTFBTyxNQUFNLEVBQUUsRFBRyxFQUFFLEdBQUUsRUFBRSxFQUFFLEBQUsTUFBTSxHQUFHLEdBQUcsRUFBRSxHQUFFLEVBQUUsRUFBRSxPQUFPLEBQUsRFBRyxHQUFHLEVBQUUsRFBRSxFQUFFLEFBQUksRUFBRSxRQUFOLEVBQVksRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEVBQUUsSUFBSSxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsTFBTyxPQUFPLEVBQUUsTFBTyxNQUFNLFFBQVMsSUFBRSxFQUFFLElBQUksRUFBRSxPQUFPLEBQUsTUFBTSxFQUFFLEdBQUUsRUFBRSxFQUFFLEBQUsTUFBTSxRQUFRLEVBQUUsRFBRyxHQUFHLEVBQUUsTFBTyxNQUFPLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxRQUFRLENBQUMsRFBRyxFQUFFLFFBQVEsRUFBRSxFQUFFLEBQUsSUFBSyxJQUFFLEVBQUUsQFBQyxFQUFFLEdBQUUsRUFBRSxDQUFDLEVBQUUsRFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEVBQUUsQFBQyxFQUFFLEdBQUUsRUFBRSxDQUFDLEVBQUUsRFBRSxFQUFFLEFBQUksRUFBRSxRQUFOLEVBQVksRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsTFBTyxPQUFPLENBQUMsRFBSSxHQUFFLEVBQUcsRFBRSxPQUFPLEdBQUcsSUFBSSxFQUFFLEdBQUksSUFBRyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEFBQUksRUFBRSxRQUFOLEVBQVksRUFBRSxJQUFJLEVBQUUsQUFBSSxFQUFFLFdBQUsRFBaUIsSUFBRyxJQUFJLEdBQUcsRFBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxBQUFJLEVBQUUsVFBTixHQUFpQixHQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRFBRyxFQUFFLEBQUsQFBQyxDQUFDLEdBQUcsQUFBSyxFQUFFLFNBQVAsRFBYyxHQUFHLEVBQUUsTFBTyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVMsTFBTSxFQUFFLEBQUsTUFBTSxTQUFVLEdBQUUsVUFBVSxFQUFFLGtCQUFtQixHQUFFLEBQUsTUFBTSxFQUFFLFFBQVEsRFBSSxHQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsRFBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxvQkFBbIsRFBRSxFQUFFLElBQUksRUFBRSxPQUFPLEBQUsRUFBRSxRQUFRLEVBQUUsRUFBRSxVQUFVLEVBQUUsTFBTyxNQUFNLEVBQUUsUUFBUSxHQUFJLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsQFBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLEBQUsTUFBTSxRQUFTLEdBQUUsUUFBUSxFQUFFLEVBQUUsTFBTyxHQUFHLEtBQUsRFBRSxPQUFPLEdBQUcsRFBRyxBQUFLLEVBQUUsUFBUCxHQUFjLEdBQUcsRUFBRSxPQUFPLEtBQUssQFBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsRFBRyxFQUFFLFVBQVUsRUFBRSxrQkFBbUIsRFBRSxPQUFPLEBQUsRUFBRSxRQUFRLEdBQUksRFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsaJBQWtCLENBQUMsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLEBQUsSFBSyxPQUFPLElBQUksRUFBRSxPQUFPLEtBQUssVFBVyxFQUFFLFNBQVMsRUFBRSxFQUFFLEdBQUUsRUFBRSxDQUFDLENBQUMsTFBTyxBQUFJLElBQUosRFBTyxFQUFFLEBQUsTUFBTSxFQUFFLFFBQVEsRFBSSxHQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLENBQUMsRFBRyxBQUFJLElBQUosRFBUSxHQUFFLFFBQVEsRUFBRSxFQUFFLEBQUsRFBRyxLQUFNLEdBQUUsTFBTyxHQUFHLEdBQUcsQUFBSyxFQUFFLFNBQVAsRFBYyxHQUFHLEVBQUUsTFBTyxRQUFRLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsaJBQWCLEdBQUUsTFBTyxNQUFNLEVBQUUsUUFBUSxHQUFJLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsQFBQyxHQUFHLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLGtCQUFrQixDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLFFBQVEsTFBTyxJQUFJLEVBQUUsTFBTyxRQUFRLFdBQVcsRUFBRSxTQUFTLEVBQUUsRUFBRSxHQUFFLEVBQUUsQFBQyxDQUFDLEBQUsQUFBSSxJQUFKLEdBQUsRUFBRSxPQUFPLEBQUsRUFBRSxRQUFRLEdBQUksRFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxDQUFDLEdBQUcsQUFBSSxJQUFKLEdBQVEsRFBRSxPQUFPLElBQUksSFBTSxHQUFFLEBQUsSUFBSSxHQUFHLEFBQUsRUFBRSxTQUFSLEtBQWlCLEdBQUUsTFBTyxLQUFNLEdBQUUsUUFBUSxFQUFFLEVBQUUsaJBQWtCLEVBQUUsQFBQyxFQUFFLEVBQUUsUUFBUSxHQUFHLEVBQUUsaJBQWCLElBQUUsRUFBRSxJQUFJLEVBQUUsSFBSyxFQUFFLEdBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxPQUFPLElBQUksRUFBRSxPQUFPLEdBQUcsQUFBSSxFQUFFLFVBQUsRFBZSxHQUFHLEVBQUUsQFBQyxFQUFFLEFBQUksRUFBRSxZQUFOLEVBQWdCLEBQUsRFBRSxXQUFXLEdBQUcsVUFBVSxBQUFJLEVBQUUsVFBTixHQUFnQixFQUFFLENBQUMsRFBRyxFQUFFLENBQUMsRFBRyxJQUFJLEVBQUUsTUFBTyxJQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsQUFBTSxFQUFFLFNBQVIsSFBZIsQUFBSSxFQUFFLFdBQUsRUFBZSxNQUFPLElBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxBQUFJLEVBQUUsVFBTixHQUFnQixBQUFJLEVBQUUsWUFBTixHQUFpQixJQUFJLEdBQUcsQUFBTSxFQUFFLFNBQVIsSUFBZSxDQUFDLEdBQUksRFBRSxBQUFJLEVBQUUsVFBTixFQUFlLFNBQVMsRUFBRSxFQUFFLENBQUMsTFBUSxLQUFJLENBQUMsRFBRyxBQUFJLEVBQUUsWUFBTixHQUFrQixJQUFFLENBQUMsRUFBRSxBQUFJLEVBQUUsWUFBTixHQUFpQixDQUFDLEdBQUcsSUFBSSxFQUFFLEBQUsRFBRSxLQUFLLENBQUMsRFBRyxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsUFBUyxFQUFFLEVBQUUsWUFBWSxFQUFFLFdBQVcsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEFBQUksRUFBRSxLQUFLLFlBQVgsRFBcIsTUFBTyxFQUFDLENBQUMsTUFBTyxHQUFFLEBQUsRUFBRSxJQUFJLEVBQUcsRFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLEVBQUUsSFBSyxZQUFYLEVBQXFCLEVBQUUsRFBRyxFQUFFLFVBQVcsRFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLEVBQUUsSFBSyxZQUFYLEdBQXNCLEVBQUUsQFBQyxFQUFFLEVBQUUsQFBQyxFQUFFLEFBQUksRUFBRSxXQUFOLEVBQWUsUFBUyxFQUFFLEVBQUUsQFBQyxPQUFRLEdBQUUsRUFBRSxFQUFFLEdBQUUsRFBRSxFQUFFLFNBQVMsQFBQyxHQUFHLEVBQUUsVFBVyxFQUFFLENBQUMsRFBRyxHQUFFLENBQUMsRUFBRSxFQUFFLFdBQVcsRFBRyxJQUFJLEVBQUUsTUFBTyxHQUFFLEdBQUcsQUFBSSxFQUFFLFlBQUsRUFBZIsSFBSyxDQUFDLEdBQUcsRUFBRSxhQUFhLEVBQUUsRUFBRSxXQUFXLEdBQUcsRUFBRSxFQUFFLFVBQVcsRFBRSxHQUFFLEVBQUUsRUFBRSxTQUFTLEBQUsRFBRSxFQUFFLElBQUksSUFBSSxHQUFFLEVBQUUsSUFBSSxJQUFJLEdBQUUsRUFBRSxHQUFHLENBQUMsRFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEBQVEsSUFBSSxHQUFFLEVBQUUsSUFBSSxJQUFJLEdBQUUsRUFBRSxJQUFJLElBQUksRFBRSxFQUFFLElBQUksSUFBSSxHQUFFLEVBQUUsSUFBSSxJQUFJLEdBQUUsRUFBRSxJQUFJLElBQUksRFBRSxFQUFFLElBQUksSUFBSSxHQUFFLEVBQUUsSUFBSSxJQUFJLEdBQUUsRUFBRSxJQUFJLEVBQUUsSUFBRyxFQUFFLGFBQWEsRUFBRyxJQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsVFBWSxHQUFFLGFBQWEsRUFBRSxVQUFVLENBQUMsRFBRyxFQUFFLGNBQWMsRUFBRyxHQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxhQUFhLENBQUMsRUFBRSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxhQUFhLEdBQUksRFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLFNBQVMsRUFBRSxFQUFFLFlBQVksRUFBRSxZQUFZLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLEVBQUUsSFBSyxZQUFYLEdBQXNCLEBQUsRUFBQyxDQUFDLEBQUsRFBRSxPQUFPLEVBQUUsSUFBSSxFQUFHLEdBQUUsRUFBRSxFQUFFLEVBQUUsQUFBSSxFQUFFLEtBQUssWUFBWCxFQUFxQixFQUFFLEdBQUcsRUFBRSxVQUFXLEdBQUUsRUFBRSxFQUFFLEVBQUUsQUFBSSxFQUFFLEtBQUssWUFBWCxHQUFzQixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsTFBTyxLQUFLLEVBQUUsQFBQyxFQUFFLEdBQUcsSUFBSSxHQUFHLElBQUksRFBSSxHQUFFLEBQUsSFBSyxJQUFJLEdBQUcsSUFBSSxFQUFFLEBQUsQUFBSSxHQUFFLFlBQUsRFBaIsRFBRSxXQUFXLElBQUksRUFBRSxHQUFHLElBQUksRFBSSxDQUFJLElBQUosRUFBTSxFQUFFLFVBQVUsQFBQyxFQUFFLEFBQUksSUFBSixHQUFRLEdBQUUsaUJBQWlCLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxBQUFJLElBQUosRFBUSxJQUFFLEVBQUUsSUFBSSxFQUFFLEFBQUksRUFBRSxZQUFOLEdBQWtCLEdBQUUsUFBUyxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsTFBTyxLQUFLLEVBQUUsQFBQyxFQUFFLEFBQUksRUFBRSxZQUFOLEdBQWlCLEBQUsRFBRSxXQUFXLEdBQUcsQFBQyxDQUFDLEBQUsSFBSSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRyxDQUFJLEVBQUUsTFBTixFQUFZLElBQUUsRUFBRSxJQUFJLEVBQUUsSFBSyxFQUFFLEdBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxHQUFHLEVBQUUsRFBRSxFQUFFLEVBQUUsTFBTyxHQUFHLEdBQUcsRUFBRSxHQUFFLEVBQUUsRUFBRSxPQUFPLEdBQUcsRFBRyxFQUFFLEdBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEdBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxHQUFHLEVBQUUsRFBRSxFQUFFLEVBQUUsVUFBVSxHQUFHLEdBQUcsRUFBRSxHQUFFLEVBQUUsRUFBRSxVQUFVLEdBQUcsRFBRyxHQUFJLEdBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsSFBSyxHQUFHLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxNQUFPLEdBQUUsSFBSyxDQUFDLEVBQUUsTUFBTSxBQUFJLEVBQUUsVUFBTixFQUFjLEVBQUUsRUFBRSxFQUFFLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTyxJQUFHLEVBQUUsTUFBTyxHQUFFLEVBQUUsTUFBTSxVQUFVLEdBQUcsQUFBSyxJQUFMLElBQVEsQUFBSyxJQUFMLElBQVEsQUFBSyxJQUFMLElBQVEsQUFBTSxJQUFOLEtBQVMsSUFBSSxHQUFHLEFBQUsSUFBTixJQUFRLEdBQUUsRUFBRSxDQUFDLEVBQUcsRFBRSxNQUFNLEtBQUssSUFBSSxFQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEVBQUUsRUFBRSxxQkFBcUIsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBZMsRFBdEIsQFBQyxHQUFHLENBQUMsRUFBRSxPQUFrQixBQUFLLEdBQUcsRFBRSxFQUFFLEBQUsUUFBbkIsRFBMEIsQUFBSSxJQUFKLEdBQUsRUFBRSxTQUFTLEdBQUcsRUFBRSxVQUFVLEBQUsRFBRSxJQUFJLEFBQUksSUFBSixHQUFRLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQFBQyxHQUFHLEVBQUUsSFBSyxFQUFFLEdBQUcsRUFBRSxRQUFTLENBQUksSUFBSixHQUFRLElBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxPQUFPLEdBQUcsRUFBRSxHQUFJLEdBQUUsSFBSyxFQUFFLEBQUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsTFBTyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsUFBUyxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUUsQFBQyxFQUFFLEVBQUUsVFBVyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsVUFBVyxHQUFFLEdBQUcsRUFBRSxNQUFPLEdBQUUsTFBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTFBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsQFBQyxFQUFFLFNBQVMsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEdBQUUsQFBQyxDQUFDLENBQUMsTUFBTyxHQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsSFBSyxFQUFFLENBQUMsRUFBRSxFQUFFLFlBQVksbNBQWDLEVBQUUsQFBQyxrQkFBaIsRFBRyxZQUFZLEdBQUcsVUFBVSxHQUFHLGFBQWEsRFBRyxVQUFVLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxFQUFFLFFBQVEsVUFBVSxDQUFDLEtBQUssSFBSyxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssRFBRyxFQUFFLEtBQUssTUFBTSxLQUFLLEtBQUssVUFBVSxFQUFFLEtBQUssSFBSyxHQUFHLEtBQUssUUFBUSxHQUFHLEtBQUssSFBSyxFQUFFLEtBQUssSFBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRUFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRyxHQUFFLFNBQVMsRFBRyxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUcsRFBRSxFQUFFLFdBQVcsRUFBRSxFQUFHLEdBQUUsVUFBVSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLEVBQUcsSUFBRyxFQUFFLFNBQVMsRUFBRSxFQUFHLElBQUcsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFLLElBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsRFBRyxLQUFLLEVBQUUsSUFBSSxHQUFHLEdBQUcsRUFBRSxBQUFLLEdBQUUsSUFBSSxHQUFHLEBQWQsRUFBbUIsRUFBRSxLQUFLLEBQUsTUFBTSxDQUFDLEdBQUcsQFBRSxJQUFHLEdBQUcsQFBQyxHQUFHLEFBQUksSUFBRyxJQUFQLEVBQVUsQFBQyxFQUFFLEVBQUcsTFBTSxHQUFJLEdBQUcsSUFBRyxHQUFHLElBQUksVUFBVSxDQUFDLEdBQUcsRFBRyxFQUFFLENBQUMsRUFBRSxLQUFLLEdBQUcsTFBTyxDQUFDLEVBQUUsSUFBSSwQkFBOEIsRUFBRSxLQUFLLEdBQUcsTFBTyxDQUFDLEVBQUUsTUFBTSxFQUFHLElBQUcsSFBTSxHQUFFLEdBQUksSUFBRyxFQUFFLEBQUsRUFBRSxHQUFHLEdBQUcsRFBRyxFQUFHLElBQUcsRFBRyxFQUFFLEtBQUssRUFBRSxHQUFHLEdBQUcsRUFBRSxJQUFLLElBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsRFBRyxLQUFLLEVBQUUsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFFLElBQUksRFBRSxJQUFJLEdBQUcsTUFBTSxDQUFDLEdBQUcsQUFBSSxJQUFHLElBQVAsRUFBVSxDQUFDLEVBQUUsRUFBRyxPQUFNLEdBQUksRFBRyxJQUFHLEdBQUcsSUFBSSxVQUFVLENBQUMsRUFBRSxJQUFJLHdCQUFQixFQUFFLEtBQUssRFBRyxPQUFPLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxFQUFHLElBQUcsSFBTSxJQUFHLEVBQUUsTUFBTSxFQUFHLElBQUcsRFBRyxHQUFJLElBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxJQUFJLEVBQUcsSUFBRyxFQUFHLElBQUcsRFBRyxHQUFHLENBQUMsRUFBRSxJQUFJLGdDQUFnQyxFQUFFLEtBQUssRFBRyxPQUFPLENBQUMsRFBRyxLQUFLLEVBQUUsRFBRyxFQUFHLEdBQUUsRUFBRSxHQUFHLEVBQUUsQFBQyxHQUFHLEVBQUcsRFBRSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxJQUFJLGdDQUFnQyxFQUFFLEtBQUssRFBRyxPQUFPLENBQUMsRFBRyxFQUFFLEVBQUcsRFBRSxLQUFLLEdBQUcsRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxJQUFJLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRFBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxVQUFVLEVBQUUsRFBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEVBQUcsSUFBRyxHQUFHLEVBQUUsQFBQyxJQUFJLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsRFBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksRFBRyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEdBQUcsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQFBQyxVQUFVLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksRFBRyxFQUFFLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsSFBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEtBQUssRFBRyxFQUFFLEdBQUksRFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEdBQUksRFBRSxLQUFLLEVBQUUsTUFBTSxLQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFHLElBQUcsSUFBSSxDQUFDLEdBQUksRFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEdBQUksRFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQFBQyxDQUFDLEtBQUssQFBQyxPQUFPLEVBQUUsRFBRyxFQUFFLEdBQUcsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFJLElBQUksSUFBRyxHQUFHLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUcsRFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksSUFBSyxHQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLENBQUMsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxXQUFXLEVBQUUsQFBQyxNQUFPLEtBQUksRFBRyxLQUFNLEtBQUksRUFBRSxPQUFTLFFBQUsSUFBSSxHQUFLLEBQUksSUFBSSxHQUFHLENBQUMsWUFBWSxDQUFDLEtBQUssSFBSyxFQUFFLEtBQUssSFBSyxHQUFHLEtBQUssSFBSyxFQUFFLEtBQUssUFBUyxHQUFHLEtBQUssTUFBTSxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssSFBSyxLQUFLLEtBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssTFBTyxLQUFLLEtBQUssSFBSyxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssTFBTyxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssUUFBUSxLQUFLLEtBQUssUFBUyxLQUFLLEtBQUssUUFBUSxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssSFBSyxLQUFLLEtBQUssSFBSyxHQUFJLEdBQUUsTUFBTSxHQUFHLEVBQUUsSFBSyxLQUFLLEdBQUksRFBRSxNQUFNLEdBQUcsRUFBRSxLQUFLLEBQUsSFBSyxLQUFLLFFBQVEsSFBSyxLQUFLLEtBQUssRUFBRSxLQUFLLEtBQUssRUFBRSxLQUFLLElBQUksQFBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUksRFBRSxNQUFPLElBQUcsRUFBRSxNQUFPLEdBQUUsRUFBRSxNQUFNLEVBQUUsUFBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxNQUFPLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEdBQUksRFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxRQUFRLEdBQUksRFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRFBRyxHQUFHLENBQUMsQFBQyxXQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTyxJQUFHLEVBQUUsTUFBUSxJQUFFLEVBQUUsTFBTyxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsQFBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsTUFBTyxJQUFHLEVBQUUsTUFBTyxHQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUcsRFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRyxJQUFHLEdBQUcsRUFBRSxJQUFLLElBQUcsSFBSyxHQUFJLEdBQUUsRFBRyxHQUFHLEdBQUcsRUFBRyxDQUFPLEVBQUUsUFBVCxNQUFpQixFQUFFLFFBQVEsRFBSSxHQUFFLEBQUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsVFBVyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxNQUFPLEdBQUcsRFBRSxHQUFJLEdBQUcsRFBRSxNQUFNLEdBQUcsTFBTyxLQUFNLEdBQUUsRUFBRSxFQUFFLENBQUMsSFBSyxHQUFJLEdBQUUsTUFBTSxNQUFNLEdBQUcsQFBQyxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRFBRyxXQUFXLEVBQUUsQFBQyxHQUFHLEVBQUUsQFBQyxHQUFJLEdBQUUsSUFBSSxFQUFFLEdBQUksRFBRSxNQUFNLEdBQUcsRUFBRSxFQUFFLEdBQUksRFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSFBSyxLQUFLLEVBQUUsSFBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEtBQUssRUFBRSxLQUFLLEVBQUUsSFBSyxFQUFFLEtBQUssSFBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSFBSyxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsSFBSyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSFBSyxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsSFBSyxDQUFDLEtBQUssQFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxTQUFTLENBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEBQUsTUFBTyxBQUFPLEdBQUUsUFBVCxNQUFrQixHQUFFLEBQUsRFBRyxFQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxPQUFPLEdBQUksRFBRSxLQUFLLEVBQUUsSFBSyxHQUFHLEdBQUcsRUFBRSxNQUFPLEdBQUUsUFBUyxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEBQUsQFBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEBQVEsRFBRyxHQUFFLEVBQUUsTUFBTSxFQUFFLFFBQVMsRFBRSxHQUFHLEVBQUUsUFBUyxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRyxJQUFHLEdBQUksRFBRSxTQUFTLEVBQUUsTFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxPQUFRLEdBQUUsTFBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEBQVEsRFBRSxNQUFNLEdBQUcsRUFBRSxNQUFNLEVBQUUsTFBUSxHQUFFLEBQUsSFBSyxDQUFDLENBQUMsRUFBRSxhQUFhLEVBQUUsRUFBRSxjQUFjLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLFlBQVksUFBUyxFQUFFLENBQUMsTUFBTyxHQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxhQUFhLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUUsRUFBRSxHQUFFLEVBQUUsRUFBRSxHQUFFLEVBQUUsRUFBRSxHQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFJLEdBQUUsSFBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsRFBRyxDQUFDLEVBQUUsTFBTyxDQUFDLEVBQUUsUUFBUSxDQUFDLEVBQUUsTFBTyxBQUFJLEVBQUUsVFBTixFQUFlLEBQUsRFBRSxBQUFNLEdBQUUsRUFBRSxPQUFPLEBQWpCLElBQXdCLEdBQUUsSFBSyxJQUFJLEdBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxPQUFPLEdBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEdBQUUsRUFBRSxFQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxPQUFPLEVBQUUsVUFBVyxHQUFFLEdBQUcsQUFBSSxFQUFFLEBQUsRUFBVyxDQUFDLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBRyxFQUFFLEVBQUUsTUFBTSxBQUFRLElBQVIsTUFBVSxDQUFDLEVBQUUsRUFBRSxNQUFNLEdBQUcsSUFBSSxFQUFFLEVBQUUsRFBRyxJQUFJLEVBQUUsSUFBSSxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRFBRSxLQUFLLEtBQUssSUFBSSxDQUFFLEdBQUUsRUFBRSxPQUFVLEBQUksSUFBSSxHQUFJLElBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxJQUFJLHlCQUFQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRFBRyxBQUFJLElBQUcsSUFBUCxFQUFVLENBQUMsRUFBRSxJQUFJLDZCQUEQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRFBRyxHQUFHLEVBQUUsRUFBRSxFQUFHLElBQUksTUFBSyxJQUFJLEFBQUksRUFBRSxRQUFOLEVBQVksRUFBRSxNQUFNLFVBQVUsRUFBRSxFQUFFLEBQUsQFBQyxFQUFFLElBQUkscJBQXNCLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxFQUFFLEtBQUssRFBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxFQUFFLEtBQUssSUFBSSxFQUFFLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxVQUFXLEdBQUUsSFBSyxFQUFFLElBQUksQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsQUFBSSxLQUFJLEVBQUUsUUFBVixFQUFpQixDQUFDLEVBQUUsSUFBSSwQkFBNkIsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEdBQUcsTUFBTSxFQUFFLEBQUsQFBQyxFQUFFLElBQUksMkJBQTJCLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxFQUFFLEBQUsRFBRSxLQUFLLEtBQUssRFBRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEBQVEsRFBRSxHQUFHLElBQUksRUFBRSxFQUFFLEdBQUcsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEBQUsRFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRUFBRSxNQUFPLEdBQUUsSFBSyxLQUFLLEdBQUcsSUFBSSxFQUFFLEBQVEsRFBRSxHQUFHLElBQUksRUFBRSxFQUFFLEdBQUcsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLElBQUksRFBRyxJQUFJLEVBQUUsRFBRyxJQUFJLEdBQUcsSUFBSSxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssTUFBTyxHQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLENBQUMsQFBQyxFQUFFLEBQUsRFBRSxLQUFLLEBQUsSUFBSSxFQUFFLEVBQUUsSFBSyxHQUFHLEdBQUcsRFBRyxJQUFJLEVBQUUsTFBUSxHQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsRFBRyxJQUFJLEVBQUUsSUFBSSxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssTUFBTyxHQUFFLEdBQUcsSFBSyxFQUFFLEBQUsQFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsRUFBRSxNQUFPLEdBQUUsSFBSyxVQUFVLEdBQUcsSUFBSSxFQUFFLEBQVEsRFBRSxHQUFHLElBQUksRUFBRSxFQUFFLEdBQUcsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSFBTSxHQUFFLEBQUsRFBRSxLQUFLLEBQUsTUFBTSxFQUFFLEtBQUssTUFBTyxHQUFFLEdBQUcsSFBSyxFQUFFLEBQVEsRFBRyxHQUFFLEVBQUUsUFBVSxHQUFFLEdBQUcsRFBSSxHQUFFLEBQUsRFBRSxFQUFFLEtBQUssVUFBVSxFQUFFLEBQUsRUFBRSxLQUFLLEBQVEsRFBRSxLQUFLLEBQUsRFBSSxPQUFNLEVBQUUsSFBSyxTQUFTLEdBQUcsRUFBRSxTQUFTLEVBQUUsSFBSyxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBRyxJQUFJLEVBQUUsTFBUSxHQUFFLEBQUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLENBQUMsRFBRyxHQUFHLEVBQUUsRFBRyxFQUFFLEVBQUUsUUFBUSxHQUFHLEVBQUUsUUFBUSxRQUFRLEVBQUUsTFBTyxFQUFFLEVBQUUsSFBSyxNQUFPLEdBQUUsRFBRyxLQUFLLEVBQUUsTUFBTSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxHQUFHLEVBQUUsTFBTyxPQUFRLEdBQUUsSFBSyxNQUFNLEBQUsYUFBYSxDQUFDLEdBQUcsRFBRyxFQUFFLEdBQUcsQFBQyxHQUFHLElBQUksRUFBRSxPQUFRLEdBQUUsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQFBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxPQUFPLEtBQUsRFBRSxNQUFPLEdBQUUsSFBSyxLQUFLLEBQUsRUFBRSxPQUFPLEVBQUUsRUFBRSxLQUFLLEBQUsRFBRSxHQUFHLEtBQUssRUFBRSxNQUFNLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEdBQUcsRUFBRSxPQUFPLEBQVEsRFBRSxLQUFLLFNBQVMsTFBTyxhQUFhLENBQUMsRFBRyxHQUFHLEVBQUUsRFBRyxDQUFDLEdBQUcsSUFBSSxFQUFFLEBQVEsRFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsRFBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEBQUsSFBTSxHQUFFLEBQUsRFBRSxLQUFLLFFBQVEsTUFBTSxFQUFFLEtBQUssTUFBTyxHQUFFLEdBQUcsSUFBSSxFQUFFLEBQUsQFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBRyxJQUFLLEBQUsRUFBRSxPQUFPLENBQUMsRUFBRSxJQUFJLHNCQUFzQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLEBQUsRFBRSxLQUFLLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEtBQUssSFBSyxJQUFJLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxFQUFFLEtBQUssRFBRyxVQUFXLElBQUcsSFBSyxFQUFFLElBQUksQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEBQVEsSUFBRyxHQUFHLEFBQUksRUFBRSxXQUFOLEVBQWUsTUFBTyxHQUFFLFNBQVMsRFBRSxFQUFFLFVBQVUsRFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxFQUFFLEtBQUssTFBUSxJQUFHLEdBQUcsQUFBSSxJQUFKLEdBQUsQUFBSSxJQUFKLEVBQUsWUFBYSxJQUFHLEdBQUcsRUFBRSxLQUFLLENBQUMsSFBSyxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLENBQUMsQFBQyxPQUFPLEVBQUUsSFBSyxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUcsTUFBSyxRQUFTLEdBQUUsRUFBRSxLQUFLLEdBQUcsVUFBVyxHQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxLQUFLLEdBQUcsQUFBSSxJQUFKLEVBQUsTUFBTSxLQUFLLEVBQUUsRFBRyxFQUFFLFlBQWEsRFBRSxFQUFFLEtBQUssRFBRyxVQUFXLEdBQUUsRUFBRSxJQUFJLHFCQUFxQixFQUFFLEtBQUssRFBRyxLQUFLLEVBQUUsRFBRyxFQUFFLFVBQVcsSUFBRyxJQUFJLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBSSxPQUFNLElBQUssSFBSSxHQUFHLEBQUsQFBQyxFQUFFLElBQUksKJBQStCLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxHQUFHLEVBQUUsTFBTyxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEdBQUcsQUFBSSxJQUFKLEVBQUsWUFBYSxJQUFHLEVBQUUsSFBSyxPQUFRLElBQUcsRFBRyxFQUFFLEVBQUUsTFBTyxDQUFDLEdBQUcsRUFBRSxHQUFJLEdBQUUsRFBRyxHQUFFLEdBQUksRFBRSxJQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBRyxFQUFFLElBQUcsRUFBRSxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEdBQUcsVUFBVyxJQUFHLEtBQUssRUFBRSxJQUFJLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLENBQUMsQFBQyxHQUFHLEVBQUUsSFBSyxJQUFLLElBQUcsRFBRyxLQUFLLEVBQUUsRFBRyxFQUFFLEVBQUUsTUFBTSxFQUFHLElBQUcsRFBRyxLQUFLLEVBQUUsRFBRyxFQUFFLEVBQUUsTUFBTSxFQUFHLElBQUcsRFBRyxLQUFLLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxNQUFNLEdBQUcsRUFBRSxNQUFNLENBQUMsRUFBRSxJQUFJLHNDQUFzQyxFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEBQVEsSUFBRyxLQUFLLEVBQUUsSFBSyxFQUFFLEBQUsQFBQyxLQUFLLEVBQUUsRFBRyxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsRFBRyxDQUFDLENBQUMsSFBSyxFQUFFLEtBQUssSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLEBQUsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRFBRyxFQUFFLFFBQVEsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSwyQkFBMkIsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEVBQUUsSFBSyxFQUFFLEVBQUUsSFBSyxPQUFRLElBQUcsSFBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsTFBTyxDQUFDLEtBQUssRFBRyxHQUFFLEVBQUUsUUFBUSxFQUFHLElBQUcsRUFBRSxTQUFTLEBQUsRFBRyxJQUFJLEdBQUUsTUFBTSxFQUFFLENBQUcsSFBRSxJQUFJLEtBQUssSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBRyxHQUFFLEdBQUcsSFBSyxHQUFFLEdBQUcsRFBRSxFQUFFLEtBQUssRUFBRSxRQUFRLEBQUsQFBQyxHQUFHLEFBQUssSFBTCxHQUFPLENBQUMsSUFBSSxFQUFFLEdBQUUsRUFBRSxFQUFFLEdBQUcsQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEdBQUcsSFBSyxHQUFFLEdBQUcsRFBRSxBQUFJLEVBQUUsTFBTixFQUFXLENBQUMsRUFBRSxJQUFJLDRCQUEQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEdBQUcsRUFBRSxFQUFHLEdBQUUsRFBRyxLQUFLLEVBQUUsRFBRyxDQUFDLFNBQVMsQUFBSyxLQUFMLEdBQUsQFBQyxJQUFJLEVBQUUsRFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBRyxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUcsRFBRyxNQUFLLEtBQUksSFBSyxFQUFFLEdBQUcsQFBQyxLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUUsRUFBRSxFQUFFLEdBQUcsQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEdBQUcsRFBRSxFQUFFLEVBQUUsRUFBRSxHQUFJLEtBQUssTUFBSyxLQUFJLEtBQUssRUFBRSxHQUFHLENBQUMsQFBQyxHQUFHLEVBQUUsSFBSyxFQUFFLEVBQUUsSFBSyxFQUFFLEBQUsQFBQyxFQUFFLElBQUksNEJBQTRCLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxLQUFLLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQFBQyxHQUFHLEFBQUssRUFBRSxPQUFQLEdBQVksTUFBTSxHQUFHLEFBQUksRUFBRSxLQUFLLEBQVgsRUFBZIsQFBQyxFQUFFLElBQUksdUNBQXVDLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUUsQFBQyxLQUFLLEVBQUUsTFBTyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSFBSyxFQUFFLFFBQVEsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSwQkFBOEIsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLENBQUMsSFBSyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssQFBQyxFQUFFLEVBQUUsUFBUyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxQkFBdIsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsQUFBSSxJQUFKLEVBQUsWUFBYSxJQUFHLEVBQUUsSFBSyxPQUFRLElBQUcsRFBRyxHQUFHLEdBQUcsSFBSyxHQUFFLENBQUMsRUFBRSxTQUFTLEdBQUUsRUFBRSxVQUFVLEdBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsTFBTyxHQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsSFBSyxBQUFLLEVBQUUsTFBUCxJQUFjLEdBQUUsSFBSyxJQUFJLEtBQUssQFBQyxJQUFJLEVBQUUsSFBSyxFQUFFLEdBQUcsRFBRSxFQUFFLFFBQVEsRUFBRyxJQUFHLEVBQUUsUFBUyxNQUFNLEdBQUcsSUFBSSxHQUFFLEBQUsRUFBRSxDQUFHLEtBQUUsSUFBSSxLQUFLLElBQUksQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEdBQUcsSUFBRyxBQUFJLEtBQUksSFBUixFQUFXLENBQUMsSUFBSSxHQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsRFBRSxHQUFHLEdBQUUsRUFBRSxRQUFRLEdBQUksSUFBRyxJQUFHLEdBQUUsSUFBRyxJQUFJLFFBQUsRFBRyxJQUFJLEdBQUUsTUFBTSxFQUFFLENBQUUsSUFBRyxJQUFFLElBQUksSFBSyxJQUFJLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLENBQUMsQFBQyxLQUFLLEdBQUUsRFBRyxHQUFFLEVBQUUsTUFBTSxFQUFDLENBQUMsRFBRyxLQUFLLEdBQUUsRFBRyxHQUFFLEVBQUUsTUFBTSxHQUFFLEVBQUUsTFBTyxHQUFFLEFBQUksSFBSixFQUFNLENBQUMsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEdBQUcsRFBRyxHQUFFLENBQUMsRUFBRSxLQUFLLEdBQUcsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEdBQUcsRFBRyxHQUFFLENBQUMsRUFBRSxJQUFJLDhCQUEQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxNQUFNLEdBQUcsRFBRSxFQUFFLEtBQUssTFBUSxJQUFHLEdBQUcsRUFBRSxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEVBQUUsUUFBUSxFQUFHLElBQUcsRUFBRSxPQUFPLEVBQUUsSFBSyxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsSFBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLEBQUsRUFBRSxLQUFLLEBQVEsSUFBRyxLQUFLLEdBQUcsRFBRSxFQUFFLFNBQVMsRUFBRyxJQUFHLEVBQUUsVUFBVSxNQUFNLEdBQUcsSUFBSSxHQUFFLEBQUsRUFBRSxDQUFHLEtBQUUsSUFBSSxLQUFLLElBQUksQFBQyxHQUFHLEFBQUksSUFBSixFQUFNLFFBQVEsSUFBSSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsQFBQyxDQUFDLEdBQUcsQUFBSSxLQUFJLEtBQVIsRUFBVyxDQUFDLElBQUksRFBRSxHQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsRFBRyxHQUFFLEVBQUUsUFBUyxHQUFJLElBQUcsSUFBRyxHQUFFLElBQUcsSUFBSSxRQUFPLEdBQUcsSUFBSSxHQUFFLEBQUsRUFBRSxDQUFFLElBQUcsSUFBRSxJQUFJLEtBQUssSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsSFBSyxHQUFFLEdBQUcsRFBRSxFQUFFLEBQUsRUFBQyxDQUFDLEdBQUcsSFBSyxHQUFFLEdBQUcsRFBRSxFQUFFLEBQUsRFBRSxHQUFHLEdBQUUsQFBQyxFQUFFLElBQUksdJBQXdCLEVBQUUsSFBSyxHQUFHLEtBQUssQFBQyxFQUFFLEBQUsRFBRSxFQUFFLEBQUsRFBRyxHQUFFLEVBQUUsSFBSyxPQUFRLElBQUcsRFBRyxFQUFFLEBQUsQFBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUcsSUFBRyxFQUFFLEBQUsRUFBRSxLQUFLLEVBQUUsTUFBTSxHQUFHLEVBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxLQUFLLENBQUMsRFBRyxFQUFFLEBQUsRUFBRSxLQUFLLENBQUMsRUFBRSxJQUFJLGdDQUFnQyxFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxLQUFLLEBQVEsSUFBRyxHQUFHLEFBQUksSFBSixFQUFNLFFBQVEsRFBRyxFQUFFLEVBQUUsRFBRSxFQUFFLEBQUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRUFBRSxLQUFLLENBQUMsRUFBRSxJQUFJLGdDQUFnQyxFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRFBRSxFQUFFLEVBQUUsTUFBTyxJQUFHLEVBQUUsTUFBTSxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsUUFBUyxHQUFFLEVBQUUsUUFBUSxHQUFFLEVBQUUsTUFBTSxLQUFNLElBQUUsRUFBRSxHQUFFLEdBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxPQUFPLElBQUksRFBRSxHQUFJLEdBQUUsSUFBRyxJQUFHLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFLLEdBQUUsTUFBSyxFQUFFLEdBQUcsQFBQyxBQUFJLEVBQUUsUFBTixHQUFlLEdBQUUsSFBSyxJQUFJLFVBQVcsSUFBRyxHQUFHLEFBQUksSFBSixFQUFNLFFBQVEsRUFBRSxNQUFLLEVBQUUsTFBTyxLQUFJLEVBQUUsSFBSyxHQUFHLFVBQVcsSUFBRyxHQUFHLEVBQUUsSFBSyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsRFBRyxBQUFJLElBQUosRUFBTSxRQUFRLElBQUksRFBRyxFQUFFLEBQUsRUFBRSxHQUFHLENBQUMsQFBQyxHQUFHLEdBQUcsRFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEBQUsRUFBRSxHQUFJLEdBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxHQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEdBQUUsTUFBTSxFQUFFLEVBQUUsQFBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEVBQUUsSUFBSSxQkFBdUIsRUFBRSxLQUFLLEdBQUcsSFBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLEBQVEsSUFBRyxHQUFHLEVBQUUsTUFBTSxFQUFFLEBQUsQFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQUFBSSxJQUFKLEVBQUsUUFBUSxJQUFJLEdBQUcsRUFBRSxNQUFNLEVBQUUsRFBRyxDQUFDLENBQUMsRFBRyxJQUFLLFlBQVcsRUFBRSxPQUFPLENBQUMsRUFBRSxJQUFJLHlCQUFQixFQUFFLEtBQUssRFBRyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLEtBQUssTFBUSxJQUFHLEVBQUUsRUFBRSxZQUFhLElBQUcsRUFBRSxHQUFHLFlBQWEsSUFBRyxNQUFNLEBQVEsWUFBVyxNQUFPLEdBQUUsTUFBTyxHQUFFLFNBQVMsRFBRSxFQUFFLFVBQVUsRFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRyxHQUFFLEBQUsSUFBSSxFQUFFLFdBQVcsRUFBRSxLQUFLLElBQUssRFBRSxLQUFLLElBQUksQUFBSSxJQUFKLEtBQVMsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLFNBQVMsRUFBRSxFQUFFLFNBQVMsRUFBRyxHQUFFLEtBQUssRFBRyxJQUFLLEtBQUcsRUFBRSxTQUFTLEdBQUcsRUFBRSxVQUFVLEVBQUUsVUFBVSxHQUFFLEVBQUUsVFBVyxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUUsTUFBTSxHQUFJLEdBQUUsTUFBTSxFQUFFLEBQUsRUFBRSxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsQFBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsQFBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLEtBQUsRFBRSxLQUFLLEdBQUcsRFBSSxDQUFLLEVBQUUsTFBUCxHQUFZLElBQUksRFBSSxDQUFLLEVBQUUsTFBUCxJQUFhLEFBQUssRUFBRSxPQUFQLEdBQVksSUFBSSxHQUFJLENBQUcsSUFBSCxHQUFNLEFBQUksSUFBSixHQUFPLEFBQUksSUFBSixJQUFRLElBQUksRFBSSxHQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVFBVyxTQUFTLEVBQUUsQFBQyxHQUFHLENBQUMsRFBRyxDQUFDLEVBQUUsTUFBTSxNQUFPLEdBQUUsRFBSSxHQUFFLEVBQUUsTUFBTSxNQUFPLEdBQUUsUUFBUyxHQUFFLEBQUsTUFBTSxFQUFFLEBQUsSFBSyxDQUFDLEVBQUUsRUFBRSxpQkFBaUIsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsTUFBTyxJQUFHLEVBQUUsTUFBTSxBQUFJLEdBQUcsRFBRSxFQUFFLEBQUsTFBbEIsRUFBdIsRUFBSSxJQUFFLEtBQUssRFBRyxLQUFLLEdBQUcsRFBRyxDQUFDLEVBQUUsRUFBRSxxQkFBcUIsUFBUyxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEBQUsTUFBTyxJQUFHLEVBQUUsTUFBTSxBQUFLLEdBQUUsRUFBRSxPQUFPLEBQWhCLEdBQXNCLEFBQUssRUFBRSxPQUFQLEdBQVksRUFBRSxBQUFLLEVBQUUsTFBUCxJQUFhLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxJQUFJLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFHLEdBQUUsSFBSyxHQUFHLElBQUssRFBRSxTQUFTLEVBQUUsRFBRyxDQUFDLEVBQUUsRUFBRSxZQUFZLGDQUFvQyxFQUFFLENBQUMsaJBQWtCLEdBQUcsWUFBWSxHQUFHLFVBQVUsRFBRyxZQUFZLEdBQUcsYUFBYSxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBSSxHQUFFLEVBQUUsaUJBQWlCLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSFBSyxLQUFLLEtBQUssSFBSyxLQUFLLEtBQUssSFBSyxNQUFNLEBQUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxRQUFRLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsSFBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEdBQUUsRUFBRSxFQUFFLEdBQUksRFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEdBQUksRFBRSxNQUFNLEVBQUUsRUFBRSxHQUFFLEtBQUssRFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRFBRyxJQUFJLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEBQUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsRFBRyxBQUFJLEVBQUUsSFBTixFQUFTLElBQUksQFBQyxHQUFHLEVBQUUsRFBSSxHQUFFLEdBQUcsQUFBSSxJQUFKLEVBQUsTUFBTyxHQUFFLEtBQUssUFBUyxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRFBRyxBQUFJLEVBQUUsSFBTixFQUFTLElBQUksQFBQyxJQUFJLEVBQUUsRFBSSxHQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLElBQUksRFBRyxJQUFJLEVBQUcsSUFBRyxFQUFFLElBQUksRUFBRSxNQUFNLEdBQUcsRFBRyxFQUFFLEdBQUksQFBSSxJQUFKLEdBQUsQUFBSSxJQUFKLEdBQUsTUFBTSxHQUFHLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxJQUFJLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksQUFBSSxFQUFFLEVBQUUsSFBUixHQUFhLEdBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxHQUFHLEdBQUcsRUFBRSxBQUFJLElBQUosRUFBTyxHQUFFLEdBQUUsRUFBRSxJQUFJLEFBQUksSUFBSixFQUFPLEdBQUUsRUFBRSxJQUFHLElBQUksRFBRSxFQUFFLElBQUcsSUFBSSxLQUFNLEdBQUUsRUFBRSxHQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUcsSUFBRSxHQUFJLEdBQUUsSUFBSSxFQUFFLEFBQUksSUFBSixHQUFPLElBQUksSUFBRyxBQUFJLElBQUosRFBTyxJQUFJLEdBQUUsTUFBTyxHQUFFLEBQUsQFBQyxJQUFJLEVBQUUsRUFBRSxHQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUcsRFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRyxHQUFFLEdBQUUsRFBRSxFQUFFLElBQUksRUFBRSxHQUFFLEVBQUUsSFBTSxHQUFFLEdBQUcsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFHLElBQUcsSUFBSSxJQUFHLElBQUksRFBRyxHQUFHLEdBQUcsRFBRyxFQUFFLEVBQUUsQUFBSSxJQUFKLEdBQUsQFBQyxJQUFJLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEFBQUksSUFBSixFQUFPLElBQUcsRUFBRSxFQUFFLEdBQUcsRFBRyxFQUFFLEVBQUUsSUFBSSxBQUFHLEVBQUUsRUFBRSxJQUFQLEVBQVUsQFBQyxHQUFHLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsRUFBRSxHQUFJLEdBQUUsSFBSyxFQUFFLENBQUMsSUFBSSxBQUFJLEtBQUosRFBUSxJQUFFLEdBQUcsRFBRyxFQUFFLEVBQUUsRFBSSxHQUFFLEVBQUUsSUFBRyxFQUFFLEdBQUUsRFBRyxDQUFHLEtBQUcsRUFBRSxFQUFFLEBQUssSUFBSSxJQUFJLElBQUksRUFBRSxHQUFHLElBQUcsRFBRyxFQUFFLEFBQUksSUFBSixHQUFPLElBQUksSUFBRyxBQUFJLElBQUosRFBTyxJQUFJLEdBQUUsTUFBTyxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxFQUFFLEVBQUUsQFBQyxDQUFDLENBQUMsTUFBTyxBQUFJLEtBQUosRFBUSxHQUFFLEVBQUUsRFBRyxFQUFFLElBQUcsRFBRyxJQUFJLEdBQUcsRFBRyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLGtCQUFrQixFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsRUFBRSxrQkFBaIsRUFBRSxhQUFhLEVBQUUsRFBRyxLQUFLLGFBQWEsSFBSyxlQUFlLEtBQUssYUFBYSxLQUFLLHNCQUFzQixLQUFLLGVBQWUsSFBSyxzQkFBcIsQFBQyxFQUFFLENBQUMsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxHQUFJLEdBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxDQUFDLEBQVEsRFBRSxFQUFFLEBQUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLEdBQUcsRFBRyxHQUFHLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRFBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBSSxPQUFNLEVBQUcsRFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRFBSSxHQUFFLEdBQUksTFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsRFBSSxPQUFNLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsRFBSSxPQUFNLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsRFBSSxPQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsRUFBRSxHQUFFLEVBQUUsRFBSSxPQUFNLENBQUMsRUFBRSxZQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEtBQUssWUFBWSxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssTUFBTSxFQUFFLEtBQUssVFBVyxFQUFFLEtBQUssVUFBVSxHQUFHLEVBQUUsTUFBTSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsSFBSyxTQUFTLEVBQUUsSFBSyxTQUFTLEVBQUUsSFBSyxVQUFVLENBQUMsQFBQyxXQUFXLEVBQUUsQFBQyxNQUFPLEdBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFLLEtBQUksRFBRyxDQUFDLFlBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxZQUFZLEVBQUUsVFBVyxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsVFBVyxJQUFJLEVBQUUsRFBRyxDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLFNBQVMsRUFBRSxFQUFHLEdBQUUsUUFBUSxHQUFHLEVBQUUsUFBUyxNQUFNLEdBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEBQUsRFBRyxFQUFFLEVBQUUsUFBUyxFQUFFLFVBQVUsRUFBRSxHQUFJLEdBQUUsUUFBUSxHQUFHLEVBQUUsUFBUyxNQUFNLEVBQUUsVUFBVSxFQUFFLENBQUMsVFBVyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQFBQyxZQUFXLEVBQUUsRUFBRSxDQUFDLEBQVEsRFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEdBQUcsQFBQyxNQUFPLEtBQUksQFBQyxDQUFDLFlBQVcsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEdBQUksTFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsQUFBSSxJQUFKLEdBQVEsRFBRSxFQUFFLEdBQUcsRFBRSxFQUFFLEtBQUssQFBQyxFQUFFLENBQUMsQFBQyxZQUFXLEVBQUUsQFBQyxHQUFJLEdBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsRUFBRSxVQUFVLEVBQUUsRFBRyxFQUFFLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxFQUFFLFNBQVMsRUFBRSxRQUFRLENBQUMsQFBQyxZQUFXLEVBQUUsQFBQyxFQUFFLEVBQUUsUFBUyxHQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFVBQVcsRFBRSxZQUFZLEVBQUUsVFBVyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsRUFBRSxTQUFTLENBQUMsQFBQyxZQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsQFBQyxZQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsTFBUSxHQUFFLEVBQUUsSFBSyxHQUFHLEVBQUUsRFBRyxFQUFFLEdBQUcsRUFBRSxVQUFXLEdBQUUsRUFBRSxVQUFVLEdBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsSFBSyxHQUFHLEVBQUUsSFBSyxHQUFHLElBQUksQFBQyxHQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRFBRyxFQUFFLEtBQUssSUFBSSxFQUFFLEtBQUssRFBRyxFQUFFLEtBQUssRFBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsSFBSyxHQUFHLENBQUMsQFBQyxZQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEFBQUksRUFBRSxXQUFOLEVBQWUsSFBSyxFQUFFLEVBQUUsWUFBWSxFQUFFLEBQUsRUFBRSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsWUFBWSxFQUFFLEBQUsRFBRyxJQUFJLEFBQUksSUFBSixFQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRyxHQUFFLEVBQUcsRFBRSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxBQUFLLEdBQUUsRUFBRSxNQUFULEdBQWMsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxBQUFLLEdBQUUsRUFBRSxNQUFULEdBQWMsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRFBRyxFQUFFLEVBQUUsVUFBVSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQFBQyxDQUFDLFlBQVcsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsUFBUyxFQUFFLEVBQUUsVUFBVSxZQUFZLEVBQUUsRUFBRSxVQUFVLFVBQVUsRUFBRSxFQUFFLFVBQVUsTUFBTSxHQUFFLEdBQUcsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksQUFBSSxFQUFFLEVBQUUsSFBUixFQUFZLEdBQUUsSFBSyxFQUFFLEVBQUUsVUFBVSxHQUFFLEVBQUUsRUFBRSxNQUFNLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSFBSyxFQUFFLFNBQVMsRFBRyxFQUFFLEVBQUcsRFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFVBQVUsRFBRSxFQUFFLEVBQUUsRFBRSxJQUFJLEVBQUUsRUFBRSxNQUFNLEdBQUcsRUFBRSxFQUFFLFVBQVUsRFBSSxHQUFFLFlBQVksRUFBRSxFQUFFLEVBQUUsSUFBSSxJQUFJLEVBQUUsUFBUyxHQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRFBRyxFQUFFLElBQUksRFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEdBQUcsRUFBRSxLQUFLLEdBQUcsRUFBRSxLQUFLLEVBQUUsWUFBWSxHQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssRFBRyxFQUFFLEtBQUssRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRFBRyxFQUFFLEBQUsRFBSSxHQUFFLEBQUsSUFBSSxFQUFFLEBQUsRFBRyxFQUFFLEBQUsRFBRyxFQUFFLEBQUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsSFBSyxHQUFHLElBQUksRFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxVQUFVLEVBQUUsSFBSyxHQUFHLFNBQVMsRFBRSxHQUFFLENBQUMsRFBSSxJQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsRFBRSxHQUFFLEdBQUUsUFBUyxHQUFFLEdBQUUsUFBUyxHQUFFLEdBQUUsVUFBVSxZQUFZLEdBQUUsRFBRSxVQUFVLFVBQVUsRFBRSxHQUFFLFVBQVUsVFBVyxHQUFFLEdBQUUsVUFBVSxXQUFXLEdBQUUsRFBRSxVQUFVLFdBQVcsRFBRSxFQUFFLElBQUksRFBRSxFQUFFLElBQUcsRUFBRSxLQUFJLEdBQUUsUFBUyxJQUFHLEVBQUUsSUFBSSxHQUFFLEVBQUUsRFBRSxLQUFLLEdBQUUsVUFBVSxHQUFHLEVBQUUsRFBRSxHQUFFLFNBQVMsRUFBRSxHQUFFLEVBQUUsSFBSSxHQUFHLElBQUUsRFBRSxFQUFFLEdBQUUsRUFBRyxJQUFFLEdBQUUsSFBSyxLQUFJLEdBQUcsRFBRyxJQUFLLElBQUUsRFBRSxNQUFLLEdBQUUsRUFBRSxHQUFFLEdBQUcsRFBRSxHQUFFLElBQUksSUFBRSxTQUFTLEBQUssRFBRSxFQUFFLElBQUcsSUFBSSxJQUFFLEdBQUUsRFBRSxLQUFJLEdBQUUsRFBRSxFQUFFLElBQUcsRFBRSxTQUFTLEdBQUcsSUFBRSxJQUFHLElBQUksSUFBRSxZQUFZLEdBQUcsSUFBRSxFQUFFLEdBQUUsRFBRyxNQUFLLEdBQUcsQUFBSSxLQUFKLEVBQUsQFBQyxFQUFFLENBQUMsSUFBSSxHQUFFLEdBQUUsRUFBRSxBQUFJLEdBQUUsUFBUyxNQUFmLEdBQWCLEtBQUksRFBRSxTQUFTLEBQUssRFBRSxTQUFTLEdBQUUsSUFBSSxFQUFFLEdBQUUsUFBUyxNQUFLLElBQUcsQFBQyxPQUFPLEVBQUUsSUFBRyxJQUFJLEdBQUUsRFBRSxBQUFJLEtBQUosRUFBTSxLQUFJLElBQUksRFBRSxHQUFFLFNBQVMsSUFBRyxBQUFJLEtBQUosRFBTyxHQUFHLElBQUUsRFBRSxLQUFLLEVBQUUsTUFBTSxJQUFFLEVBQUUsRFBRSxLQUFLLElBQUksSUFBRSxTQUFVLElBQUUsRFBRSxFQUFFLEdBQUUsSUFBSSxHQUFFLEVBQUUsSUFBRyxHQUFFLEVBQUUsRFBRSxHQUFHLElBQUcsSFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRFBRSxFQUFFLEdBQUUsRUFBRSxRQUFRLENBQUMsQFBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRSxFQUFFLElBQUksQUFBSSxJQUFKLEdBQVEsRFBRSxJQUFJLEdBQUUsRFBRyxFQUFFLEVBQUcsRFBRSxHQUFHLEdBQUcsTUFBTSxFQUFFLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFHLEdBQUUsRFBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLElBQUksRFBSSxHQUFFLEdBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEFBQUksSUFBSixFQUFPLEtBQUksRFBRyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEBQUsRFBRyxHQUFHLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsSFBSyxFQUFFLEVBQUUsRFBRyxHQUFFLEtBQUssRUFBRyxHQUFFLElBQUksRFBRyxJQUFJLEVBQUcsRFBRSxFQUFFLEdBQUksRFBRSxFQUFFLEdBQUcsQFBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBSSxHQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRSxFQUFFLElBQUksQUFBSSxJQUFKLEdBQVEsRFBRSxJQUFJLEdBQUUsRFBRyxFQUFFLEVBQUUsRFBRyxFQUFFLElBQUksRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUcsRFBRSxHQUFHLEdBQUcsQFBRSxHQUFFLEVBQUUsRFBRyxJQUFJLEdBQUcsQFBQyxHQUFHLEVBQUUsRFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxFQUFFLEFBQUcsRUFBRSxHQUFMLEdBQVEsSFBTSxBQUFJLEtBQUosRUFBTyxLQUFJLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsSFBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRFBRyxHQUFHLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsRFBRSxLQUFLLEVBQUcsRFBRSxJQUFJLEdBQUcsSUFBSSxFQUFHLEdBQUUsRUFBRSxHQUFJLEdBQUUsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLENBQUMsRUFBRSxHQUFJLEdBQUUsRFBRyxXQUFXLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxFQUFFLEVBQUcsSUFBRyxHQUFJLEdBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFFLENBQUMsRUFBRSxHQUFJLElBQUUsRUFBRSxDQUFDLEVBQUUsRFBRSxFQUFFLENBQUMsQFBQyxHQUFHLEVBQUUsUFBUyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEBQUsRUFBRSxFQUFFLFNBQVMsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxDQUFDLEVBQUUsUFBUyxTQUFTLEVBQUUsQFBQyxHQUFJLFdBQVUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUksTFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRFBRyxJQUFJLEVBQUUsSFBSyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksSUFBSSxFQUFFLEdBQUcsRFBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksSFBSyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsSFBSyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssSFBSyxHQUFHLEtBQUssRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLElBQUksRUFBRSxLQUFLLEtBQUssRFBRyxLQUFLLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSFBSyxLQUFLLEdBQUcsSFBSyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssSUFBSSxHQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFJLElBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUksSUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFFLEdBQUksSUFBRSxHQUFJLEBQUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsTFBTyxHQUFJLEdBQUUsRUFBRSxVQUFVLENBQUMsRUFBRSxFQUFFLEBQUsRFBSSxHQUFFLEVBQUUsVUFBVSxDQUFDLEVBQUUsRUFBRSxRQUFRLEdBQUksRFBRSxFQUFFLFFBQVEsRUFBQyxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUUsUFBUyxFQUFFLEdBQUUsQFBQyxDQUFDLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLGdCQUFnQixTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEBQUsQFBSSxFQUFFLEtBQUssWUFBWCxHQUFQixHQUFFLEtBQUssVUFBVSxTQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRFBRSxXQUFXLElBQUksRUFBRSxFQUFFLEdBQUcsRFBRyxJQUFJLEBQUssRUFBRSxHQUFHLEVBQUUsSUFBRyxBQUFJLEVBQUUsVUFBVSxFQUFFLEtBQWxCLEVBQXFCLEBQUsRFBRSxHQUFHLEFBQUksRUFBRSxVQUFVLEBQWhCLEdBQXFCLEFBQUksRUFBRSxVQUFVLEBQWhCLEdBQXFCLEFBQUksRUFBRSxVQUFVLEBQWhCLEVBQWCLEBQUsRFBRSxJQUFJLEVBQUUsRFBRyxFQUFFLEVBQUUsSUFBSSxHQUFHLEFBQUksRUFBRSxVQUFVLEVBQUUsSFBbEIsRUFBcUIsTUFBTyxHQUFFLEBQUsRUFBQyxFQUFFLENBQUMsRFBRyxHQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsUFBUyxFQUFFLENBQUMsRFBSSxHQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEBQUsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxPQUFPLFFBQVEsRUFBRSxHQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRFBRyxHQUFHLEFBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxHQUFHLEtBQXJCLEVBQXdCLElBQUksQFBQyxNQUFPLEdBQUUsUFBUyxFQUFHLEdBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFHLEdBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxJQUFJLEdBQUksRFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEdBQUcsQUFBSyxJQUFMLEdBQUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQUFBSSxFQUFFLFdBQUsRFBZIsSUFBSSxFQUFHLEdBQUUsRUFBRSxFQUFHLEdBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxHQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUcsRFBRSxFQUFFLEdBQUcsQFBQyxFQUFFLFNBQVMsRUFBRSxFQUFFLEdBQUUsRFBRSxDQUFDLEdBQUksSUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksQFBQyxFQUFFLEVBQUUsRUFBRSxHQUFFLEVBQUUsQFBQyxFQUFFLEVBQUUsRUFBRSxHQUFFLEVBQUUsQFBQyxFQUFFLEdBQUUsRUFBRSxHQUFFLEdBQUUsSFBSSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxJQUFHLEdBQUcsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsVUFBVSxHQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsRUFBRSxPQUFPLFNBQVMsRUFBRSxFQUFFLEBQUsUFBUyxFQUFFLEVBQUUsQFBQyxFQUFFLEdBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxTQUFTLEdBQUcsRFBRSxDQUFDLEVBQUUsRFBRyxHQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsVUFBVSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTyxHQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsRUFBRSxVQUFVLElBQUksRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEBQUsRUFBRSxFQUFFLFNBQVMsRFBRyxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLFVBQVUsSUFBSSxFQUFFLEVBQUUsVFBVyxBQUFJLElBQUosRUFBTSxFQUFFLFVBQVUsRUFBRSxLQUFNLEdBQUUsVUFBVSxJQUFJLEVBQUUsVUFBVSxFQUFHLEdBQUUsRFBRyxFQUFFLEBQUsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUFDLEBQUsRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDLEVBQUUsRUFBRSxVQUFVLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsQUFBSyxFQUFFLFdBQVAsRFBaUIsSUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsTFBTyxFQUFFLEVBQUUsUFBUyxHQUFHLEdBQUcsRUFBRSxVQUFXLEdBQUUsWUFBWSxFQUFFLFdBQVcsSUFBSSxFQUFFLEBQUsRUFBRSxTQUFTLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUMsQFBQyxFQUFFLENBQUMsaJBQWtCLEVBQUUsQFBQyxFQUFFLEdBQUcsQFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsYUFBYSxFQUFFLFFBQVEsVUFBVSxDQUFDLEtBQUssTUFBTSxLQUFLLEtBQUssUUFBUSxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssUFBUyxFQUFFLEtBQUssTFBTyxLQUFLLEtBQUssUFBUyxFQUFFLEtBQUssVUFBVSxFQUFFLEtBQUssVUFBVSxFQUFFLEtBQUssSUFBSSxHQUFHLEtBQUssTUFBTSxLQUFLLEtBQUssVUFBVSxFQUFFLEtBQUssTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsUFBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLEFBQUMsVUFBUyxFQUFFLENBQUMsQUFBQyxVQUFTLEVBQUUsRUFBRSxDQUFDLGFBQWEsRFBRyxDQUFDLEVBQUUsYUFBYSxDQUFDLEdBQUksRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxTQUFTLEVBQUUsTFBTyxnQkFBZIsTFBTyxlQUFlLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLEFBQXFCLENBQUMsRUFBRSxTQUFTLEtBQUssRUFBRSxPQUFPLElBQSDLGCQUFpRCxTQUFTLEVBQUUsQFBQyxRQUFRLFNBQVMsVUFBVSxDQUFDLEVBQUUsQFBQyxDQUFDLENBQUMsQFBQyxFQUFFLFVBQVUsQFBQyxHQUFHLEVBQUUsYUFBYSxDQUFDLEVBQUUsYFBYyxDQUFDLEdBQUksRFBRSxHQUFHLEVBQUUsRUFBRSxVQUFVLEBQUsRFBRSxVQUFVLFVBQVUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLFlBQVksRFBRyxHQUFHLEVBQUUsRUFBRSxVQUFVLEVBQUUsQFBQyxDQUFDLEVBQUUsRUFBRyxHQUFFLGdCQUFnQixLQUFLLEBQUsRUFBRSxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLFVBQVUsRUFBRSxFQUFFLEVBQUUsRUFBRSxZQUFZLFlBQVksQFBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsWUFBWSxFQUFFLEVBQUUsRFBRyxDQUFDLEdBQUcsRUFBRSxlQUFpQixJQUFFLEdBQUksaUJBQWdCLEBQUsVUFBVSxTQUFTLEVBQUUsQFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsUFBUyxFQUFFLENBQUMsRUFBRSxNQUFNLFlBQVksQFBQyxDQUFDLEdBQUcsRFBRyxzQkFBdUIsRFBRSxjQUFjLFFBQVEsRUFBRyxHQUFFLEVBQUUsZJBQWdCLFNBQVMsRUFBRSxDQUFDLEdBQUksRFBRSxFQUFFLGNBQWMsUUFBUSxFQUFFLEVBQUUsbUJBQWCLFVBQVUsQFBQyxFQUFFLENBQUMsRUFBRSxFQUFFLGCQUFtQixLQUFLLEVBQUUsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxZQUFZLENBQUMsQFBQyxHQUFHLFNBQVMsRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQFBQyxFQUFFLEVBQUUsYUFBYSxTQUFTLEVBQUUsQFBQyxBQUFZLEBQUsSUFBbkIsWUFBdUIsRFBRSxHQUFJLFVBQVMsRFBRyxDQUFDLEdBQUcsTFBUSxHQUFFLEdBQUksTFBTSxVQUFVLEBQUsQFBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsTFBTyxJQUFJLEVBQUUsRFBRyxVQUFVLEVBQUUsRFBRyxHQUFJLEdBQUUsQFBQyxTQUFTLEVBQUUsSFBSyxDQUFDLEVBQUUsTUFBTyxHQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxlQUFlLENBQUMsQFBQyxXQUFXLEVBQUUsQFBQyxNQUFPLEdBQUUsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLEBQUsQFBQyxHQUFJLEdBQUUsRUFBRSxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRFBRyxHQUFHLENBQUMsQUFBQyxVQUFTLEVBQUUsQFBQyxHQUFJLEdBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxLQUFLLEBQUsRUFBRSxZQUFhLEdBQUUsRUFBRSxFQUFFLFVBQVcsRFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVcsRFBRSxFQUFFLEVBQUUsRFBRyxFQUFFLEVBQUUsRUFBRSxVQUFXLEdBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsQFBQyxFQUFFLEdBQUUsQFBQyxDQUFDLFFBQUMsQFBUSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQFBQyxDQUFDLENBQUMsQFBQyxXQUFXLEVBQUUsQFBQyxFQUFFLFNBQVMsRFBRyxBQUFVLEBQUsRFBRSxNQUFuQixVQUFQixBQUFJLEVBQUUsSFBSyxRQUFRLENBQUMsSUFBcEIsRFBdUIsRUFBRSxDQUFDLEVBQUUsSFBSyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQFBQyxHQUFFLEFBQWEsTUFBTyxNQUFwQixJQUFQixBQUFTLElBQVQsTFBVyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsSFBSyxLQUFLLEFBQWEsTUFBTyxRQUFwQixJQUEyQixPQUFPLEFBQWEsTUFBTyxNQUFwQixJQUFQixLQUFLLEFBQWEsTUFBTyxRQUFwQixJQUEyQixPQUFPLENBQUMsQFBQyxDQUFDLEVBQUUsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQFBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQFBQyxJQpqNzlGLHNCQUFPLFFBQVUsQFDZixLQUFNLHNDQUNOLEBQUsdUJBQAsTUFBTyxQkFDUCxPQUFRLHVCQUNSLEBQUscNBQAsSFBTSxzQFDTixNQUFPLHVCQUNQLEBQUsdUJBQAsUFBVSxQkFDVixRQUFTLHVCQUNULEtBQUscNBQsUFBVSxQkFDVixTQUFVLHVCQUNWLFNBQVUsdUJBQYsUUFBUyxQkFDVCxTQUFVLHVCQUNWLFFBQVMsdUJBQQsSFBTSxQkFDTixNQUFPLHVCQUNQLEtBQUsdUJBQsUFBVSxQkFDVixRQUFTLHVCQUNULEBQVEsdUJBQIsTUFBTyxQkFDUCxNQUFPLHVCQUNQLFNBQVUsdUJBQYsSFBTSxzQFDTixNQUFPLHVCQUNQLEBQVEsdUJBQIsUFBVSxQkFDVixLQUFNLHVCQUNOLFFBQVMsdUJBQQsTUFBTyxQkFDUCxPQUFRLHVCQUNSLEBQVEsdUJBQIsSFBTSxQkFDTixLQUFNLHVCQUNOLEtBQUsdUJBQsTFBUSxQkFDUixJQUFLLHNDQUNMLEBQVEsdUJBQIsUFBVSxQkFDVixTQUFVLHVCQUNWLEBQVEsdUJBQIsTFBUSxQkFDUixRQUFTLHVCQUNULEtBQUsdUJBQsSUFBSyxQkFDTCxLQUFNLHVCQUNOLFFBQVMsdUJBQQsTFBUSxQkFDUixPQUFRLHVCQUNSLEBQUsdUJBQAsTUFBTyxxQFDVCxJQZEQSxzQkFBSSxJQUFlLEtBQYsRFBUSxDQUNWLFdBQVksTFDWixZQUFhLGVBQIsTFBUSxJQUNWLEVBRUEsWUFBNEIsRUFBSyxDQUMvQixNQUFPLEdBQUksSFBSyxFQUFFLFFBQVEsRFBTSxXQUFZLEdBQUcsQFDakQsQFFQSxZQUFQixFQUFRLENBQzlCLEBQUsbJBQWCLENBQUsRUFDNIsUUFBUSxHQUFNLFlBQWEsRUFBZIsQFDaEQsQFJQSxZQUFpQyxFQUFRLENBQZDLGNBQUsSFBSyxFQUFZLEVBQUUsUUFBUSxTQUFTLEVBQUssQFDOUMsQUFBSSxHQUFhLEdBQUssSFBSyxDQUFNLEdBQyCLEdBQVMsRUFBTyxRQUFRLEdBQWEsRFBTSxDQUFHLEVBRWxELENBQUMsRUFFTSxDQUNULENBRUEsWUFBMEIsRUFBTyxDQUMvQixPQUFRLEBQQsTUFBTyxNQUFPLFFBQQsTUFBTyxNQUFPLFFBQQsTUFBTyxNQUFPLFFBQQsTUFBTyxNQUFPLFlBQYsTUFBTyxHQUFNLFlBQVksRUFFdEMsQFFQSxZQUEwQixFQUFXLENBQDLEdBQUksTUFBTyxJQUFjLFNBQZCLEtBQUsSUFBSSxXQUFVLGDQUFxQyxNQUFPLEVBQVMsRUFHMUsQUFBSSxFQUFVLFdBQVcsQFBQyxJQUFNLEBQVUsRFBWSxFQUFVLEBQUsQFBQyxHQUVRSxHQUFJLEdBQUsRFBdIsRFBbUIsQFBUyxDQUFDLEVBQzdELFFBQVEsRFBTSxPQUFRLEdBQUcsRUFDNUIsTUFBTyxzQkFBdIsRFBZSxDQUFJLENBQBELENBRUEsRFBaUIsUFBVyxTQUFrQixFQUFXLENBQZELEBQUsSUFBaUIsQFBUyxFQUFFLFFBQVEsSFBTSxLQUFLLENBQhELEVBRUEsRFBTyxRQUFVLEtDdERqQiwrREFBZMsbJDQWhDLEBTUsNEJBQAsRFBdUMsbJDTnZDLEBQTJCLDRCQUMzQixHQUFQyxvQkNEdkMsTFBMkIsNEJBSUsRFBckIsYUFBdMsYFBVyxDQUNqRCxZQUFtQixFQUFtQixFQUFnQixDQUNwRCxNQUFNLEVBRFcsVUFBbUIsYUFFdEMsQFFQSxHQUFHLEVBQWCLENBQBCLEBQUsYUFBaUIsSFBYyxFQUFNLEtBQUsSFBSyxFQUMxRCxDQUVBLEBQUsRUFBaIsQFDdEIsRFBSSxHQUFPLFdBQVcsQFDcEIsSUFBSyxjQUNMLEtBQUsQFBRSxhQUFjLEtBQUssRFBRyxRQUFRLEtBQUsRFBRyxDQUFFLENBQELENBQUMsRUFFRCxZQUFLLEBQUsWUFBWSxXQUFXLEtBQUssRUFBRSxFQUFFLEtBQUssQUFBQyxHQUFTLENBQpELEFBQUssRUFHSCxHQUFLLFVBQVUsUUFBUSxBQUFDLEdBQVEsRUFBSyxTQUFTLENBQUcsQFBQyxFQUNsRCxFQUFLLGdCQUFnQixHQUFHLEVBQUssVUFBVSxHQUhQyxFQUFLLEBQUsSUFBSSxLQUFLLEtBQUssQFLOUIsQFBQyxFQUNNLENBQQsQFFQSxhQUFjLENBQosTUFBTyxFQUNULENBQYsRUQzQkEsRFBTSxJQUFRLENBQUMsRUFBaIsSUFBbUIsQFDbEQsRFBSSxHQUFRCxDQUFDLEVBQRELEVBQVMsRUFBSyxNQUFNLEBQUsRUFBTyxpQkFBaUIsRUFDeEQsTFBUyxDQUFFLEBQUsTFBUSxHQUFLLGNBQzVCLEVBQUsUUFBUSxFQUFNLEVBQUksQFBQyxFQUFNLEVBQUksQFBRSxZQUFhLENBQpELEVBQUsSFBSyxDQUFDLEVBQVEsRUFBTSxDQUFFLENBQUMsQFDaEMsQFBQyxFQUVILEBQUsZUFBVyxJQUNoQixFQUFPLElBQUksQFBQyxDQUFDLEVBQVEsRUFBTSxLQUFRLENBRWpDLEdBQUsRFBTyxDQUFFLEBREEsRFBSSxJQUFXLEVBQVEsQFBTSxFQUNyQixLQUFNLEdBQUksTFBTSxJQUFHLEVBQzFDLEBQUksRFBSyxNQUFNLEBQUseUJBQXNCLEVBQxDLGNBQVcsUUFBUSxDQUFJLEVBQUUsTUFBTSxFQUFNLENBQUUsRUFFdkMsYFBVyxPQUFPLENBQUksRUFBRSxNQUFNLENBQUUsQFFMMsQFBQyxFQUNELEVBQYsQFDRixFQUVPLEdBQVEsRUQmYsTFBcUIsbJBSWYsRFBVSxDQUNkLEVBQEsRUFDQSxFQUNBLElBRUsRFBSSxTQUFLLEVBQIsUUFBUSxBQUFDLEdBQIsRUFDRyxRQUFRLGFBQWEsRUFDckIsUFBUyxhQUFhLEVBQRCLFFBQVEsSUFBWSwwQkFDbkIsRFBTSxHQUFPLEtBQUsRFBTyxJQUFJLGdCQUFnQixFQUMQyxBQUFJLENBQUMsRFDTCxFQUFLLFNBQVMsQFDWixRQUFTLENBQUUsSFBTSxFQUFPLEdBQUksRUFBSyxPQUFRLElBQUksRUFBSyxLQUFNLENBQzFELENBQUMsQFDSCxFQUFDLENBQwsRUFDQyxRQUFRLEFBQUMsRFDUixFQUNHLFFBQVEsTFBTyxFQUNmLFNBQVMsYUFBYSxFQUNQixRQUFRLElBQUsQFDYixFQUFLLFNBQVMsQFDWixRQUFTLENBQUUsSFBTSxFQUFPLEdBQUksRUFBSyxPQUFRLEVBQUcsQFDOUMsQFBQyxDQUNILENBQUMsQFDTCxFQUVHLEdBQVEsRhqQmYsRFBTSxJQUEyQixBQUFDLEdBQTJDLENBQzNFLEBQUsQFBVyxDQUlmLFlBQVksRUFBaIsQFDNUIsSFBSyxPQUFTLEVBQQsSFBSyxZQUFjLEdBQUsRUFBTSxLQUFLLEBQUsQFDNUMsQFFQSxPQUFPLEVBQWCLENBQpCLEdBQUsRFBVyxFQUFPLFdBQVcsTUFBTSxQkFBcIsRUFDNQsRUFBVyxFQUFPLEBQUsTUFBTSxQkFBcIsRUFDdEQsQUFDRSxHQUFPLFlBQAsRUFBTyxpQkFDUCxJQUFhLElBRWIsTUFBSyxZQUFjLEdBQUsRUFBTyxLQUFNLENBQUsRUFFaEQsQFDRixDQUVBLEBQUsZUFBVyxVQUFVLEVBQVksQFDdEMsYFBZSxDQUNiLFVBQVcsQFDYixFQUNBLFlBQWEsQUFBQyxHQUFNLEVBQUUsWUFDdEIsUUFBUyxBQUFDLEdBQIsYFBVyxhQUFhLEdBQUcsQUFBQyxHQUFTLENBQDLEdBQUksRFBUSxFQUFLLEBQUsQFBTSxFQUMQixNQUFPLEdBQVEsRUFBTSxZQUFjLGNBQVcsSUFDaEQsQFBQyxDQUNMLENBQUMsRUFFRCxXQUVFLEVBQEsRUFDQSxDQUNBLEdBQUksRFBUyxFQUFJLEBQpCLEdBQUksRUFBTyxZQUFZLGVBQWdCLEVBQUssVUFBVSxFQUFHLENBQZELEdBQUsRFBUyxFQUFLLFNBQVMsQFBTSxFQUMvQixFQUFpQixHQUNuQixFQUFlLEdBVWpCLEdBVEEsSFBSyxZQUFZLFFBQVEsRUFBUyxFQUFHLEVBQVMsRUFBRyxDQUFDLEVBQUsRUFBSSxJQUFVLENBQBFLEdBQUksRFBVSxHQUFRLEdBQVUsRUFBSSxDQUNsQyxBQUFJLElBQVMsRUFDWCxHQUFTLEVBQUsSFBSyxLQUNwQixFQUFPLEVBQUsSFBSyxJQUNaLEdBQVMsRUFBUSxFQUFPLEdBQhDLEBQYsQFDRixDQUFDLEVBQcsRUFBUyxHQUFLLEVBQUsRUFBRyxDQUMxQixRQUFRLEBQUscUJBQXNCLENBQUsRUFDMUMsTUFDRixDQUVBLEdBREEsRFBSyxDQUFDLEVBQUUsSFBSyxJQUFNLEVBQUssUFBUyxDQUFFLFVBQVcsQFBRSxTQUFRLEBQUssQFBRSxDQUFDLENBQUMsRUFDNQsRUFBSSxTQUFXLEdBQUssRUFBSSxTQUFXLEVBQUcsQFDeEMsRFBTSxHQUFPLEdBQVEsRUFBUSxFQUFNLEVBQVEsQFBSSxFQUMvQyxHQUFLLEdBQUcsRUFBRSxLQUFLLElBQUsRUFBSyxpQkFBaUIsQFBRyxDQUFDLENBQpELENBQYsQFDRixDQUNGLEVBRUsRFBTyxBQUFDLEdBQWUsRFBSSxTQUFRLEFBQUMsRFBWSxXQUFXLEVBQVMsQFBRSxDQUFDLEVBQRFLEdBQVEsRluRmYsRFBTSxJQUFrQixBQUFDLEdBQWCLENBQzFDLEVBQUsdJBQXdCLENBQzdCLEVBQUsaJBQAsRFBeUIsQFBTSxDQUNqQyxDQUFDLENBQgsRUFFTyxHQUFRLEdDVmYsTFBMkIsZNBQzNCLEdBQWDLGdDQUNuQyxHQUtPLDZCQUNQLEdBQXdDLDZCQJQyxPQUFrQyxXQUNsQyxHQUFrQixXQTJGbEIsRFBdUIsVMRnZCLEdBQUsQFBQyxhQUFZLEBQUsVUFFWCxZQUFrQixFQUFPLENBQZDLEBQUsSUFBUyxLQUFLLENBQUssSUFBTSxpQkFDakMsQNGQSxHQUFNLElBQVUsQFDZixPQUFRLElBQIsVFBWSxJQUNaLFVBQVcsSUFDWCxPQUFRLElBQIsTFBUSxJQUNSLFFBQVMsRFDVixFQUVlLFlBQXNCLEVBQVEsRUFBVSxDQUFDLEVBQUcsQFDMUQsRFBSSxDQUFDLEdBQVMsQFBTSxFQUNuQixLQUFNLElBQUksVFBVSwQkFBNEIsRUFHakQsRFBTSxHQUFRLEBQUsSFBSyxFQUFPLEVBQUUsSUFBSSxHQUNyQyxPQUFPLEdBQVEsSUFBVSxVQUFZLEVBQVEsRFBUSxFQUFPLElBQVMsRFBUSxHQUFRLEVBQRGLEVBQUUsSFBSyxFQUFFLEVBRUosRUFBZSxHQUFJLFFBQUsRUFBUSxRQUFVLEVBQUsTFBUSxDQUFLLEVBRXRFLFNBQWEsVUFBWSxNQUFPLEdBQVEsVFBYyxTQUNyRCxFQUFRLFVBQIsRUFBTyxVQUVELENBQIsQZUTyxHQUFNLElBQWMsQUFBQyxHQUFQixDQUNsRCxHQUFJLEdBQWEsRUFBSSxRQUFRLEdBQUcsRUFDaEMsTUFBSSxHQUFhLEdBRVgsSUFBZSxFQUFJLEBQVMsRUFDOUIsRFBTSxFQUFJLFVBQVUsRUFBRyxDQUFVLEVBQzFCLEdBQVksQFBRyxHQUVQixHQUFNLEVBQUksVUFBVSxFQUFhLENBQUMsRUFDMIsRFBWSxDQUFHLEdBSWCLENBQQsRUFFYSxHQUFvQixvQkFFcEIsRFBcUIsQUFDaEMsRFDMEMsQFDMUMsRFBSSxXQUFNLFNBQVMsQFBRSxFQUFHLEBQUsQFBRSxLQUFNLFFBQVMsSFBTSxDQUFHLEVBQpELEdBQUsRFBUSxFQUFHLEBQUsRUFBaUIsRUFDeEMsRFBSSxDQUFDLEVBQgsZUFBUSxNQUFNLDhCQUErQixDQUFFLEVBQhDLEtBRVQsRFBTSxDQUFDLEVBQUssRFBWSxFQUNQixNQUFPLENBQUUsSFBTSxFQUFVLEtBQUsRUFBRyxVQUFVLEVBQUksTUFBTSxDQUFFLENBQzFELEVBRWEsRFBYSxBQUFDLEdBQThCLENBQZELEdBQUsRFBUyxHQUFtQixDQUFFLEVBQBDLEBQUssRFJRSxHQUFHLEVBQUsUUFBUSxHQUFhLEVBQUsSUFBSSxJQUgvQyxTQUFRLElBQUksdUNBQXdDLENBQUUsRUFDLMsSFHWCxFQUNhLEdBQWUsQUFBQyxHQUMzQixFQUFLLEtBQUssRUFBRSxRQUFRLFNBQVUsRFBRyxFQUFFLFFBQVEsTFBUSxFQUFFLEVBQUUsaJBQWtCLEVBRTlELEdBQWCLENBQzlCLEBQEsTFDQSxPQUNBLFFBQEsTFDQSxPQUNBLEBQYsRUFDYSxHQUFrQiwQFDbEIsRFBYSxQFDcEIsRFBUSxHQUFpQixJQUFJLEFBQUMsRFBUSxjQUFPLENBQUcsQFBQyxFQUMxQyxHQUFQixBQUNsQyxHQUNRSwwQkFDdkUsRFBSSxDQUFDLEdBQVEsRUFBSyxRQUFVLEVBQUcsTUFBTyxNQUNQyxHQUFNLEdBQVUsQUFBTyxHQUFZLDBCQUFJLEBQJDLEtBQUsRUFBSyxLQUFLLFFBQVEsRFBWSxFQUFFLEVBQRDLElBQUssSUFBTyxpQkFBVSxFQUFLLElBQUksRUFDLIsSFBTSxLQUFNLEdBQUssWUFBWSxDQUMvQixJQUNJLEVBQVcsQFBQyxFQUNoQixPQUFTLEdBQUksRUFBRyxFQUFJLEVBQUssTFBUSxJQUFLLENBQBDLEdBQUsRFBTyxFQUFLLEdBQxCLEFBQUksRFBTSxTQUFTLEVBQUssSUFBSSxHQUMxQixFQUFTLEtBQUssRUFBUSxDQUFJLENBQUMsQFFLIsQFDQSxHQUFNLEdBQVMsSFBTSxTQUFRLElBQUksQFBUSxFQUNQyxNQUFPLEdBQUsTFBUyxFQUFJLEVBQVMsSUFDdEMsRFPYSxHQUFlLHNCQUNmLEdBQWtCLEFBQUMsRFDOUIsRFBWSxFQUFTLENBQUUsTFBUSxFQUFLLENBQUMsRUFFMUIsRFBZIsQUFBQyxHQUMQixlQUFXLENBQUMsVFBWSxPQUFPLEVBQUssTUFBTSxDQUFDLEVHcEcQyxHQUFNLElBQWlCLENBQUMsRUFBYSxJQUNuQyxHQUFjLEVBQUcsRUFBRSxFQUFFLEdBQUssRFBYyxFQUFHLEVBQUUsRUFBRSxFQUMzQyxHQUFnQixDQUFDLEVBQWEsSUFBZIsRUFBRSxHQUFLLEdBQUsRUFBRSxHQUFLLEVBRWFLEdBQWMsQFBQyxFQUFhLElBQWdCLENBQhELEdBQUsRFBUSxHQUFjLEVBQUcsRUFBRSxFQUFFLEVBQUksRUFBRSxHQUFLLEVBQUUsRFDOUMsRUFBTSxHQUFjLEVBQUcsRUFBRSxFQUFFLEVBQUksRUFBRSxHQUFLLEVBQUUsRFDMUMsTUFBTyxDQUFDLEVBQUsQFBRyxDQUNwQixFQUVNLEdBQWMsQUFBQyxHQUNuQixFQUNHLEtBQUssQFBQyxFQUFHLElBQUsRUFBRSxHQUFLLEVBQUUsRUFBRSxFQUMxQixPQUFPLENBQUMsRUFBSyxJQUFVLENBQRCLEdBQUksRFBUSxFQUFJLFVBQVUsQUFBQyxHQUNQixHQUFlLEVBQWMsQFBSyxDQUNwQyxFQUNBLEBQUksSFBVSxHQUNaLEVBQUksRFBUyxHQUFZLEVBQUksRFBUSxDQUFLLEVBRTFDLEVBQUksSFBSyxDQUFLLEVBRVQsQFDVCxFQUFHLENBQUMsQFBZSxFQUVoQixHQUFRLEdKUmYsRFBTSxJQUFOLGFBQTJCLGNBQVcsQFDcEMsWUFBbUIsRUFBYyxDQUMvQixNQUFNLEVBRFcsVFFbkIsQFDQSxHQUFJLFNBQWlCLENBQCLEBQUsSUFBWSxLQUFLLElBQUksQFDOUIsQFDQSxHQUFHLEVBQTRCLENBQzdCLEBQUsYUFBaUIsSFBZIsRUFBTSxPQUFTLEtBQUssSUFDOUQsQFDRixFQUVNLEdBQWUsQFDbkIsYUFDQSxVQUNBLFNBQEsUFDQSxLQUNBLGdCQUNBLFFBQEsTFDQSxTQUNBLFNBQEsUFDQSxZQUNBLGVBQEsUFDRixFQUNNLEdBQWUsQFBQyxhQUFjLGdCQUFpQixhQUFhLEVBQzVELEdBQXFCLEFBQUMsRFBbUIsQFDNMsRFBTSxHQUFZLEVBQUssSFBSyxxQkFBaIsRUFDOUMsRFBSSxDQUFDLEVBQVcsTUFBTyxHQUNQixHQUFNLEdBQVEsRFBSSxLQUFJLGlCQUFXLEBQUsSUFBSSxFQUMzQyxNQUNFLElBQWEsTUFBTSxBQUFDLEdBQUsQFBQyxFQUFNLElBQUksQFBQyxDQUFDLEdBQZDLEdBQWEsSFBSyxBQUFDLEdBQUsRUFBTSxJQUFJLENBQUMsQFBQyxDQUVQyxFQUVNLEdBQXVCLEFBQUMsRFBbUIsQFDLMsRFBTSxHQUFxQixDQUNQixFQUNBLEVBQEsRUFDQSxJQUNHLENBQgsRFBTSxHQUFZLENBQUMsRUFBYyxJQUFxQixDQUNwRCxHQUFNLEdBQUsRUFBTSxJQUFJLFlBQVksRUFBTSxDQUFFLEVBQzNDLEdBQUksRUFBQyxFQUFLLEtBQUssRUFDZixPQUFXLENBQUUsRUFBRyxFQUFTLEBQUsSUFBWSxHQUFLLFNBQyDLEdBQWdCLEVBQVksQFDOUIsRUFDRSxBQUFJLEVBQUsWUFBWSxRQUFRLEdBQVksQFBTyxDQUFDLEdBQpELEVBQUsRUFBTyxFQUNQLEVBQUsRUFBVSxFQUFRLEBQpCLEdBQUksSUFBYSxDQUFPLENBQzFCLENBRsRUFDSSxFQUFTLEVBQIsaJBQVcsQFBSyxFQUFFLFFBQVEsQFDeEIsSFBTSxFQUFPLEVBQIsRFBSSxFQUFLLEVBQQsTUFBTyxDQUFDLENBQUUsTFBTSxPQUFNLFFBQVMsQFDNIsQUFBSSxFQUFLLEBQVMsWUFDZCxLQUFTLEdBQVEsRUFBVSxFQUFRLENBQUksRUFDMMsRUFBUyxFQUNMLEdBQWCLENBQUksRFDekIsRUFBVSxFQUFNLENBQUUsRUFFdEIsQFDRixDQUFDLEVBQcsSUFBVyxHQUFJLEVBQVUsRUFBUSxDQUFFLENBQpDLEVBQEsTUFBTyxlQUFXLEBQStCLENBQyDLEBQVEsQUFBQyxHQUFVLENBQpCLEdBQUksRFBVyxHQUFJLGCQUNuQixTQUNFLEVBQEsRUFDQSxFQUFNLElBQUksTFDVixFQUFTLElBQUksSFBSyxDQUFRLENBQzVCLEVBQsRUFBUyxPQUFPLENBQpCLEVBQEsTFBUSxDQUFDLEVBQVUsSUFBTyxDQUNQixHQUFJLENBQUMsRUFBRyxXQUFZLEBQUsRFDMIsRUFBVyxFQUFTLElBQUksRUFBRyxPQUFPLEVBQxDLEdBQUksRFBdUQsQFBQyxFQUMRCxFQUFHLFFBQVEsaJBQWtCLENBQUMsRUFBSSxFQUFJLEVBQUsSUFBTyxDQUVqRCxFQUFhLEtBQUssQFDaEIsRUFBRyxNQUFNLElBQUksTFBTyxDQUFJLEVBQUUsTFDMUIsRUFBRyxNQUFNLElBQUksTFBTyxDQUFFLEVBQUUsTUFDMUIsQFBQyxDQUNILENBQUMsRUFDRCxHQUFJLEdBQTRDLENBQUMsRUFDakQsTFBVyxDQUFDLEVBQUsSUFBUSxJQUFZLENBQVksRUFBRyxDQUNwRCxHQUFNLENBQUUsUUFBUyxFQUFHLEBQUsSUFBSSxLQUFLLENBQUssRUFDdEMsQFBRSxNQUFPLEVBQUcsTUFBTSxJQUFJLEtBQUssQFBRyxFQUVoQyxFQUFXLEVBQVMsTFBTyxDQUNQixXQUFZLEVBQosUFBVSxFQUNWLEBQVEsSUFBTSxFQUNoQixDQUFDLEVBRUQsRUFBbUIsRUFBRyxNQUFPLEVBQUsRUFBSSxDQUFDLEVBQUsRUFBSSxJQUFVLENBQzFELEVBQWCLEtBQUssRUFBTSxNQUFNLEVBQUsQFBRSxDQUFDLENBQyDLENBQUMsQFDSCxDQUNBLFNBQVcsRUFBUyxPQUFPLENBQUUsSUFBSyxDQUFtQixDQUFDLEVBQyDLENBQQsQFDRixDQUFDLENBQgsRUFHTyxHQUFRLEdLNUhmLEdBQXFCLElBQXJCLEtBQWDLENBQpDLFlBQWCLEVBQWdCLENBQWhCLGNBSWCLEtBQVEsTUFBUSxHQUFJLElBSmdCLENBQBDLEdBQVksUUFBUSxDQUNsQixNQUFPLEBQUssTFBTyxJQUFJLEtBQpCLENBRUEsQUFBTSxRQUFRLEVBQWELGdDQUNoRSxHQUFNLEdBQUsSFBTSxNQUFLLEBQUsUUFBUSxLQUFLLENBQWMsRUFDekQsRFBSSxDQUFDLEdBQVEsRUFBSyxPQUFTLEBQVEsTUFBTyxNQUMxQyxHQUFJLEtBQUssTUFBTSxJQUFJLENBQWMsRUFBRyxDQUNsQyxHQUFNLEdBQVEsSFBSyxNQUFNLElBQUksQFBYyxFQUMzQyxHQUNFLEVBQUsUUFBVSxFQUFLLEBQJCLEVBQUsUUFBVSxFQUFLLEBQJCLEVBQUsTFBUyxFQUFLLEtBRXBCLEBQUsRFBTSxJQUFJLFVBQVUsRUFBSSxDQUVuQyxDQUVBLEBQUsQUFESyxNQUFNLEBQUssYFBYyxFQUFnQixDQUFJLEdBQzlDLFVBQVUsRUFBSSxDQUMzQixHQUNBLEFBQWMsYFDWixFQUNBLEVBQFCLGdDQUNyQixHQUFNLEdBQUsVUFBVSxTQUNuQixLQUFNLEBQUssTUFBTSxRQUFRLEtBQUssQFBYyxDQUMQyxFQUNBLEVBQUsRFBSSxXQUFVLEVBQUUsZJBQWdCLEVBQUsZUFBZSxFQUNRCxnQkFDTCxZQUFLLEBQUsSUFBSSxFQUFnQixTQUFLLEdBQUwsQFBVyxLQUFJLEVBQUMsRUFDeEMsQFDVCxHQUNBLFNBQVUsQFDUixHQUFNLEdBQVUsQUFBTyxHQUFpQixQkFDdEMsRFBTSxHQUFPLEtBQUsTUFBSyxNQUFNLFFBQVEsSFBSyxDQUFJLEVBQyDLEBQUksQFBQyxHQUFRLEVBQUssTFBUyxPQUNQixLQUFLLEBQUsTFBTyxDQUFJLEVBRXRCLEtBQUsTUFBSyxjQUFjLEVBQUsQFBSSxFQUUQixDQUNULEdBQEsTUFBTyxTQUFRLFdBQVcsQFBQyxHQUFHLEtBQUssTUFBTSxLQUFLLENBQUMsRUFBRSxJQUFJLENBQUsQFBQyxDQUMvRCxDQUNBLEBQVEsQFDTixLQUFLLEBQUsTUFBTSxDQUNuQixDQUNGLEVDOURBLEBQXdCLFdDThCLFlBQWlCLEVBQUsQFDdEIsTUFBTyxBQUFDLEBQUsUUFFVixNQUFNLFFBQVEsQFBSyxFQURuQixHQUFPLENBQUssSUFBTSxnQkFFeEIsQFHQSxHQUFNLElBQVcsRUFBSSxFQUNyQixZQUFzQixFQUFPLENBRTNCLEdBQUksTUFBTyxJQUFTLFNBQxCLEBQUsRFFVCxHQUFJLEdBQVMsRUFBUSxHQUNyQixNQUFPLElBQVUsSFBTyxFQUFJLEdBQVMsQFBQyxHQUFXLEtBQUsQFDMUQsQFFQSxZQUFrQixFQUFPLENBQZCLEBQUsSUFBUyxLQUFPLEdBQUssRFBYSxDQUFLLENBQhELENBRUEsWUFBaIsRUFBTyxDQUNQixNQUFPLEBQUsSUFBVSxRQUMxQixDQUVBLFlBQWtCLEVBQUsQFDdkIsTUFBTyxPQUFPLElBQVUsUUFDMUIsQFHQSxZQUFtQixFQUFPLENBQhCLEBQUsSFBVSxJQUNWLElBQVUsSUFDVCxHQUFhLENBQUssRFBSyxHQUFPLENBQUssRFBSyxrQkFFNMsQFFQSxZQUFrQixFQUFPLENBQZCLEBQUsTFBTyxJQUFVLFFBQzFCLENBREsWUFBcIsRUFBTyxDQUMzQixNQUFPLElBQVMsQFBSyxHQUFLLElBQVUsSUFDdEMsQFFQSxZQUFtQixFQUFPLENBQhCLEBQUsQUFBdUIsSUFBVSxJQUMxQyxDQUVBLFlBQWlCLEVBQUsQFDdEIsTUFBTyxDQUFDLEVBQUsSFBSyxFQUFFLEBQZCLENBSUEsWUFBZIsRUFBTyxDQUNyQixNQUFPLElBQVMsSFDWixJQUFVLEBQIscUJBQEsZJBQYsTFBTyxVQUFVLFNBQVMsSFBSyxDQUFLLENBQzFDLENBSUEsRFBTSxJQUFQixQkFFdkIsRFBdUMsQUFBQyxHQUMQyxQkFBeUIsSUFFckIsRFBMkIsQUFBQyxHQUNoQyxpQFBaUMsSFFNIsRFBdUIsQUFBQyxHQUFTLFdBQVcsbJBRTVDLEdBQTJCLEFBQUMsRFDaEMsNkJBQTZCLGdDQUVQixHQUFTLEBQUsVUFBVSxlQUUxQixHQUFOLEtBQWUsQFDYixZQUFZLEVBQUsQFDaEIsSFBSyxNQUFRLENBQUMsRUFDZCxLQUFLLFFBQVUsQFBQyxFQUVoQixHQUFJLEdBQWMsRUFFbEIsRUFBSyxRQUFRLEFBQUMsRFBUSxDQUNwQixHQUFJLEdBQUsRFBVSxDQUFHLEVBRXZCLEdBQWUsRUFBSSxPQUVuQixLQUFLLEBQUsSFBSyxDQUFHLEVBQCLEtBQUssUUFBUSxFQUFJLElBQUsRUFFdkIsRFBZSxFQUFJLEBQJCLENBQUMsRUFHRCxLQUFLLEBQUsUUFBUSxBQUFDLEdBQVEsQFDMUIsRUFBSSxRQUFVLENBQhCLENBQUMsQFDSCxDQUNBLElBQUksRUFBTyxDQUNULEBQUsTUFBSyxRQUFRLEVBQRCLENBQEsTUFBTyxDQUNMLEBQUsTUFBSyxLQUNkLENBQEsUUFBUyxDQUNQLEBQUsTUFBSyxVQUFVLEtBQUssSFBSyxDQUNsQyxDQUNGLEVBRUEsWUFBbUIsRUFBSyxDQUNQixHQUFJLEdBQUsSFDUCxFQUFLLEtBQwsRUFBTSxLQUNOLEVBQVMsRUFDVCxFQUFRLEtBRVosRFBSSxHQUFTLENBQUcsRFBSyxHQUFRLENBQUcsRUFDOUIsRUFBTSxFQUNOLEVBQUsRFBYyxDQUFHLEVBQhCLEVBQUssRFBWSxDQUFHLEBQYsQFDTCxHQUFJLENBQUMsRFBTyxLQUFLLEVBQUssTUFBTSxFQUMxQixLQUFNLElBQUksTFBTSxHQUFxQixNQUFNLENBQUMsRUFHOUMsRFBTSxHQUFPLEVBQUksSFHakIsRFGQSxFQUFNLEVBRUYsRFBTyxLQUFLLEVBQUssUUFBUSxHQUMzQixHQUFTLEVBQUksTFFVCxHQUFVLEdBQosSFBTSxJQUFJLEBQUsRFBeUIsQFBSSxDQUFDLEVBSWxELEVBQUsRFBYyxDQUFJLEVBQpCLEVBQUssRFBWSxDQUFJLEVBQJCLEVBQVEsRUFBSSxLQUNkLENBRUEsTUFBTyxDQUFFLEBQUsSFBSSxTQUFRLEBQUssTFBTSxDQUNQyxDQUVBLFlBQXVCLEVBQUssQFDMUIsTUFBTyxJQUFRLENBQUcsRUFBSSxFQUFNLEVBQUksTUFBTSxHQUFHLENBQzNDLENBRUEsWUFBcUIsRUFBSyxDQUNQixNQUFPLElBQVEsQFBRyxFQUFJLEVBQUksSFBSyxHQUFHLEVBQUksQFDeEMsQFFQSxZQUFhLEVBQUssRUFBTSxDQUNQixHQUFJLEdBQUsQFBQyxFQUNSLEVBQUsRFFSixFQUFVLENBQUMsRUFBSyxFQUFNLElBQVUsQFDcEMsRFBSSxFQUFDLEdBQVUsQFBRyxFQUdsQixHQUFJLENBQUMsRUFBSyxHQUVSLEVBQUssSFBSyxDQUFHLEBQIsQFDTCxHQUFJLEdBQUsRUFBSyxHQUVULEVBQVEsRUFBSSxHQUVsQixHQUFJLENBQUMsRFBVSxDQUFLLEVBQxCLEBSYsRFDRSxJQUFVLEVBQUssTFBUyxHQUNQixJQUFTLENBQUssRFBSyxHQUFTLENBQUssRFBSyxHQUFVLENBQUssRFFdEQsRUFBSyxLQUFLLEdBQVMsQFBSyxDQUFDLFVBQhCLEdBQVEsQFBSyxFQUFHLENBQpCLEVBQUsRFFTixPQUFTLEdBQUksRUFBRyxFQUFNLEVBQUsTFBUSxFQUFJLEVBQUssRFBSyxFQUNoRCxFQUFRLEVBQUsRFBSSxFQUFNLEVBQVEsQFBQyxDQUVyQyxLQUFPLEFBQUksRFBSyxRQUVkLEVBQVEsRUFBTyxFQUFNLEVBQVEsQFBQyxDQUVsQyxDQUNGLEVBREsUFBUSxFQUFLLEdBQVMsQFBSSxFQUFJLEVBQUssTUFBTSxHQUFHLEVBQUksRUFBTSxDQUFDLEVBRWhELEVBQUsRUFBTyxFQUFLLEVBQzNCLENBRUEsRFBTSxJQUFlLENBSWCLGVBQWdCLEdBRhCLGVBQWdCLEdBRWhCLGCQUFvQixDQUNQixFQUVNLEdBQWUsQFHbkIsZJBQWlCLEdBRWpCLGFBQWMsRFFZCxLQUFNLENBQUMsRUFFUCxXQUFZLEdBRVosTFBUSxDQUFDLEVBQUcsSUFDVixFQUFFLFFBQVUsRUFBRSxNQUFTLEVBQUUsSUFBTSxFQUFFLElBQUsRFBSyxFQUFLLEVBQUUsTUFBUSxFQUFFLEBQVEsRFBSyxDQUMRSxFQUVNLEdBQWUsQFFbkIsUFBVSxFQUdWLFVBQVcsRFNWCxTQUFVLEdBQosRUFFTSxHQUFrQixDQUVQixrQkFBbUIsRFHbkIsTUFBTyxHQUlQLGVBQWdCLEdBSWhCLGdCQUFpQixHQUVqQixnQkFBaUIsQFDbkIsRUFFSSxHQUFTLENBQgsRFBRyxHQUNILEdBQUcsRFDSCxHQUFHLEdBQgsRFBRyxFQUNMLEVBRUsRFBUSxTQUlkLFlBQWMsRUFBUyxFQUFHLEVBQVcsRUFBRyxDQUNQyxHQUFNLEdBQVEsRFBSSxLQUNaLEVBQUksSFBSyxJQUFJLEdBQUksQFBUSxFQUUvQixNQUFPLENBQwsSUFBSSxFQUFPLENBQQsRFBTSxHQUFZLEVBQUsTUFBTSxFQUFLLEVBQUUsTFFckMsRFBSSxFQUFNLElBQUksQFBUyxFQUNyQixNQUFPLEdBQUsSUFBSSxDQUFTLEVBSTVCLEdBQUsRFBTyxFQUFJLEtBQUssSUFBSSxFQUFXLEdBQUsQFBTSxFQUczQyxFQUFJLFdBQVcsSFBSyxNQUFNLEVBQUsQFBQyxFQUFJLENBQUMsRUFFNMsUFBTSxJQUFJLEVBQVcsQFBQyxFQUVmLENBQQsRUFDQSxPQUFRLENBQsRUFBTSxNQUFNLENBQQsQFDRixDQUNGLENBRUEsRFBTSxJQUFOLEtBQWdCLENBQQsWUFBWSxDQUNWLFFBQVEsRFBTyxNQUNmLGtCQUFrQixHQUFPLGlCQUNQixDQUFDLEVBQUcsQFDTixLQUFLLEtBQUsRFBSyxFQUFpQixDQUFDLEVBQDLEtBQUssTUFBUSxFQUNiLEtBQUssVUFBWSxHQUVqQixLQUFLLGdCQUFnQixDQUNQixDQUNBLFdBQVcsRUFBTyxDQUFDLEVBQUcsQFDcEIsSFBSyxLQUFPLENBQQsQFDQSxnQkFBZIsRUFBVSxDQUFDLEVBQUcsQFDNUIsSFBSyxRQUFVLENBQpCLENBQEsUUFBUSxFQUFPLENBQUMsRUFBRyxDQUNqQixLQUFLLEtBQUsRUFDWixLQUFLLFNBQVcsQFBQyxFQUNqQixFQUFLLFFBQVEsQFBQyxFQUFLLElBQVEsQFDekIsSFBSyxTQUFTLEVBQUksSUFBTSxDQUMxQixDQUFDLENBQgsQFDQSxRQUFTLENBQAsQUFBSSxLQUFLLFdBQWEsQFBQyxLQUFLLEtBQUssUUFJakMsTUFBSyxVQUFZLEdBRpCLEFBQUksRFBUyxLQUFLLEtBQUssRUFBRSxFQUNQixLQUFLLEtBQUssUUFBUSxDQUFDLEVBQUssSUFBYSxDQUNuQyxLQUFLLFdBQVcsRUFBSyxDQUFRLENBQyCLENBQUMsRUFHRCxLQUFLLEtBQUssUUFBUSxDQUFDLEVBQUssSUFBYSxDQUNuQyxLQUFLLFdBQVcsRUFBSyxDQUFRLENBQyCLENBQUMsRUFHSCxLQUFLLEtBQUssTUFBTSxFQUNsQixDQUVBLElBQUksRUFBSyxDQUNQLEdBQUsRFBTSxLQUFLLEtBQUssRUFFdEIsQUFBSSxHQUFTLENBQUcsRUFDZCxLQUFLLFdBQVcsRUFBSyxDQUFHLEVBRXhCLEtBQUssVFBVyxFQUFLLENBQUcsQFFNUIsQFFQSxTQUFTLEVBQUssQFDWixLQUFLLFFBQVEsTFBTyxFQUFLLENBQUMsRUFHMUIsTFBUyxHQUFJLEVBQUssRUFBTSxLQUFLLEtBQUssRUFBRyxFQUFJLEVBQUssRFBSyxFQUNqRCxLQUFLLFFBQVEsRFBRyxHQUFLLENBRXpCLENBQEsdUJBQXVCLEVBQUsRUFBTyxDQUNsQyxNQUFPLEdBQUssSFBSyxTQUFTLEdBQzVCLENBQEsTUFBTyxDQUNMLEBQUsTUFBSyxRQUFRLEBQRCLENBQEsVFBVyxFQUFLLEVBQVUsQFDeEIsRFBSSxDQUFDLEdBQVUsQFBRyxHQUFLLEdBQVEsQFBRyxFQUNoQyxPQUdGLEdBQUksRFBUyxDQUNYLEVBQUcsRUFDSCxFQUFHLEVBQgsRUFBRyxLQUFLLEtBQUssSUFBSSxDQUFHLENBQRCLEVBRUEsSFBSyxRQUFRLEtBQUssQFBTSxDQUMxQixDQUNBLFdBQVcsRUFBSyxFQUFVLENBQhCLEdBQUksRFBUyxDQUFFLEVBQUcsRUFBVSxFQUFHLENBQUMsQFBRSxFQUdsQyxLQUFLLEtBQUssUUFBUSxDQUFDLEVBQUssSUFBYSxDQUNuQyxHQUFJLEdBQVEsRUFBSSxNQUFRLEVBQUksTUFBTSxDQUFHLEVBQUksSFBSyxNQUFNLEVBQUssRUFBSSxJQUFJLEVBRWpFLEdBQUksRUFBQyxHQUFVLENBQUssRFJcEIsRFBSSxHQUFRLENBQUssRUFBRyxDQUNsQixHQUFJLEdBQWEsQFBQyxFQUNaLEVBQVEsQFBQyxDQUFFLGVBQWdCLEdBQUksTFBTSxDQUFDLEVBRTVDLEtBQUsRUFBTSxRQUFRLENBQCLEdBQUsQFBRSxpQkFBZIsUFBVSxFQUFNLElBQUksRUFFNUMsRFBSSxFQUFDLEdBQVUsQFBSyxFQUlwQixHQUFJLEdBQVMsQFBSyxHQUFLLENBQUMsRFBUSxDQUFLLEVBQUcsQFDdEMsRFBSSxHQUFZLENBQQsRUFBRyxFQUNILEVBQUcsRUFDSCxFQUFHLEtBQUssSFBSyxJQUFJLENBQUssQFDeEIsRUFFQSxFQUFXLEtBQUssQFBUyxDQUMzQixLQUFPLEFBQUksSUFBUSxDQUFLLEdBQRCLEVBQUsUUFBUSxDQUFDLEVBQUsSUFBTSxDQUNQixFQUFNLEtBQUssQFDVCxlQUFnQixFQUNoQixNQUFPLENBQQsQFBQyxDQUNILENBQUMsQFFTCxDQUNBLEVBQUsRUFBRSxHQUFZLENBQZCLFNBQVcsRFBUyxDQUFLLEdBQUssQFBQyxHQUFRLENBQUssRUFBRyxDQUMQyxHQUFJLEdBQVksQFDZCxFQUFHLEVBQgsRUFBRyxLQUFLLEtBQUssSUFBSSxDQUFLLENBQhCLEVBRUEsRUFBTyxFQUFFLEdBQVksQFDdkIsRUFDRixDQUFDLEVBRUQsSFBSyxRQUFRLEtBQUssQFBTSxDQUMxQixDQUNBLFFBQVMsQFDUCxNQUFPLENBQwsSFBTSxLQUFLLEtBQgsUUFBUyxLQUFLLEBQhCLENBQYsQFDRixFQUVBLFlBQUsRUFDQSxFQUNBLENBQUUsUUFBUSxHQUFPLEBQUsaJBQWtCLEdBQUsaUJBQWCLENBQUMsRUFDdEUsQFDQSxHQUFNLEdBQVUsRFBSSxJQUFVLENBQUUsUUFBTyxpQkFBZIsQFBQyxFQUNRCxTQUFRLFFBQVEsRUFBSyxJQUFJLEVBQVMsQFBQyxFQUNuQyxFQUFRLFdBQVcsQFBSSxFQUNQixFQUFRLEBQUsRUFDUixDQUNULENBRUEsWUFDRSxFQUNBLENBQUUsUUFBUSxHQUFPLEBQUsaJBQWtCLEdBQUsaUJBQWCLENBQUMsRUFDdEUsQFDQSxHQUFNLENBQUUsTFBTSxXQUFZLEVBQBCLEVBQVUsRFBSSxJQUFVLENBQUUsUUFBTyxpQkFBZIsQFBQyxFQUNRCxTQUFRLFFBQVEsQFBSSxFQUNwQixFQUFRLGdCQUFnQixDQUFPLEVBQhCLENBQQsQFFQSxZQUNFLEVBQEsQFDRSxTQUFTLEVBQQsaJBQWtCLEVBQxCLGCQUFtQixFQUNuQixXQUFXLEdBQUsUFDbEIsaUJBQWlCLEdBQUsZJBQRCLENBQUMsRUFDTCxDQUNBLEdBQUsRFBVyxFQUFTLEVBQVEsTFFbEMsRFBSSxFQUNGLEBQUsRFHVCxHQUFNLEdBQVksSFBSyxJQUFJLEVBQWCLENBQWUsRUFFNQsTUFBSyxHQUtFLEVBQVcsRUFBWSxFQUhyQixFQUFZLEVBQUsQFJNIsQFFQSxZQUNFLEVBQVksQFBQyxFQUNiLEVBQXFCLEdBQUsbUJBQzVCLENBQEsRFBSSxHQUFVLENBQUMsRUFDWCxFQUFRLEdBQIsRUFBTSxHQUNOLEVBQUksRUFFUixPQUFTLEdBQUsRUFBVSxPQUFRLEVBQUksRUFBSyxHQUFLLEVBQUcsQFDaEQsRFBSSxHQUFRLEVBQVUsRFDdEIsQUFBSSxHQUFTLElBQVUsRFDckIsRUFBUSxFQUNDLENBQUMsRFBUyxJQUFVLElBQzdCLEdBQUsRUFBSSxFQUNOLEVBQUsRUFBUSxHQUFLLEdBQJCLEVBQVEsSFBSyxDQUFDLEVBQUsQFBRyxDQUFDLEVBRTNCLEVBQVEsRFFWixDQUdBLEBQUksRFBVSxFQUFJLElBQUsRUFBSSxHQUFTLEdBQDLEVBQVEsSFBSyxDQUFDLEVBQUsRUFBSSxDQUFDLENBQUMsRUFHdEIsQFDVCxDQUdBLEdBQUsSUFBVyxHQUVqQixZQUNFLEVBQEsRUFDQSxFQUNBLENBQUsVFBVyxHQUFPLFNBQxCLFdBQVcsRFBTyxTQUNsQixZQUFZLEdBQUsVUFDbkIsaUJBQWlCLEdBQUsZUFDeEIscUJBQXFCLEdBQUsbUJBQzVCLGlCQUFpQixHQUFPLGVBQhCLGlCQUFpQixHQUFPLGdCQUNQixDQUFDLEVBQwsQFDQSxHQUFJLEVBQVEsTFBUyxHQUNuQixLQUFNLElBQUksTFBTSxHQUFQixFQUFRLENBQUMsRUFHcEQsRFBTSxHQUFhLEVBQVEsTFFckIsRUFBVSxFQUFLLEBRWYsRUFBbUIsSFBSyxJQUFJLEVBQUcsSFBSyxJQUFJLEVBQVUsQFBTyxDQUFDLEVBRTVELEVBQWCLEVBRWCLEVBQWUsRUFJYixFQUFpQixFQUFxQixHQUFLLEVBRTNDLEVBQVksRUFBaUIsTUFBTSxDQUFPLEVBQUksQFBQyxFQUVqRCxFQUdKLEtBQVEsRFBUSxFQUFLLFFBQVEsRUFBUyxDQUFZLEdBQUssSUFBSSxDQUNRCxHQUFJLEdBQVEsRFBZSxFQUFTLENBQxDLGdCQUFpQixFQUNqQixtQkFDQSxXQUNBLGdCQUNGLENBQUMsRUFLRCxHQUhBLEVBQWCLEtBQUssSUFBSSxFQUFPLENBQWdCLEVBQELEVBQWUsRUFBUSxFQUVuQixFQUFnQixDQUNsQixHQUFJLEdBQUksRUFDUixLQUFPLEVBQUksRFDVCxFQUFVLEVBQVEsRFBSyxFQUNQixHQUFLLENBRVQsQFDRixDQUdBLEVBQWUsRFFZixHQUFJLEdBQWEsQFBQyxFQUNkLEVBQWEsRUFDYixFQUFTLEVBQWEsRUFFcEIsRUFBTyxHQUFNLEVBQWEsRUFFaEMsTFBUyxHQUFJLEVBQUcsRUFBSSxFQUFZLEdBQUssRUFBRyxDQUlQyxHQUFJLEdBQVMsRUFDVCxFQUFTLEVBRWIsSFBTyxFQUFTLEdBUQsQUFBSSxBQVJVLEdBQWUsRUFBUyxDQUNwQyxPQUFRLEVBQIsZJBQWlCLEVBQWCLEVBQBDLGCQUNBLFdBQEsZJBQYsQFBQyxHQUVZLEVBQgsRUFBUyxFQUVULEVBQVMsRUFHWCxFQUFTLEtBQUssTUFBTyxHQUFTLEdBQVUsRUFBSSxDQUFNLEVBSXBELEVBQVMsRUFFVCxHQUFJLEdBQVEsSFBSyxJQUFJLEVBQUcsRUFBbUIsRUFBUyxDQUFDLEVBQpELEVBQVMsRUFDVCxFQUNBLEtBQUssSUFBSSxFQUFtQixFQUFRLENBQUsRUFBSSxFQUcvQyxFQUFTLEBQUsRUFBUyxDQUFDLEVBRTdCLEVBQUsRUFBUyxHQUFNLElBQUssRFBSyxFQUVoQyxPQUFTLEdBQUksRUFBUSxHQUFLLEVBQUsRFBSyxFQUFHLENBQZDLEdBQUksRFBaIsRUFBSSxFQUNQixHQUFZLEVBQWdCLEVBQUssTFBTyxDQUFlLEdBZIzRCxHQWRJLEdBRUYsRFBVSxHQUFtQixDQUFDLENBQUMsQFBQyxJQUlsQyxFQUFPLEdBQUsRFBTyxFQUFJLElBQUsRUFBSyxHQUFLLEdBRJDLEdBQYsRFBTyxJQUNILEdBQVcsRUFBSSxHQUFLLEVBQVcsSFBTyxFQUFLLEVBQUksRUFBVyxFQUFJLElBRhFLEVBQUsRFBSyxHQUNkLEdBQWEsRFBZSxFQUFTLENBQDLEBQVEsRUFDUixrQkFDQSxtQkFDQSxXQUNBLGdCQUNGLENBQUMsRUFJRyxHQUFjLEdBQWtCLENBTWxDLEdBSkEsRUFBbUIsRUFDbkIsRUFBZSxFQUdYLEdBQWdCLEVBQxCLEBSUYsRUFBUSxLQUFLLElBQUksRUFBRyxFQUFJLEVBQWCLENBQVksQFDekQsQFFSixDQVdBLEdBQUksQUFSVSxHQUFlLEVBQVMsQFDcEMsTFBUSxFQUFJLEVBQosZJBQWlCLEVBQpCLGCQUNBLFdBQEsZJBQYsQFBQyxFQUVXLEVBQYsTUFHRixFQUFhLENBQYsQFFQSxHQUFNLEdBQVMsQFDYixRQUFTLEdBQWdCLEVBRXpCLEBQUsSFBSyxJQUFJLEtBQUsQFBVSxDQUNuQyxFQUVBLEdBQUksRUFBZIsQFDbEIsRFBTSxHQUFVLEdBQXFCLEVBQVcsQFBaIsRUFDbEUsQUFBSyxFQUFRLEBRUYsRFDVCxHQUFPLFFBQVUsRFGakIsRUFBTyxRQUFVLEVBSXJCLENBRUEsTUFBTyxFQUNULENBRUEsWUFBKIsRUFBUyxDQUNQyxHQUFJLEdBQUsQFBQyxFQUVaLEBQVMsRFBSSxFQUFHLEVBQUsRUFBUSxPQUFRLEVBQUksRUFBSyxHQUFLLEVBQUcsQFDckQsRFBTSxHQUFPLEVBQVEsTFBTyxDQUFDLEVBQzdCLEVBQUssRFBUyxHQUFLLElBQVMsRFBTSxHQUFNLEVBQUsRUFBSSxDQUNwRCxDQUVBLEBQUsRUFDVCxDQUVBLEdBQUsSUFBTixLQUFrQixDQUNoQixZQUNFLEVBQEsQFDRSxXQUFXLEdBQUsUFDbEIsWUFBWSxHQUFPLFVBQCLFdBQVcsRFBTyxTQUNsQixpQkFBaUIsRFBTyxlQUNQixpQkFBaUIsRFBTyxlQUNQixxQkFBcUIsRFBTyxtQkFDNUIsaJBQWtCLEdBQUsZJBQpCLGlCQUFpQixHQUFPLGdCQUNQixDQUFDLEVBQwsQFnQkEsRFmQSxLQUFLLFFBQVUsQFDYixXQUNBLFlBQEsVFDQSxpQkFDQSxpQkFDQSxxQkFDQSxrQkFDQSxnQkFDRixFQUVBLEtBQUssUUFBVSxFQUFrQixFQUFVLEVBQVEsWUFBWSxFQUUvRCxLQUFLLEBQVMsQFBQyxFQUVYLENBQUMsSFBSyxRQUFRLEBQhCLEBRYsRFBTSxHQUFXLENBQUMsRUFBUyxJQUFlLENBQhDLEtBQUssTFBTyxLQUFLLENBQYsVUFDQSxTQUFVLEdBQXNCLENBQUsRUFDdkMsWUFDRixDQUFDLENBQgsRUFFTSxFQUFNLEtBQUssUUFBUSxPQUVQixHQUFJLEVBQUsRFBVSxDQUNsQixHQUFJLEdBQUksRUFDRixFQUFZLEVBQUsRFDbEIsRUFBTSxFQUFNLEVBRWxCLEtBQUsRUFBSSxHQUNULEVBQVMsSFBSyxRQUFRLEBQUsRUFBRyxFQUFRLEVBQUcsQFBQyxFQUMQyxHQUFLLEdBRAsRFBSSxFQUFXLENBQIsRFBTSxHQUFhLEVBQUsRFDekIsRUFBUyxLQUFLLFFBQVEsTFBTyxDQUFVLEVBQUcsQFBVSxDQUNRCxDQUNGLEtBQUsRFBUyxLQUFLLFFBQVMsQFBQyxDQUUQixDQUVBLFNBQVMsRUFBTSxDQUNiLEdBQUsQFBRSxrQkFBaUIsaJBQWCLEtBQUssUUFPakQsRFMSyxHQUNILEdBQUsRUFBSyxZQUFZLEdBSXRCLEtBQUssVUFBWSxFQUFNLENBQpCLEdBQUksRFBUyxDQUNYLFFBQVMsRFDVCxNQUFPLENBQQsRUFFQSxNQUFJLElBQYsRFBTyxRQUFVLENBQUMsQFBQyxFQUFHLEVBQUssTFBUyxDQUFDLENBQUMsRFHakMsQFDVCxDQUdBLEdBQUsQFDSixXQUNBLFdBQEsWUFDQSxpQkFDQSxxQkFDQSxrQkFDRSxLQUFLLFFBRUwsRUFBYSxDQUFDLEVBQQsRUFBYSxFQUNiLEVBQWEsRFFakIsSFBSyxPQUFPLFFBQVEsQFBQyxDQUFFLFVBQVMsVFBVSxnQkFBaUIsQFDekQsRFBTSxDQUFFLFVBQVMsUUFBTyxXQUFZLEdBQUsRUFBTSxFQUFTLEVBQVUsQFDbEUsUFBVSxFQUFXLEVBQJCLFdBQEsWUFDQSxpQkFDQSxxQkFDQSxpQkFDQSxnQkFDRixDQUFDLEVBRUQsQUFBSSxHQUNGLEdBQWEsSUFHZixHQUFjLEVBRVYsRFBVyxHQUNiLEdBQWEsQFBQyxHQUFHLEVBQVksRFBRyxDQUFPLEVBRTNDLENBQUMsRUFFRCxHQUFJLEdBQVMsQFDWCxRQUFTLEVBQQsTUFBTyxFQUFhLEVBQWEsSFBSyxPQUFPLEBQVMsQFDeEQsRUFFQSxNQUFJLElBQWMsRFDaEIsRFBTyxRQUFVLEdBRosQFDVCxDQUNGLEVBRUsRFBTixLQUFnQixDQUNkLFlBQVksRUFBUyxDQUNuQixLQUFLLFFBQVUsQFDakIsQFDQSxNQUFPLGNBQWEsRUFBUyxDQUMzQixNQUFPLElBQVMsRUFBUyxLQUFLLFVBQVUsQFDMUMsQFDQSxNQUFPLGVBQWMsRUFBUyxDQUMQixNQUFPLElBQVMsRUFBUyxLQUFLLFdBQVcsQFDMMsQFDQSxRQUFpQixDQUFDLENBQBCLEVBRUEsWUFBaIsRUFBUyxFQUFLLENBQzlCLEdBQUsRFBVSxFQUFRLEBQUsQFBRyxFQUNqQyxNQUFPLEdBQVUsRUFBUSxHQUFLLElBQhDLENBSUEsRFBTSxJQUFOLGFBQXlCLEdBQVUsQFDakMsWUFBWSxFQUFTLENBQCLEBQUsQFBTyxDQUNmLENBQEsVUFBVyxPQUFPLENBQhCLEBQUsTFDVCxDQUNBLFVBQVcsYUFBYSxDQUNQixNQUFPLFdBQQsQFDQSxVQUFXLGNBQWMsQFDdkIsTUFBTyxTQUNULENBQEsTFBTyxFQUFNLENBQgsRFBTSxHQUFVLElBQVMsSFBSyxRQUUQixNQUFPLENBQwsVUFDQSxNQUFPLEVBQVUsRUFBSSxFQUNyQixRQUFTLENBQUMsRUFBRyxLQUFLLFFBQVEsTFBUyxDQUFDLENBQRDLENBQYsQFDRixFQUlNLEdBQUsYUFBZMsRFBVSxDQUNQyxZQUFZLEVBQVMsQFDbkIsTUFBTSxDQUFPLENBQYsQFDQSxVQUFXLEBQUsQFDaEIsTUFBTyxlQUNULENBQEsVUFBVyxhQUFhLENBQRCLEBQUsVFDVCxDQUNBLFVBQVcsYFBYyxDQUNQixNQUFPLFNBQQsQFDQSxPQUFPLEVBQUsQFFWCxHQUFNLEdBQVUsQUFERixFQUFLLFFBQVEsSFBSyxPQUFPLElBQIsRFFMUIsTUFBTyxDQUNMLFVBQEsTUFBTyxFQUFVLEVBQUksRUFDckIsUUFBUyxDQUFDLEVBQUcsRUFBSyxPQUFTLENBQUMsQFDOUIsQFDRixDQUNGLEVBSUsRFBTixhQUErQixHQUFVLENBQZDLFlBQVksRUFBUyxDQUNuQixNQUFNLENBQUsQFDZixDQUNBLFVBQVcsTFBTyxDQUNoQixNQUFPLGNBQQsQFDQSxVQUFXLGFBQWEsQFDdEIsTUFBTyxZQUNULENBQEsVUFBVyxjQUFjLENBQZCLEBQUsVUFDVCxDQUNBLEBQUsRUFBTSxDQUNYLEdBQUsRFBVSxFQUFLLFdBQVcsSFBSyxPQUFPLEVBRTVDLEBQUsQFDTCxVQUNBLEBQUsRUFBVSxFQUFJLEVBQJCLFFBQVMsQFBQyxFQUFHLEtBQUssUUFBUSxPQUFTLENBQUMsQFDdEMsQFDRixDQUNGLEVBSUsRFBTixhQUFzQyxHQUFVLENBQzlDLFlBQVksRUFBUyxDQUNuQixNQUFNLENBQUsQFDZixDQUNBLFVBQVcsTFBTyxDQUNoQixNQUFPLHNCQUNULENBQEsVUFBVyxhQUFhLENBQRCLEBQUsYUFDVCxDQUNBLFVBQVcsYFBYyxDQUNQixNQUFPLFdBQQsQFDQSxPQUFPLEVBQUsQFDWCxHQUFNLEdBQVUsQFBQyxFQUFLLFdBQVcsSFBSyxPQUFPLEVBRTdDLEBQUsQFDTCxVQUNBLEBQUsRUFBVSxFQUFJLEVBQJCLFFBQVMsQFBQyxFQUFHLEVBQUssTFBUyxDQUFDLENBQzlCLENBQYsQFDRixFQUlNLEdBQUsYUFBKIsRFBVSxDQUNQyxZQUFZLEVBQVMsQFDbkIsTUFBTSxDQUFPLENBQYsQFDQSxVQUFXLEBQUsQFDaEIsTUFBTyxjQUNULENBQEsVUFBVyxhQUFhLENBQRCLEBQUsWUFDVCxDQUNBLFVBQVcsYFBYyxDQUNQixNQUFPLFVBQQsQFDQSxPQUFPLEVBQUsQFDWCxHQUFNLEdBQVUsRUFBSyxTQUFTLEtBQUssTFBTyxFQUUxQyxNQUFPLENBQwsVUFDQSxNQUFPLEVBQVUsRUFBSSxFQUNyQixRQUFTLENBQUMsRUFBSyxPQUFTLEtBQUssUUFBUSxPQUFRLEVBQUssTFBUyxDQUFDLENBQzlELENBQYsQFDRixFQUlNLEdBQUsYUFBcMsRFBVSxDQUMQyxZQUFZLEVBQVMsQFDbkIsTUFBTSxDQUFPLENBQYsQFDQSxVQUFXLEBQUsQFDaEIsTUFBTyxzQkFDVCxDQUNBLFVBQVcsYUFBYSxDQUNQixNQUFPLGFBQQsQFDQSxVQUFXLGNBQWMsQFDdkIsTUFBTyxXQUNULENBQEsTFBTyxFQUFNLENBQgsRFBTSxHQUFVLENBQUMsRUFBSyxTQUFTLEtBQUssTFBTyxFQUMzQyxNQUFPLENBQwsVUFDQSxNQUFPLEVBQVUsRUFBSSxFQUNyQixRQUFTLENBQUMsRUFBRyxFQUFLLEBQVMsQFBQyxDQUMQixDQUNGLENBQYsRUFFTSxHQUFOLGFBQXlCLEdBQVUsQFDakMsWUFDRSxFQUNBLENBQUsVFBVyxHQUFPLFNBQxCLFlBQVksRFBTyxVQUNuQixXQUFXLEdBQUsUFDbEIsaUJBQWlCLEdBQUsZUFDeEIsaUJBQWlCLEdBQUsZUFDeEIscUJBQXFCLEdBQUsbUJBQzVCLGtCQUFrQixHQUFPLGdCQUNQixpQkFBaUIsRFBTyxnQkFDdEIsQFBQyxFQUNMLENBQEsTUFBTSxDQUFPLEVBQIsSFBSyxhQUFlLEdBQUksSUFBWSxFQUFTLENBQzNDLFdBQEsWUFDQSxXQUNBLGlCQUNBLGlCQUNBLHFCQUNBLGtCQUNBLGdCQUNGLENBQUMsQFDSCxDQUNBLFVBQVcsTFBTyxDQUNoQixNQUFPLEBQQsQFDQSxVQUFXLGFBQWEsQFDdEIsTUFBTyxVQUNULENBQEsVUFBVyxjQUFjLENBQZCLEBQUsUUFDVCxDQUNBLEBQUsRUFBTSxDQUNYLEBQUsTUFBSyxhQUFhLFNBQVMsQFBSSxDQUNQyxDQUNGLEVBSUsRFBTixhQUEyQixHQUFVLENBQDLFlBQVksRUFBUyxDQUNuQixNQUFNLENBQUsQFDZixDQUNBLFVBQVcsTFBTyxDQUNoQixNQUFPLFNBQQsQFDQSxVQUFXLGFBQWEsQFDdEIsTUFBTyxXQUNULENBQEsVUFBVyxjQUFjLENBQZCLEBQUsUFDVCxDQUNBLEBQUsRUFBTSxDQUNYLEdBQUksRFBVyxFQUNYLEVBRUUsRUFBVSxDQUFDLEVBQgsRUFBYSxLQUFLLFFBQVEsTFHaEMsSFBUSxHQUFRLEVBQUssUUFBUSxLQUFLLFFBQVMsQFBUSxHQUFLLElBQRELEVBQVcsRUFBUSxFQUNuQixFQUFRLEtBQUssQFBQyxFQUFPLEVBQVcsQFBQyxDQUFDLEVBRBDLEdBQUsRFBVSxDQUFDLENBQUMsRUFBUSxPQUUxQixNQUFPLENBQwsVUFDQSxNQUFPLEVBQVUsRUFBSSxFQUNyQixTQUNGLENBQYsQFDRixFQUdNLEdBQVksQFDaEIsRFDQSxHQUNBLEdBQEsRFDQSxHQUNBLEdBQEsRFDQSxFQUNGLEVBRUsRFBZSxHQUFVLEBRpCLEdBQVcscUNBQgsRFBVyxJQUtqQixZQUFvQixFQUFTLEVBQVUsQFBQyxFQUFHLENBQpDLEBQUsRFBUSxNQUFNLEVBQVEsRUFBRSxJQUFJLEFBQUMsRFBUyxDQUMzQyxHQUFJLEdBQVEsRUFDVCxLQUFLLEVBQwsTUFBTSxFQUFRLEVBQQsTFBTyxBQUFDLEdBQVMsRFBUSxDQUFDLENBQUMsRUFBSyxLQUFLLENBQUMsRUFFckMsRUFBVSxDQUFDLEVBQYsTFBUyxHQUFJLEVBQUcsRUFBTSxFQUFNLEBQVEsRUFBSSxFQUFLLEdBQUssRUFBRyxDQUNuRCxHQUFNLEdBQVksRUFBTSxHQUdwQixFQUFRLEdBQIsRUFBTSxHQUNWLEtBQUsQFBQyxHQUFTLEVBQUUsRUFBTSxJQUFjLENBQJDLEdBQUsRFBVyxHQUFVLEdBQZCLEVBQVEsRUFBUyxhQUFhLENBQVMsRUFDMMsQUFBSSxHQUNGLEdBQVEsSFBSyxHQUFJLEdBQVMsRUFBTyxDQUFPLENBQUMsRUFDekMsRUFBUSxHQUVaLENBRUEsRFBSSxHQUKLElBREEsRUFBTSxHQUNDLEVBQUUsRUFBTSxJQUFjLENBQzNCLEdBQUsRFBVyxHQUFVLEdBQZCLEVBQVEsRUFBUyxjQUFjLENBQVMsRUFDNUMsRFBSSxFQUFPLENBQQsRUFBUSxLQUFLLEdBQUksRFBUyxFQUFPLENBQUsQFBQyxFQUNQyxLQUNGLENBQYsQFDRixDQUVBLEBQUsRUFDVCxDQUFDLENBQgsQFJQSxHQUFNLElBQWdCLEdBQUksSFBSSxDQUFDLEdBQVcsSFBTSxHQUFhLElBQUksQFBQyxFQThCNUQsRFBTixLQUFxQixDQUNuQixZQUNFLEVBQEsQFDRSxrQkFBaIsRFBTyxnQkFDekIsaUJBQWlCLEdBQUsZUFDeEIscUJBQXFCLEdBQUsbUJBQzVCLGlCQUFpQixHQUFPLGVBQhCLGlCQUFpQixHQUFPLGVBQhCLFdBQVcsRFBTyxTQUNsQixZQUFZLEdBQUsVUFDbkIsVFBVyxHQUFPLFVBQhCLENBQUMsRUFDTCxDQUNBLEtBQUssTUFBUSxLQUNiLEtBQUssUUFBVSxDQUNiLGtCQUNBLGlCQUNBLHFCQUNBLGlCQUNBLGlCQUNBLFdBQEsWUFDQSxVQUNGLEVBRUEsSFBSyxRQUFVLEVBQWtCLEVBQVUsRUFBUSxZQUFZLEVBQyELEtBQUssTUFBUSxHQUFXLEtBQUssUUFBUyxLQUFLLEBQUsQFDcEQsQFFQSxNQUFPLFdBQVUsRUFBRyxFQUFTLENBQzNCLEBQUsRFBUSxpQkFDakIsQFFQSxTQUFTLEVBQUsQFDYixHQUFNLEdBQVEsSFBSyxNQUVuQixHQUFJLENBQUMsRUFDSCxNQUFPLENBQwsUUFBUyxHQUNULEBQUsQFDVCxFQUdGLEdBQUsQFBRSxpQkFBZIsbUJBQWCLEtBQUssUUFFakQsRUFBTyxFQUFrQixFQUFPLEVBQUssWUFBWSxFQUVqRCxHQUFJLEdBQWEsRUFDYixFQUFhLENBQUMsRUFDZCxFQUFhLEVBRpCLEBQVMsRFBSSxFQUFHLEVBQUsRUFBTSxPQUFRLEVBQUksRUFBTSxHQUFLLEVBQUcsQFDckQsRFBTSxHQUFZLEVBQUsRFHeEIsRUFBVyxPQUFTLEVBQBCLEVBQWEsRUFHYixPQUFTLEdBQUksRUFBRyxFQUFPLEVBQVUsTFBUSxFQUFJLEVBQUsRFBSyxFQUFHLENBQpELEdBQUsRFBVyxFQUFVLEdBQJCLENBQUUsVUFBUyxVQUFTLFNBQVUsRUFBUyxPQUFPLENBQUksRUFFeEQsRFBSSxHQUdGLEdBRkEsRFBYyxFQUNkLEdBQWMsRUFDVixFQUFnQixDQUNsQixHQUFNLEdBQUsRUFBUyxZQUFZLEtBQxDLEFBQUksRFBYyxJQUFJLENBQUksRUFDeEIsRUFBYSxDQUFDLEdBQUcsRUFBWSxHQUFHLENBQUsRUFFdkMsRUFBVyxLQUFLLENBQUsQFFMIsTUFDSyxDQUNMLEVBQWEsRUFDYixFQUFhLEVBQIsRUFBVyxPQUFTLEVBQBCLEtBQYsQFDRixDQUdBLEdBQUksRUFBWSxDQUNkLEdBQUksRFBUyxDQUNYLFFBQVMsRFDVCxNQUFPLEVBQWEsQFDdEIsRUFFQSxNQUFJLElBQYsRFBTyxRQUFVLEdBRosQFDVCxDQUNGLENBREsTUFBTyxDQUNMLFFBQVMsRFDVCxNQUFPLENBQQsQFDRixDQUNGLEVBRUsRFBcIsQFBQyxFQUUQixlQUFxQixFQUFNLENBQpCLEdBQWCLEtBQUssRFBRyxDQUFJLENBQxDLENBRUEsWUFBdIsRUFBUyxFQUFTLENBQhDLEBQVMsRFBSSxFQUFHLEVBQUsRFBbIsTFBUSxFQUFJLEVBQUssRFBSyxFQUFHLENBQpFLEdBQUksRFBZIsRFBbIsRFDeEMsRFBSSxFQUFjLFVBQVUsRUFBUyxDQUFPLEVBQzFDLEBQUsSUFBSSxHQUFjLEVBQVMsQFBTyxDQUUQyxDQUVBLEBQUsSUFBSSxJQUFZLEVBQVMsQFBTyxDQUNQyxDQUVBLEdBQUsSUFBaIsQFDdEIsSUFBSyxPQUNMLEdBQUksSFDTixFQUVNLEdBQVUsQFDZCxLQUFNLFFBQsUUFBUyxNQUNYLEVBRUsRFBZSxBQUFDLEdBQBCLENBQUMsQFBRSxHQUFNLEdBQWdCLEBQVEsRUFBTSxHQUFnQixLQUVuRCxHQUFTLEFBQUMsRFBVSxDQUFDLENBQUMsRUFBTSxHQUFRLEBRXBDLEdBQVMsQUFBQyxHQUNkLENBQUMsRFBUSxDQUFLLEdBQUssRFBUyxDQUFLLEdBQUssQFBQyxHQUFhLENBQUssRUFFckQsRFBbIsQUFBQyxHQUFXLEVBQBDLENBQUMsRFBZIsSFBTSxPQUFPLEtBQUssQFBSyxFQUFFLElBQUksQUFBQyxHQUFTLEVBQRELENBQUMsRFBTSxFQUFNLEVBQYsRUFBRSxDQUNKLEdBSUEsWUFBZSxFQUFPLEVBQVMsQFBRSxPQUFPLElBQVMsQFBQyxFQUFHLENBQELEdBQUsRFBTyxBQUFDLEdBQVUsQFDdEIsRFBSSxHQUFPLEBQUsSFBSyxDQUFLLEVBRXRCLEVBQWMsRFBTyxDQUFLLEVBRWhDLEdBQUksQFBQyxHQUFlLEVBQUssTFBUyxHQUFLLENBQUMsRFBYSxDQUFLLEVBQhELEBQUsRFBSyxHQUFrQixDQUFLLENBQUMsRUFHdEMsRFBSSxHQUFPLENBQUssRUFBRyxDQUNqQixHQUFNLEdBQUsRUFBYyxFQUFNLEdBQVEsTUFBUSxFQUFLLEdBRSDLEVBQVUsRUFBYyxFQUFNLEdBQVEsUFBVyxFQUFNLEdBRTdELEdBQUksQFBQyxHQUFTLENBQUsRUFDbkIsSFBTSxJQUFJLEBQUsRFBcUMsQFBRyxDQUFDLEVBRzNELEdBQUsRFBTSxDQUNWLEBQUsRFBWSxDQUFHLEVBQRCLFNBQYsRUFFQSxNQUFJLElBQYsRFBSSxTQUFXLEdBQWUsRUFBUyxDQUFPLEdBRpDLENBQQsQFFQSxHQUFJLEdBQUsQFDVCxTQUFVLENBQUMsRUFDWCxTQUFVLEVBQUssRUFDakIsRUFFQSxTQUFLLFFBQVEsQUFBQyxHQUFRLENBQBCLEdBQUsRFBUSxFQUFNLEdBRXBCLEFBQUksRFBUSxDQUFLLEdBQYsRUFBTSxRQUFRLEFBQUMsRFBUyxDQUNQixFQUFLLFNBQVMsSFBSyxFQUFLLENBQUksQFBQyxDQUMvQixDQUFDLENBRUwsQFBQyxFQUVNLENBQQsRUFFQSxNQUFLLElBQWEsQFBSyxHQUNyQixHQUFRLEdBQWtCLENBQUssRFHMUIsRUFBSyxDQUFLLENBQCLENBREsWUFDRSxFQUNBLENBQUUsaJBQWtCLEdBQUsaUJBQzNCLENBQEsRUFBUSxRQUFRLEFBQUMsRFBVyxDQUMxQixHQUFJLEdBQWEsRUFFakIsRUFBTyxRQUFRLFFBQVEsQFBQyxDQUFFLEBQUssTFBTSxXQUFZLENBQyDLEdBQUsRFBUyxFQUFNLEVBQUksTFBUyxLQUVsQyxHQUFjLEtBQUssSUFDakIsSUFBVSxHQUFLLEVBQVMsTFBTyxRQUFVLEVBQhDLElBQVUsRFBTSxHQUFrQixFQUFJLEVBQpDLENBQYsQFBQyxFQUVELEVBQUsTUFBUSxDQUNqQixDQUFDLENBQgsQFFQSxZQUEwQixFQUFRLEVBQUsQFDdEMsRFBTSxHQUFVLEVBQUsUUFHdkIsQUFGQSxFQUFLLFFBQVUsQFBQyxFQUVaLEFBQUMsRFBVSxDQUFPLEdBSXRCLEVBQVEsUUFBUSxBQUFDLEdBQVUsQFDekIsRFBSSxDQUFDLEdBQVUsRUFBTSxPQUFPLEdBQUssQFBQyxFQUFNLFFBQVEsTFDOUMsTFHRixHQUFNLENBQUUsVUFBUyxTQUFVLEVBRXZCLEVBQUsQFDUixVQUNBLEBQYsRUFFQSxBQUFJLEVBQUsSFDUixHQUFJLElBQUsRUFBTSxJQUFJLEtBRxCLEVBQUsSUFBTSxJQUNkLEdBQUksUFBVyxFQUFNLEtBRZCLEVBQUssUUFBUSxLQUFLLENBQUcsQFDdkIsQFBQyxDQUNILENBRUEsWUFBdIsRUFBUSxFQUFNLENBQBDLEVBQUssTUFBUSxFQUFPLEtBQRCLENBRUEsWUFDRSxFQUNBLEVBQEsQFDRSxpQkFBaUIsRFBTyxlQUNQixlQUFlLEdBQUsYFDcEIsQFBQyxFQUNMLENBQEsRFBTSxHQUFlLENBQUMsRUFFdEIsTUFBSSxJQUFnQixFQUFhLEtBQUssRUFBZIsRUFDbEQsRFBYyxFQUFhLEtBQUssRUFBYyxFQUUzQyxFQUFRLElBQUksQUFBQyxHQUFXLENBQzdCLEdBQUsQFBRSxPQUFRLEVBRVYsRUFBTyxDQUNYLEtBQUsRUFBSyxHQUNYLFNBQVUsQFDWixFQUVBLEBQUksRFBYSxRQUNmLEVBQWEsUUFBUSxBQUFDLEdBQWdCLENBQBDLEVBQVksRUFBUSxDQUFJLENBQzFCLENBQUMsRUFHSSxDQUNULENBQUMsQFDSCxDQUVBLEdBQUsSUFBTixLQUFXLENBQQsWUFBWSxFQUFNLEVBQVUsQFBQyxFQUFHLEVBQUsQFDckMsSFBSyxRQUFVLENBQUUsRFBRyxHQUFRLEdBQUcsQFBUSxFQUdyQyxLQUFLLFFBQVEsaJBTWYsSFBSyxVQUFZLEdBQUksSUFBUyxLQUFLLFFBQVEsSUFBSSxFQUUvQyxLQUFLLGNBQWMsRUFBTSxDQUFLLENBQhDLENBRUEsYFBYyxFQUFNLEVBQUsQFHekIsRFGQSxLQUFLLEBQVEsRUFFVCxHQUFTLENBQUUsYUFBaUIsSFDOUIsSFBTSxJQUFJLEBQUsRUFBbIsRUFHdEMsSFBSyxTQUNILEdBQEsRFBWSxLQUFLLFFBQVEsSFBTSxLQUFLLEBQUsQFDekMsTUFBTyxLQUFLLFFBQVEsTUFDcEIsZJBQWlCLEtBQUssUUFBUSxlQUNoQyxDQUFDLENBQwsQFFQSxJQUFJLEVBQUssQFDUCxBQUFJLENBQUMsRFBVSxDQUFHLEdBSWxCLEBQUssTUFBTSxLQUFLLENBQUcsRUFDbkIsSFBSyxTQUFTLElBQUksQFBRyxFQUNQixDQUVBLEBQUsRUFBWSxJQUFvQixHQUFPLENBQzVDLEdBQUsRFBVSxDQUFDLEVBRWpCLEBQVMsRFBSSxFQUFHLEVBQUsSFBSyxNQUFNLEBQVEsRUFBSSxFQUFLLEdBQUssRUFBRyxDQUNRCxHQUFNLEdBQUsSFBSyxNQUFNLEdBQZCLEFBQUksRUFBVSxFQUFLLENBQUMsRFDbEIsTUFBSyxTQUFTLENBQUMsRUFDZixHQUFLLEVBQwsRFBTyxFQUVQLEVBQVEsSFBSyxDQUFHLEVBRXBCLENBRUEsTUFBTyxFQUNULENBRUEsUFBUyxFQUFLLENBQosSFBSyxNQUFNLEBQUsRUFBSyxDQUFDLEVBQhCLEtBQUssUFBUyxTQUFTLENBQUcsQFDNUIsQFFQSxVQUFXLENBQQsTUFBTyxNQUFLLFFBQQsQFFQSxPQUFPLEVBQUsQFBRSxRQUFRLElBQUsQFBQyxFQUFHLENBQpDLEdBQUsQFDSixpQkFDQSxlQUNBLGFBQEsUFDQSxtQkFDRSxLQUFLLFFBRUwsRUFBVSxHQUFTLENBQUssRUFDeEIsRFBUyxLQUFLLEBQUsRUFBRSxFQUNwQixLQUFLLGtCQUFrQixDQUFLLEVBQzVCLEtBQUssaJBQWtCLENBQUssRUFDOUIsSFBSyxlQUFlLENBQUssRUFFNIsVUFBYSxFQUFTLENBQUUsaUJBQWdCLENBQUMsRUFFckMsRFDRixFQUFRLEtBQUssQFBTSxFQUdqQixHQUFTLENBQUssRFBSyxFQUFRLElBQzdCLEdBQVUsRUFBUSxNQUFNLEVBQUcsQFBSyxHQUczQixHQUFPLEVBQVMsSFBSyxNQUFPLENBQpDLGlCQUNBLGNBQYsQFBQyxDQUNILENBRUEsaJBQWtCLEVBQUsQFDdkIsRFBTSxHQUFXLEdBQWUsRUFBTyxLQUFLLEBQUsRUFDNMsQFBRSxXQUFZLEtBQUssUFDbkIsRUFBVSxDQUFDLEVBRpCLFNBQVEsUUFBUSxDQUFDLENBQUUsRUFBRyxFQUFNLEVBQUcsRUFBSyxFQUFHLEtBQVcsQFDaEQsRFBSSxDQUFDLEdBQVUsQFBSSxFQUNqQixPQUdGLEdBQUsQFBRSxVQUFTLFFBQUsVFBWSxFQUFTLFNBQVMsQFBSSxFQUUxRCxBQUFJLEdBQYsRUFBUSxLQUFLLENBQgsSFBTSxFQUNOLEBQEsUUFBUyxDQUFDLENBQUUsUUFBTyxNQUFPLEVBQUsTFBTSxTQUFRLENBQUMsQFDakQsQFBQyxDQUVMLENBQUMsRUFFTSxDQUNULENBRUEsZUFBZSxFQUFPLENBRXBCLEdBQUsRFBYSxHQUFNLEVBQUsSFBSyxPQUFPLEVBRXRDLEVBQVcsQFBQyxFQUFNLEVBQUsSUFBUSxDQUNwQyxHQUFJLENBQUMsRUFBSyxTQUFVLENBQxCLEdBQUsQFBRSxRQUFPLFlBQWEsRUFFdEIsRUFBVSxLQUFLLGFBQWEsQFDaEMsSUFBSyxLQUFLLFVBQVUsSUFBSSxDQUFLLEVBQzdCLEBQUsSFBSyxTQUFTLHVCQUFQixFQUFNLENBQUssRUFDdkQsVUFDRixDQUFDLEVBRUQsTUFBSSxJQUFXLEVBQVEsTFDZCxDQUNMLENBQUsTUFDQSxPQUNBLFNBQYsQFDRixFQUdLLENBQUMsQFDVixDQUVBLEdBQUsRFBTSxDQUFDLEVBQIsTFBUyxHQUFJLEVBQUcsRUFBTSxFQUFLLFNBQVMsTFBUSxFQUFJLEVBQUssRFBSyxFQUFHLENBQzNELEdBQUsRFBUSxFQUFLLFNBQVMsRFDdEIsRUFBUyxFQUFTLEVBQUsRUFBTSxDQUFHLEVBQhDLEdBQUksRUFBTyxPQUNULEVBQUksSFBSyxHQUFHLENBQUsVUFDVCxFQUFLLFdBQWEsRFBZIsSUFDMMsTUFBTyxDQUFDLENBRVosQFDQSxNQUFPLEVBQQsRUFFTSxFQUFVLEtBQUssUFBUyxRQUNQixFQUFZLENBQUMsRUFDYixFQUFVLENBQUMsRUFFakIsUFBUSxRQUFRLENBQUMsQFBRSxFQUFHLEVBQUsRUFBRyxLQUFVLENBQZDLEdBQUksRFBVSxDQUFJLEVBQUcsQFDbkIsRFBSSxHQUFhLEVBQVMsRUFBWSxFQUFNLENBQUcsRUFFLMsQUFBSSxFQUFXLFFBRVIsRFBVSxJQUNiLEdBQVUsRFBTyxDQUFFLEBQUssTFBTSxRQUFTLENBQUMsQFBRSxFQUMxQyxFQUFRLEtBQUssRUFBVSxFQUFJLEdBRTdCLEVBQVcsUUFBUSxDQUFDLENBQUUsYUFBYyxDQUNsQyxFQUFVLEdBQUssUUFBUSxLQUFLLEdBQUcsQFBTyxDQUNQyxDQUFDLEVBRUwsQFDRixDQUFDLEVBRUsQFDVCxDQUVBLGtCQUFrQixFQUFPLENBQZCLEdBQUsRFBVyxHQUFlLEVBQUsSFBSyxPQUFPLEVBQzdDLENBQUUsTFBTSxXQUFZLEtBQUssUFDekIsRUFBVSxDQUFDLEVBRpCLFNBQVEsUUFBUSxDQUFDLENBQUUsRUFBRyxFQUFNLEVBQUcsSFBVSxDQUNQyxHQUFJLENBQUMsRFBVSxDQUFJLEVBQpCLEBRYsRFBSSxHQUFVLENBQUMsRUFHZixFQUFLLFFBQVEsQFBQyxFQUFLLElBQWEsQFDOUIsRUFBUSxLQUNOLEdBQUcsSFBSyxhQUFhLENBQCLEBQEsTUFBTyxFQUFLLEdBQosVUFDRixDQUFDLENBQgsQFDRixDQUFDLEVBRUcsRUFBUSxRQUNWLEVBQVEsSFBSyxDQUNYLEBQEsTFDQSxTQUNGLENBQUMsQFFTCxDQUFDLEVBRUsQFDVCxDQUNBLGFBQWEsQFBRSxNQUFLLFFBQUsWUFBWSxDQUNyQyxHQUFJLENBQUMsRFBVSxDQUFLLEVBQxCLEBQUsQFBQyxFQUdWLEdBQUksRFBVSxDQUFDLEVBRWYsRFBSSxHQUFRLENBQUssRUFDZixFQUFNLFFBQVEsQFBQyxDQUFFLEVBQUcsRUFBTSxFQUFHLEVBQUssRUFBRyxLQUFXLENBQzlDLEdBQUksQFBQyxHQUFVLENBQUksRUFDakIsTFHRixHQUFNLENBQUUsVUFBUyxRQUFPLFdBQVksRUFBUyxTQUFTLENBQUksRUFFMUQsQUFBSSxHQUNGLEVBQVEsSFBSyxDQUNYLFFBQEsTUFDQSxNQUFPLEVBQAsTUFDQSxPQUNBLFNBQYsQFBQyxDQUVMLENBQUMsTUFDSSxDQUNMLEdBQUsQFBRSxFQUFHLEVBQUsRUFBRyxHQUFTLEVBRXZCLENBQUUsVUFBUyxRQUFPLFdBQVksRUFBUyxTQUFTLENBQUksRUFFMUQsQUFBSSxHQUNGLEVBQVEsSFBSyxDQUFFLFFBQUsTUFBSyxNQUFPLEVBQUsTFBTSxTQUFRLENBQUMsQFFMQsQFFQSxNQUFPLEVBQQsQFDRixFQUVBLEdBQUssUUFBVSxRQUNmLEdBQUssWUFBYyxHQUNuQixHQUFLLFdBQWEsRFDbEIsRFBSyxPQUFTLEdBRosRFBSyxXQUFhLEdBSWxCLEdBQVMsRUFBYyxFRDVRHpCLEBQWtCLFdBQxCLEdBQWtCLFdBQxCLEdBQWtFLGCQUNsRSxHQUErQixXRVBoQixZQUFQixFQUFJLEVBQUksQFFOUMsRFBTSxHQUFLLEdBQWlCLENBQUUsRUFDeEIsRUFBSyxHQUFpQixDQUFFLEVBRhCLEVBQUssRUFBRyxJQUFJLEVBQosRUFBSyxFQUFHLElBQUksRUFHWixFQUFJLEdBQWdCLEVBQUksQFBRSxFQUNoQyxNQUFJLEtBQUsRUFBVSxFQUdoQixHQUFNLEVBQQsRFBZIsRUFBRyxNQUFNLEdBQUcsRUFBRyxFQUFHLEBQUsRFBRyxDQUFDLEVBQzFDLEdBQUsRUFDUixFQUFLLEdBQUssRUFHWixDQUNULENBRUsRFBTSxJQUFXLEFBQUMsRFDdkIsTUFBTyxJQUFNLFVBQVksUFBUyxLQUFLLENBQUMsRFBSyxHQUFPLEtBQUssQFBQyxFQUUvQyxHQUFVLENBQUMsRUFBSSxFQUFJLElBQWEsQFFMMsRFBbIsQFBUSxFQUkQixHQUFNLEdBQUsRFBZIsRUFBSSxDQUFFLEVBRWxDLEBQUsSUFBZSxHQUFVLFNBQVMsQFBRyxDQUMQyxFQUVhLEdBQVksQFBQyxFQUFHLElBQUsQFFakMsRFBTSxHQUFJLEVBQUUsTUFBTSxhQUFhLEVBQpCLEVBQUssRUFBSSxFQUFFLEdBQUssSUFHdEIsRFBSSxJQUFPLEtBQUsSUFBTyxJQUFLLEBQUsSUFBUSxFQUFHLEVBQUcsQFBRSxFQUdyRCxHQUFNLENBQUMsRUFBSSxFQUFJLEdBQUsRFBaUIsQFBQyxFQUNqQyxDQUFDLEVBQUksRUFBSSxHQUFNLEdBQWlCLENBQUMsRUFDdkMsTUFBSSxJQUFlLEVBQUksQFBRSxJQUFNLEVBQVUsRFDckMsSUFBTyxJQUNGLEdBQWdCLENBQUMsRUFBSSxDQUFFLEVBQUcsQFBQyxFQUFJLENBQUUsQFBQyxHQUFLLEVBRTVDLEdBQWUsRUFBSSxDQUFFLElBQUsRUFBVSxHQUNsQyxHQUFlLEVBQUksQFBRSxHQUFLLENBQDLEVBREsRFBZIsUFBVyxHQUMzQixHQUFnQixRQUFVLEdBQzFCLEdBQWdCLFdBQWEsRFFNIsRFBTSxJQUNKLDZJQUVJLEdBQWCLEFBQUMsRFBTSxDQUMQixHQUFJLEBQUsSUFBTSxTQUNmLEtBQUsSUFBSSxXQUFVLGtDQUFrQyxFQUVRCxHQUFNLEdBQVEsRUFBRSxNQUFNLEVBQUsRUFDNUIsRFBSSxDQUFDLEVBQgsSFBTSxJQUFJLEBQUsdUNBQXVDLGNBQWMsRUFFdkUsUFBTSxNQUFNLEVBQwsQFDVCxFQUVNLEdBQWEsQUFBQyxHQUFNLElBQUsSFBTyxJQUFNLEtBQUsSUFBTSxJQUVwRCxHQUFXLEFBQUMsRFBTSxDQUNQixHQUFNLEdBQUksUFBUyxFQUFHLEVBQUUsRUFDeEIsTUFBTyxPQUFNLENBQUMsRUFBSSxFQUFJLENBQhCLEVBRUsRFBWSxDQUFDLEVBQUcsSUFDcEIsTUFBTyxJQUFNLEBQUsRFBSSxDQUFDLEBQUsQFBQyxFQUFHLEBQUsQFBQyxDQUFDLEVBQUksQFBQyxFQUFHLENBQUMsRUFFbEQsRFBaUIsQFBQyxFQUFHLElBQUsQFDLIsRFBSSxHQUFXLENBQUMsRFBSyxHQUFXLENBQUMsRUFBRyxNQUFPLEdBQzNDLEdBQUsQFBQyxFQUFJLEdBQUsRFBVSxHQUFTLENBQUMsRUFBRyxHQUFTLENBQUMsQFBQyxFQUNuRCxNQUFJLEdBQUssRUFBVyxFQUNoQixFQUFLLEVBQVcsRFDYixDQUNULEVBRUsRFBaIsQFBQyxFQUFHLElBQUsQFDaEMsTFBUyxHQUFJLEVBQUcsRUFBSSxLQUFLLElBQUksRUFBRSxPQUFRLEVBQUUsTUFBTSxFQUFHLElBQUssQFDckQsRFBTSxHQUFJLEdBQWUsRUFBRSxJQUFNLEVBQUcsRUFBRSxJQUFNLENBQUMsRUFDNMsRFBSSxJQUFNLEVBQUcsTUFBTyxFQUNQixDQUNBLEBQUsRUFDVCxFQUVNLEdBQWlCLENBQJCLElBQUssQFBQyxDQUFDLEVBQAsSFBTSxDQUFDLEVBQUcsQFBQyxFQUNYLElBQUssQFBQyxDQUFDLEVBQAsSFBTSxDQUFDLEdBQUksQFBQyxFQUNaLElBQUssQFBQyxFQUFFLENBQYsRUFFTSxHQUFtQixPQUFPLEtBQUssRUFBYyxFQUUQyxHQUFzQixBQUFDLEdBQUsQFDbEMsRFBSSxNQUFPLElBQUsUFDaEIsSFBTSxJQUFJLFdBQIsaRBQWtELEBQUsSUFDMQsRUFFRixHQUFJLEdBQWlCLFFBQVEsQFBRSxJQUFNLEdBQDLEtBQUsSUFBSSxPQUNSLHFDQUFxQyxHQUFpQixLQUFLLEdBQUcsRFDaEUsQFFSixFQzFIQSxPQUFrQixXQFsQixPQUPLGCQUQLEdBQUsSUFBVyxNQUtYLEdBQWlCLENBQUMsRUFBZSxJQUNqQyxNQUFPLElBQVUsVUFBWSxFQUFNLEtBQUssRUFBRSxPQUFTLEVBQzlDLEVBQVksTFBTyxFQUFNLFFBQVEsVFBWSxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUMsRUFFOUQsRUFBWSxVQUFVLEVBSWpDLFlBRUUsRUFDQSxFQUNlLGdDQUNmLEdBQUsQFBRSxLQUFJLFFBQVMsRUFBVyxLQUMQixDQUFFLFdBQVksRUFDZCxFQUFTLEtBQUsTUFBSyxZQUFZLFdBQVcsQFBRSxFQUMvQyxHQUFJLENBQUMsRUFBUSxLQUFNLElBQUksVFBVSwrQkFBaUMsQFBRSxFQUVwRSxFQUFHLFNBQVMsYUFBYSxFQUVQixHQUFNLEdBQVksRUFDZixVQUFVLGCQUFvQixFQUMQixVQUFVLGtCQUFrQixFQUUvQixHQUFJLEVBQVMsQFDWCxHQUFNLEdBQosRUFBUSxTQUFXLEVBQYsRUFBUSxHQUFHLEBQVEsTFDakIsRUFBUSxHQUFHLFFBQgsQFBQyxFQUNILEdBQUsRUFBUSxRQUFRLEFBQUMsRFBTyxFQUFFLEBQVEsTFBUyxFQUFFLFFBQVUsQFBQyxDQUFFLENBQzVELEVBQsRFBYyxFQUFXLEVBQUssUUFBUSxRQUFTLEdBQUcsRUFBRyxDQUFPLENBQzlELEtBQUsRFBVSxRQUFRLEVBQUssUUFBUSxRQUFTLEdBQUcsQFBQyxFQUUQyxFQUFHLFVBQVUsZJBQWdCLEVBQUUsVFBVyxtQkFBbIsQUFBQyxHQUMRCxFQUFHLFlBQVksQFBTSxDQUNQixDQUNGLEdBRUsRFBTSxJQUFOLGFBQcsZJBRVYsQFDRSxZQUFtQixFQUFnQixDQUNqQyxNQUFNLEVBQUsRFBRyxFQURDLGNBVCLHNCQUFtQixHQUduQixhQUFxRCxLQVpuRCxLQUFLLFFBQVEsUFBUyxFQUFRLENBQhDLENBQEsRFBSSxjQUFjLENBQhCLEBQUsTUFBSyxPQUFPLFdBQJCLENBRUEsZUFBZSxFQUFlLENBQzVCLEBQUsSUFBZSxFQUFPLEtBQUssVFBVyxDQUMvQyxDQUtBLEBQWlDLENBQyCLGFBQUsSFBSyxFQUNKLEdBQUksUFBUSxBQUFDLEdBQVksQFDOUIsSFBSyxRQUFVLENBQpCLENBQUMsQFDSCxDQUNBLFNBQVUsQFDUixBQUFJLEtBQUssUFDUCxNQUFLLFFBQVEsSUFBSSxFQUNqQixLQUFLLFFBQVUsSFFbkIsQFFQSxtQkFBbUIsRUFBdMsQFFMQsQFDQSxpQkFDRSxFQUNBLEVBQsQFDTixBQUFJLEtBQUssUFDUCxDQUFJLFdBQUsSFDVCxLQUFLLFFBQVEsRUFBTSxJQUFJLEVBRXZCLEtBQUssUUFBUSxJQUFJLEVBRWCLEtBQUssUUFBVSxNQUdqQixNQUFNLGlCQUFpQixFQUFjLENBQUcsQFDMUMsQFDRixFQUVhLEdBQUsYUFDRyxpQkFFVixDQUNFLFlBQWCLEVBQWdCLENBQpDLEBQUsRUFBTyxHQUFHLEVBREMsYFQCLHNCQUFtQixHQXJDakIsSFBSyxVQUFVLFNBQVMsRUFBUSxDQUNsQyxDQUVBLEdBQUksYFBYyxDQUNoQixNQUFPLEBQUssTFBTyxXQUNyQixDQUVBLFVBQUsRUFDQSxFQUNpQyxDQUNqQyxHQUFJLENBQUMsSFBSyxPQUFPLFNBQVMsVUFBVyxNQUFPLEBQzVDLEdBQUsRFBTSxFQUFPLFFBQVEsRUFBTyxJQUFJLEVBQUUsVUFBVSxFQUFHLEVBQUsRUFBRSxFQUNRCxFQUFnQixLQUFLLEBQUsUFBUyxQkFDdkMsSUFDQSxHQUNBLEVBQVUsTFBTyxTQUFTLGCQUNQixFQUFRLEVBQUksTUFBTSxHQUFJLFFBQUsRUFBUyxHQUFHLENBQUMsRUFDaEQsRFBSSxDQUFDLEVBQUsTUFBTyxNQUNuQixHQUFNLEdBQVUsRUFBTSxNQUNuQixVQUFVLEVBQUcsRUFBTSxLQUFLLEVBQhCLEBQUsYUFBYSxFQUNQixNQUFJLElBQVUsSFBSyxZQUFZLFFBQVEsRUFBTyxFQUFFLEVBQVUsSFDbkQsQFDTCxJQUFLLEVBQwsTUFBTyxDQUNMLEdBQUksRUFBTSxNQUNWLEtBQUsRUFBTyxJQUNmLEVBQEsTUFBTyxFQUFNLEVBQYsQFDRixDQUVBLGVBQWUsRUFBKIsQFDNUMsTUFBTyxJQUFlLEVBQVEsTUFBTyxLQUFLLFdBQVcsQFDdkQsQFHQSxpQkFBaUIsRUFBdMsQFDdkQsRFBSSxDQUFDLEtBQUssUUFBUyxPQUNuQixHQUFNLENBQUUsSFBSSxRQUFTLEVBQVcsSFDaEMsSFBSyxRQUFRLEBQUsYUFDbEIsSFBSyxPQUFPLFNBQVMsWUFBYyxJQUFTLFFBQZDLEtBQUssWUFBWSxRQUFRLEVBQUksRUFBSSxFQUNsQyxJQUFJLEtBQVMsTUFBSyxPQUFPLFNBQVMsYUFBZSxJQUFNLElBQzNELEtBQUssUUFBUSxNQUNiLEtBQUssUUFBUSxHQUNmLENBQYsQFDRixFQUVNLEdBQWdCLENBQBCLEVBQEsRUFDQSxFQUNBLElBQcsQFDSCxHQUFJLEVBQVMsQFDWCxBQUFJLElBQVcsUUFBVyxHQUFTLEdBQDLEdBQUksRFBWSxFQUNoQixPQUNNLEdBQWEsRUFDakIsRUFBYSxFQUFRLFFBQVUsRUFBWSxFQUFLLEBQhELElBQEsQFDQSxHQUFJLEdBQVEsRUFBUSxHQUNsQixFQUFRLEVBQUsRFBSyxFQUNuQixFQUFNLEVBQUsRFBSyxFQUFTLEVBQzVCLEdBQUksQFBRSxJQUFPLEdBQUksQFDZixHQUFJLEdBQVMsRUFBSyxPQUFRLEBQzFCLEFBQUksRUFBUSxHQUFHLEdBQVEsRFDbkIsSUFBVSxHQUNaLEVBQUcsVFBVyxFQUFLLFVBQVUsRUFBVyxDQUFLLENBQUMsRUFDaEQsRUFBRyxXQUFXLENBQosSUFBSyxQkFDTCxLQUFNLEVBQUssVUFBVSxFQUFPLENBQUcsQFDakMsQFBQyxFQUNELEVBQVksQFDZCxDQUNGLENBQEsRUFBWSxFQUFLLFFBQVUsRUFBRyxXQUFXLEVBQUssVUFBVSxDQUFTLENBQUMsQFDcEUsSFBTyxHQUFHLFdBQVcsQFBSSxDQUMzQixFRHhHTyxHQUFNLElBQVksVUFXWixHQUFTLENBQBCLEVBQEsSUFDZSxFQUNmLFFBQVMsRUFBWSxRQUFRLEtBQUssQFBVyxFQUMQyxRQUFTLEVBQVksUUFBUSxLQUFLLENBQVcsRUFDNMsWUFBYSxFQUFZLFlBQVksSFBSyxDQUFXLEVBQJELFdBQVksRUFBWSxXQUFXLEtBQUssQFBVyxFQUNuRCxnQkFBaUIsSUFBTSxHQUFJLElBQWCLENBQUsRUFBRSxLQUFLLEVBQzVELFFBQVMsVFBTSxTQUFTLEtBQUssVUFBSyxFQUNsQyxjQUFlLEVBQUsYFBYyxLQUFLLENBQUsRUFDLMsUUFBUyxDQUNQLEdBQUksVUFBVSxDQUNaLEBQUsRFBTyxTQUFTLEBQpCLEVBQEsUUFBUyxDQUFDLEVBQUksSUFBUSxHQUFRLEVBQUsUFBUyxRQUFTLEVBQUssQFBRSxFQUMRCxVQUFXLEFBQUMsRFBVSxHQUFVLEVBQUsUFBUyxRQUFTLENBQUssQFDaEUsQFDRixHRSIQSxPQUFvQixXQUNwQixHQUFQixXQUNQixHQUFQiwybVJBTXhCLEdBQUsSUFBZSxBQUFDLEdBQWlCLEVBQUssUUFBUSxLQUFNLEdBQUcsRUFFdkQsRFBaUIsTUFDckIsRFBbUIsTUFJZixHQUFQixBQUFDLEdBQzlCLENBQUMsUUFBUyxTQUFVLEBQUsRUFBRSxRQUFRLEFBQUMsRFBRyxDQWhCMMsTUFpQkksVFBRyxvQkFBSCxjQUFzQixnQkFBZIsRFDeEMsRUFDSSxHQUFOLEtBQXFELENBSELFlBQWCLEVBQXNCLEVBQWCLENBQTFDLFlBQXNCLGtCQUpQyxLQUFPLEtBQUsVFLWixLQUFLLEtBQUsRFBYSxDQUFVLEVBQDLEtBQUssRFBSyxHQUFHLEtBQVEsSFBSyxNQUMQixDQUNBLEdBQVcsTFBTyxDQTVCcEIsTUEQkksRFBTSxHQUFLLFVBQVUsRUFDckIscUJBQUsRUFDQyxNQUFLLEBQVMsRFBaUIsVUFBWSxJQUFNLEtBQUssVUFDekQsRUFDQSxHQUFQixDQUFFLEVBQpCLEtBQUcsbJBQUgsUUFBcIsYUFBYSxRQUFTLDhCQUNyQyxFQUFHLFNBQosQFDQSxHQUFXLFVBQVUsQFDbkIsTUFBTyxlQUFRLEtBQUssSUFBSSxDQUMxQixDQUNBLEFBQUsTFBTyxFQUFNLEdBQXVCLENBQpDLEdBQUsRFBSyxXQUFXLENBQUUsSUFBSyxHQUFjLElBQUksQFBRSxDQUFDLEVBQxELEBQUksRFDRixHQUFHLFNBQVMsYFBYyxFQUMxQixlQUNFLEVBQMsTUFBSyxPQUFTLEdBQWlCLFVBQVksSUFBTSxLQUFLLFVBQpELEVBQEsRFBdUIsQFBRSxHQUVQixHQUFHLFNBQVMsYFBYyxFQUMxQixFQUFHLFNBQVMsTUFBTyxDQUFFLEtBQUsQFBRSxJQUFLLEtBQUssTFBUSxDQUFFLENBQUMsRFFNMsQFDVCxDQUNGLEVBRUsRFBaIsUUFDbEIsRFBYyxJQUlmLENBQgsRFBSSxHQUFRLEdBQUksSFDZCxFQUFNLENBQUMsRUFDUCxFQUFZLENBQUMsRUFFZixPQUFXLENBQUMsRUFBTSxJQUFVLENBQzFCLENBQUMsRFBaIsRUFBWSxFQUMvQixDQUFDLEdBQWdCLEVBQVUsQFDNIsRUFBWSxDQUNWLEVBQVUsSFBSyxDQUFJLEVBQCLEBQVcsSFBYyxHQUFPLENBQzlCLEdBQUsRFBTyxHQUFJLElBQWdCLEVBQUsQFBVSxFQUNqRCxFQUFNLElBQUksRUFBSyxHQUFJLENBQUksRUFDdkIsRUFBSSxLQUFLLENBQUksQFDZixDQUNGLENBQEsRUFBVSxLQUFLLEVBQWUsRUFDOUIsTFBVyxLQUFPLFFBQUsSFBSyxVQUFXLEVBQZDLEVBQUksSFBSyxDQUFFLEtBQUsRFBaUIsRFBSSxFQUFLLEtBQUsQFBSSxDQUFDLEVBRXhELEBQUsQFBRSxRQUFPLEBQUssVFBVSxDQUNqQyxFQUVNLEdBQVMsRFBWSxFQUNkLEdBQXNCLEdBQUsTUFDNIsRFBaUIsRFBTyxJQUNQixHQUFQixHQUFPLFVDekYzQyxPQUFrQixXQUtsQixHQUFxQixJQUFyQixLQUFnRSxDQUMRCxZQUFtQixFQUFjLENBQWQsVFBZSxDQUNsQyxHQUFXLEtBQUssQFDZCxNQUFPLEBQUssSUFDZCxDQUNBLEdBQVcsTFBTyxDQUNoQixNQUFPLEBQQsQFDQSxHQUFXLEBQUsQFDaEIsTUFBTyxPQUNULENBQEsRFBVyxPQUFPLENBQhCLEBQUsWUFBTSxJQUFJLEtBQUssSUFBSSxDQUMQixDQUVBLEBQUsUFBUSxFQUFjLENBQzNCLEBQUksWUFBTSxTQUFTLENBQUksRUFDZCxHQUFJLElBQWMsQFBSSxFQUVQixJQUVYLENBRUEsQUFBTyxPQUFPLEVBQUsRFBTSxDQUNQixNQUFPLFlBQVcsQFDaEIsSUFBSyxDQUFDLEdBQWMsSUFBSSxFQUFHLGVBQWUsRUFDMUMsSFBTSxLQUFLLElBQIsQFBQyxDQUNILENBQYsRUNsQEsTFBaMsbJBQxDLEdBQXdCLFdBTXhCLEdBQXFCLElBQXJCLEtBQThELENBZTVELFlBQUsRUFDQSxFQUNBLEVBQIsRUFDUSxFQUNSLENBTFEsVFDQSxhQUNBLGFBRUEsYFFUixLQUFLLEtBQUsRUFBSyxLQUFLLENBQhCLENBdEJBLEBQUsUFDTCxFQUNBLEVBQEsRUFDcUIsQFDckIsRFBTSxHQUFTLEdBQWCLENBQUUsRUFDcEMsTUFBSSxDQUFDLEdBQVUsRUFBTyxPQUFTLFFBQWdCLEtBQhDLEdBQUksSUFBYSxFQUFJLEVBQUsSFBTSxFQUFPLEtBQUsRUFBTSxDQUFNLENBQBFLENBRUEsRFBVyxPQUFPLENBQhCLEBQUsTUFDVCxDQVdBLEdBQVksUUFBUSxDQUNsQixNQUFPLEBQUssTFBTyxJQUFJLEtBQpCLENBRUEsRFBVyxLQUFLLENBQQsTUFBTyxNQUFLLEdBQQsQFDQSxHQUFXLEBQUsQFDaEIsTUFBTyxNQUFLLEtBQQsQFDQSxHQUFXLEBQUsQFDaEIsTUFBTyxNQUFLLEtBQQsQFDQSxHQUFXLEBQUsQFDZixNQUFPLGVBQVEsSFBSyxJQUFJLENBQzFCLENBQEsRFBVyxTQUFTLENBQxCLEBQUksTUFBSyxNQUFNLGtCQUFtQixzQkFDekIsSFBSyxNQUFNLFFBQVEsWUFBWSxLQUFLLElBQUksRUFDbkMsSUFDaEIsQFDQSxHQUFXLGVBQWUsQFDeEIsTUFBTyxNQUFLLEBQUsUUFBUSxnQkFBZIsSFBSyxJQUFJLENBQJELENBRUEsRFBVyxRQUFRLENBQpCLEBQUsTUFBSyxNQUFRLEBQRCLENBREsQUFBTyxPQUFPLEVBQUsRFBaQsQFDcEUsRFBTSxHQUFLLFdBQVcsQFBRSxJQUFLLEdBQWMsSUFBSSxDQUFFLENBQUMsRUFDbEQsTUFBSSxJQUFPLEtBQUssTUFDZCxHQUFHLFNBQVMsYFBYyxFQUNsQixLQUFZLHdCQUNsQixHQUFNLEdBQVEsSFBTSxNQUFLLEBQUsYFBYyxRQUFRLEtBQUssSUFBSSxFQUMvRCxNQUFJLEdBQYsTUFBSyxhQUFhLENBQUssRUFDdkIsRUFBRyxPQUFPLENBQUssRFFZixRQUFRLEBQUsOEJBQStCLEtBQUssSUFBSSxFQUVqRCxDQUNULElBQUcsRFFSCxHQUFHLFNBQVMsYFBYyxFQUMxQixFQUFHLFNBQVMsTUFBTyxDQUFFLEtBQUsQFBRSxJQUFLLEtBQUssWUFBYSxDQUFFLENBQUMsRUFDaEQsRUFFWCxDQUVBLGFBQWEsRUFBdUIsQFDbEMsRFBSSxFQUFDLEdBQVksUFBUyxLQUFLLElBQUksRUFDbkMsTFBVyxLQUFVLEdBQUkscUJBQXFCLEBQUsRUFDbEQsQUFBSyxFQUFPLGFBQWEsTUFBTSxHQUMQixFQUFPLGFBQWEsTFBUSxjQUFjLENBRhELENBQYsRUFDTSxHQUFjLENBQUMsTUFBTyxNQUFPLEBQUsTUFBTyxLQUFLLEVDckQvQyxHQUFNLElBQWlCLEFBQUMsRFDNIsQFBQyxDQUFFLEVBQWCLElSWnpCLEdBQUsSUFBbUIsYFDbkIsRFBaIsUUFFSCxHQUFyQixhQUFQyxVQUFPLENBMEgQyxZQUFtQixFQUFnQixDQUNqQyxNQUFNLEVBRFcsYFSGCLEtBQVEsYUFBZSxHQUFJLEtBQzNCLEtBQVEscUJBQWDLEdBQUksSESGhELEtBQVEsUUFBVSxHQXdXbEIsSFBUSxNQUFRLEdBQUksSUFBZSxHQUFnQixDQUNqRCxLQUFNLENBQUMsTFBUSxNQUFNLEVBQJCLGFBQWMsRFFZCxlQUFnQixHQUNoQixVQUFXLEdBQgsVFBWSxHQUNaLGVBQWdCLEdBQhCLGtCQUFtQixFQUNyQixDQUFDLENBblhELENBekhBLEdBQUksUUFBUSxDQUNWLEBQUsTUFBSyxPQUFPLElBQUksSFDekIsQFDQSxBQUFNLGVBQosRUFDQSxFQUNBLEVBQlCLGdDQUNqQixHQUFNLEdBQVUsWUFBSyxLQUFLLGVBQWdCLEVBQVEsQFBRyxFQUNuRCxFQUFPLFlBQUssSFBSyxlQUFnQixFQUFLLENBQUcsRUFDMMsWUFBTSxNQUFLLEBQUsUUFBUSxPQUFPLEVBQUsQFBTyxFQUNQyxDQUNULEdBQEsZUFBZSxFQUFZLEVBQWEsQFDdEMsRFBTSxHQUFPLFlBQUssSFBSyxlQUFnQixFQUFLLENBQUcsRUFDLMsTUFBTyxNQUFLLEBQUsUUFBUSxPQUFPLENBQUksQFDdkMsQFDQSxBQUFNLFFBQVEsRUFBWSxFQUFhLEVBQWCLGdDQUNRCxHQUFNLEdBQUsWUFBSyxLQUFLLGVBQWdCLEVBQUssQFBRyxFQUMvQyxZQUFNLEBQUssTUFBTSxRQUFRLFlBQVksRUFBTSxDQUFJLEVBQhDLENBQQsRFDQSxHQUFJLGtCQUEQixDQUMQixNQUFPLENBQUMsRFBRyxLQUFLLGCQUFvQixDQUNQyxDQUNBLEdBQUkscJBQXNCLENBQhCLEBQUscUJBQWMsSFBSyxPQUFPLFNBQVMsSUFBTSxFQUFnQixDQUNsRSxDQUNBLEdBQUksaUJBQWlCLENBQCLEBQUsWUFBSyxLQUFLLEBQUsVUFBVyxFQUFlLENBQELENBQEsaUJBQWlCLEVBQWtCLENBQpDLEBQUsSUFBcUIsUFBUyxDQUFRLEdBQRDLEtBQUsscUJBQXFCLElBQUksQFBUSxDQUUxQyxDQUNBLEdBQUksbUJBQTZCLENBQyCLEBQUsQFBQyxHQUFHLEdBQXNCLEdBQUcsSFBSyxvQkFBbIsRUFBRSxPQUMRCxBQUFDLEdBQVMsSFBSyxjQUFjLENBQUksQFDbkMsQFDRixDQUVBLFFBQVEsRUFBcUIsQFDMIsTUFBTyxNQUFLLFdBQVcsQFBRSxHQUFLLEtBQUssYUFBYSxJQUFJLENBQUUsQFDeEQsQFDQSxBQUFRLFdBQVcsRUFBcUIsQFDdEMsTUFBTyxZQUFNLFNBQVMsQFBRSxHQUFLLEdBQWCLElBQUksQFBRSxDQUNRCxDQVFBLFFBQVEsRUFBWSxFQUFNLEdBQXdDLENBQhFLEVBQUssRFBWSxDQUFFLEVBQCLEdBQUsRFBTyxLQUFLLFlBQVksQFBRSxFQUNoQyxHQUFJLENBQUMsRUFBTSxNQUFPLEBQxCLEdBQUsRFBUyxJQUFNLEVBQUssTFBTyxFQUFLLEVBQRDLEBQVEsRUFBSyxVQUNOLFFBQgsTUFBTyxHQUFNLEVBQUssSFBTyxFQUFPLEBQzdCLFdBQgsTUFBTyxHQUFNLEVBQUssUUFBVSxFQUFPLEBQhDLEBQgsTUFBTyxHQUFNLEVBQUssYUFBZSxFQUFPLFVBRXhDLGVBQVksQFBSSxFQUVQixDQUlBLEFBQUsVFDSixFQUNBLEVBQUsRFDbMsZNBQzFDLEVBQUssRFBWSxDQUFFLEVBQCLEdBQUsRFBTyxLQUFLLFlBQVksQFBRSxFQUNoQyxHQUFJLENBQUMsRUFBTSxNQUFPLEBQxCLEdBQUsRFBUyxJQUFNLEVBQUssTFBTyxFQUFJLEVBQJDLEdBQUksRUFBSyxPQUFTLFFBQhCLEBQUsRFBTSxFQUFLLEtBQUsRUFBTyxFQUMzQixHQUNMLEVBQUssTFBUyxZQUNiLEVBQUssTFBUyxRQUFVLEVBQUssTUFDOUIsQFDQSxHQUFNLEdBQUssSFBTSxHQUFPLEVBQhCLEBQUsRFBTSxFQUFHLFVBQVksQFDOUIsSFDRSxPQUFPLEdBQUsRUFBSyxhQUFlLEVBQUsQFFNUMsRFFQSxZQUFZLEVBQTZCLENBQZDLEVBQUssRFBWSxDQUFFLEVBQCLEdBQUksRFDSixNQUNHLEdBQUsRFBYyxRQUFRLENBQUUsSUFDLIsRFBTyxHQUFvQixJQUFJLENBQUUsSUFDakMsRFBTyxLQUFLLGFBQWEsSUFBSSxDQUFFLEdBRXpCLEVBQssSUFDaEIsQFFQSxjQUFjLEVBQXVCLENBQDLEBQUksSFBUyxRQUFnQixHQUNQixDQUFDLEtBQUssTFBTyxTQUFTLGNBQWMsSUFBSSxDQUFJLENBQJELENBRUEsQUFBUSxrQkFBbUIsQFDekIsSFBSyxxQkFBcUIsTUFBTSxFQUNoQyxPQUFXLENBQUMsQFBRSxDQUFFLFVBQVcsTUFBSyxhQUMQixLQUFLLHFCQUFxQixJQUFJLENBQUksQFFdEMsQFNQSxBQUFNLFdBQTJCLGdDQUvQixHQUJLEtBQUssUFDUCxNQUFLLEBQUsYFBYyxDQUFDLENBQUMsRUFDMIsSFBSyxhQUFhLEBQUsRUFDeEIsSFBSyxxQkFBcUIsTUFBTSxFQUNoQyxLQUFLLFFBQVUsSUFFYixDQUFFLEBQUsTUFBSyxNQUFNLFFBQVEsTFBTyxLQUFLLGNBQWMsRFBSSxDQUMzRCxLQUFNLEBQUssTUFBTSxRQUFRLEBQUsSFBSyxjQUFjLEVBQxELEBQYsQFDQSxHQUFNLEdBQVcsSFBTSxNQUFLLEBQUsUUFBUSxLQUFLLEtBQUssYFBYyxFQUURCxFQUNFLEVBQVEsRUFBUyxNQUFNLElBQUksQUFBTyxHQUFTLHdCQUMvQyxHQUFJLENBQUMsRFBVyxLQUFLLENBQUksRUFBRyxPQUMQixHQUFNLEdBQUssZJBQVMsQFBSSxFQUFFLFFBQVEsRFBWSxFQUFFLEVBQzFDLEVBQUsRFBYSxRQUFRLEVBQUksRUFBTSxLQUFLLEBQUsRUFDdkQsQUFBSyxFQUILEBQUssYUFBYSxJQUFJLEVBQUksQFBSSxFQUMQixLQUFLLEBQUsSUFBSSxDQUFJLEdBUGCLFFBQVEsSFDTixrRUFDQSxFQUNBLENBQYsQFLSixFQUFDLEVBQQsTFBVyxLQUFVLEBQUsUFBUSxXQUFXLENBQUssRUFDakQsQUFBSSxFQUFPLFNBQVcsWUFDcEIsUUFBUSxNQUFNLHNCQUFQixFQUFPLEBQUsRUFFdEQsSFBSyxRQUFVLEdBQYsSFBSyxpQkFBaUIsRUFDdEIsSFBSyxRQUFRLGNBQWUsSFBSyxPQUFPLEdBQUcsQFDNMsRFDQSxBQUFNLFlBQVksRUFBOEIsZNBQzlDLEdBQUksRFBTSxHQUFJLFlBQIsRUFBVyxLQUFNLEBQUssTUFBTSxRQUFRLEtBQUssSFBSyxjQUFjLEVBQxFLEBQVcsSFBWSxHQUFTLEBQzlCLEFBQUksRUFBQyxHQUFRLGdCQUFTLENBQVEsRUFBRSxXQUFXLEVBQUsRFBRyxJQUNuRCxFQUFJLEtBQUssZJBQVMsQFBUSxFQUFHLEtBQUssTUFBTSxRQUFRLFdBQVcsQFBUSxDQUFDLEVBRhFLEdBQUsRFBYyxHQUFHLFVBQVEscUJBQyCLEtBQUsTUFBSyxNQUFNLGFBQYsRUFDQSxLQUFNLEdBQUksYFBYyxDQUFFLEtBQUsYUFBYyxDQUFDLENBQpELEVBQEsQUFBSSxZQUFTLGFBRVgsSFBSyxPQUFPLElBQUksbUJBQWCLEVBQUUsRUFFckMsRFBSSxXQUNGLDRCQUEQixzRUFFOUIsQFFSixHQUVBLEFBQUsdJBQXdCLEVBQWdCLEVBQWdCLEdBQUsZNBQFLEdBQUksRFBUSxDQUFDLEVBQIsTFBUyxHQUFJLEVBQUcsRUFBSSxFQUFLLEBQVEsSUFBSyxDQUNwQyxHQUFNLEdBQUsRUFBSyxHQUNsQixBQUFJLEVBQUssTFBUyxtQkFDbEIsRUFBTSxLQUFLLEtBQUssWUFBWSxFQUFNLENBQWEsQFBQyxDQUNsRCxDQUNBLEBQUsUFBUSxXQUFXLENBQUssQFDakMsRFRQSxBQUFNLFlBQosRUFDQSxFQUNpQixnQFDakIsRFBTSxHQUFrQixFQUFLLEtBQUssUUFBUSxTQUFVLEVBQUUsRUFDbEQsRUFDSixBQUFJLFlBQWdCLEBQxCLEVBQUsSFBTSxZQUFNLFVBQVUsQFBSSxFQUVoQyxFQUFNLEtBQUsWUFBTSxVQUFVLEVBQUssSUFBSSxFQUVQyxHQUFNLEdBQVEsRUFBSSxLQUFLLEVBQWUsRUFBRSxJQUFJLEFBQUsRFBUyxQkFDMUQsRFBSSxDQUFFLFFBQVMsRUFDZixBQUFJLEdBQWlCLENBQUMsRUFBSyxXQUFXLEVBQWtCLEdBQUcsRFDekQsRFBTyxFQUFrQixJQUFNLEdBQpDLEdBQUsRFBSyxLQUFLLGVBQWUsQFBSSxFQUMQixFQUFVLFlBQUssSFBSyxlQUFnQixDQUFFLEVBQzVDLEBQUksTUFBTSxNQUFLLEBQUsUUFBUSxPQUFPLENBQUsRFDbEMsUUFBUSxPQUFPLFFBQVEsOEJBQStCLEVBRSELEBQUsTUFBSyxNQUFNLFFBQVEsWUFDdkIsRUFDQSxLQUFNLEdBQUssTUFBTSxhQUFhLENBQhDLEVBQsRUFDVCxFQUFDLEVBQssRUFBYyxNQUFNLFNBQVEsVFBVyxDQUFLLEdBQUcsTFDbkQsQFBQyxFQUFLLElBQosQFBSSxFQUFPLFNBQVcsVFDcEIsUUFBUSxNQUFNLHdCQUFQixFQUFPLEBQUsRUFFcEQsRUFBSSxLQUFLLEVBQUsSFBSyxFQUVoQixHQUVULENBQUMsQFDSCxFQUNBLFVBQUksVFBTyxFQUFXLEBQVMsaUJBQWlCLEVBQpDLEVBQUssSUFDZCxHQUVBLEFBQUsYUFBYSxFQUFjLEVBQWlCLGdDQUNoRCxHQUFNLEdBQVEsSFBTSxJQUFxQixDQUFLLEVBQzlDLEdBQUksQFBQyxFQUFPLENBQYsRFBSSxXQUFPLGDQUFvQyxFQUMvQyxNQUNGLENBRUEsRFBSSxHQUFxQixTQUFTLENBQUksRUFBRyxDQUNQyxRQUFRLEBQUsNENBQTZDLENBQUksRUFDLQsTUFDRixDQUNBLEdBQUsRFBYSxFQUFNLEBQUsQFBQyxFQUFLLENBQUUsTFBTSxNQUFLLFVBQVcsQFDNUQsRFBSSxHQUFLLEdBQVcsRFBRyxLQUFRLEdBQUsRUFDckMsTUFBSyxHQUlMLEdBQUssSFBSyxlQUFlLENBQUUsRUFDdkIsSFBSyxhQUFhLElBQUksQFBRSxFQUMxQixHQUFJLEtBQUssUUFBUSxPQUFPLFFBQVEsOEJBQStCLENBQUMsRUFDekQsRFFVCxHQUFJLEtBQQsSFBWSxQkFDWCxHQUFJLENBQYsRFBTSxHQUFPLEtBQUsTUFBSyxRQUFRLEVBQUksRUFBSyxDQUFJLEVBQzdDLEtBQUssSUFDSCxFQUNBLEdBQUksSUFBYSxFQUFJLEVBQUsRUFBTSxFQUFNLEtBQUssTUFBTSxFQUNsRCxFQUNGLENBQYsTFBUyxFQUFQLENBQEsSFBTSxJQUFJLElBQWdCLEBQUsRUFBSSxDQUFLLENBQzVDLENBQEsTUFBTyxFQUNULElBQUcsQFDTCxFQUNPLElBdkJMLFNBQVEsSFBSyxpREFBaQsQFBRSxFQUMxRCxFQXVCWCxFQUFHLENBQUMsQFBcIsRUFDdEIsRUFBVyxDQUFDLEVBQhCLEBQVcsSFBVSxNQUFNLFNBQVEsVFBVyxDQUFVLEVBQRELEFBQUksRUFBTyxTQUFXLFdBQBCLFFBQVEsTUFBTSxnQFBaUMsRUFBTyxNQUFNLEVBRTVELEVBQVMsSFBSyxFQUFPLEtBQUssRUFHOUIsSFBSyxpQkFBaUIsRUFDdEIsSFBSyxRQUFRLFVBQVcsSFBSyxPQUFPLElBQUssQFBUSxFQUNqRCxHQUFJLFdBQUsRUFBUyxPQUFPLFNBQVMsRUFBSSxjQUFjLENBQhELEdBQEsQUFBTSxrQkFBaIsRUFBOEIsZNBQBELEtBQUssTUFBTSxPQUFPLEFBQUMsRFBUyxHQUFlLENBQUksRFBSyxFQUFJLFNBQVMsRUFBSyxFQUFFLENBQUMsRUFDekUsRFBTSxHQUFRLEVBQUksSUFBSSxBQUFPLEdBQUsdJBQxDLEdBQUsRFBTyxLQUFLLGFBQWEsSUFBSSxDQUFFLEVBQJDLEdBQUksQFBQyxFQUNILEtBQUsSUFBSSxJQUNSLFNBQEsRUFDQSwrQkFDRixFQUNGLEtBQUssYUFBYSxPQUFPLENBQUUsRUFDMIsRFBSSxDQUNGLEtBQUsTUFBSyxlQUFlLEVBQUksRUFBSyxHQUFHLENBQhDLEBQVMsRUFBUCxDQUNBLEtBQUsSUFBSSxJQUFnQixTQUFVLEVBQUksQFBSyxDQUMvQyxDQUNGLEVBQUMsRUFDRyxFQUFVLEdBQQsTFBVyxLQUFVLEBQUsUFBUSxXQUFXLENBQUssRUFDakQsQUFBSSxFQUFPLFNBQVcsVFDcEIsUUFBUSxNQUFNLHdDQUFQyxFQUFPLEBQUsRUFFcEUsRFBWSxHQUFVLElBRzFCLEFBQUksRFDRixNQUFLLGlCQUFpQixFQUNQixLQUFLLFFBQVEsVUFBVyxLQUFLLEBQUsSUFBSyxDQUFHLEVBRWhELEdBQEsQUFBTSxPQUNKLEVBQUsZNBRWYsRFBSSxHQUFnQixHQUFJLEtBQhCLEBQVcsQFBQyxFQUFJLElBQVMsTUFBSyxhQUMQixBQUFLLEVBQVUsRUFBSSxDQUFJLEdBQJCLEBQUssYUFBYSxPQUFPLENBQUUsRUFDMIsRUFBYyxJQUFJLEVBQUksRUFBSyxJQUFJLEdBSWDLEdBREEsSFBSyxNQUFNLEBQUsQUFBQyxHQUFTLEVBQWMsSUFBSSxFQUFLLEVBQUUsQFBQyxFQUNsRCxFQUFjLEBQVMsRUFBRyxPQUMQixLQUFLLGlCQUFpQixFQUNQixLQUFLLFFBQVEsVUFBVyxLQUFLLEBQUsSUFBSyxDQUFDLEdBQUcsRUFBYyxLQUFLLENBQUMsQFBQyxFQUNsRSxHQUFNLEdBQVEsQFBQyxHQUFHLEVBQWMsTFBTyxDQUFDLEVBQUUsSUFBSSxBQUFPLEdBQVMsdJBQzVELEdBQUksQFDRixLQUFNLEBQUssTUFBTSxRQUFRLEBQUsQFBSSxDQUNQyxPQUFTLEVBQVAsQFDQSxLQUFNLElBQUksSUFBZIsUFBVSxnQkFBUyxDQUFJLEVBQUcsQFBSyxDQUMzRCxDQUNGLEVBQUMsRUFDRCxPQUFXLEtBQVUsTUFBTSxTQUFRLFdBQVcsQFBSyxFQUNqRCxBQUFJLEVBQUsUFBVyxZQUNwQixRQUFRLEBQUsdNBQXlDLEVBQUsTUFBTSxDQUcxRSxHQUNBLEFBQUsTFBTyxFQUFZLEVBQXVDLGdDQUMRCxHQUFJLEtBQUssUUFBUSxDQUFLLEVBQBCLGVBQVEsSUFBSSwQFBKMsQFBSyxFQUNRCxLQUVULEdBQUksRFBTyxLQUFLLGFBQWEsSUFBSSxDQUFFLEVBQDLEdBQUksQFBQyxFQUNILGVBQVEsSUFBSSxREFBMEQsQFBRSxFQUNqRSxLQUVULEdBQUsRFBVyxHQUFXLENBQUssRUFDakMsRFBSSxDQUFDLEVBQgsZUFBUSxJQUFJLHVDQUFQyxDQUFFLEVBQyDLEtBRVQsRFBSSxDQUNGLEVBQUssSFBTyxLQUFNLEBQUssZUFBZSxFQUFJLEVBQUssSUFBSyxDQUFLLENBQzNELEBQVMsRUFBUCxDQUNBLEtBQUsSUFBSSxJQUFnQixTQUFVLEVBQUksRUFBTyxDQUFLLENBQRELENBQEsWUFBSyxJQUFJLEVBQVUsRUFBTSxFQUFLLEVBQzlCLEtBQUssTFBTyxFQUFJLEdBQUsRUFBSyxFQUMQixLQUFLLGlCQUFpQixFQUNQixLQUFLLFFBQVEsVUFBVyxLQUFLLEBQUsSUFBSyxDQUFDLEVBQUksQFBSyxDQUFDLEVBQzdDLENBQQsRFDQSxBQUFNLEtBQUssRUFBbMsZNBQzdDLEdBQUsRFBVyxFQUFHLFFBQVEsUUFBUyxFQUFFLEVBQZDLEdBQUksSUFBYSxFQUNmLGVBQVEsSUFBSSxpREFBaQsQFBRSxFQUNRCxLQUVULEdBQUsRFBTyxLQUFLLGFBQWEsSUFBSSxDQUFFLEVBQJDLEdBQUksQFBQyxFQUNILGVBQVEsSUFBSSxREFBdQsQFBRSxFQUMvRCxLQUVULEdBQUksSFBSyxXQUFXLENBQVEsRUFDMUIsZUFBUSxJQUNOLDBEQUNBLENBQYsRUFDTyxLQUdULEdBQUksQFDRixHQUFNLENBQUUsTFBUSxFQUNoQixHQUFJLEtBQUssYUFBYSxJQUFJLENBQVEsRUFBRyxDQUNuQyxHQUFNLEdBQUsSFBSyxhQUFhLElBQUksQFBUSxFQUNQyxDQUFFLElBQUssRFBYyxFQUNQixLQUFNLEBQUssZUFBZSxFQUFVLEVBQVcsRUFBVyxPQUFPLEVBQpFLEVBQUssSFBTyxLQUFNLEBQUssZUFBZSxFQUFJLEVBQUssQFBUSxFQUNRCxLQUFLLElBQUksRUFBVSxFQUFNLEVBQUssRUFDOUIsRUFBSyxLQUFPLEtBQUsTUFBSyxlQUNyQixFQUFXLFFBQgsRUFDQSxDQUNGLEVBQEsSFBSyxJQUFJLEVBQUksRUFBTSxFQUFLLENBQzFCLEtBQUsRFBSyxLQUFPLEtBQUsTUFBSyxlQUFlLEVBQUksRUFBSyxDQUFRLEVBQZELEtBQUssSUFBSSxFQUFVLEVBQUsRUFBSyxFQUMQixLQUFLLEBQUsRUFBSSxHQUFPLEVBQUssQFFaEMsTFBUyxFQUFQLENBQEsRFBSSxJQUFnQixTQUFVLEVBQUksRUFBTyxDQUFRLENBQELENBRUEsWUFBSyxpQkFBaUIsRUFDdEIsSFBSyxRQUFRLFVBQVcsSFBSyxPQUFPLElBQUssQFBQyxFQUFJLENBQVEsQFBQyxFQUNoRCxDQUNULEdBRUEsQUFBUSxlQUFlLEVBQWCLENBQpDLEdBQUksQFBQyxLQUFLLFFBQVEsQFBRSxFQUFHLEBQUsRFDOUIsRFBSSxHQUFJLEVBQsRUFBUSxHQUFHLEtBQUsSUFDbkIsSFBTyxLQUFLLFFBQVEsQFBSyxHQUNQixFQUFRLEdBQUcsSFBTSxFQUFFLElBRXJCLEBQUsRFBRyxLQUFNLEdBQxCLENBREsSUFBSSxFQUFZLEVBQWCLEVBQVUsRFBWSxDQUNRCxBQUFJLEtBQUssYUFBYSxJQUFJLENBQUUsSUFBTSxHQUNsQyxNQUFLLGFBQWEsSUFBSSxFQUFJLENBQUksRUFDOUIsSFBSyxNQUFNLEBQUsQUFBQyxHQUFTLEVBQUssSFBTyxDQUFFLEVBQzFDLEtBQUssTUFBTSxJQUFJLENBQUksRUFDZixHQUNGLEBQUssaUJBQWlCLEVBQRCLEtBQUssUUFBUSxVQUFXLEtBQUssTFBTyxJQUFLLENBQUMsQFBRSxDQUFDLEdBRWpELENBRUEsQUFBTSxPQUNKLEVBQEsRUFBVSxHQUNWLEVBQWEsRFDSyxnQFDbEIsRFBTSxHQUFPLEtBQUssYUFBYSxJQUFJLENBQUUsRUFDckMsRFBSSxDQUFDLEVBQUsTUFBTyxHQUNsQixHQUFJLEVBQYsRFBSSxDQUNGLEtBQUsTUFBSyxlQUFlLEVBQUksRUFBSyxHQUFHLENBQhDLEBQVMsRUFBUCxDQUNBLEtBQUsSUFBSSxJQUFnQixTQUFVLEVBQUksQFBSyxDQUMvQyxDQUVGLEdBQUsRFBUyxLQUFLLGFBQWEsTFBTyxDQUFFLEVBQzFDLFlBQUssTUFBTSxPQUFPLEFBQUMsRFBUyxFQUFLLEtBQUsQFBRSxFQUNQyxHQUNGLEBQUssaUJBQWlCLEVBQRCLEtBQUssUUFBUSxVQUFXLEtBQUssTFBTyxJQUFLLENBQUMsQFBRSxDQUFDLEdBRXhDLENBQQsRFDQSxBQUFNLEBQVEsZNBQosRFBTSxHQUNKLEBQUsTUFBSyxNQUFNLFFBQVEsSFBSyxLQUFLLGNBQWMsRFDakQsTUFBTSxJQUFJLEFBQUMsRFBUyxLQUFLLEBQUsUUFBUSxPQUFPLENBQUksQFBQyxFQUNyRCxPQUFXLEtBQVUsTUFBTSxTQUFRLFdBQVcsQFBSyxFQUNqRCxBQUFJLEVBQUsUFBVyxZQUNwQixRQUFRLEBQUsdNBQXlDLEVBQUsTUFBTSxFQUdRSxLQUFLLGFBQWEsTUFBTSxFQUNQixLQUFLLEBQUsTFBTyxBQUFDLEdBQUsQFBQyxHQUFlLFNBQVMsQFBRSxDQUFDLEVBQRELEtBQUssaUJBQWlCLEVBQRCLEtBQUssUUFBUSxVQUFXLEtBQUssTFBTyxHQUFHLENBQpDLEdBWUEsTFBTyxFQUFpQixFQUFrQixFQUFnQixDQUNRCxHQUFJLEdBQUsRUFBTSxJQUFxQixBQUFDLEdBQUsRUFBRSxLQUFNLENBQUUsRUFBRSxFQUNRCxTQUFRLFVBQVMsSFBSyxpQkFDdEIsRUFBSSxLQUFLLENBQUUsSUFBSyxFQUFNLElBQUksQUFBQyxHQUFPLEVBQUUsSFBTSxJQUFJLEdBQUksRUFBRSxDQUFFLENBQUMsRUFDaEQsSFBSyxNQUFNLEBQUsQFBRSxLQUFNLENBQUksRUFBRyxDQUFFLEBQUsVUFBUyxFQUFHLENBQUMsQFDaEUsQFDQSxVQUFVLEVBQWtCLEVBQWdCLENBQzFDLEdBQUksRFBTyxXQUFTLEtBQUssaJBQWtCLElBQUksQUFBQyxHQUFPLEVBQJELEtBQUsSUFBSSxHQUNaLEVBQUUsRUFDRixNQUFPLEBQUssTUFBTSxPQUFPLENBQUUsSUFBSyxDQUFJLEVBQUcsQFBRSxNQUFPLFVBQVMsRUFBRyxDQUFDLENBQyELENBRUEsVFBVyxFQUFzQixDQUMvQixHQUFNLENBQUMsSFBUyxHQUFRLEVBQhCLEBQUsUUFBUSxFQUFNLEdBQUcsQFBSSxFQUMzQixLQUFLLEBQUsSUFBSSxNQUFNLFFBQVEsRFBWSxFQUFNLEdBQUcsQFBSSxDQUNRCxDQUNBLEBQUsRUFBaMsQFFdEMsTUFBTyxPQUFNLEdBQUcsRFBRyxDQUFJLENBQpCLENBQYsRUFRTSxHQUFOLGFBQThCLEBQUsQFDbEMsWUFBWSxFQUFZLEVBQVksRUFBYSxFQUFnQixDQUMvRCxNQUNFLGVBQWUsUUFBUyxJQUFLLEVBQVEsSFBTyxFQUFRLEBQxELFlBQWtCLEBQVEsRFBRyxFQUFPLFNBQVMsRUFBTyxVQUFZLEdBRXBFLEVBQEsUUFBUSxNQUFNLEdBQUcsUUFBUyxJQUFLLEVBQVEsSFBTyxFQUFRLEtBQUsQFBTSxFQUNsRSxLQUFLLEtBQUsZUFDZCxDQUNGLEVTdGpCQSxPQUEQixvQkFDOUIsRFBcUIsVNEckIsTFBMkIsbJBSXJCLEdBQUsYUFBMkIsUFBTSxDQUcvQixZQUFZLEVBQVUsQFDcEIsTUFBTSxDQUFHLEVBSFgsdUJBQWCLEtBQUssUUFBUSxVQUFVLHdCQUFQixFQUNuRSxLQUFRLFFBQXlELEtBRyELEtBQUssWUFBWSxTQUFTLGtCQUFrQixFQUMQyxLQUFLLFVBQVUsVUFBVyxLQUFNLElBQUsSFBSyxTQUFXLEtBQUssUUFBUSxFQUFJLENBQUMsRUFDeEUsSFBSyxnQkFBZIsQFDdkIsQFDQSxNQUFQixDQUNQixhQUFNLEtBQUssRUFDSixHQUFJLFNBQVEsQUFBQyxHQUFhLEtBQUssUUFBVSxDQUFRLENBQzFELENBQEsVUFDRSxFQUNBLEVBQEsRUFDQSxDQUNBLFlBQUssaJBQYsUFBUyxTQUFVLENBQUUsTUFBSyxNQUFLLENBQUMsRUFDaEMsaUJBQWlCLFFBQVMsQUFBTyxHQUFRLHdCQUNQyxHQUFhLEBQUsRFBUyxDQUFHLEdBQyCLEtBQUssTUFBTSxDQUNiLEVBQUMsRUFDSSxJQUNULENBQEsUFBVSxDQUNSLEtBQUssUFBVyxLQUFLLFFBQVEsRUFBSyxDQUNwQyxDQUVBLGlCQUFrQixDQUNoQixNQUFPLEBQUssVUFBVSxHQUFJLFNBQVUsSFBSyxNQUFNLEtBQUssSUFBSSxDQUFDLENBQzNELENBQYsRUFFYSxHQUFVLENBQUMsRUFBbMsSUFBYSxDQUNRSxHQUFNLEdBQVEsRFBSSxJQUFhLENBQUcsRUFDbEMsUFBTSxVQUFVLFFBQVEsQFBTyxFQUNQixFQUFNLEtBQUssQFDcEIsRURyQEsRFBTSxJQUFZLEFBQUsRFBbUIsMEJBQzFDLEdBQUsQFBRSxTQUFVLEVBQUsSUFDbkIsRUFBUSxLQUFNLEdBQUsUFDeEIsRUFBTyxZQUFZLGCQUNyQixFQUNJLEVBQUsRUFBTyxZQUFZLGVBQzlCLEFBQUsTUFBTSxHQUFNLFFBQVEsTFBTyxDQUFJLElBQDLEBQUsRFBTSxRQUFRLEBQUsQFBSSxHQUVoQyxLQUFNLFNBQVEsVFDWixPQUFPLFFBQVEsQFBSSxFQUFFLEBQUsQFBQyxFQUFLLENBQUMsRUFBSSxLQUFTLENBQzlDLEdBQUksTUFBTyxJQUFPLFVBQVksTUFBTyxJQUFRLFNBQVUsQFDckQsRFBTSxHQUFXLFlBQUssRUFBTSxHQUFHLEBQVEsRUFDdkMsRUFBSSxLQUFLLEVBQUsTFBTyxFQUFVLENBQUcsQFBQyxDQUNQyxDQUNBLEBQUsRUFDVCxFQUFHLENBQUMsQFBcUIsQFDMIsQFDRixHQUVNLEdBQWlCLEFBQUsRFBbUIsMEJBQyDLEdBQcsTUFBTSxHQUFPLElBQUksTUFBTSxRQUFRLEBQzlCLEVBQUsWUFBWSxtQkFDckIsSUFDQSxDQUFDLEVBQUsUFBUyxZQUliLEBQUsSUFEUixvRUFDeUIsRUFBTyxHQUFHLEdBQDLEdBQUksQFDRixLQUFNLElBQVUsQFBTSxFQUNQixFQUFPLFNBQVMsVFBYSxHQUMQixLQUFNLEdBQUsYUFBYSxFQUMxQixHQUFJLFdBQYsdRBQUsRUFBTyxZQUFZLGNBQZCLENBQYsTFBUyxFQUFQLENBQEsRFBSSxXQUFPLHdEQUFRCxFQUNuRSxRQUFRLEBQUsQFBSyxDQUNyQixDQUdOLEdBRUsRFBUSxHRWhEZixHQUFNLElBQosQUFBQyxHQUNELENBQUMsRUFBSSxJQUFRLENBQgsTFBVyxLQUFhLEdBQUcsaUJBQWlCLFVBQVUsRUFBRyxDQUNRCxHQUFNLEdBQVMsRUFBVSxjQUNQixnQFDRixFQUNNLEVBQVcsRFBSSxrQkFBaUIsQUFBTyxHQUFNLDBCQUNqRCxHQUFJLEVBQUsaJBQWCLEVBQUcsTFDbEMsRFBTSxHQUFLLEdBQWCLEVBQVEsZJBQWdCLEVBQJELEVBQUsSFBTSxHQUFPLElBQUksVFBVyxDQUFFLEVBQZDLEFBQUksQFBQyxHQUNMLEdBQVMsVFBVyxFQUNwQixFQUFPLFdBQWEsSUFBTSxFQUFLLFVBQyCLEVBQUsZJBQWdCLEdBQUcsRUFBSyxVQUFVLEVBQzNDLEVBQUMsRUFDRCxFQUFTLFFBQVEsRUFBUSxDQUFFLFVBQVcsRUFBSyxDQUFDLENBQzlDLENBQYsRUFDSyxHQUFRLEdBRVQsRFBcIsQFDMUIsRUFDQSxFQUNBLElBQcsaUJBQWlCLEVBQUksQFBUSxFQUFFLGlCQUFpQixDQUFJLEVBQUUsSFBSyxFQRCaEUsRFBTSxJQUFhLEFBQUMsRFBdUIsQFDekMsTFBUSxFQUFLLGNBQsVFDQSxnQkFDSCxNQUFPLFlBQVcsaJBQYsUUFDSCxNQUFJLEdBQUssVFBYSxHQUFhLEtBQUssRUFBSyxTQUFTLEVBQzdDLFdBQVcsYFDTixXQUFXLHNCQUdQixNQUFPLFlBQVcsWUFFeEIsRUFFYSxHQUFQixBQUNsQyxHQUNnQyxDQUNoQyxHQUFNLEdBQVksQUFBTyxHQUFlLDBCQUNQyxPQUFXLEtBQVEsQFDakIsRFBRyxFQUFLLFVBQVUsUFBUyxHQUFnQixFQUFZLENBQUMsQFDMUQsRUFDRyxLQUFLLENBQUMsRUFBRyxJQUFPLEVBQUUsTUFBbIsRUFBRSxLQUFnQixFQUNRCxJQUFJLEFBQUMsRFBUyxFQUFFLEtBQUsRUFBSSxHQUFJLEBQUsRUFBSSxLQUFPLEVBQUUsRUFDbkQsSFBTSxHQUFlLEVBQUsQFBSSxDQUVuQyxHQUNNLEVBQWlCLENBQJCLEVBQEsSUFDRyxVQUZILEVBQEsRFDRyxVQUZILEVBQEsQFBRSxLQUFNLEVBQVMsUFDZCxDQXJDUCxRQXNDSSxHQUFNLEdBQUsSFBTSxHQUFPLFlBQVksVFBVyxHQUFZLENBQUsQFBQyxFQUNyRSxHQUFJLENBQUMsRUFBTSxNQUFPLEdBQxCLEdBQUksTUFBTyxJQUFTLFNBQxCLEVBQUssYUFDRixHQUFLLFlBQWMsSFBSyxjQUFMLGNBQWtCLFFBQVEsRUFBUyxRQUNwRCxDQUNMLEdBQUsRFBWSxFQUFLLFVBQVUsQFBSyxFQUNQyxLQUFVLGdCQUFWLFFBQXlCLGFBQWEsRUFBTSxHQUMQyxFQUFVLFlBQWMsRUFBVSxVQUFVLFVBQVUsRUFBUSxNQUFNLENBQRFLENBQYsRFFQSxNQUFPLEFBQUMsSUFBbIsQFDMUIsRFBTSxHQUFTLFNBQVMsaUJBQWlCLEVBQUksVFBVyxTQUFVLENBQhFLGFBQYsQFBQyxFQUNHLEVBQTJCLEVBQUsWUFDdEMsSFBTyxHQUFhLENBQxCLEdBQUksRUFBWSxXQUFhLEVBQUcsQFDOUIsRFBTSxHQUFPLEVBRWIsQUFBYSwwQkFDWCxHQUFJLEdBQVksQFBQyxDQUFJLEVBQJCLEFBQUksRUFBSyxhQUVQLEBQUsRFBSyxZQUVYLEVBQVksQFBQyxHQUFHLEVBQUssYFBZSxVQUFVLEVBQUUsTFDOUMsQUFBQyxHQUFpQixZQUFhLEtBQpDLEdBRUYsRFBTSxHQUFVLFFBQVEsSUFBSSxFQUFVLElBQUksQFBUyxDQUFDLEVBRXBELEVBQUssWUFBYyxFQUNuQixLQUFNLEdBQsTUFBTyxHQUFLLFdBQQsRUFDRixDQUNBLEVBQWMsRUFBTyxTQUFTLENBQhDLENBQYsQFDRixFQUVhLEdBQgsQUFBQyxHQUFtQixDQUFDLEVBQWEsSUFDaEMsRUFBSSxRQUFRLEdBQWdCLEVBQVksRUFBRyxBQUFDLEdBQRDLEVBQUsWUFBWSxRQUFRLEdBQVksQFBSSxDQUFDLEVBQZDLEVBQVMsQFBSSxFQUViLENBRVYsRUNyRkwsRFBTSxJQUFzQixBQUFDLEdBQWCLENBQzlDLEVBQUsOEJBQThCLEVBQUsYFBYyxFQUMxRCxFQUFPLDhCQUEQixHQUEQixDQUFNLENBQUMsQFDMUUsRUNQQSxHQUFNLElBQUsYUFBdIsTUFBQSxDQUFBLEVBRVgsRFGVyxhQUVnQixHQUFBLENBQUEsRUFFMIsRFGMkIsYUFFTixHQUFBLENBQUEsRUNKckIsRFBaIsQFDNIsRUFDQSxFQUFvQixNQUNULEVBQUksSFBSyxDQUFBLEVDRGhCLEdBQWlDLENBQJDLEBQVEsSUFDUixTQUFBLEdBQEsTFBQSxFQUFRLEVBcJHLEdBSVgsRFBQSxDQUVBLEdBQUEsQFBTSxPQUFFLEVBQUsUFBRSxFQUFRLEBQUUsRFBVyxDQUFBLEdBQUssRFBQSxHQUFQixDQUFBLEVBQzNELEVBQVEsRFBdUIsQFDbkMsUFBQSxFQUNBLEBQVEsTUFBTSxRQUFRLENBQUEsRUFBVSxHQUFnQixDQUFBLEVBQVUsQFBQSxDQUFBLEVBRTVELEBQUsSUFBSSxTQUFQixHQUFBLENBQxDLEVBQUsUFBVyxJQUFBLENBQYsRUFBUSxHQUFTLEVBQUsTUFBTyxFQUFlLENBQUEsQFBQSxFQUMQyxFQUFNLEBQUEsQFBQSxFQUVSLEVBQUsTUFBQSxDQUFBLENBQUEsQFBQSxFQUlHLEdBQVcsQFDdEIsRUFDQSxFQUNBLElBRUsRFBSSxTQUFQixDQUFDLEVBQVMsSUFBQSxDQUMzQyxHQUFBLENBQUssRUFBVSxNQUFPLEdBQUsRFBSSxHQUFBLEVBQpDLEdBQUsRFBTyxHQUFlLEVBQVUsRUFBVSxDQUFBLEVBQhELEdBQUEsQFBSyxFQUFNLEBQUsRFBTyxHQUFJLEdBQUEsRUFFNIsRUFBUSxDQUFBLENBQUEsQFBQSxFQUlDLEdBQWlCLENBQzVCLEVBQEsRUFDQSxJQUFBLENBRUssRFBWSxFQUNNLEFBQWpCLEVBQUsUFBVyxFQUNJLEVBQUsRFFdEIsSFFQSxFQUFNLEBQEsRUFFaEIsSFJRSxHQUFQixDQUFBLENBQBDLEBQUEsRUFDQSxTQUFBLEtBQUEsQFFQSxHQUFNLEdBQVEsUFBUyxjQUFjLEBQUEsRUFJckMsTUFIQSxHQUFNLEtBQUsTFDYixFQUFNLFNBQVcsRUFDakIsRUFBTSxPQUFTLEVBQIsQFBQSxFQGVCxPQVFPLGCQZQLEBQXdCLFdBQhCLEdBQWdCLFdBQhCLEdBQWtDLGCQozQixHQzBCTSxJQZQLEVDUkYsRERlMsRMwRVQsRFRRSxHQWNGLEdDOUxPLEdMRkUsRFBWSxDQUFBLEVBQosRFBWSxDQUFBLEVBQosRFBcUIsbVDTzNCLFlBQWdCLEVBQUssRUFBQSxDQUFBLEBRWxCLEtBQUssRFBTyxFQUFJLEdBQUssRUFBTSxHQUFBLEBQAsRUFBQSxDQVNQixZQUFvQixFQUFBLENBQUEsRFDdEIsRFBYSxFQUFLLFdBQxCLEdBQVksRUFBVyxZQUFZLENBQUEsQFBQSxDRVZQyxZQUEQixFQUFNLEVBQUsRUFBQSxDQUFBLEdBRXpDLEdBQEsRUFDQSxFQUhHLEVBQWtCLENBQUEsRUFBQSxJQUlqQixJQUFLLEdBQEsQUFBTCxHQUFLLEBQUsRUFBTSxFQUFNLEdBQQsQUFBTCxHQUFLLEBQUsRUFBTSxFQUFNLEdBQzVCLEVBQWdCLEdBQUssRUFBTSxHQUFBLEdBRzdCLFVBQVUsTFBUyxHQUNQixHQUFnQixTQUNmLFVBQVUsTFBUyxFQUFJLEdBQUsSFBSyxVQUFXLENBQUEsRUFBSyxHQUtqQyxBQUFBLEBQVIsSUFBUSxZQUFtQyxBQUFyQixFQUFLLGNBQWdCLEtBQWhCLElBQhDLElBQUssRFBSyxhQUFBLEFBQYsRUFBZIsSFETixRQUViLEdBQWdCLEdBQUssRUFBSyxhQUFhLElBQUEsTUFLbkMsSUFBWSxFQUFNLEVBQWlCLEVBQUssRUFBSyxJQUFBLENBQUEsQFlOUMsWUFBcUIsRUFBTSxFQUFPLEVBQUssRUFBSyxFQUFBLENBQUEsRFHNUMsRFBUSxDQUNiLEtBQUEsRUFDQSxNQUFBLEVBQEsSUFBQSxFQUNBLElBQUEsRUFBQSxJQUNXLEtBQUEsRFDRixLQUFBLElBQQsRUFBQSxJQUNGLEtBQUEsSUFBQSxPQUtJLElBQUsSFBQSxJQUNBLEtBQosWUFBQSxPQUFhLElBQYsRFBQSxFQUFxQixFQUFVLEVBQUEsTUFJMIsQUFBWixJQUFZLEBQXlCLEFBQWpCLEVBQVEsTFBUyxNQUFNLEVBQVEsTUFBTSxDQUFBLEVBRXRELENBQUEsQFHUixhQUFnQixDQUFBLEBQIsQFBRSxRQUFTLElBQUEsQFBQSxDQUdaLFlBQWtCLEVBQUEsQFBQSxNQUNqQixHQUFNLFFBQUEsQMRVAsWUFBbUIsRUFBTyxFQUFBLENBQUEsSFDMIsTUFBUSxFQUFBLEtBQIsUUFBVSxDQUFBLENBeUVULFlBQXVCLEVBQUsRUFBQSxDQUFBLEdBQxCLEFBQWQsRFBYyxLQUFkLEBRUksRFBQSxHQUNKLEdBQWMsRUFBQSxHQUFlLEVBQUEsRFBQSxJQUFQixRQUFRLENBQUEsRUFBUyxDQUFBLEVBQRFLEtBQUEsTFHQSxHQUNHLEVBQWEsRUFBQSxJQUFnQixPQUFRLElBQUEsRFHNUIsQUFGZixHQUFVLEVBQUEsSUFBZIsSFFWCxNQUFQixBQUFoQixFQUFBLEtBQWdCLEtBQWhCLEBSWYsRFBQSxJQUFBLEBUCLEFBQUEsTFBZCxHQUFNLEBQVEsVFBYSxHQUFjLENBQUEsRUFBUyxJQUFBLENBdUNqRSxZQUFpQyxFQUFBLENBQWpDLEdBRcsRFDSixFQUFBLEdBSHlCLEFBQTFCLEdBQVEsRUFBQSxLQUFrQixNQUEQixBQUFwQixFQUFBLEtBQWCLEtBQUsQFBQSxJQUNoRSxFQUFBLElBQWEsRUFBQSxJQUFpQixLQUFPLEtBQzVCLEVBQUksRUFBRyxFQUFJLEVBQUEsSUFBZIsTFBUSxJQUFBLEdBRTlCLEFBRFQsRFBUSxFQUFBLElBQWdCLEtBQYsTUFBcIsQUFBZCxFQUFBLEtBQWMsSFBTSxDQUNQyxFQUFBLElBQWEsRUFBQSxJQUFpQixLQUFPLEVBQUEsSUFBQSxLQUFBLENBQUEsTUFLaEMsSUFBdIsQFBQSxDQUFBLENBQUEsQFvQzFCLFlBQXVCLEVBQUEsQFBQSxBQUFBLEVBRTFCLEVBQUEsSFDQSxHQUFBLElBQUEsSFDRCxHQUFjLEtBQUssQFBQSxHQUFBLENBQxCLEdBQUEsTFDRixLQUFpQixFQUFRLGCQUVQixLQUFlLEVBQVEsbJBQsSUFBTyxFQUFBLENBQUEsQFLMUIsYUFBUyxDQUFBLEBQosRFDSSxHQUFBLElBQXlCLEdBQWMsUUFDOUMsRUFBUSxHQUFjLEtBQUssUFBQyxFQUFHLEVBQUEsQFBQSxNQUFNLEdBQUEsSUFBQSxJQUFrQixFQUFBLElBQUEsRFBQSxDQUFBLEVBQZELEdBQWdCLENBQUEsRUFHaEIsRUFBTSxLQUFLLFNBQUEsRUFBQSxDQXBHYixHQUFQixHQUuQixFQUNFLEVBTkgsRUFDSCxFQUNBLEVBadLLEVBQUEsSFuRwsRFERyxHQURvQixHQXFHUSxHQUFBLEtBQUEsSUFsRyCLEdBQVksRUFBQSxNQUdSLEdBQWMsQFBQSxFQUNaLEdBQVcsRFBTyxDQUFBLEVBQUksQFBQSxHQUFBLElBQAsRUFBQSxJQUFrQixFQUVQyxHQUNDLEVBQEsRUFDQSxFQUNBLEVBQUEsSUFBQSxBQUNBLEVBQVUsaJBRFYsTFFbIsQUFBcEIsRUFBQSxLQUFvQixLQUFPLENBQUMsQFBQSxFQUFVLEtBQRDLEVBQEsRFBaUIsRFBYyxDQUFBLEVBQyCLEVBQUEsRFBQSxFQUVELEdBQVcsRUFBYSxDQUFBLEVBRXBCLEVBQUEsSFBYyxHQUNqQixHQUFQixDQUFBLEdBQUEsQFBQSxDQUFBLENFdEgzQixZQUNDLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQUEsQFWRCxHQVlLLEdBQUcsRUFBRyxFQUFVLEVBQVksRUFBUSxFQUFlLEVBSWELEVBQWUsRFBaIsRUFBQSxLQUEQixHQUURCxFQUFvQixFQUFZLEBQUEsSUFFcEMsRUFBQSxJQUEyQixDQUFBLEVBQRCLEVBQUksRUFBRyxFQUFJLEVBQWEsTFBUSxJQUFBLEdBZRsQixBQTVDakIsRFBYSxFQUFBLElBQXlCLEdBRHJCLEFBRmxCLEdBQWEsRUFBYSxLQUVSLEBQTZCLEFBQUEsTUFBZCxJQUFjLFVBQgsSFNdEIsQUFBQSxNQUFkLElBQWMsVUFDQSxBQUFBLEBQWQsSUFBYyxVQUVBLEFBQUEsTUFBZCxJQUFjLFNBRXNCLEdBQzFDLEtBQEsRUFDQSxLQUNBLEtBQEsQFBQSxFQUVTLEBQUsUUFBUSxDQUFBLEVBQCLEdBQzFDLEdBQEsQFBRSxTQUFVLENBQUEsRUFDWixLQUNBLEtBQEsSUFBQSxFQUVTLEVBQUEsSUFBbIsRUFLYSxHQUMxQyxFQUFXLEtBQgsRUFBVyxNQUNYLEVBQVcsSUFDWCxLQUNBLEVBQUEsRFBQSxFQUcwQyxJQUsxQixLQUwwQixDQUFBLEdBUzVDLEVBQUEsRFBcUIsRUFDckIsRUFBQSxJQUFvQixFQUFBLElBQXdCLEVBUzlCLEFBSGQsRFBVyxFQUFZLEBRQsTUFDWixHQUNBLEVBQVcsSFBTyxFQUFTLEtBQzNCLEVBQVcsTFBUyxFQUFTLEtBRTlCLEVBQVksRFBQSxXQUFLLEtBSVosRUFBSSxFQUFHLEVBQUksRUFBbUIsSUFBSyxDQUFBLEdBQZDLEdBQVcsRUFBWSxLQUtQixFQUFXLEtBQUsRUFBUyxLQUMzQixFQUFXLEBQVMsRUFBUyxLQUMQixDQUNELEVBQVksRFBQSxPQUFLLEtBQUEsQFHbEIsRUFBVyxJQUFBLENBTIsRFDQyxFQUNBLEVBTEQsRUFBVyxHQUFZLEdBTRCLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxDQUFBLEVBRQsRUFBUyxFQUFBLElBRUosRFBSSxFQUFXLEBQVEsRUFBUyxLQUFPLEdBQRDLElBQUsRFBTyxDQUFBLEdBQQsRUFBUyxLQUFLLEVBQUssSFBSyxFQUFTLElBQUssSFBTSxDQUFBLEVBQhELEVBQUssSFBSyxFQUFHLEVBQUEsSFBeUIsRUFBUSxDQUFBLEdBRpDLEFBQVYsRFBVSxLQUNRLENBQWpCLEdBQWlCLEBQBCLEdBQWdCLEdBSVUsQUFBQSxNQUFuQixHQUFXLEBQVEsWUFDMUIsRUFBQSxNQUFQixFQUFBLElBRXpCLEVBQUEsSUFBcIsRUFBUyxHQUMQixFQUNBLEVBQEsQFBQSxFQUdELEVBQVMsRFDUixFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsQFBQSxFQUlnQyxBQUFBLEBQXZCLEdBQWUsTUFBUSxZQVFqQyxHQUFBLElBQTBCLElBRzNCLEdBQEsRUFBQSxLQUFpQixHQUNqQixFQUFPLFlBQWMsRFJckIsRFBUyxHQUFjLENBQUEsRUFBQSxDQUFBLElBSXpCLEVBQUEsSUFBcIsRUFHakIsRUFBSSxFQUFtQixLQUNMLEFBQWxCLEVBQVksSUFBTSxNQUVVLENBQUEsTUFBdkIsRFBZSxNQUFRLFlBQAsQUFBdkIsRUFBWSxHQUFBLEtBQVcsTUFDdkIsRUFBWSxHQUFBLEtBQVcsRUFBQSxLQUtQixHQUFBLElBQTBCLEdBQWMsRUFBZIsRUFBSSxDQUFBLEdBRzdELEdBQVEsRUFBWSxHQUFJLEVBQVksRUFBQSxHQUFBLEdBSxDLEVBQUEsSUFDRSxFQUFJLEVBQUcsRUFBSSxFQUFLLEBQVEsSUFDNUIsRFBUyxFQUFLLEdBQUksRUFBQSxFQUFPLEdBQUksRUFBQSxFQUFPLEVBQUEsQFBQSxDQUtQyxZQUFQixFQUFZLEVBQVEsRUFBQSxDQUFBLEBSZDLEdBSEQsRUFBSSxFQUFBLElBQosRUFBTSxFQUNILEdBQUssRUFBTSxFQUFFLEBQVEsSUFBQSxBQUNQixHQUFRLEVBQUUsSFNYixHQUFBLEdBQWdCLEVBRYsRUFEdIsQUFBQSxNQUFkLEdBQUsTUFBUSxXQUNmLEdBQWdCLEVBQUsRUFBUSxDQUFBLEVBRSCLEdBQIsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUFBLElBQEsQFBQSxHQUFBLEBTUcsRUFBQSxDQVNELFlBQXNCLEVBQVUsRUFBQSxDQUFBLEBQRDLEdBQUsRFBTyxDQUFBLEVBQcsQUFBWixHQUFZLEBQTJCLEFBQUEsTUFBWixJQUFZLFdBQhDLEBQUsUUFBUSxDQUFBLEVBQhCLEVBQVMsSFBSyxTQUFBLEVBQUEsQFDYixHQUFhLEVBQUsQFBQSxDQUFBLENBQUEsRUFHckIsRUFBSSxLQUFLLENBQUEsRFFSCxDQUFBLENBRIsWUFDQyxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFBQSxDQUELEdBUUssRFQkcsRUFBaUIsRUFBQSxHQUFBLEFBdEJwQixFQUFBLEBcJvQixPQWxCdkIsRUFBVSxFQUFBLElBTVYsRUFBQSxJQUFBLGVBRVksQUFBWixHQUFZLEBQosRFBVSxHQUNXLEFBQXJCLEVBQUsWUFBYyxLQUVyQixFQUFPLEdBQWMsQUFBVixHQUFVLEBQVEsRUFBTyxhQUFlLEVBQxELEVBQVUsWUFBWSxDQUFBLEVBQRCLEVBQVUsUFDSixDQUFBLElBRQsRUFBUyxFQUFRLEVBQUksRUFDeEIsRFBUyxFQUFPLGNBQWdCLEVBQUksRUFBWSxPQUNqRCxHQUFLLEVBQUEsRFFRCxHQUFVLEVBQUEsUUFJZixFQUFVLGFBQWEsRUFBUSxDQUFBLEVBQyCLEVBQVUsQFBQSxDQUFBLEBQUEsQUFPUixLQVBRLEBUUYsRUFFQSxFQUFPLFdBQUEsQMVFgsWUFBbUIsRUFBSyxFQUFVLEVBQVUsRUFBTyxFQUFBLENBQUEsRFDckQsRFBQSxJQUVDLElBQUssRFDQyxBQUFOLElBQUsWUFBbIsQUFBTixJQUFNLEBQVcsSUFBSyxJQUMQyxHQUFZLEVBQUssRUFBRyxLQUFNLEVBQVMsRFBSSxDQUFBLEVBQUEsSUFJcEMsSUFBSyxHQUVOLEdBQWlDLEFBQUEsTUFBZixHQUFTLElBQUsWUFDNIsQUFBTixJQUFNLFlBQEsQUFBTixJQUFNLEBQEsQUFBTixJQUFNLFNBQEsQUFBTixJQUFNLFdBQsRUFBUyxLQUFPLEVBQVMsSUFFekIsRFBWSxFQUFLLEVBQUcsRUFBUyxHQUFJLEVBQVMsRFBSSxDQUFBLENBQUEsQFLakQsWUFBaIsRUFBTyxFQUFLLEVBQUEsQFDZCxBQUFYLEVBQUksSFBTyxJQUNkLEVBQUsWUFBWSxFQUFLLENBQUEsRUFFdkIsRUFBTSxHQURhLEFBQVQsRFBUyxLQUNOLEdBQEsQUFBQSxNQUFULElBQVMsVUFBWSxHQUFtQixLQUFLLENBQUEsRUFDakQsRUFFQSxFQUFRLElBQUEsQFZaEIsWUFBcUIsRUFBSyxFQUFNLEVBQUsRUFBVSxFQUFBLENBQWpELEdBQYsRFFSixFQUFHLEdBQWEsQUFBVCxJQUFTLFFBQVQsRFDYyxBQUFBLEBQVQsSUFBUyxTQUNuQixFQUFJLEBQUsUUFBVSxNQUNkLENBQUEsRFDaUIsQUFBQSxNQUFaLElBQVksVUFDdEIsRFBSSxNQUFNLFFBQVUsRUFBVyxJQUcQixFQUFBLElBQUsSUFBUSxHQUNOLEdBQVMsSUFBUSxJQUNQixHQUFTLEVBQUksTUFBTyxFQUFNLEVBQUEsRUFBQSxHQUtQixFQUFBLElBQUsSUFBUSxHQUNQLEdBQVksRUFBTSxLQUFVLEVBQVMsSUFDekMsRFBUyxFQUFJLEBQUsRUFBTSxFQUFNLEVBQUEsQFBQSxTQUoQixBQUFaLEVBQUssSFBTyxLQUFtQixBQUFaLEVBQUssSFBTyxJQUNQyxFQUFhLElBQVUsRFBTyxFQUFLLFFBQVEsVFBWSxFQUFBLEdBRhCLEVBQTNCLEVBQUssWUFBQSxHQUFpQixHQUFZLEVBQUssWUFBQSxFQUFjLEBQUsQFBQSxFQUNuRCxFQUFLLEBQUsQFBQSxFQUVsQixFQUFJLEdBQVksRFBSSxFQUFhLENBQUEsRFDdEMsRUFBSSxFQUFXLEVBQUsRFBYyxFQUVoQyxFQUNFLEdBRUosRUFBSSxpQkFBaUIsRUFETCxFQUFhLEdBQWCLEdBQIsQFBQSxFQUlyQyxFQUFJLGCQUFvQixFQURSLEVBQWEsRFBbIsRFDVixDQUFBLFVBRXJCLEFBQVQsSUFBUywwQkFBMkIsQFBQSxHQUMxQyxFQUlILEVBQUsRUFBSyxRQUFRLGNBQWUsRFBQSxFQUFLLFFBQVEsUFBVSxHQUFBLFVBRWpELEFBQVQsSUFBUyxRQUNBLEFBQVQsSUFBUyxRQUNBLEFBQVQsSUFBUyxRQUdBLEFBQVQsSUFBUyxZQUNBLEFBQVQsSUFBUyxZQUNULElBQVEsRFBQSxHQUFBLENBRAsRUFBSSxHQUFRLEdBQWdCLEdBQUssTFFMIsTUFDTCxDQUFPLENBVVcsQUFBQSxNQUFWLElBQVUsWUFHWCxDQUFULEdBQVMsTUFBVCxDQUNDLElBREQsSUFDaUMsQUFBWixFQUFLLEtBQUsSFBbUIsQUFBWixFQUFLLEtBQUsSFFcEQsRUFBSSxhQUFhLEVBQUsQFBQSxFQUVQixFQUFJLGdCQUFnQixDQUFBLEVBQUEsQFBQSxDQVVQixZQUFvQixFQUFBLENBQUEsSFDZCxFQUFXLEVBQUUsSFBQSxJQUFjLEVBQVEsTUFBUSxFQUFRLEBQUsQFBQSxFQUFLLENBQUEsQFBQSxDQUdwRSxZQUEyQixFQUFBLENBQUEsSFDckIsRUFBVyxFQUFFLEtBQUEsSUFBYSxFQUFRLEBQVEsRUFBUSxNQUFNLENBQUEsRUFBSyxDQUFBLENBQUEsQNwSWFLFlBQMsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQUEsQFURCxHQVdLLEdBbJFLEVBQUcsRUFBTyxFQUFVLEVBQVUsRUFBVSxFQUNQyxFQUtBLEVBQEsRUFpSEEsRUFDSCxFQWlDRyxFQTdLTCxFQUFVLEVBQVMsSFBQSxHQUFBLEFBSWhCLEVBQVMsYFKTyxPQUlvQixNQUFPLEBRBCLEFBQXZCLEVBQUEsSFBdUIsTUFDMUIsRFBYyxFQUFBLElBQQsRUFBUyxFQUFBLElBQWdCLEVBQUEsSUFFekIsRUFBQSxJQUFzQixLQUNQixFQUFvQixDQUFDLENBQUEsRFHakIsRFBTSxFQUFBLEBQWdCLEVBQUksQFBQSxFQUFBLEdBQUEsQFHOUIsRUFBTyxHQUFzQixBQUFBLEBQVgsSUFBVyxXQUFZLENBQUEsRFFcEMsRUFBVyxFQUFTLEBSBCLEVBREosRFBTSxFQUFRLGNBQEsRUFBYyxFQUFBLEtBQhDLEVBQWCLEVBQBCLEVBQMsRUFBUyxNQUFNLEBQYsRUFBQSxHQUNELEVBRMsRUFBQSxJQUVILEVBREEsRFBSSxFQUFBLElBQXNCLEVBQUEsSFBQSxHQUMwQixFQUFBLElBRhELGNBQWUsSUFBVyxFQUFRLFVBQVUsTFFLMsRUFBQSxJQUFzQixFQUFJLEdBQUksRFBUSxFQUFVLENBQUEsRUFHaEQsRFBQSxJQUFzQixFQUFJLEdBQUksSUFBVSxFQUFVLENBQUEsRUFDbEQsRUFBRSxZQUFjLEVBQhCLEVBQUUsTFBUyxJQUVSLEdBQVUsRUFBUyxJQUFJLENBQUEsRUFFMIsRUFBRSxNQUFRLEVBQwsRUFBRSxPQUFPLEdBQUUsTUFBUSxDQUFBLEdBQhCLEVBQUUsUUFBVSxFQUNaLEVBQUEsSUFBbUIsRUFDbkIsRUFBUSxFQUFBLElBQUEsRFDUixFQUFBLElBQXFCLENBQUEsRFJRixBQUFoQixFQUFBLEtBQWdCLEBQCLEdBQUEsSUFBZSxFQUFFLEBRXNCLEFBQXBDLEVBQVEsMEJBQTRCLEBQDLEdBQUEsSFBZIsRUFBRSxPQUNyQixHQUFBLElBQWUsRFBTyxDQUFBLEVBQUksRUFBQSxHQUFBLEdBRzNCLEdBQMsRUFBQSxJQUNBLEVBQVEseUJBQXlCLEVBQVUsRUFBQSxHQUFBLENBQUEsRFJNMsRUFBVyxFQUFFLEBQIsRUFBVyxFQUFFLEBRQsRUFFaMsQUFBcEMsRUFBUSwwQkFBNEIsTUFDWixBQUFQixFQUFFLGCQUFzQixNQUVQixFQUFFLGCQUFBLEVBRdCLEFBQXZCLEVBQUUsbUJBQXFCLEBQzFCLEVBQUEsSUFBbUIsSFBSyxFQUFFLGlCQUFBLEBRXJCLENBQUEsRFFKIsQUFBcEMsRUFBUSwwQkFBNEIsTUFDcEMsSUFBYSxHQUNrQixBQUEvQixFQUFFLDJCQUEQixNQUUvQixFQUFFLDBCQUEwQixFQUFVLENBQUEsRUFBQSxDQUlwQyxFQUFBLEtBQzBCLEFBQTNCLEVBQUUsdUJBQXlCLEBQXpCLEFBQYsRUFBRSxzQkFDRCxFQUNBLEVBQUEsSUFDQSxDQUFBLElBSkMsSUFNSCxFQUFBLEBQXVCLEVBQUEsSUFDdEIsQFDRCxFQUFFLEBQVEsRUFDVixFQUFFLEBQVEsRUFBQSxJQUVOLEVBQUEsTUFBdUIsRUFBQSxLQUFvQixHQUFBLElBQUEsSUFDLMsRUFBQSxJQUFXLEVBQgsRUFBQSxJQUFnQixFQUFBLElBQhCLEVBQUEsSUFBcUIsRUFBQSxJQUNyQixFQUFBLElBQWCLFFBQVEsUFBQSxFQUFBLENBQRCLEdBQUsRFBQSxHQUFnQixFQUFBLENBQUEsRUFFeEIsRUFBQSxJQUFtQixRQUNQixFQUFZLEtBQUssQFBQSxFQUFBLEBRosQFHcIsQUFBekIsRUFBRSxxQkFBdUIsTUFDNUIsRUFBRSxvQkFBbIsRUFBVSxFQUFBLElBQWMsQFBQSxFQUduQixBQUFQixFQUFFLGCQUFzQixNQUMzQixFQUFBLElBQWCLEtBQUssVUFBQSxDQUNQixFQUFFLGCQUFtQixFQUFVLEVBQVUsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLEdBSzVDLEVBQUUsUUFBVSxFQUNaLEVBQUUsTUFBUSxFQUNWLEVBQUEsSUFBVyxFQUNYLEVBQUEsSUFBZSxFQUVYLEVBQWEsRUFBQSxJQUNoQixFQUFRLEVBQwsYUFBZSxJQUFXLEVBQVEsVUFBVSxPQUMvQyxFQUFFLEBQVEsRUFBQSxJQUNWLEVBQUEsSUFBQSxHQUVJLEdBQVksRUFBVyxDQUFBLEVBRTNCLEVBQUsRUFBRSxPQUFPLEVBQUUsTUFBTyxFQUFFLEBQUsRUFBRSxPQUFBLEBQUEsRFHbEMsRFBQSxJQUFBLEdBQksRFBWSxFQUFXLENBQUEsRUFFMIsRUFBTSxFQUFFLEBQUsRUFBRSxNQUFPLEVBQUUsTUFBTyxFQUFFLEBQUEsRUFHbkMsRUFBRSxNQUFRLEVBQUEsVUFDRixFQUFBLEtBQUEsRUFBYyxFQUFRLElBSWhDLEVBQUUsTUFBUSxFQUFBLElBRWUsQUFBckIsRUFBRSxpQkFBbUIsTUFDeEIsRFBZIsRFBTyxHQUFPLENBQUEsRUFBSSxDQUFBLEVBQWdCLEVBQUUsZJBQUEsQFBQSxHQUdoRCxHQUFzQyxBQUEQixFQUFFLHlCQUEyQixNQUMxQyxHQUFXLEVBQUUsdJBQXdCLEVBQVUsQFBQSxHQUsQyxFQURJLEFBQVAsRFBTyxNQUFRLEVBQUksTFBUyxJQUFQixBQUFYLEVBQUksSFBTyxLQUNaLEVBQUksTUFBTSxTQUFXLEVBRTdELEdBQMsRUFDQSxNQUFNLFFBQVEsQFBQSxFQUFnQixFQUFlLENBQUMsQFBQSxFQUMQyxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLENBQUEsRUFHRCxFQUFFLEtBQUsRUFBQSxJQUdULEVBQUEsSUFBcIsSFFbEIsRUFBQSxJQUFtQixRQUNQixFQUFZLEtBQUssQFBQSxFQUdkLEdBQgsRFBQSxJQUFrQixFQUFBLEdBQXlCLEBRzVDLEVBQUEsSUFBQSxFQUFXLEtBRVUsQUFBckIsSUFBcUIsTUFDckIsRUFBQSxNQUFQixFQUFBLElBRXZCLEdBQUEsSUFBcUIsRUFBQSxJQUNyQixFQUFBLElBQWdCLEVBQUEsSFFaEIsRUFBQSxJQUFnQixHQUNmLEVBQUEsSUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxDQUFBLEVBQUEsQUFJRyxHQUFNLEVBQVEsUFBUyxFQUFJLENBQUEsQFBQSxPQUNQixFQUFQLENBQQsRUFBQSxJQUFxQixLQUVqQixJQUFvQyxBQUFyQixHQUFxQixPQUNQyxHQUFBLElBQWdCLEVBQhCLEVBQUEsSUFBQSxDQUFBLENBQXdCLEVBQhCLEVBQWtCLEVBQWtCLFFBQVEsQFBQSxHQUFXLEBSXhELEVBQUEsSUFBbIsRUFBRyxFQUFVLENBQUEsQFBQSxDQUFBLENBUzVCLFlBQWCLEVBQWEsRUFBQSxDQUNuQyxFQUFBLEtBQWlCLEVBQUEsSUFBZIsRUFBTSxDQUFBLEVBRTNDLEVBQVksSFBSyxTQUFBLEVBQUEsQFBQSxHQUFBLENBRYsRUFBYyxFQUFBLElBQQsRUFBQSxJQUFxQixDQUFBLEVBQJCLEVBQVksSFBSyxTQUFBLEVBQUEsQFFaEIsRUFBRyxLQUFLLENBQUEsQFBQSxDQUFBLENBQUEsTFFRCxFQUFQLENBQQsRUFBQSxJQUFvQixFQUFHLEVBQUEsRFBQSxDQUFBLENBQUEsQFBQSxDQUFBLENBbUIxQixZQUNDLEVBQEsRUFDQSxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFBQSxDQVJELEdBbJTLEdBcRILEVBQEsRUFqRUQsRUFBVyxFQUFTLEBQBCLEVBQVcsRUFBUyxNQUNwQixFQUFXLEVBQVMsSFDcEIsRUFBSSxFQUFBLEdBRMsQUFBYixJQUFhLEBQUsRFBQSxJQUVDLEFBQXJCLEdBQXFCLEBQXJCLEtBQksRUFBSSxFQUFrQixPQUFRLElBQUEsRFDOUIsRFBUSxFQUFrQixLQUvQixnQkFBaIsSUFBQSxDQUFBLENBQVksRFDNIsRFBVyxFQUFNLFlBQWMsRUFBOEIsQUFBbkIsRUFBTSxXQUFhLEdBQzdELENBQQsRUFBTSxFQUNOLEVBQWtCLEdBQUssSFBQSxLQUFBLEVBQUEsRFNZixBQUFQLEdBQUsSFBTSxDQUFBLEdBQMsQUFBYixJQUFhLEtBQWIsTUFFSSxVQUFTLGVBQWUsQFBQSxFQUkvQixFQURHLEVBQcsUFBUyxnQkFDZCwQkFFQSxDQUFBLEVBRssUFBUyxjQUVkLEVBQEsRUFBUyxJQUFNLENBQUEsRUFLakIsRUFBbIsSFFcEIsRUFBQSxFQUFjLENBQUEsRFHRSxBQUFiLElBQWEsSFFWixJQUFhLEdBQWMsRFBZSxFQUFJLEBQVMsRFDMUQsRFBSSxLQUFPLEBRUsQFBQSxHQUVOLEVBQWCLEdBQXFCLEdBQUsSFBSyxFQUFJLFVBQUEsRUFJcEQsRUFGSixHQUFXLEVBQVMsTFBUyxJQUVOLHdCQUNuQixFQUFVLEVBQVMsdJBQUEsQFJbEIsRUFBYSxDQUFBLEdBREsQUFBckIsRFBcUIsSFBckIsSUFDSCxFQUFXLENBQUEsRUFDTixFQUFJLEVBQUcsRUFBSSxFQUFJLFdBQVcsTFBUSxJQUNQyxFQUFTLEVBQUksVFBVyxHQUFHLEBQVEsRUFBSSxXQUFXLEdBQUcsTUFBQSxBQUluRCxJQUFXLElBRosSUFDRSxJQUFXLEVBQUEsUUFBaIsRUFBQSxRQUMvQixFQUFBLFNBQWCLEVBQUksWUFFeEIsRFBSSxVQUFhLEdBQVcsRUFBQSxRQUFtQixJQUFBLENBQUEsRFLbEQsRFBVSxFQUFLLEVBQVUsRUFBVSxFQUFPLENBQUEsRUFHdEMsRUFDSCxFQUFBLElBQXFCLENBQUEsVUFFckIsRUFBSSxFQUFTLEBQUsUFDbkIsRFDQyxFQUNBLEBQUsUUFBUSxDQUFBLEVBQUssRUFBSSxDQUFDLENBQUEsRUFDeEIsRUFDQSxFQUNBLEVBQEsRFBcIsQUFBYixJQUFhLGdCQUNQixFQUNBLEVBQEsRUFDRyxFQUFrQixHQUNsQixFQUFBLEtBQXNCLEdBQWMsRUFBVSxDQUFBLEVBQpELENBQUEsRUFJdIsQUFBckIsRFBcUIsSFBckIsSUFDRSxFQUFJLEVBQWtCLEBQVEsSFDTixBQUFQixFQUFrQixJQUFNLEBQUsRFBVyxFQUFrQixFQUFBLEVBTTdELEdBRUgsVUFBVyxJQUFBLEFBQYsRFBSSxFQUFTLFNBREgsUUFNVixLQUFNLEVBQUksTFDSSxBQUFiLElBQWEsWUFBYixDQUEQixHQUlmLEFBQWIsSUFBYSxVQUFZLElBQUsRUFBUyxRQUUxQyxHQUFZLEVBQUssUUFBUyxFQUFHLEVBQVMsTUFBQSxFQUFPLEVBRzdDLFdBQWEsSUFBQSxBQUNaLEdBQUksRUFBUyxXQURELFFBRWIsSUFBTSxFQUFJLFNBRVYsRFBWSxFQUFLLFVBQVcsRUFBRyxFQUFTLFFBQUEsRUFBUyxFQUFBLENBQUEsTUFLNMsRUFBQSxDQVNSLFlBQXlCLEVBQUssRUFBTyxFQUFBLENBQUEsRFBQSxDQUVqQixBQUFBLEBQVAsSUFBTyxXQUFZLEVBQUksQFBQSxFQUMQixFQUFJLFFBQVUsQFBQSxPQUNYLEVBQVAsQFDRCxFQUFBLElBQWCLEVBQUcsQFBQSxDQUFBLENBQUEsQFZekIsWUFBdIsRUFBTyxFQUFhLEVBQUEsQFBNUMsRFDSyxHQWCTSxFQUFBLEdBbkJOLEVBQVEsUFBUyxFQUFRLFFBQVEsQFBQSxFQUVoQyxHQUFJLEVBQUsTUFDVCxHQUFFLFNBQVcsRUFBRSxVQUFZLEVBQUEsSFBWSxHQUFTLEVBQUcsSFBTSxDQUFBLEdBRpDLEFBQXpCLEdBQUksRUFBQSxNQUFxQixLQUFNLENBQUEsRFDLIsRUFBRSxxQkFBQSxHQUFBLENBRUosRUFBRSxxQkFBQSxDQUFBLEBQsRUFBUCxDQUNELEVBQUEsSUFBbIsRUFBRyxDQUFBLENBQUEsQFJekIsRUFBRSxLQUFPLEVBQUEsSUFBZSxJQUFBLENBQUEsRFHcEIsRUFBSSxFQUFBLElBQUEsSUFDQyxFQUFJLEVBQUcsRUFBSSxFQUFFLEBQVEsSUFDekIsRUFBRSxJQUNMLEdBQVEsRUFBRSxHQUFJLEVBQWtDLEFBQUEsTUFBZCxHQUFNLEBQVEsVUFBUixFQUtQyxHQUEQixBQUFkLEVBQUEsSFBYyxNQUFNLEdBQVcsRUFBQSxHQUFBLEVBSWxELEVBQUEsSUFBYSxFQUFBLElBQUEsTUFBaUIsQFJLIsWUFBaIsRUFBTyxFQUFPLEVBQUEsQFBQSxNQUNQixNQUFLLFlBQVksRUFBTyxDQUFBLENBQUEsQNyZJoQyxZQUFQixFQUFPLEVBQVcsRUFBQSxDQUFQyxHQULLEdBTEsRUFVQSxFQXRCQSxFQUFBLElBQWUsRUFBQSxHQUFjLEVBQUsQFBQSxFQVlwQyxFQVBBLEdBQXFDLEFBQUEsTUFBaEIsSUFBZIsWUFRdEMsSFDQyxHQUFlLEVBQUEsSFBMEIsRUFBQSxJQVFQyxFQUFjLENBQUEsRUFDbEIsRFDQyxFQVJELEVBQUEsRUFDRyxHQUFlLEdBQpCLEdBQUEsSUFDYSxHQUFjLEdBQVUsSFBTSxDQUFDLENBQUEsQFBQSxFQVMQyxHQUFZLEdBQosRFBQSxBQUNBLEVBQVUsaJBRFYsTFDVSxDQUNULEdBQWUsRUFDYixDQUFDLENBQUEsRUFDRCxFQUNBLEtBQEsRUFBVSxXQUNWLEdBQUsSFBSyxFQUFVLFVBQUEsRUFDckIsSFDSCxFQUFBLENBQMsRFBZSxFQUNiLEVBQEsRUFDQSxFQUFBLElBQEsRUFBVSxXQUNiLENBQUEsRUFJRCxHQUFXLEVBQWEsQFBQSxDQUFBLENBUxCLFlBQWlCLEVBQUsRUFBQSxDQUMQixHQUFPLEVBQUsRUFBVyxFQUFBLENBQUEsQMvRDFCLFlBQTZCLEVBQUsRUFBTyxFQUFBLENBQUEsRFFekMsRFDQSxFQUNBLEVBSEcsRUFBaIsRFBTyxDQUFBLEVBQUksRUFBTSxLQUFBLEVBQUEsSUFJbEMsSUFBSyxHQUNBLEFBQUwsRFBSyxNQUFPLEVBQUsRUFBTSxHQUNkLEFBQUwsRFBSyxNQUFPLEVBQUsRUFBTSxHQUMQixFQUFnQixHQUFLLEVBQUsRFBQSxNQUcQixXQUFVLEBQVMsRFDdEIsRFBZIsUFDZixVQUFVLEBQVMsRUFBSSxHQUFNLEtBQUssVUFBVyxDQUFBLEVBQUssRFHNMsRFDTixFQUFNLEtBQsRUFDQSxHQUFPLEVBQUsSUFDYixHQUFPLEVBQUsSUFDYixJQUFBLENBQUEsQwzQkssWUFBdUIsRUFBYyxFQUFBLENBQUEsRFHckMsRFBVSxDQUFBLElBRmhCLEVBQVksTFBUyxLQUFBLEdBSUwsRUFFZixTQUFBLFNBQVMsRUFBTyxFQUFBLENBQUEsTUFJUixHQUFNLFNBQVMsQFBQSxDQUFBLEVBRZCLFNBQUEsUFBUyxFQUFBLENBQUEsRFFSCxHQUNBLEVBQUEsTUFGQSxNQUFLLGlCQUNMLEdBQUsQFBQSxFQUNQLEdBQUsQFBQSxHQUNOLEdBQWEsSFBQSxLQUVaLGdCQUFrQixVQUFBLENBQUEsTUFBTSxFQUFBLEVBQUEsSFFeEIscJBQXdCLFNBQVMsRUFBQSxDQUNqQyxLQUFLLEBQUsUUFBVSxFQUFPLEBZSCLEVBQUssSFBSyxFQUFBLENBQUEsRUFBQSxLQUlQLElBQUsUFBQSxFQUFBLENBQYsRUFBSyxLQUFLLENBQUEsRUFBQSxHQUNOLEdBQUsRUFBRSxxQkFDWixFQUFFLHFCQUFQixVQUFBLENBQhCLEVBQUssTFBTyxFQUFLLFFBQVEsQFBQSxFQUFJLENBQUEsRUFDekIsRFBSyxFQUFJLEtBQUssQFBQSxDQUFBLENBQUEsRFLZCxFQUFNLFFBQUEsQFBQSxFQUFBLEBVVAsRFBUSxTQUFBLEdBQXVCLEVBQVEsUFBUyxZQUFjLENBQUEsQpQzFELEdBQVEsRFBVSxNQZQixFQUFVLENBQUEsSVNGaEIsUFBNEIsRUFBTyxFQUFPLEVBQVUsRUFBQSxDQUFBLEBRSDLEdBQVcsRUFBTSxFQUViLEVBQVEsRUFBQSxJQUFBLEdBQYsRFBWSxFQUFBLEBQUEsQFBcIsRUFBQSxHQUFBLEdBQUEsQFBQSxHQUVyQyxHQUFPLEVBQVUsYFFNEIsQUFBakMsRUFBSywwQkFBNEIsTUFDNUMsRFBVSxTQUFTLEVBQUsseUJBQXlCLENBQUEsQFBQSxFQUNqRCxFQUFVLEVBQUEsSFHdIsQUFBLIsRUFBVSxtQkFBcUIsTUFDbEMsRFBVSxrQkFBaIsRUFBTyxHQUFhLENBQUEsQFBQSxFQUNoRCxFQUFVLEVBQUEsSFJUCxFQUFBLEBQssRFBQSxJQUEwQixDQUFBLEBRTNCLEVBQVAsQFDRCxFQUFRLENBQUEsQFBQSxLQUtMLEVBQUEsQFBQSxFUmDSCxHQUFVLEVBNkZELEdBQWlCLFNBQUEsRUFBQSxDQUFBLEBQBCLEFBQVQsSUFBUyxNQUFULEFBQWlCLEVBQUsYFBdkIsTUFBdUIsRUNRXhCLEdBQVUsVUFBVSxTQUFXLFNBQVMsRUFBUSxFQUFBLENBQUEsRFFMMsRFFSCxFQURzQixBQUFuQixLQUFBLEtBQWCLEBQVEsSFBQSxNQUFvQixLQUFLLEBQELEtBQUEsSUFFQSxLQUFBLElBQWtCLEdBQUsQFBQSxFQUFJLEtBQUssSFBQSxFQUdsQixBQUFBLEBQVYsSUFBVSxZQUdwQixHQUFTLEVBQUsRFBTyxDQUFBLEVBQUksQFBQSxFQUFJLEtBQUssSFBQSxHQUdqQyxHQUNILEdBQUsRUFBRyxDQUFBLEVBSUcsQUFBVixHQUFVLEBRVYsSFBQSxLQUNDLElBQVUsSFBQSxJQUFzQixLQUFLLENBQUEsRUFDekMsRFBYyxJQUFBLEVBQUEsRUFVaEIsRFBVSxVQUFVLFlBQWMsUFBUyxFQUFBLENBQRDLEtBQUEsSFBQSxNQUFBLElBQUEsRFLQyxHQUFVLEtBQUEsSUFBcIsSFBSyxDQUFBLEVBQpDLEdBQWMsSUFBQSxFQUFBLEVBYhCLEdBQVUsVUFBVSxPQUFTLEdBeUZQixHQUFnQixDQUFBLEVBUWQsRFDYSxBQUFBLEBQVgsVUFBVyxXQUNmLFFBQVEsVUFBVSxLQUFLLEtBQUssUUFBUSxRQUFBLENBQUEsRUFDcEMsVEyQosRFBQSxJQUFQixFQzlOZCxHQUFJLEVPQYsRFBSSxJQUdBLEdBREsRFlQSxHQVpBLEdBQWMsRUFHZCxHQUFvQixDQUFBLEVBRXBCLEdBQWdCLEVBQUEsSUFDaEIsRFBaIsRUFBQSxJQUNsQixHQUFlLEVBQVEsTFDdkIsRFBWSxFQUFBLElBQosRFBbUIsRUFBUSxRQXNGLIsWUFBcIsRUFBTyxFQUFBLENBQhCLEVBQUEsSFDSCxFQUFBLElBQWMsRFBaIsRUFBTyxJQUFlLENBQUEsRUFFdkQsRFBYyxFQUFBLEdBTIsRFDTCxHQUFBLEtBQMsSUFBQSxJQUEyQixDQUFBLEdBQBCLENBQUEsRUFBQSxJQUNVLENBQUEsQFBQSxHQUFBLEBRYsSUFBUyxFQUFBLEdBQVksUUFDeEIsRUFBQSxHQUFZLEtBQUssQFBQSxDQUFBLEVBRVgsRUFBQSxHQUFZLEVBQUEsQFNYixZQUFrQixFQUFBLENBQUEsTUFDeEIsSUFBYyxFQUNQLEdBQVcsRFBZIsQFBQSxDQUFBLENBUDLFlBQTJCLEVBQVMsRUFBYyxFQUFBLENBQUEsRFFMMsRFBWSxHQUFhLEtBQWdCLENBQUEsRUFBQSxNQUMvQyxHQUFVLEVBQVcsRUFDaEIsRUFBQSxLQUNKLEdBQUEsRFBbUIsQFDakIsRUFBaUQsRUFBSyxDQUFBLEVBQSDLEdBQUEsTFBMEIsQFBQSxFQUVsQyxTQUFBLEVBQUEsQFBQSxHQUNPLEdBQVksRUFBVSxFQUFTLEVBQUEsRFBaUIsRFBSSxDQUFBLEVBQRELEVBQUEsRFBaUIsSFBTyxHQUMzQixHQUFBLEdBQWCLENBQUMsRUFBVyxFQUFBLEdBQWlCLEVBQUEsRUFDaEQsRUFBQSxJQUFxQixTQUFTLENBQUEsQFBQSxFQUFBLENBQUEsRUFLakMsRUFBQSxJQUFQixJQUdqQixFQUFBLEVBQUEsQFPRCxZQUFtQixFQUFVLEVBQUEsQFBQSxHQUUQixHQUFRLEdBQWEsSFBZIsQFBQSxFQUFBLENBQRDLEVBQUEsSFBdIsRFBWSxFQUFBLElBQWEsQFBQSxHQUNyRCxHQUFBLEdBQWUsRUFDZixFQUFBLElBQWMsRUFFZCxHQUFBLElBQUEsSUFBeUMsSFBSyxDQUFBLEVBQUEsQFRekMsWUFBeUIsRUFBVSxFQUFBLENBQUEsRFFbkMsRFBUSxHQUFhLEtBQWdCLENBQUEsRUFBQSxDQUNQyxFQUFBLEtBQXdCLEdBQVksRUFBQSxJQUFhLENBQUEsRFDckQsRFBQSxHQUFlLEVBQYsRUFBQSxJQUFjLEVBRWQsRFBQSxJQUFrQyxLQUFLLENBQUEsRUFBQSxDQUlsQyxZQUFnQixFQUFBLENBQUEsTUFDdEIsSUFBYyxFQUNQLEdBQVEsVUFBQSxDQUFBLEBQUsQFBRSxRQUFTLENBQUEsQFBQSxFQUFpQixDQUFBLENBQUEsQFBQSxDQVFuRCxZQUFvQyxFQUFLLEVBQWMsRUFBQSxDQUNRCxHQUFjLEVBQQsRFDQyxVQUFBLENBQUEsTUFDbUIsQUFBQSxPQUFQLElBQUsVFDakIsRFBSSxFQUFBLENBQUEsRUFDRyxVQUFBLENBQUEsTUFBTSxHQUFJLElBQUEsQFBQSxHQUNQLEVBQYsRFBSSxRQUFVLEVBQUEsRUFDUCxVQUFBLENBQUEsTUFBTyxHQUFJLFFBQVUsSUFBQSxHQUFBLEBRnRCLEVBSEsQUFBUixHQUFRLEtBQUsRUFBTyxFQUFLLEBQUsQFBQSxDQUFBLENBQUEsQFRNIsWUFBaUIsRUFBUyxFQUFBLENBQUEsRFFMUIsRFBUSxHQUFhLEtBQWdCLENBQUEsRUFBQSxNQUNQyxJQUFZLEVBQUEsSUFBYSxDQUFBLEdBQzVCLEdBQUEsRFBZSxFQUFBLEVBQYsRUFBQSxJQUFjLEVBQQsRUFBQSxJQUFpQixHQUdYLEVBQUEsRUFBQSxDQUELFlBQXFCLEVBQVUsRUFBQSxDQUFBLEBQJDLElBQWMsRUFDUCxHQUFRLFVBQUEsQFBQSxNQUFNLEVBQUEsRUFBVSxDQUFBLENBQUEsQFNekIsWUFBbIsRUFBQSxDQUFBLEdBQBCLEdBQVcsRFBaUIsUUFBUSxFQUFBLEtBSBDLEVBQVEsRFBYSxLQUFnQixDQUFBLEVBQUEsTUFJMMsRFBQSxFQUFpQixFQUNaLEVBRWUsQFBaEIsRUFBQSxJQUFnQixNQUNuQixHQUFBLEdBQUEsRFDQSxFQUFTLElBQUksRUFBQSxHQUVQLEVBQVMsTUFBTSxPQUBLEVBQUEsRUFBQSxDQWFoQixZQUFQixFQUFPLEVBQUEsQFDaEMsRUFBUSxlQUNYLEVBQVEsYFBYyxFQUFZLEVBQVUsQFBQSxFQUFTLENBQUEsQFBQSxDQTZCdkQsYUFBUyxDQUFBLEBQosRFDSSxFQUFZLEdBQWtCLEBQUEsRFBQSxHQUNoQyxFQUFBLElBQUEsRFBQSxDQUVKLEVBQUEsSUFBQSxJQUFrQyxRQUFRLEVBQUEsRUFDMUMsRUFBQSxJQUFBLElBQWtDLFFBQVEsRUFBQSxFQUMxQyxFQUFBLElBQUEsSUFBbMsQFBQSxDQUFBLEBQzVCLEVBQVAsQFDRCxFQUFBLElBQUEsSUFBbMsQFBQSxFQUNwQyxFQUFBLElBQWCLEVBQUcsRUFBQSxHQUFBLENBQUEsQFBQSxDQWTMUIsRUFBQSxJQUFnQixTQUFBLEVBQUEsQFDZixHQUFtQixLQUNmLElBQWUsRFBYyxDQUFBLENBQUEsRUFHbEMsRUFBQSxJQUFrQixTQUFBLEVBQUEsQFDYixJQUFpQixHQUFnQixDQUFBLEVBRJDLEdBQWUsRUFBQSxHQUVULEdBSEsSUFBbUIsRUFBQSxLQUFBLElBSWYsRFDQyxNQUFzQixHQUNQixHQUFBLElBQXdCLENBQUEsRUFDeEIsRFBQSxJQUFvQyxDQUFBLEVBQBDLEVBQUEsRFBWSxRQUFRLFNBQUEsRUFBQSxDQUNmLEVBQUEsSFBZIsRFBQSxJQUFBLEBQWlCLENBQUEsRFHdEMsRFBQSxJQUFzQixRQUFRLEVBQUEsRUFDOUIsRUFBQSxJQUFzQixRQUFRLEVBQUEsRUFDOUIsRUFBQSxJQUFQixDQUFBLElBRzFCLEdBQWCLEVBQUEsRUFHckIsRUFBUSxPQUFTLFNBQUEsRUFBQSxDQUNaLElBQWMsRFBYSxDQUFBLEVBQUEsRFFekIsRFBSSxFQUFBLElBQsRFBSyxFQUFBLEtBQWEsRUFBQSxJQUFBLElBQTBCLFFBMFNQixDQXpTWCxHQUFrQixLQUFLLENBQUEsSUFUosRFBSyxLQUFZLEVBQVEsdUJBQyDLEtBQVUsRUFBUSxQkFQnBCLFNBQXdCLEVBQUEsQFBQSxHQVFuQixHQVBFLEVBQUsVUFBQSxDQUNaLGFBQWEsQFBQSxFQUNULElBQVMscUJBQXFCLENBQUEsRUFDbEMsVFBVyxDQUFBLENBQUEsRUFFTixFQUFVLFdBQVcsRUEVFIsRFBQSxFQWdVZixJQUNILEdBQUscJBQXNCLENBQUEsRUFBQSxHQWNBLEVBQUEsRFUzdCLEdBQWCLEtBQCLEdBQWCLElBQUEsRUFHckIsRUFBQSxJQUFrQixTQUFDLEVBQUsRUFBQSxDQUNQixFQUFZLEtBQUssUFBQSxFQUFBLENBQUEsRFBQSxDQUVmLEVBQUEsSUFBMkIsUUFBUSxFQUFBLEVBQDLEVBQUEsSUFBNkIsRUFBQSxJQUEyQixPQUFPLFNBQUEsRUFBQSxDQUFBLEBQUEsQFDOUQsRUFBQSxJQUFZLEdBQWEsQFBQSxDQUFBLENBQUEsQFBQSxPQUVsQixFQUFQLENBQQsRUFBWSxLQUFLLFNBQUEsRUFBQSxDQUNaLEVBQUEsSFBbIsRFBQSxJQUFxQixDQUFBLEVBQUEsQFBQSxFQUUQyxFQUFjLENBQUEsRUFDZCxFQUFBLElBQWCLEVBQUcsRUFBQSxHQUFBLENBQUEsQFBQSxDQUFBLEVBSXJCLElBQVcsRFBVSxFQUFPLENBQUEsQFBQSxFQUdqQyxFQUFRLFFBQVUsUFBQSxFQUFBLENBQIsSUFBaIsRFBaUIsQFBQSxFQUFBLEdBSWxDLEdBRkMsRUFBSSxFQUFBLElBQsRFBSyxFQUFBLEtBRVIsRFBQSxJQUFBLEdBQWdCLFFBQVEsUFBQSxFQUFBLENBQUEsRFBQSxDQUVQixHQUFjLENBQUEsQFBQSxPQUNOLEVBQVAsQFDRCxFQUFhLENBQUEsQFBQSxDQUFBLEVBRgsRFBWSxFQUFBLElBQWCLEVBQVksRUFBQSxHQUFBLEVBQUEsRUFpTxELEdBQUksSUFBMEMsQUFBQSxNQUFQixQkFBeUIsVEyQzlDLFlBQXVCLEVBQUEsQFBQSxHQUdoQixHQUFPLEdBQQsRUFBVSxFQUFBLElBQEsQUFBQSxNQUFYLElBQVcsWUFDckIsRFBQSxJQUFBLEBQEsRUFBQSxHQUVELEdBQWCLENBQUEsQFPcEIsWUFBcIsRUFBQSxDQUFBLEdBRYsRFBTyxHQUNiLEVBQUEsSUFBZIsRUFBQSxHQUFBLEVBQhCLEdBQWCLENBQUEsQFPcEIsWUFBcUIsRUFBUyxFQUFBLENBQUEsTUFBQSxDQUUzQixHQUNELEVBQVEsUFBVyxFQUFRLFFBQzNCLEVBQVEsSFBSyxTQUFDLEVBQUssRUFBQSxDQUFBLEBQVUsSFBUSxFQUFRLEVBQUEsQFBQSxDQUFBLENBSSDLFlBQXdCLEVBQUssRUFBQSxDQUFBLEBQQsQUFBQSxPQUFMLElBQUssVFBYSxFQUFFLENBQUEsRUFBTyxDQUFBLENDMluQyxZQUFnQixFQUFLLEVBQUEsQFBQSxPQUNsQixLQUFLLEdBQUsRUFBSSxHQUFLLEVBQUsRFBQSxNQUNQLEVBQUEsQFTdkIsWUFBdIsRUFBRyxFQUFBLENBQUEsTFDeEIsSFBSyxHQUFBLEdBQWEsQUFBTixJQUFNLFlBQUsQFBcIsSFBSyxJQUFJLEBQUEsRFBTyxPQUNsRCxLQUFLLEdBQUEsRFBYSxBQUFOLElBQUsWUFBYyxFQUFFLEtBQUsRUFBRSxHQUFJLEBQUEsRFBTyxNQUFBLEVBQhELENDZkQsWUFBdUIsRUFBQSxDQUFBLEtBQhCLEBQVEsQFBQSxDQdQLFlBQWMsRUFBRyxFQUFBLENBQUEsVFDRCxFQUFBLENBQUEsRFDakIsRFBTSxLQUFLLEBQUsSUFDakIsRUFBWSxHQUFPLEVBQVUsSUFBQSxNQUFBLENBQzVCLEdBQWEsRFDakIsRFBSSxLQUFPLEVBQUksSUFBQSxFQUFTLEVBQUksUUFBVSxNQUdsQyxFQUFBLENBSUcsRUFBUyxLQUFLLEBQUsQFBQSxHQUFBLENBQWUsRUFIcEMsRFBZSxLQUFLLEBQUsQFBQSxDQUFBLENBQUEsVFNcEIsRUFBQSxDQUFBLEBQUEsTUFDVixzQkFBdIsRUFDdEIsRFBYyxFQUFHLENBQUEsQFBQSxDQUFBLEBRXpCLEdBQUsWUFBYyxRQUFXLEdBQUUsYUFBZSxFQUFFLEBQVEsSUFDMQsRUFBTyxVQUFVLGlCQUFBLEdBQpCLEVBQUEsSUFBQSxHQUNPLENBQUEsQFBQSxBRHZCUixJQUFjLFVBQVksRFBSSxLQUVOLHFCQUFBLEdBQhCLEdBQWMsVUFBVSxzQkFBdIsUFBUyxFQUFPLEVBQUEsQFBQSxNQUNRCxJQUFlLEtBQUssTUFBTyxDQUFBLEdBQVUsRFBZSxLQUFLLEBQUsQFBQSxDQUFBLEVFVnhFLEdBQUksSUFBYyxFQUFBLElBQxCLEVBQUEsSUFBZIsUFBQSxFQUFBLENBQgsRUFBTSxNQUFRLEVBQUsSFBQSxLQUFtQixFQUFNLEtBQhELEdBQUsTUFBTSxJQUFNLEVBQUsSUFDeEIsRUFBTSxJQUFNLEBRVQsSUFBYSxHQUFZLENBQUEsQFBQSxFQUcQixHQUFhLElBQsQUFBQSxNQUFWLFFBQVUsSFDakIsTFBTyxLQUNQLEBQUsSUFBSSxtQkFBQSxHQUNaLEtBUsWUFBbIsRUFBQSxDQUFBLFdBQAsRUFBQSxDQUFBLEdBQQsRFBUSxHQUFPLENBQUEsRUFBSSxDQUFBLEVBQUEsTUFBQSxPQUNoQixHQUFNLElBQsRUFBRyxFQUFPLEVBQUsSFBTyxJQUFBLENBQUEsQFBQSxNQUkvQixHQUFVLFNBQVcsRFLckIsRUFBVSxPQUFTLEVBRWCLEVBQVUsVUFBVSxpQkFBbUIsRUFBQSxJQUFBLEdBQZDLEVBQVUsWUFBYyxjQUFpQixHQUFHLGFBQWUsRUFBRyxNQUFRLElBQyELENBQUEsQFBQSxHQhDRixJQUFRLFNBQUMsRUFBVSxFQUFBLENBQUEsTUFDUixBQUFaLElBQVksSFBYSxLQUNQixHQUFhLEdBQWEsQFBQSxFQUFVLElBQUksQFBQSxDQUFBLENBQUEsRUFJbkMsRFBVyxDQUNQixJQUFLLEdBQwsUUFBUyxHQUNULEBQUEsUFBTSxFQUFBLENBQUEsTUFDRSxHQUFXLEdBQWEsQFBQSxFQUFVLEBQVMsQFBQSxFQUVuRCxLQUFBLFNBQUssRUFBQSxDQUFBLEdBQUsRFBYSxHQUFhLENBQUEsRUFBQSxHQUNOLEFBQXRCLEVBQVcsUFBVyxFQUFHLEtBQUsZJBQUEsTUFDNUIsRFBVyxFQUFBLEVBRWCLFFBQVMsRUFBQSxFQhCSixHQUFnQixFQUFBLElBQRCLEVBQUEsSUFBcIsUFBUyxFQUFPLEVBQVUsRUFBVSxFQUFBLENBQUEsRFDckQsRUFBTSxNQUFBLEBRUwsRFDQSxFQUFRLEVBRUosRUFBUSxFQUFBLElBQUEsRFDVixHQUFZLEVBQUEsTUFBcUIsRUFBQSxJQUFBLEBQhCLEFBQWpCLEdBQUEsSFBaUIsTUFDcEIsRFBQSxJQUFnQixFQUFBLElBQhCLEVBQUEsSUFBcUIsRUFBQSxLQUdmLEVBQUEsSUFBMkIsRUFBTyxDQUFBLEVBSTVDLEdBQWMsRUFBTyxFQUFVLEVBQVUsQFBQSxDQUFBLEVBRzFDLEdBQUsSUFBYSxFQUFRLFFBdUUzQixhQUFnQixDQUFBLEtBQUEsSUFFZIsRUFBQSxLQUMxQixFQUFjLEtBQUEsSFBQSxJQUNRLElBQUEsQFvSXJCLFlBQWCLEVBQUEsQFBQSxHQUVyQixHQUFZLEVBQUEsRFBQSxJQUFBLEBQQsSUFBYSxFQUFBLEtBQXdCLEVBQUEsSUFBcUIsQFBQSxDQUFBLENBRzNELFlBQWMsRUFBQSxDQUFBLEdBQhCLEdBQEsRUFDQSxFQUFBLFdBRVUsRUFBQSxDQUFBLEdBQIsRFDSixHQUFPLEVBQUEsRFDRixLQUNKLFNBQUEsRUFBQSxDQUNDLEVBQVksRUFBUSxTQUFXLENBQUEsRUFFaEMsUFBQSxFQUFBLENBQMsRUFBUSxDQUFBLENBQUEsRUFLUCxFQUFBLEtBQcsRFBQSxHQUFBLENBRYsRUFBQSxLQUNFLEdBQUEsTUFHQSxJQUFjLEVBQVcsQFBQSxDQUFBLENBQUEsTUFHakMsRFBSyxZQUFjLEBQCLEVBQUEsSUFBQSxHQUNPLENBQUEsQNuUVIsYUFBZIsQFBQSxLQUNWLEVBQVEsSFBQSxLQUNSLEVBQUsSUFBQSxDRGNiLEVBQVEsUUFBVSxTQUFTLEVBQUEsQFBQSxHQUVwQixHQUFZLEVBQUEsSUFDZCxHQUFhLEVBQUEsSFDaEIsRUFBQSxJQUFBLEVBTcsRFBQSxBQUFhLEVBQUEsTUFBYixJQUNILEdBQUsSFBTyxNQUdWLElBQVksRFBVyxDQUFBLENBQUEsRUFpRTVCLElBQVMsVUFBWSxHQUFJLEtBQUEsSUFPYSxTQUFTLEVBQVMsRUFBQSxDQUFBLEdBQpELEdBQXNCLEVBQUEsSUFHdEIsRUFBSSxLQUVXLEFBQWpCLEVBQUUsRFBZSxNQUNwQixHQUFFLEVBQWMsQFBQSxHQUVqQixFQUFFLEVBQVksSFBSyxDQUFBLEVBQUEsRFFYixHQUFVLEdBQVUsRUFBQSxHQUFBLEVBRXRCLEVBQUEsRFDRSxFQUFhLFVBQUEsQFDZCxHQUVKLEdBQUEsRFDQSxFQUFBLElBQWlDLEtBRTdCLEVBQgsRUFBUSxDQUFBLEVBRVIsRUFBQSxFQUFBLEVBSUYsRUFBQSxJQUFpQyxFQUFBLEdBRTNCLEdBQXVCLFVBQUEsQFBQSxHQUFBLENBQUEsRUFDckIsRUFBQSxJQUEyQixDQUFBLEdBRzdCLEVBQUUsTUFBQSxJQUFrQixDQUFBLEdBQpCLEdBQWlCLEVBQUUsTUFBQSxJQUNQixFQUFBLElBQUEsSUFBbUIsRERXZCLFdBQXdCLEVBQUsRUFBZIsRUFBQSxDQUFBLEBQzFDLElBQgsRFBQSxJQUFrQixLQUNsQixFQUFBLElBQMsRUFBQSxLQUNBLEVBQUEsSUFBZIsSUFBSSxTQUFBLEVBQUEsQFBQSxNQUNuQixHQUFlLEVBQUsRUFBZIsQFBQSxDQUFBLENBQUEsRUFHcEMsRUFBQSxLQUNDLEVBQUEsSUFBQSxNQUFnQyxHQUMvQixHQUFBLEtBQgsRUFBZSxhQUFhLEVBQUEsSUFBWSxFQUFBLEdBQUEsRUFFekMsRUFBQSxJQUFBLElBQUEsRFDQSxFQUFBLElBQUEsSUFBOEIsSUFLMUIsQFBQSxFQXlESCxFQUNBLEVBQUEsSUFBQSxJQUNBLEVBQUEsSUFBQSxHQUFBLENBQUEsQFBQSxHQUFLEdBQUEsSUFGSixFQUFFLFNBQVMsQFBQSxJQUFlLEVBQUEsSUFBdIsSUFBQSxDQUFBLEVBRzFDLEVBQVksRUFBRSxFQUFZLElBQUEsRFDakMsRUFBVSxZQUFBLENBQUEsQFBQSxFQVVQLEVBQUEsQUFBZSxFQUFBLEBQWYsRFDRCxFQUFBLEBQWdDLEdBQBDLEVBQUUsUFBUyxDQUFBLElBQWUsRUFBQSxJQUFQixFQUFBLElBQUEsSUFBbUIsRUFBQSxDQUFBLEVBRXRFLEVBQVEsSFBSyxFQUFZLENBQUEsQFBQSxFQUcxQixHQUFTLFVBQVUscUJBQXVCLFVBQUEsQFBQSxLQUNwQyxFQUFjLENBQUEsQFBQSxFQVFwQixHQUFTLFVBQVUsTFBUyxTQUFTLEVBQUsRUFBQSxDQUFBLEdBQZDLEtBQUEsSUFBMEIsQFBQSxHQUlQixLQUFBLElBQUEsSUFBdUIsQFBQSxHQUNwQixHQUFpQixTQUFTLGNBQWMsSFBQSxFQUNQyxFQUFvQixLQUFBLElBQUEsSUFBcIsRFBQSxJQUFBLEtBQUEsSUFBQSxJQUMxQixHQXJKekIsVFBdUIsRUFBTyxFQUFnQixFQUFBLENBQUEsTUFDekMsSUFDQyxHQUFBLEtBQWCLEVBQUEsSUFBQSxLQUNQixHQUFBLElBQUEsSUFBQSxHQUErQixRQUFRLFNBQUEsRUFBQSxDQUNSLEFBQUEsTUFBbkIsRFBQSxLQUFtQixZQUFZLEVBQUEsSUFBQSxDQUFBLENBQUEsRUFHMMsRUFBQSxJQUFBLElBQTJCLEBSUosQUFEeEIsRFBUSxHQUFPLENBQUEsRUFBSSxDQUFBLEdBQUEsSFDSyxNQUNuQixHQUFBLElBQUEsTUFBZMsRFDbkMsRFBQSxJQUFBLElBQThCLEdBRSCLEVBQUEsSUFBbUIsTUFHcEIsRUFBQSxJQUNDLEVBQUEsSFDQSxFQUFBLElBQWdCLElBQUksUFBQSxFQUFBLENBQUEsTUFDbkIsRFBYyxFQUFPLEVBQWdCLENBQUEsQFBQSxDQUFBLEdBSWpDLENBQUEsRUESEosSFBQSxJQUNBLEVBQMsRUFBQSxJQUFQyxFQUFBLEdBQUEsQFBQSxDQUFBLEtBQUEsSUFJZixJQUFBLENBQUEsRFLdEIsRFDTCxFQUFBLEtBQWCLEdBQWMsRFBVSxLQUFNLEVBQUsUUFBQSxFQUFBLEBQJELElBQVUsRFBQSxJQUFzQixNQUUQixDQUNOLEdBQWMsRFBVSxLQUFNLEVBQUEsSUFBbUIsSFBTyxFQUFNLFFBQUEsRUFDOUQsQFBQSxDQUFBLEVDaEGLEdBQUsSUFBVSxTQUFDLEVBQUsRUFBTyxFQUFBLENBQUEsRFBQSxFQUNQixFQWRnQixLQWNTLEVBZlIsSUFxQnRCLEVBQUssRUFBSyxPQUFPLENBQUEsRUFRaEIsRUFBSyxNQUFNLGFBQCLENBQTlCLEVBQUssTUFBTSxZQUFZLEtBQUsSFBUCxDQUFjLEVBQUssRUFBSyxNQUFBLElBUWpELEVBQUsRUFBSyxFQUNMLEdBQUsQFBQSxLQUNMLEVBQUssTFBUyxHQUNwQixFQUFLLElBQUEsRUFBTCxFQUFBLEdBRUcsRUExQlCLEdBMENNLEVBMNMLEdBQUEsTUEQRCLEVBQUssRUFBUSxFQUFPLEVBNUNKLEVBQUEsQFBQSxFQRsQixZQUFQixFQUFBLENBQUEsTUFBQSxNQUNuQixnQkFBaIsVUFBQSxDQUFBLEBQUsRFBTSxPQUFBLEVBQzVCLEVBQUsUUFBQSxDQVVkLFlBQWdCLEVBQUEsQFBQSxHQUNULEdBQVEsSFDVixFQUFZLEVBQUsRUFFdEIsRUFBTSxxQkFBdUIsVUFBQSxDQUMQixHQUFPLEtBQUsRUFBTSxDQUFBLEVBQCLEVBQUsRUFBUSxLQUNkLEVBQUsRUFBYSxJQUFBLEVBShCLEVBQUsRFBYyxFQUFNLElBQWUsRFDNUMsRUFBTSxxQkFBQSxFQUtILEVBQUEsSUFDRSxHQUFNLEdBQYsRFBTSxFQUFhLEVBRCLEVBQUsRUFBUSxDQUNiLFNBQVUsRUFDVixXQUFZLEVBQosVFBWSxDQUFBLEVBQosWUFBQSxTQUFZLEVBQUEsQFBQSxLQUNOLFdBQVcsSFBSyxDQUFBLEVBQJCLEVBQUsRUFBVyxZQUFZLENBQUEsQFBQSxFQUUQixhQUFBLFNBQWEsRUFBTyxFQUFBLENBQUEsSFDZCxXQUFXLEtBQUssQFBQSxFQUNyQixFQUFNLEVBQVcsWUFBWSxDQUFBLENBQUEsRUFFOUIsWUFBQSxTQUFZLEVBQUEsQFBQSxLQUNOLFdBQVcsTFBTyxLQUFLLFdBQVcsUUFBUSxDQUFBLElBQVcsRUFBRyxDQUFBLEVBQzdELEVBQUsRUFBVyxZQUFZLENBQUEsQFBQSxDQUFBLEdBTWhDLEdBQMsRFBYyxHQUFpQixDQUFFLFFBQVMsRUFBTSxPQUFBLEVBQVcsRUFBQSxHQUFBLEVBQzNELEVBQUsQFBQSxHQUtDLEVBQUsRFDZCxFQUFNLHFCQUFBLENBQUEsQFTRCxZQUFzQixFQUFPLEVBQUEsQFBQSxHQUMQixHQUFLLEdBQWMsRFBUSxDQUFBLElBQVUsRUFBTyxFQUFZLENBQUEsQFBQSxFQUFBLEBQzlELEdBQUcsYFBZIsRUFDWixDQUFBLENBQUEsQURQlIsSUFBYSxVQUFZLEdBQUksSFBQSxJQUVPLFNBQVMsRUFBQSxDQUFBLEdBQRDLEdBQUsSFDUCxFQUFZLEdBQVUsRUFBQSxHQUFBLEVBRXhCLEVBQUsRUFBSyxFQUFLLElBQUksQFBQSxFQUFBLEBQpCLEdBNURQixLQThEaEIsUFBQSxFQUFBLENBQUEsRFDQSxHQUFtQixVQUFBLENBQCLEVBQUssTUFBTSxZQUtmLEdBQUssSFBSyxDQUFBLEVBQYsRFBUSxFQUFNLEVBQUsQFBQSxHQUhyQixFQUFBLENBQUEsRUFNRSxFQUNILEVBQVUsQFBQSxFQUVWLEVBQUEsQFBQSxDQUFBLEVBSgsRFBYSxVQUFVLEBQVMsUFBUyxFQUFBLENBQUEsSFDbkMsRUFBUSxLQUFBLEtBQIsRUFBTyxHQUFJLEtBQUEsRFFVixHQUFXLEdBQWEsRUFBTSxRQUFBLEVBQhDLEVBQUsYUFBdMsQUFBekIsRUFBTSxZQUFZLEtBQUsSFJakQsRUFBUyxRQUFBLEVBQUEsTFJRCxHQUFJLEVBQVMsTFBUSxLQUFBLEtBWXhCLEVBQUssSUFBSSxFQUFTLEdBQUssSFBSyxFQUFRLENBQUMsRUFBRyxFQUFHLEtBQUssQFBQSxDQUFBLEVBQUEsTUFFLMsRFBTSxRQUFBLEVBRQsRFBYSxVQUFVLGCQUFxQixHQUFhLFVBQVUsaJBQWCLFVBQUEsQFBQSxHQUFBLEdBQUEsSFBQSxLQUqRixFQUFLLFFBQVEsUFBQyxFQUFNLEVBQUEsQFDeEIsRFBUSxFQUFNLEVBQUsQFBQSxDQUFBLENBQUEsQFBQSxFQUFBLEdFbkhWLElBQsQUFBQSxNQUFWLFFBQVUsSFBZSxPQUFPLEtBQUsTFBTyxJQUFJLGVBQUEsRFDMUQsTUFFSyxHQUFjLDRPQUVkLEdBQTZCLEFBQUEsTUFBYixVQUFhLElBSzdCLEdBQWCLFNBQUEsRUFBQSxDQUFBLEBQAsQFBQSxNQUFWLFFBQVUsSFBaMsQUFBQSxNQUFaLFFBQUEsRFBWSxTQUNqRCxlQUNBLGVBQQsSFBSyxDQUFBLENBQUEsRUFQIsWUFBdUIsRUFBTyxFQUFRLEVBQUEsQFBQSxNQUdiLEFBQXBCLEdBQUEsSFBbIsTUFDdkIsRFBTyxZQUFjLElBRRCLEdBQWEsRUFBTyxDQUFBLEVBQcsQUFBQSxNQUFaLElBQVksWUFBWSxFQUFBLEVBRTVCLEVBQVEsRUFBQSxJQUFtQixJQUFBLENBRDLFlBQXdCLEVBQUsRUFBUSxFQUFBLENBQUEsTUFDdEMsSUFBYyxFQUFPLENBQUEsRUFDRSxBQUFBLEBQVosSUFBWSxZQUFZLEVBQUEsRUFFNUIsRUFBUSxFQUFBLElBQWCLElBQUEsQFyRGDLEdBQVUsVUFBVSxpQkFBbUIsQFBQSxFQVNQyxDQUNDLHFCQUNBLDRCQUNBLHFCQUFBLEVBQMsUUFBUSxTQUFBLEVBQUEsQFDVCxPQUFPLGVBQWUsRFBVSxVQUFXLEVBQUssQFDLMsYUFBQSxHQUNBLElBQUEsVUFBQSxDQUFBLEBQEsTUFBSyxVQUFZLEVBQUEsRUFFekIsSUFBQSxTQUFJLEVBQUEsQFDSCxPQUFPLGVBQWUsSFBTSxFQUFLLENBQhDLGFBQUEsRFDQSxTQUFBLEdBQEsTUFBTyxDQUFBLENBQUEsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLEVBaUNYLEdBQUksSUFBZSxFQUFRLEBUzNCLGFBQVMsQFBQSxDQUVULGFBQVMsQFBQSxNQUNELEBQUssWUFBQSxDQUdiLGFBQVMsQFBQSxNQUNELEBQUssZJBQUEsQFmYixFQUFRLEBQVEsUFBQSxFQUFBLENBQUEsTUFDWCxLQUFjLEdBQUksRFBYSxDQUFBLEdBQDLEVBQUUsUUFBVSxHQUNaLEVBQUUscUJBQXVCLEdBQpCLEVBQUUsbUJBQXFCLEdBQYsRUFBRSxZQUFjLENBQUEsRUFhekIsRFtSEksSUFuSEEsRFBcIsQFDekIsYUFBQSxHQUNBLElBQUEsVUFBQSxDQUFBLEBQEsTUFBSyxLQUFBLENBQUEsRUFJVixHQUFlLEVBQVEsTUFDMIsRUFBUSxNQUFRLFNBQUEsRUFBQSxDQUFBLEdBQgsRFBTyxFQUFNLEtBQIsRUFBUSxFQUFNLEBQQsRUFBaIsRUFBQSxHQUdGLEFBQUEsTUFBVCxJQUFTLFNBQVUsQFBQSxHQUNQixHQUFBLEFBQWCLEVBQUssUUFBUSxHQUFBLElBQWhDLEdBQWdDLEBRzdCLEtBRlQsRFBaIsQFBQSxFQUVKLEVBQUsQFBQSxHQUNoQixHQUFRLEVBQUsRFFZCxJQUFnQixBQUFOLElBQUsWUFBdUIsQUFBVCxJQUFTLFlBRzFCLEFBQUsSUFBTSxTQUFXLGdCQUFrQixJQUFrQixBQUFULEdBQVMsTUFLekQsQFBTixJQUFNLGdCQUNOLFNBQVcsSUFDSSxBQUFmLEVBQUsTFBUyxLQUlmLEVBQUksUUFDWSxBQUFOLElBQUsWUFBTixBQUFvQixJQUFwQixHQUWLEVBQVEsRFDRSxpQkFBaUIsSFBSyxDQUFBLEVBQhDLEVBQUksYUFFSiwQkFBNkIsSFBSyxFQUFJLENBQUEsRFBQSxDQUNyQyxHQUFrQixFQUFNLElBQUEsRUFFekIsRUFBSSxVQUNNLGFBQWEsSFBSyxDQUFBLEVBQzVCLEVBQUksWUFDTSxZQUFZLEtBQUssQFBQSxFQUMzQixFQUFJLGFBQsbUNBQWDLEtBQUssQFBQSxFQUNsRCxFQUFJLEVBQUUsWUFBQSxFQUNJLEdBQWCLEdBQVksSFBSyxDQUFBLEVBQyDLEVBQUksRUFBRSxRQUFRLFdBQVksSFBQSxFQUFPLFlBQUEsRUFDYixBQUFWLElBQVUsTUFDcEIsRFBQSxRQUtHLFlBQVksSFBSyxDQUFBLEdBQBCLEdBQUksRUFBRSxZQUFBLEVBQYsRUFBZIsSUFDbkIsRFBSSxtQkFJTixFQUFnQixHQUFLLEVBQUEsQFLYixBQUFSLEdBQVEsVUFDUixFQUFnQixVQUNoQixNQUFNLFFBQVEsRUFBZIsSFBQSxHQUcQixHQUFnQixNQUFRLEdBQWEsRUFBTSxRQUFBLEVBQVUsUUFBUSxTQUFBLEVBQUEsQFDNUQsRUFBTSxNQUFNLFNBQUEsQUFDWCxFQUFnQixNQUFNLFFBQVEsRUFBTSxNQUFNLEtBQUEsRFELIsRUFDKIsQFBQSxHQUtqQyxBQUFSLEdBQVEsVUFBNEMsQUFBaEMsRUFBZIsYFBZIsTUFDdkQsRFBZIsTUFBUSxHQUFhLEVBQUsUUFBQSxFQUFVLFFBQVEsUFBQSxFQUFBLENBRTNELEVBQUsTUFBTSxTQURULEVBQWdCLFNBQUEsQUFFbEIsRUFBZIsYUFBYSxRQUFRLEVBQUsTUFBTSxLQUFBLEdBRiCLEdBSxCLEVBQWdCLGNBQWdCLEVBQUsTUFBTSxLQUFBLENBQUEsRFLaEQsRUFBTSxNQUFRLEVBRVYsRUFBTSxPQUFTLEVBQUsVFDeEIsSUFBbIsVFBYSxhQUFlLEdBQpCLEFBQWCLEVBQUsVFBYSxNQUFNLEdBQWdCLEBQVEsRUFBTSxXQUMzRCxPQUFPLGVBQWUsRUFBaUIsWUFBYSxFQUFBLEVBQUEsQFJdEQsRUFBTSxTQUFXLEdBRWIsSUFBYyxHQUFhLENBQUEsQFBQSxFQUtoQyxHQUFNLElBQWtCLEVBQUEsSUFDeEIsRUFBQSxJQUFrQixTQUFTLEVBQUEsQFDdEIsSUFDSCxHQUFnQixDQUFBLEVBRWpCLEdBQWCLEVBQUEsRFBQSxFQUwQixHQUFhLElBQXFELENBQpFLHVCQUFQixDQUNQixRQUFTLENBQIsWUFBQSxTQUFZLEVBQUEsQFBQSxNQUNKLElBQUEsSUFBZMsRUFBQSxLQUFhLEBQUsSFBQSxDQUFBLENBQUEsQFBQSxFQhNOUQsWUFBdUIsRUFBQSxDQUFBLEBQYsSUFBYyxLQUFLLEtBQUsQFBQSxDQUFBLENBUWpDLFlBQXdCLEVBQUEsQFBQSxNQUFBLENBQUEsQFDZCxHQUFXLEVBQVEsVFBYSxFQUFBLENBVTFDLFlBQXNCLEVBQUEsQFBQSxNQUNoQixJQUFlLENBQUEsRUFDYixHQUFtQixNQUFNLEtBQUsUFBQSxFQURELENBQUEsQFTdEMsWUFBZMsRUFBQSxDQUFBLEBQUEsQFBQSxDQUMzQixFQUFBLEtBQgsSUFBYSxLQUFNLENBQUEsRUFBQSxHQUNaLENBVVQsWUFBcUIsRUFBQSxDQUFBLEBRWxCLElBQMsRFBVSxNQUFnQyxBQUFQixFQUFVLFdBQWEsRFBSyxJQUNqRCxJQUFBLENBWUYsRFBTSxJQUEwQixTQUFDLEVBQVUsRUFBQSxDQUFBLEBQVEsRFBUyxDQUFBLENBQUEsRUFXdEQsRFBWSxTQUFDLEVBQVUsRUFBQSxDQUFBLEBQVEsRFBUyxDQUFBLENBQUEsRUFNMIsRFBQSxHQWlDSixDQUNkLFNBQUEsRFDQSxXQUFBLEdBQEsVUFBQSxHQUNBLGdCQUFBLEdBQEsTFBQSxHQUNBLGCQUFBLEdBQEsUUFBQSxHQUNBLFlBQUEsRFDQSxXQUFBLEdBQEsYFBQSxHQUNBLFFBOUhlLFNBKhmLFNBQUEsRFDQSxPQUFBLEdBQEsUUFBQSxHQUNBLHVCQUFBLEdBQEsYUFBQSxHQUNBLGNBQUEsRFDQSxjQUFBLEdBQEsYFBQSxHQUNBLGFBQUEsRFDQSxVQUFBLEdBQEsUFBQSxHQUNBLGVBQUEsRFDQSxZQUFBLEdBQEsVUFBQSxHQUNBLGNBQUEsRFDQSxLQUFBLEdBQEsVFBQSxHQUNBLFVBQUEsRFDQSxQkFBQSxHQUNBLFdBaEVrQixHQWlFbEIsUFBQSxHQUNBLGFBQUEsRFDQSxLQUFBLEdBQEsbURBQUEsRUFBQSxFQhMTSxHQUFJLElBQWlCLENBQzFCLEBQUsTFDUCxLQUFNLEBQsVUFBVyxPQUNYLEBQUsTFDUCxLQUFNLEBQIsRUFDVyxHQUFjLEVBQUsZUFBaUIsRUFBTSxjQUFjLEVBQWMsRUNSbEYsRFBSSxJQUFvQyxVQUFZLENBQxELFVBQVcsTFBTyxRQUFVLFNBQVUsRUFBRyxDQUNQyxPQUFTLEdBQUcsRUFBSSxFQUFHLEVBQUksVUFBVSxPQUFRLEVBQUksRUFBRyxJQUFLLENBQELEVBQUksVUFBVSxHQUVkLEBQVMsSFBSyxHQUFHLEFBQUksTFBTyxVQUFVLGVBQWUsSFBSyxFQUFHLENBQUMsRFBRyxHQUFFLEdBQUssRUFBRSxHQUMRSxDQUVBLEBQUsRUFDVCxFQUVPLEdBQVMsTUFBTSxLQUFNLFNBQVMsQFDdkMsRUFFSSxHQUFnQyxTQUFVLEVBQUcsRUFBRyxDQUNsRCxHQUFJLEdBQUksQFBQyxFQUVULEBQVMsSFBSyxHQUFHLEFBQUksTFBTyxVQUFVLGVBQWUsSFBSyxFQUFHLENBQUMsRFBSyxFQUFFLFFBQVEsQFBQyxFQUFJLEdBQUcsRFBRSxHQUFLLEVBQUUsSUFFOUYsRFBSSxHQUFLLEBQVEsTUFBTyxRQUFPLHVCQUEwQixXQUFZLEBQVMsRFBSSxFQUFHLEVBQUksTFBTyxzQkFBcIsQFBQyxFQUFHLEVBQUksRUFBRSxPQUFRLElBQRJLEFBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFJLEdBQUssTFBTyxVQUFVLHFCQUFxQixLQUFLLEVBQUcsRUFBRSxFQUFFLEdBQUcsRFBRSxFQUFFLElBQUsRUFBRSxFQUFFLEtBRWhHLEBQUsRUFDVCxFQUtBLFlBQXNCLEVBQUsQFDMUIsTUFBTyxJQUFRLEVBQUssSUFBSSxTQUFVLEVBQUsRUFBRyxDQUNQyxNQUFPLEdBQUsYFBYyxFQUFLLElBQUssRFBUyxDQUMQyxJQUFLLENBQAsRUFBRyxFQUFLLElBQUksRUFBRyxHQUFhLEVBQUssSFBSyxDQUFDLENBQpDLENBQUMsQFDSCxDQUVPLFlBQWlCLEVBQUsQFDNUIsTUFBTyxVQUFVLEVBQUsQFDdEIsTUFBTyxHQUFNLGNBQWMsRFBVSxHQUFTLENBQzVDLEtBQUsRFBUyxDQUFDLEVBQUcsRUFBSyxJQUFJLENBQzlCLEVBQUcsQFBSyxFQUFHLEdBQWEsRUFBSyxLQUFLLENBQUMsQFDckMsQFDRixDQUNPLFlBQWtCLEVBQUsQFDOUIsRFBSSxHQUFPLFNBQVUsRUFBTSxDQUNQixHQUFJLEdBQUsRUFBTSxLQUNiLEVBQUsRUFBTSxLQUNiLEVBQVEsRUFBTSxNQUNkLEVBQVcsRFBTyxFQUFPLENBQUMsTFBUSxPQUFRLEBQUsQFBQyxFQUVsRCxFQUFlLEdBQVEsRUFBSyxNQUFRLEBQBDLEVBQosTUFBSSxHQUFLLFdBQVcsRFBWSxFQUFLLFdBQpDLEVBQUsVFBVyxHQUFhLEdBQVksRUFBWSxJQUFNLElBQUsRUFBTSxXQUNyRSxFQUFNLGNBQWMsTUFBTyxHQUFTLENBQpDLEBQVEsZUFDUixLQUFNLGVBQsWUFBYSxHQUNmLEVBQUcsRUFBSyxLQUFNLEVBQUsRUFBVSxDQUMQixVQUFXLEVBQgsTUFBTyxHQUFTLEdBQVMsQFDdkIsTUFBTyxFQUFNLEBQVMsRUFBSyxLQUMQixFQUFHLEVBQUssSFBSyxFQUFHLEVBQUsSFBSyxFQUMzQixPQUFRLEVBQIsTUFBTyxFQUNQLEBQUsNEJBQQsQFBQyxFQUFHLEdBQVMsRUFBTSxjQUFjLFFBQVMsSFBTSxDQUFLLEVBQUcsRUFBTSxRQUFRLENBQhFLEVBRUEsTUFBTyxNQUFnQixPQUFZLEVBQUsYFBYyxHQUFZLFNBQVUsSFBTSxTQUFVLEVBQUsQFDakcsTUFBTyxHQUFLLENBQUksQFDbEIsQFBQyxFQUFJLEVBQUssRUFBYyxDQUMxQixDQtPLFlBQWtCLEVBQUsQFDOUIsTUFBTyxJQUFRLENBQUMsSUFBTSxNQUFNLEtBQUsQFBQyxRQUFVLFlBQVksSFBTyxPQUFPLEBQVMsZUFBZSxZQUFjLElBQUksYFBZIsUUFBUSxlQUFpQixPQUFPLEVBQUUsTUFBUSxDQUFDLENBQUMsSUFBTSxTQUFTLEtBQUsQFBQyxHQUFLLEtBQUssRFBSyxJQUFJLEVBQUksRFBRyxDQUFDLEVBQUUsQFBQyxJQUFNLFdBQVcsSFBTyxDQUFDLEBQVMseUNBQXlDLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFLLENBQzNULENBdUPLFlBQXFCLEVBQUsQFDakMsTUFBTyxJQUFRLENBQUMsSUFBTSxNQUFNLEtBQUsQFBQyxRQUFVLFlBQVksSFBTyxPQUFPLEBQVMsZUFBZSxZQUFjLElBQUksYFBZIsUUFBUSxlQUFpQixPQUFPLEVBQUUsTUFBUSxDQUFDLENBQUMsSUFBTSxPQUFPLEtBQUsQFBQyxFQUFJLDJDQUEyQyxDQUFDLEVBQUUsQFBQyxJQUFNLFdBQVcsSFBTyxDQUFDLEBQVMsaJBQWtCLENBQUMsRUFBRSxDQUFDLElBQUsTFBTyxLQUFPLENBQUMsRFBSyxLQUFLLEdBQUssSFBSyxHQUFLLEtBQUssRFBSyxHQUFHLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFLLENBQRYLENBZJPLFlBQXlCLEVBQUsQFDckMsTUFBTyxJQUFRLENBQUMsSUFBTSxNQUFNLEtBQUsQFBQyxRQUFVLFlBQVksSFBTyxPQUFPLEBQVMsZUFBZSxZQUFjLElBQUksYFBZIsUUFBUSxlQUFpQixPQUFPLEVBQUUsTUFBUSxDQUFDLENBQUMsSUFBTSxPQUFPLEtBQUsQFBQyxFQUFJLDBEQUEwRCxDQUFDLEVBQUUsQFBQyxJQUFNLFdBQVcsSFBTyxDQUFDLEBQVMsZJBQWdCLENBQUMsRUFBRSxDQUFDLElBQUsTFBTyxLQUFPLENBQUMsRFBSyxLQUFLLEdBQUssSFBSyxHQUFLLEtBQUssRFBSyxHQUFHLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFLLENBQZLENBbdPLFlBQWlCLEVBQUsQFDNIsTUFBTyxJQUFRLENBQUMsSUFBTSxNQUFNLEtBQUsQFBQyxRQUFVLFlBQVksSFBTyxPQUFPLEBQVMsZUFBZSxZQUFjLElBQUksYFBZIsUUFBUSxlQUFpQixPQUFPLEVBQUUsTUFBUSxDQUFDLENBQUMsSUFBTSxPQUFPLEtBQUsQFBQyxFQUFJLGdEQUFnRCxDQUFDLEVBQUUsQFBQyxJQUFNLFdBQVcsSFBTyxDQUFDLEBQVMsdUJBQXVCLENBQUMsQFBQyxDQUFDLENBQUMsRUFBRSxDQUFLLENBQpVLENBQsWUFBaIsRUFBTyxDQUMQixNQUFPLElBQVEsQFBQyxJQUFNLEBQUsSFBTyxDQUFDLFFBQVUsWUFBWSxLQUFPLEBQUsTFBUyxlQUFlLFlBQWMsSUFBSSxjQUFnQixRQUFRLGVBQWlCLEBQUsRUFBRSxNQUFRLENBQUMsQFBQyxJQUFNLEBQUsSFBTyxDQUFDLEVBQUksSUFBSSxFQUFJLElBQUksTUFBUSxLQUFLLEBQVMsSFBSyxHQUFLLElBQUksRFBSyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUsUFBUyxLQUFPLENBQUMsRFBSyxNQUFNLEdBQUssTUFBTSxFQUFJLEtBQUssQFBQyxFQUFFLENBQUMsSUFBTSxXQUFXLEtBQUsQFBQyxPQUFTLGtCQUFrQixDQUFDLENBQUMsQFBQyxDQUFDLEVBQUUsQFBSyxDQUMWCxDQZQSxHQUFNLElBQVcsTUFBTyxPQUFTLFdBRWpDLEdBQUsSUFBYSxNQUFPLFNBQVcsVFDLIsRFBTSxNQUFPLGNBQWdCLFdBQWEsRFBSSxhQUFnQixPQUMRCxHQUFNLEBQUsYFBZIsVFBYSxHQUFJLGFBQWdCLEBQzlELEdBQVEsbVBQIsRFBUyxNQUFNLFVBQVUsTUFBTSxLQUFLLEVBQUssRUFDekMsRFBVSxDQUFDLEdBQUsQFDbkIsRFBSSxHQUFNLENBQUMsRUFDWCxTQUFFLFFBQVEsQFBQyxFQUFHLElBQUsRUFBSSxHQUFLLENBQUMsRUFDdkIsQFDWCxHQUFHLEVBQUsRUFDSCxHQUFRLDBFQUNSLEdBQVUsTFBTyxhQUFhLEtBQUssTUFBTSxFQUNQyxHQUFXLEBQUsWUFBVyxNQUFTLFdBQRDLFdBQVcsSFBSyxLQUFLLFVBQVUsRUFDLIsQFBQyxFQUFJLEVBQUssQUFBQyxHQUFNLElBQUsRFBSSxZQUFXLEBQUsVUFBVSxNQUFNLEtBQUssRUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFFLENBQUMsRUFHckYsRFBTSxJQUFXLEFBQUMsRFBTSxFQUFFLFFBQVEsbJBQXFCLEVBQUUsRUFrRpELEdBQUsSUFBVSwRUFDVixHQUFVLEFBQUMsRFBUyxDQUNQixPQUFRLEVBQUssWUFDSixHQUNELEdBQUksRFBTyxHQUFPLEVBQUssVFBVyxDQUFDLElBQUsRFDakMsSUFBTyxFQUFLLFdBQVcsQFBQyxJQUFNLEdBQzlCLElBQUsRUFBSyxXQUFXLENBQUMsSUFBTSxFQUMvQixHQUFPLEVBQUssVFBVyxDQUFDLEVBQUksRUFBUyxFQUFLLEBQpELEBQVEsSUFBUyxLQUFXLElBQUsSFBTSxFQUNsQyxHQUFTLEdBQVMsTUFBUyxLQUFNLEBQRDLEdBQQsTUFBTyxJQUFVLElBQUsRUFBSyxXQUFXLENBQUMsSUFBTSxHQUNQyxJQUFPLEVBQUssVFBVyxDQUFDLElBQUsRUFDLIsRFBTyxFQUFLLFdBQVcsQFBQyxDQUFFLFVBRWpDLEBQUsSUFBVSxJQUFPLEVBQUssVFBVyxDQUFDLElBQUsRUFDeEMsRFBTyxFQUFLLFdBQVcsQFBQyxDQUFFLEVBRTdDLEVBTUsRFBTyxBQUFDLEdBQUsRUFBRSxRQUFRLEdBQVMsRUFBTyxFQUlQyxHQUFlLEFBQUMsRFBUSxDQUcxQixHQURBLEVBQUsRUFBSSxRQUFRLEBQVEsRUFBRSxFQUNQixDQUFDLEdBQUsSFBSyxDQUFHLEVBQYsSFBTSxJQUFJLFdBQVUsbUJBQWCLEVBQzNDLEdBQUsSFBSyxNQUFNLEVBQUssRFBSSxPQUFTLEVBQUUsRUFDdEMsRFBSSxHQUFLLEVBQUsRFBSSxFQUFJLEVBQZCLEBQVMsRFBSSxFQUFHLEVBQUksRUFBSSxRQUNwQixFQUFNLEdBQUsRUFBSSxPQUFPLEdBQUcsSUFBTSxHQUMzQixHQUFPLEVBQUksTFBTyxHQUFHLElBQUsRFDMUIsRFBSyxHQUFPLEVBQUksTFBTyxHQUFHLEtBQUsRUFDakMsRFBSyxHQUFPLEVBQUksTFBTyxHQUFHLElBQpDLEdBQUsSUFBTyxHQUFLLEdBQVEsRFBTyxHQUFLLEdBQUcsRUFDcEMsSUFBTyxHQUFLLEdBQVEsRFBTyxHQUFLLElBQUssRFBTyxFQUFJLEdBQUcsRUFDLMsRFBUSxHQUFPLEdBQUssSUFBSyxHQUFPLEVBQUksSUFBSyxFQUFNLEdBQUcsRUFFaEUsTUFBTyxFQUNYLEVBTUsRFBUSxHQUFXLEFBQUMsRFBUSxLQUFLLEdBQVMsQFBRyxDQUFDLEVBQzlDLEdBQWEsQUFBQyxHQUFRLEBQUsSFBSyxFQUFLLFFBQVEsRUFBRSxTQUFTLFFBQVEsRUFDOUQsRFFSixHQUFnQixHQUNoQixBQUFDLEdBQUsRFBUyxPQUFPLEtBQUssRUFBRyxRQUFRLENBQUMsRUFDeEMsQUFBQyxHQUFNLEdBQVMsRFBTSxDQUFDLEVBQUcsRFBSyxFQUFFLFdBQVcsQFBQyxDQUFDLEVBTXBELEdBQUsSUFBVSxHQUNWLEFBQUMsRFBTSxPQUFPLEtBQUssRUFBRyxRQUFRLEVBQUUsUFBUyxNQUFNLEVBQyDLEdBQksQUFBQyxHQUFNLEdBQUksTFBTyxHQUFjLENBQUMsQFBQyxFQUNsQyxBQUFDLEdBQUsRFBSyxHQUFNLENBQUMsQFBQyxFQUNQixHQUFTLEFBQUMsRFBTSxHQUFTLEVBQUUsUUFBUSxRQUFTLEFBQUMsRFBTyxHQUFNLElBQUsSUFBTSxHQUFHLENBQUMsRUFNMUUsRFBUyxBQUFDLEdBQVEsRFBUSxHQUFPLENBQUcsQFBQyxFQzlNMMsTFBMkIsbJBRWQsRFBdUIsQFDbEMsRUFDQSxFQUFTLFNBQQsRUFBTSxLQUVOLFdBQUsRUFBTSxtQkFBcUIsZVBQEsSFBVSxJQWNwQyxHQUFOLGFBQTBCLEBQUsQFDckMsWUFBbUIsRUFBKIsQFDaEQsTUFBTSxXQUFhLEVBQVMsTFBTyxFQURsQixlQUVuQixDQUNGLEVBRWEsRFBbIsQFBTyxFQUFTLFdBQWEsMEJBOUIRCxNQStCRSxHQUFNLEdBQUsMkVBQTJFLGlCQUFzQixLQUFLLElBQUksSUFDaEgsRUFBWSxNQUFNLGtCQUFXLENBQUUsSFBSSxDQUFDLEdBQUcsSFDNMsRFBSSxNQUFNLFFBQVEsRUFBUyxJQUFJLEVBQUcsQFDaEMsRFBTSxHQUFjLEtBQVMsSFBSyxLQUNoQyxBQUFDLEdBQWMsRUFBSyxPQUFTLHNCQUMvQixJQUZvQixjQUVqQixJQUNILEdBQUssRUFJSCxNQUFPLEBQUsSUFBbUIsQFBVyxFQUgzQyxjQUFRLEBQUsQFBUSxFQUNoQixHQUFJLEBQUscNBQXNDLENBSTFELEtBQUsTUFBTSxJQUFJLElBQVksQFBUSxDQUVsQyxHQUVNLEdBQXFCLEFBQpCLEdBQDLDBCQUNuQyxHQUFNLEdBQVksTUFBTSxrQkFBVyxDQUFFLElBQUssQFBWSxDQUFDLEdBQUcsSFDMUQsRFBSSxFQUFTLFVBQVksRUFBUyxRQUFTLENBQpDLEdBQUksRUFBUyxXQUFhLFNBQhCLEBQUsTUFBSyxNQUFNLEdBQUsRUFBUyxPQUFPLENBQUMsRUFFMUMsYFBUSxNQUFNLENBQVEsRUFDaEIsRFBSSxXQUFVLHNCQUFzQixDQUUQyxLQUNFLEBQUsSUFBSSxJQUFZLENBQVEsQFFbEMsRMREEOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOzsOztFQdCQSxHQUFNLElBQVUsQUFBQyxHQUHLENBUEgsUUFDZixTQUFRLDRCQUNSLFFBQVEsRUFDUixPQUFPLFFBQAsUFBUyxHQUNULFFBQVEsSUFMTyxFQUaLEtBTlksRUFNWixDQUxILFFBQEsUUFDQSxPQUNBLFNBQEsVUFHQSxHQUFNLENBQUMsRUFBUyxHQUFjLEdBQVMsRUFBUSxDQUFDLEVBQhELFVBQVUsSUFBTSxDQUNkLEdBQUksRFBVSxHQUNkLEBQUksSUFDRixHQUFVLEBQUsVFBVyxJQUFNLEVBQVcsRUFBSyxFQUFHLENBQUssRFFckQsSUFBTSxhQUFhLENBQUsQFDbkMsRUFBRyxDQUFDLENBQUMsRUFHSCxnQkFBQyxVQUNDLEBQUsQFDTCxLQUFNLEVBQsUFDQSxPQUNGLEVBQEsdJBQXlCLENBQUUsTFBUSxHQVJsQixFQUFVLFFBQVUsRUFRdUIsRFDeEQsRUFDTixDQUVKLEVBQsRFBUSxHOUIQmYsRFBcUIsSUFBckIsYUFBMEMsUFBTSxDQUMQyxZQUFtQixFQUFnQixDQUNqQyxNQUFNLEVBQUsRFBRyxFQURDLGNBRWpCLEtBQUssUUFBUSxTQUFTLGCQUFtQixDQUMzQyxDQUNBLFFBQWUsQFDYixFQUFTLEBQAsZJBQUMsSUFBZIsWUFBYSxLQUFLLFlBQVksSFBSyxJQUFJLEVBQUcsRUFDMQsSFBSyxTQUNQLENBQYsQFDQSxTQUFnQixDQUNkLEVBQVMsdUJBQXVCLEtBQUssUFBUyxDQUNoRCxDQUVBLEFBQUsWUFBWSxFQUFjLEVBQWdDLGdDQUMRCxHQUFNLEdBQVcsQFBTyxFQUFNLEtBQVUsdJBQRDLEdBQUsRFBTSxHQUFxQixFQUFNLEVBQVEsQFBRyxFQUNoRCxFQUFPLEBQUsaJBQVcsQFBRSxLQUFJLENBQUMsRFBRyxZQUNwQyxLQUFNLEBQUssTFBTyxZQUFZLFlBQzVCLENBQUUsSFBTSxFQUFJLEBQUsRFBRyxFQUFFLElBQUksRUFBSSxLQUFNLENBQUksRUFDekMsRUFDRixDQUNGLEdBQEsRFBSSxDQUNGLEtBQUsRFBUyxDQUNqQixPQUFTLEVBQVAsQFDQSxRQUFRLEBQUsNkJBQThCLENBQUssRUFDakQsSFBTSxHQUFTLEVBQUksQFDckIsQFDRixHQUNGLEVBUUsRFBaIsQFDdEIsRUFBUyxXQUNQiwwQkFDaEMsRFBTSxHQUFXLEtBQUsSUFBaIsQFBTSxFQUMzQyxFQUEyQixDQUFDLEVBQhDLEBQVcsSFBWSxHQUFTLENBQzlCLEdBQUksRFBTyxFQUFLLEtBQUssRUFDckIsQUFBSSxrQkFBTSxVQUFXLEVBQVMsTFDNUIsRFBSyxPQUFPLEtBQUssQFBUSxFQUNQixFQUFLLEBQVMsRUFBUyxPQUVQixFQUFLLEtBQUssQFDUixTQUFVLEVBQVMsUFDbkIsWUFBYSxFQUFTLFlBQRCLEBQVEsRUFBUyxPQUNqQixRQUFTLEVBQVMsUUFDbEIsTFBUSxDQUFDLENBQVEsRUFDakIsTUFBTyxFQUFTLEtBQxCLENBQUMsQFFTCxDQUNBLEBQUsRUFDVCxHQUVNLEdBQWtCLENBQUMsQFDdkIsaUJBRksQExRksTUEyRkUsRFBTSxDQUFDLEVBQWMsRFBbUIsRFFdEMsSUFBSSxFQUlOLEBSEEsSUFBVSxJQUFNLENBQQsRFBZIsRUFBRSxLQUFLLENBQWUsRUFBRSxNQUFNLENBQWUsQFDLQsRUFBRyxDQUFDLENBQUMsRUFDRCxJQUFpQixLQUVqQixnQkFBQyxPQUFJLFVBQVUsVFDYixnQkFBQyxJQUFRLEtBQUssTFBTyxVQUFVLGCQUFvQixFQUNuRCxnQkFBQyxXQUFJLDJCQUFQixDQUNoQyxFQUVPLEBQUsUUFBUSxDQUFZLEVBRWpDLGdCQUFDLEBQUksVUFBVSxrQkFDWixFQUFhLElBQUksQUFBQyxHQUNqQixnQkFBQyxJQUNDLElBQUssRUFBUyxTQUNkLFNBQVUsRUFDVixXQUFZLEFBQUMsRFBUyxFQUFZLENBQUksRUFDeEMsQFDRCxDQUNILEVBRYsUFBUSxNQUFNLENBQVksRUFFeEIsZJBQUMsTFBSSxVQUFVLFNBQVEsaUNBRXJCLGdCQUFDLEBQUksVUFBVSxlQUNaLEtBQWEsVUFBYixPQUFQixFQUFhLFNBQVMsQFDakQsQFDRixFQUdOLEVBVUsRFBbIsZJBQBCLEdBQWCLENBQUMsQFDeEIsUFBVSxDQUFFLFNBQVEsUFBUSxjQUFhLFFBQUsVFBVSxXQUMxRCxnQkFJSSxDQUNKLEdBQUsRFBYyxHQUNsQixBQUFDLEdBQXNCLEdBQUcsTUFBcUIsSUFDLMsQFBQyxDQUNILEVBQEsTUFDRSxpQkFBQyxPQUFJLFVBQVcsSUFDZCxnQkFBQyxPQUFJLFVBQVcsRUFBWSxPQUFPLEdBQUksQFBTyxFQUMQyxnQkFBQyxPQUFJLFVBQVcsRUFBWSxTQUFTLEdBQDLGdCQUFDLFFBQMsVUFBVyxFQUFZLFNBQVMsRUFDaEMsYUFBWSxZQUFjLEdBRTFCLGdCQUFDLElBQVEsSFBSyxRQUFRLENBQhCLEVBQEsZJBQUMsUUFDQyxVQUFXLEVBQVksTFBTyxFQUMQixhQUFZLEdBQUcsbJBRWYsZJBQUMsSUFBUSxLQUFLLFFBQVEsRUFDdEIsZJBQUMsUUFBSyxVQUFXLGFBQWMsQFBTSxDQUNQyxDQUNGLEVBQEsZJBQUMsTFBSSxVQUFXLEVBQVksTUFBTSxHQUNoQyxnQkFBQyxPQUNDLFVBQVcsRUFBWSxVQUFVLEVBQpDLGFBQVksRUFDWixRQUFTLElBQUsTFBTyxLQUFLLENBQVEsRFFbkMsZJBQUMsTFBTyxFQUNSLGdCQUFDLEtBQUUsVUFBVyxhQUFhLFdBQVMsQFDdEMsRUFDQyxDQUNILEVBQEsZJBQUMsTFBSSxVQUFVLGVBQosRUFBTyxJQUFJLEFBQUMsRFDWCxnQkFBQyxJQUNDLElBQUssRUFBTSxXQUNYLFVBQVcsRUFDWCxXQUFZLEVBQQsQFDRCxDQUNILENBQYsQFFSixFQUVNLEdBQWlCLGFBQJCLEdBQWCLElBQUksSUFBcIsZUFBSSxHQUFnQixHQUFHLENBQUsRUFDeEUsRFBZIsQFBQyxDQUNyQixVQUFXLENBQUUsUUFBTyxTQUFRLEBQUsUFDbEMsZJBSUksQFTUsTUFTUUsRFBTSxHQUFjLEdBQxCLEFBQUMsRFBcIsRFBRyxNQUFrQixJQUMQyxDQUFDLENBQgsRUFDTSxDQUFDLEVBQUsRFBWSxHQUFQixDQUFFLEBQUsUFBVSxDQUFDLEVBQRFLEBQVEsRUFBTSxXQUNQLFVBQgsTUFDRSxpQkFBQyxPQUFJLFVBQVcsRFBaIsRFDaEMsZJBQUMsTFBSSxVQUFXLEVBQVksTFBTyxHQUNoQyxHQUFnQixVQUNqQixnQkFBQyxRQUNDLFVBQVcsRUFBWSxTQUFTLEVBQhDLGFBQVcsbNBRVYsQFDSCxDQUNGLEVBRUEsZJBQUMsTFBSSxVQUFXLEVBQVksUFBUyxHQUNuQyxnQkFBQyxPQUNDLFVBQVcsRUFBWSxPQUFPLEVBQzlCLGFBQVksRFBRyxvQkFFZixnQkFBQyxJQUFRLEtBQUssUUFBUSxFQUNQixnQkFBQyxRQUFLLFVBQVcsYUFBYyxDQUFNLENBQZDLENBQYsRUFDQSxnQkFBQyxPQUFJLFVBQVcsRUFBWSxrQkFBaIsRFDNUMsZJBQUMsVUFDQyxVQUFXLEVBQVksVUFBVSxFQUNqQyxRQUFTLElBQVksMEJBQCLEVBQVMsQFBRSxNQUFPLGFBQWMsQFBQyxFQUNqQyxHQUFJLENBQYsSFBTSxHQUFXLENBQUksRUFDckIsRUFBUyxDQUFFLEBQUsTUFBTyxDQUFDLEVBQzFCLFFBQVEsSUFBSSxNQUFNLENBQBCLEBQVMsRUFBUCxDQUNBLFFBQVEsTUFBTSxDQUFLLEVBQCLEVBQVMsQFBRSxNQUFPLFFBQVMsTFBTSxDQUFDLENBQBDLENBQYsRFDQSxhQUFXLFlBRVgsZJBQUMsTFBVyxDQUNkLEVBQEsZJBQUMsVUFDQyxhQUFXLHVCQUNYLFFBQVMsSUFBTSxPQUFPLEtBQUssRFBcUIsQFBSSxDQUFDLEdBRXJELGdCQUFDLEBQWUsQFDbEIsQFDRixDQUNGLEBRUMsYFDSCxNQUNFLGlCQUFDLEBQUksVUFBVyxHQUFrQixhQUFhLEdBQzdDLGdCQUFDLElBQVEsSFBSyxVQUFVLFVBQVUsbJBQWCLEVBQRELGdCQUFDLFdBQUksZJBQWMsQFDckIsTUFFQyxPQUNILEBQUsaUJBQUMsTFBSSxVQUFXLEdBQWtCLEBQUsRFBRyxZQUFVLEBQpELFFBQgsZUFBUSxNQUFNLEVBQUsSFBSyxFQUVQixnQkFBQyxPQUFJLFVBQVcsRFBaIsTFBTyxHQUFHLHNCQUUxQyxnQkFBQyxPQUFJLFVBQVUsZUFDWixFQUFNLGdCQUFpQixPQUNwQixFQUFNLEBQUsUUFDWCxLQUFNLFFBQUsYFBcUIsVUFDNUIsQFDRixVQUdGLGVBQVksQFBSyxFQUVQixjKIzTCLEVBQUEsQFBQSxPQUFBLEdBQUEsVUFBQSxPQUErQixFQUFBLEBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxHQUFBLFVBQUEsRFBQSxHQUFBLEdBQJDLEdBQsRFDQSxFQUtxQixLQUVsQixPQUFBLDhCQUNxQixFQUMQixHQUFLLEBQVMsSUFBTSxFQUFLLElBQUksUFBQSxFQUFBLENBQUEsTUFBQSxJQUFTLEVBQUEsRFBQSxDQUFBLEVBQUsSFBSyxHQUFBLEVBQUsSUFBQSxrREFBQSxDQUFBLENBQUEsWUNQDLEVBQUEsQFBQSxNQUFBLENBQUEsQFDZCxHQUFBLENBQUEsQFBVyxFQUFNLEdBQUEsQFBQSxZQUtDLEVBQUEsQFBQSxNQUFBLENBQUEsQFDdEIsRFBQSxVQWFQixFQUFBLENBQUEsRFBQSxDQUNQixHQUEwQixBQUFBLEBQVYsSUFBVSxTQUFVLEBQUEsRFBTyxHQUMxQyxHQUFRLEBQUsZUFBZSxDQUFBLEVBQUEsRFDdEIsQUFBVixJQUFVLEtBQVYsTUFBQSxHQUNJLEdBRUYsRFDTCxPQUFPLGVBQWUsSFBSyxFQUFPLGFBQUEsRFBaIsRUFBTSxZQUFBLEBRXZELEtBQVMsUUFHRyxBQUFBLEBQVIsSUFBUSxZQUNmLFNBQVMsUFBUyxLQUFLLENBQUEsSUFBVSxFQUFBLEVBeEJuQixDQUFBLEdBQQsTUFBTSxRQUFRLENBQUEsRFBQSxDQUFBLENBQosRUFBTSxLQUFBLENBQUEsQFDTixFQUFNLFlBQVksSFDcEIsRFBTSxDQUFBLEdBQsRFBTSxDQUFBLEVBQUEsQEwRFIsWUFBcUIsRUFBVSxFQUFXLEVBQUEsQFBQSxBQUFBLElBQUEsUUFBQSxHQUFBLElBQWlCLEFBQRELEdBQVksQFBQSxJQUQwQyxFQUVRCxHQUFpQixPQUFPLEtBQUsSUFBUyxDQUFBLEVBQUssUUFBUSxTQUFBLEVBQUEsQFDakQsRFBaUMsQUFBQSxNQUFSLElBQVEsVUFBVSxFQUFLLEVBQUssRUFBSSxHQUFNLENBQUEsQFBQSxDQUFBLEVBRJFLEVBQUksUUFBUSxTQUFDLEVBQVksRUFBQSxDQUFBLEBQWUsRFBSyxFQUFPLEVBQUsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLFlBSpDLEVBQUEsQFBQSxHQUVyQixHQUFnQyxFQUFNLElBQUEsTUFDckMsRFDSixFQUFNLEVBQVEsRUFDYixFQUFNLEVBQVEsRUFDYixFQUFNLEVBQIsTUFBTSxRQUFRLENBQUEsRUFBQSxFQUVkLEdBQUsQFBQSxFQUFBLEVBRUsRFBTSxDQUFBLEVBQUEsRUFBQSxDQUFBLENBQUEsWUFNVSxFQUFZLEVBQUEsQFBQSxNQUFBLEFBQhCLElBQVksQFBQSxJQURZLEVBRTVCLEVBQUsSUFBSSxDQUFBLEVBQYsTFBTyxVQUFVLGVBQWUsSFBSyxFQUFPLENBQUEsQFBQSxDQUFBLFlBSTVCLEVBQTJCLEVBQUEsQFBQSxNQUFBLEFBRXZDLElBQVksQFBQSxJQUYyQixFQUVELEVBQUsSUFBSSxDQUFBLEVBQVEsRUFBTSxFQUFBLENBSXRFLFlBQWCLEVBQVksRUFBNkIsRUFBQSxDQUFBLEdBQRELEdBQUksRFBWSxDQUFBLEVBQUEsQUFDbEIsSUFEaIsRUFDRSxFQUFNLElBQUksRUFBZIsQFBQSxFQUFBLEFBQpDLElBRHlDLEVBRWpELEdBQUsTFBTyxDQUFBLEVBQIsRUFBTSxJQUFJLENBQUEsRFDSixFQUFNLEdBQWtCLENBQUEsQFBQSxZQUliLEVBQVEsRUFBQSxDQUFBLEBRXRCLEtBQUsRUFDSSxBQUFOLElBQUsRFBSyxFQUFJLEdBQUsRUFBSSxFQUVQixHQUFNLEdBQUssRFBTSxDQUFBLENBQUEsWUFLSixFQUFBLENBQUEsTUFDZCxLQUFVLFlBQWtCLElBQUEsQFBQSxZQUlkLEVBQUEsQFBQSxNQUNkLEtBQVUsWUFBaIsSUFBQSxDQUFBLFlBRIsRUFBQSxDQUFBLEBQYsRFBTSxHQUFTLEVBQUsQFBQSxDQUFBLFlBSUQsRUFBQSxDQUFBLEdBQZCLEBQUsUUFBUSxDQUFBLEVBQUsTUFBTyxPQUFNLFVBQVUsTUFBTSxLQUFLLENBQUEsRUFBQSxHQUNyRCxHQUFjLEdBQTBCLENBQUEsRUFBQSxNQUNQyxHQUFZLElBQUEsTFDZixHQUFPLEdBQVEsQFBQSxFQUNWLEVBQUksRUFBRyxFQUFJLEVBQUssTFBUSxJQUFLLENBQUEsRFDLIsRFBVyxFQUFLLEdBQhCLEVBQUsRUFBWSxHQUFBLEFBQJCLEVBQUssVFEZIsSUFFeEIsRFBSyxTQUFBLEdBQwsRUFBSyxhQUFBLElBSYsRFBSyxLQUFPLEVBQUssTUFDcEIsRFBWSxHQUFPLENBQxCLGFBQUEsRFDQSxTQUFBLEdBQEsVFBWSxFQUFLLFdBQpCLEBQUsRUFBSyxFQUFBLEVBQUEsQFBQSxNQUdSLFFBQUsTFBTyxPQUFPLGVBQWUsQFBQSxFQUFPLENBQUEsQFBQSxDQUFBLFlBVpCLEVBQVUsRUFBQSxDQUFBLEBQUEsQUFBQSxLQUFBLFFBQUEsRFBQSxJQUMvQixHQUFTLENBQUEsRFBUSxHQUFRLENBQUEsRFBQSxDQUFTLEdBQVksQFBQSxHQUMQyxJQUFZLENBQUEsRUFBTyxHQUNQixHQUFJLElBQUsRUFBSSxJQUFNLEVBQUksTUFBUSxFQUFJLEBQVMsSUFFOUMsTFBTyxPQUFPLENBQUEsRUFDVixHQUFNLEdBQUssRUFBSyxTQUFDLEVBQUssRUFBQSxDQUFBLEBQVUsSUFBTyxFQUFBLEVBQUsQFBQSxFQUFBLEVBQUsRFDbEQsQFBQSxDQUdSLGFBQVMsQFDUixHQUFJLENBQUEsQFBQSxDQUFBLFlBRCLEVBQUEsQFBQSxNQUNiLEFBQVAsSUFBTyxNQUFQixBQUFBLEBQVIsSUFBUSxVQUUzQixPQUFPLFNBQVMsQFBQSxDQUFBLENBQUEsWUNSZCLEVBQUEsQFBQSxHQUVNLEdBQVMsRFBUSxHQUFBLEBQxCLElBQosRFBSSxHQUFJLENBQUEsRUFHRixDQUFBLENBQUEsWUFJUCxFQUNBLEVBQUEsQFFSyxHQUFRLElBQVksSUFBUSxHQUFhLEVBQUEsQNsQyDLGFBQWdCLENBQUEsTUFFUixHQUFBLENBQUEsWUFtQlAsRUFDQSxFQUFBLENBRUksRFDSCxJQUFVLFNBQUEsRUFDVixFQUFNLEVBQVcsQFBQSxFQUNqQixFQUFNLEVBQWtCLENBQUEsRUFDeEIsRUFBTSxFQUFpQixFQUFBLENBQUEsWUFJRyxFQUFBLENBQzNCLEdBQVcsQFBQSxFQUNYLEVBQUsRUFBUSxRQUFRLEVBQUEsRUFFdEIsRUFBTSxFQUFVLElBQUEsQFBQSxZQUdVLEVBQUEsQFDdEIsSUFBVSxJQUNiLElBQWUsRUFBTSxFQUFBLENBQUEsWUFJSSxFQUFBLENBQUEsTUFDbEIsSUFyQQsQFDTixFQUFTLENBQUEsRUFDVCxFQWDaMsRFsQxDLEVBaNnRCxFQSCaEQsRUFBQSxHQUNBLEVBQWCLENBQUEsQFBQSxDQWlDdEIsWUFBcUIsRUFBQSxDQUFBLEdBQQsRFBbIsRUFBTSxJQUFBLEFBRSCLEVBQUsSUFGeUIsRFFekIsQUFDTixFQUFNLElBREEsRUFHTixFQUFNLEVBQUEsRUFDRixFQUFNLEVBQUEsRUFBVyxDQUFBLFlDOURPLEVBQWEsRUFBQSxDQUMxQyxFQUFNLEVBQXFCLEVBQUsRUFBUSxPQUFBLEdBQDLEdBQVksRUFBTSxFQUFTLEdBQzNCLEVBQUEsQUFBYSxJQUFiLFFBQXFDLElBQVcsRUFBQSxNQUNqRCxHQUFNLEVBQUsRFDakIsRFBVSxLQUFBLEVBQUsRUFBaUIsRUFBTyxFQUFRLENBQUEsRUFDOUMsRUFDQyxHQUFVLElBQWEsRFDMUIsSUFBWSxDQUFBLEVBQosRFBSSxDQUFBLEdBRUQsRFBWSxDQUFBLEdBRWYsRFBUyxHQUFTLEVBQUsQFBQSxFQUNwQixFQUFNLEdBQVMsRFBWSxFQUFPLENBQUEsRFFcEMsRUFBTSxHQUNULEdBQVUsUFBQSxFQUFXLEVBQBCLEVBQVUsSUFBYSxFQUNQixFQUNBLEVBQUsRUFDTixFQUFNLENBQUEsRFLUixFQUFTLEdBQVMsRUFBTyxFQUFXLENBQUEsQFBQSxFQUVyQyxHQUFZLENBQUEsRUFDUixFQUFNLEdBQQsRUFBTSxFQUFnQixFQUFNLEVBQVUsRUFBTSxDQUFBLEVBRXRDLElBQVcsRFBVSxFQUFBLEBQVMsQFHdEMsWUFBaIsRUFBdUIsRUFBWSxFQUFBLENBQUEsRFFaEQsRFBUyxDQUFBLEVBQVEsTUFBTyxHQUFBLEdBRXRCLEdBQWCLEVBQUsSUFBQSxHQUFBLENBRTNCLEVBQUEsTUFDSixJQUNDLEVBQEsUFBQyxFQUFLLEVBQUEsQFBQSxNQUNMLElBQWlCLEVBQVcsRUFBTyxFQUFPLEVBQUssRUFBWSxDQUFBLENBQUEsRUFBQSxFQUMRCxFQUVNLEVBQUEsRFHSixFQUFNLElBQVcsRUFBVyxNQUFPLEdBQUEsRFBQSxDQUVsQyxFQUFNLEVBQUEsTUFDVixJQUFZLEVBQVcsRUFBTSxFQUFBLEVBQUsRUFDNIsRUFBTSxFQUFBLEdBQUEsQFHVCxFQUFNLEVBQVksQFDdEIsRUFBTSxFQUFBLEdBQsRUFBTSxFQUFPLElBQUEsRFDUCxHQUFBLEFBRUwsRUFBTSxJQUZELEdBRUMsQUFBaUMsRUFBTSxJQUFQyxFQUNGLEVBQUsRUFBUSxHQUFZLEVBQUsQFBQSxFQUNqQyxFQUFNLEVBSYsRFBQSxBQUNDLEVBQUsSUFEUCxFQUNpQyxHQUFJLEtBQUksQFBQSxFQUFVLEVBQxELFNBQUMsRUFBSyxFQUFBLENBQUEsTUFDTCxJQUFpQixFQUFXLEVBQUsRUFBUSxFQUFLLEVBQVksQFBQSxDQUFBLENBQUEsRUFHOUQsRFBWSxFQUFXLEVBQUEsRUFBUSxFQUUzQixHQUFRLEVBQVUsRFDckIsRFBVSxTQUFBLEVBQVcsRUFDcEIsRUFDQSxFQUNBLEVBQVUsRUFDVixFQUFVLENBQUEsQFBQSxDQUFBLEBSUsRFBTSxDQUFBLENBRQsWUFDQyxFQUNBLEVBQEsRUFDQSxFQUNBLEVBQEsRUFBQSxDQUFBLEdBRksRFBUSxDQUFBLEVBQWEsQFBQSxHQVNsQixHQUFNLEdBQVMsRUFBVyxFQVAvQixHQUNBLEdBQUEsQUFDQSxFQUFhLElBRGIsRFDYSxDQUNaLEdBQUssRUFBOEMsRUFBWSxDQUFBLEVBQzdELEVBQVUsTFBTyxDQUFBLEVBQUEsTUFDakIsRUFBQSxHQUdKLEdBQUksRUFBYyxFQUFNLENBQUEsRUFBQSxDQUdwQixHQUFRLENBQUEsRUFFTCxPQUROLEVBQVUsRUFBQSxFQUFpQixDQUFBLEdBSXpCLEdBQVksQFBQSxHQUFBLENBQWdCLEdBQVMsQFBQSxFQUFhLENBQUEsRFBQSxDQUNoRCxFQUFVLEVBQUsRFBZSxFQUFVLEVBQXFCLEVBQUEsTFRcEUsRFBUyxFQUFXLENBQUEsRUFFZixHQUFnQixFQUFZLEVBQUsRFDdkMsRFBWSxFQUFXLENBQUEsQFBQSxDQUFBLENBSTFCLFlBQXFCLEVBQWCLEVBQVksRUFBQSxDQUFBLEFBQUEsSUFBQSxRQUFBLEdBQUEsSUFDLMsRUFBTSxFQUFPLEdBQWUsRUFBTSxHQUNyQyxHQUFPLEVBQUsQFBQSxDQUFBLENDOEVoQixZQUFjLEVBQWdCLEVBQUEsQFBQSxHQUNQixHQUFRLEVBQUsSUFBQSxNQUNMLEdBQVEsRFBTyxDQUFBLEVBQVMsRFDekIsRUFBQSxDQWNmLFlBQMsRUFDQSxFQUFBLENBQUEsRFHTSxJQUFRLEdBQUEsTFDVixHQUFRLEBQUsZUFBZSxDQUFBLEVBQzNCLEdBQUsQFBQSxHQUNQLEdBQUsTFBTyxQkFBeUIsRUFBTyxDQUFBLEVBQUEsRFDaEQsRUFBTSxNQUFPLEdBQpCLEVBQVEsTFBTyxlQUFlLENBQUEsQFBQSxDQUFBLENBQUEsWUFLSixFQUFBLENBQRCLEVBQUsRFDVixHQUFNLEVBQUEsRFDRixFQUFNLEdBQQsRFBWSxFQUFNLENBQUEsRUFBQSxDQUFBLFlBSsRUFBQSxDQUNQixFQUFNLEdBQYsRFBTSxFQUFRLEdBQVksRUFBTSxDQUFBLEVBQUEsQNuRGxDLFlBQMsRUFDQSxFQUNBLEVBQUEsQFBQSxHQUdNLEdBQWlCLEdBQUsQFBQSxFQUMxQixHQUFVLFFBQUEsRUFBVSxFQUFVLEVBQUsQFBQSxFQUNyQyxHQUFNLENBQUEsRUFDTixHQUFVLFFBQUEsRUFBVSxFQUFVLEVBQUsQFBQSxFQUNyQyxFQUFNLEVBQUEsUQxTFQsRUFDQSxFQUFBLENBQUEsRFFTSxHQUFVLEBQUsUUFBUSxDQUFBLEVBQhCLEVBQWCLENBQpCLEVBQUsRUFBQSxFQUFrQyxFQUVQyxFQUFRLEVBQVMsRUFBTyxFQUFTLEdBQUEsRUFFakMsRUFBQSxHQUVBLEVBQUEsRFFQSxFQUFXLENBQUEsRUFFWCxFQUFTLEVBRVQsRUFBTyxFQUVQLEVBQVEsSFFUixFQUFPLEtBRVAsRUFBUyxLQUNULEVBQUEsRUFBVyxFQVNSLEVBQVksRUFDWixFQUEyQyxHQUMzQyxHQUNILEdBQVMsQFBQyxDQUFBLEVBQYsRUFBUSxJQUFBLEdBQUEsRFHZSxNQUFNLFVBQVUsRUFBUSxDQUFBLEVBQXpDLEVBQUEsRUFBQSxPQUFRLEVBQUEsRUFBQSxNQUFBLEBQYsRFBTSxFQUFTLEVBQYsRUFBTSxFQUFVLEVBQQsQFBQSxFQdKYSxFQUFPLENBQUEsRUFDeEIsRFBVSxLQUFBLEVBQUsRUFBZIsRUFBTyxDQUFBLEVBQUEsTUFFNIsRFBUyxFQUFPLEVBQVMsRFBQSxHQUNqQyxFQUFRLEtBQUssQFBQSxFQUNaLENBQUEsQFBQSxZQpPZIsRUFBQSxDQUFBLEBQxCLElBQVEsQFBQSxHQUFRLEdBQUksRFBSSxDQUFBLEVBSTlCLFdBQXFCLEVBQUEsQFBQSxHQUFBLENBQYsRFBWSxDQUFBLEVBQVEsTUFBTyxHQUFBLEdBRTVCLEdBREUsRUFBZMsRUFBTSxJQUVQyxFQUFXLEdBQVksQFBQSxFQUFBLEdBQpCLEVBQUsQFBQSxHQUFBLENBRVIsRUFBTSxHQUNOLEdBQUsRUFBUSxHQUFBLENBQUsRFBVSxLQUFBLEVBQUsRUFBWSxDQUFBLEdBRWxELEBQUsRFBTSxFQUVkLEVBQUsRUFBQSxHQUNOLEVBQUsRFBVyxFQUFPLENBQUEsRUFDekIsRUFBTSxFQUFBLEVBQWEsSFFbkIsRFBTyxHQUFXLEVBQUsQFBQSxFQUFBLEBRzFCLElBQUssRUFBTSxTQUFDLEVBQUssRUFBQSxDQUNaLEdBQVMsRFBSSxFQUFNLEVBQUsQFBQSxJQUFTLEdBQZDLEdBQUksRUFBTSxFQUFLLEVBQVksQFBQSxDQUFBLENBQUEsQFBQSxFQUFBLEFBRJCLElBSHFCLEVBRsRFBSSxLQUFJLENBQUEsRUFBUSxDQUFBLEVBMJoQyxDQUFBLENBQUEsQEQnBCLFlBQWCLEVBQVksRUFBQSxDQUFBLEBRXZCLEBQUEsRFBQSxNQUVDLElBQUksSFBSSxDQUFBLEBQUEsRFBQSxNQUdSLEBQUsSFBSyxDQUFBLEVBQUEsTUFFYixJQUFZLENBQUEsQFBQSxDRpEcEIsYUFtQmdCLENBQUEsVFnQkksRUFBUSxFQUFBLENBQUEsWUFFakIsQFBQSxLQUNILFlBQWMsQFBQSxDQUZwQixFQUFjLEVBQUcsQFBQSxFQUlqQixFQUFFLFVBRUMsRFBRyxVQUFZLEVBQUUsVUFBWSxHQUFJLEdBQUEsQFBQSxXQThKYixFQUFBLENBQxCLEVBQUsRFDVixHQUFNLEVBQVksRFBSSxLQUNQixFQUFNLEVBQVEsRFBSSxLQUFJLEVBQUsQFBQSxFQUFBLENBQUEsVEwSEsRUFBQSxDQUNsQixFQUFNLEdBRVYsRFBTSxFQUFRLEdBQUksSFDbEIsRUFBTSxFQUFNLFFBQVEsUFBQSxFQUFBLENBQUEsRFDZixHQUFZLENBQUEsRUFBUSxDQUFBLEdBQpCLEdBQVEsRFBWSxFQUFNLEVBQUsRUFBUSxFQUFPLENBQUEsRUFDdEQsRUFBTSxFQUFRLElBQUksRUFBTyxDQUFBLEVBQpCLEVBQUsRUFBTyxJQUFJLENBQUEsQFBQSxLQUVqQixHQUFNLEVBQUsSUFBSSxDQUFBLENBQUEsQFBQSxFQUFBLENBQUEsVFNSSxFQUFBLENBQBCLEVBQUsRFBVSxHQUFJLEVBQUcsSFBSyxVQUFVLEdBQUsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLEdBalUQyxHQUFnQixTQUFTLEVBQVEsRUFBQSxDQUFBLEBQBDLEdBQMsTFBTyxnQkFDTixDQUFDLFVBQVcsQFBQSxDQUFBLFdBQWUsUUFDMIsUFBUyxFQUFHLEVBQUEsQFDWCxFQUFFLFVBQVksQFBQSxHQUVoQixTQUFTLEVBQUcsRUFBQSxDQUFBLEBQYsSFBSyxHQUFPLEVBQUUsZUFBZSxDQUFBLEdBQUksRFBRSxHQUFLLEVBQUUsRFBQSxHQUVoQyxFQUFHLENBQUEsQFBQSxFQWNuQixFQUFZLFVBQUEsQFBQSxXQUdZLEVBQWdCLEVBQUEsQFBQSxNQUFBLEBQZDLElBQWUsQFDbkIsRUFBQSxFQUNBLEVBQVMsRUFDVCxFQUFRLEVBQVMsRUFBTyxFQUFTLEdBQUEsRUFDakMsRUFBQSxHQUNBLEVBQUEsRFDQSxFQUFBLEBQEsRUFBQSxPQUNBLEVBQUsRUFDUCxFQUFRLEtBQIsRUFBQSxHQUNBLEVBQUEsRUFBVSxFQUVKLElBQUEsQFoQlIsRUFBVSxFQWKUixHQUFBLEVBQUEsRFqSUksRFBSSxFQUFTLFVBQUEsTUFFbkIsUUFBTyxlQUFlLEVBQUcsTFBUSxDQUNoQyxJQUFLLFVBQUEsQFBQSxNQUNHLElBQUsSFBSyxHQUFBLEVBQWMsSUFBQSxDQUFBLENBQUEsRUFNbkMsRUFBRSxJQUFNLFNBQVMsRUFBQSxDQUFBLEBQQsSUFBTyxLQUFLLEdBQUEsRUFBYyxJQUFJLENBQUEsQFBQSxFQUdQyxFQUFFLElBQUsUFBUyxFQUFVLEVBQUEsQFBQSxHQUNwQixHQUFrQixLQUFLLElBQUEsTUFDNIsRFBZIsQFBQSxFQUNYLEdBQUsQFBQSxFQUFPLElBQUksQFBQSxHQUFRLEdBQUsQFBQSxFQUFPLElBQUksQFBQSxJQUFTLEdBQpELEdBQWUsQFBQSxFQUNmLEdBQVksQFBQSxFQUNaLEVBQUsRUFBVyxJQUFJLEVBQUEsRUFBSyxFQUMxQixFQUFNLEVBQUsSUFBSSxFQUFLLENBQUEsRUFDdEIsRUFBTSxFQUFXLElBQUksRUFBQSxFQUFLLEdBRXBCLElBQUEsRUFHUixFQUFFLEBQVMsUFBUyxFQUFBLENBQUEsRFBQSxDQUNkLEtBQUssSUFBSSxDQUFBLEVBQUEsTUFBQSxHQUNOLEdBRYsRFBaIsSFBSyxJQUFBLEBQzdCLEdBQWdCLENBQUEsRUFDaEIsRUFBZSxDQUFBLEVBQYsRFBWSxDQUFBLEVBQIsRUFBTSxFQUFNLElBQUksQFBQSxFQUNuQixFQUFNLEVBQVcsSUFBSSxFQUFBLEVBQUssRUFFMUIsRUFBTSxFQUFXLEBQUsQFBQSxFQUVQixFQUFNLEVBQUsTFBTyxDQUFBLEVBQUEsRUFDYixFQUdSLEVBQUUsTUFBUSxVQUFBLENBQUEsRFDSCxHQUFrQixLQUFLLElBQzdCLEVBQWdCLENBQUEsRUFDWixHQUFPLENBQUEsRUFBTyxNQUNqQixHQUFlLENBQUEsRUFDZixHQUFZLENBQUEsRUFDWixFQUFNLEVBQVksRFBSSxLQUNQixHQUFLLEVBQUsRUFBTyxTQUFBLEVBQUEsQFDakIsRUFBTSxFQUFXLElBQUksRUFBQSxFQUFLLENBQUEsQFBQSxFQUUzQixFQUFNLEVBQUsTUFBQSxFQUFBLEVBSWYsRUFBRSxRQUFVLFNBQgsRUFDQSxFQUFBLENBQUEsRFBQSxHQUFBLEtBREsRFEdIsSFBSyxHQUFBLEVBQYsUUFBUSxTQUFDLEVBQWEsRUFBQSxDQUNuQyxFQUFHLEtBQUssRUFBUyxFQUFLLElBQUksQFBQSxFQUFNLEVBQUssQFBQSxDQUFBLENBQUEsQFBQSxFQUlQyxFQUFFLElBQUsUFBUyxFQUFBLENBQUEsRFDVixHQUFrQixLQUFLLElBQzdCLEVBQWdCLENBQUEsRUFBQSxHQUNWLEdBQVEsRFBTyxDQUFBLEVBQUsSUFBSSxDQUFBLEVBRXhCLEdBREosRUFBTSxHQUFBLENBQWUsRFBWSxDQUFBLEdBRpDLElBQVUsRUFBTSxFQUFNLElBQUksQFBQSxFQUFBLEBQRCLEdBQUEsRFHRixHQUFRLEdBQVksRUFBTSxFQUFPLEVBQVEsRUFBTyxDQUFBLEVBQUEsTUFDdEQsRFBZSxDQUFBLEVBQYsRUFBTSxFQUFPLElBQUksRUFBSyxDQUFBLEVBQYsQFBQSxFQUdSLEVBQUUsSFBTyxVQUFBLENBQUEsTUFDRCxJQUFPLEtBQUssRFBQSxFQUFjLEtBQUEsQFBQSxFQUdsQyxFQUFFLEBQVMsVUFBQSxDQUFBLEdBQUEsRFBQSxFQUFBLEtBQosRUFBVyxLQUFLLEtBQUEsRUFBQSxNQUFBLEdBQUEsQFBQSxHQUVwQixJQUFpQixVQUFBLENBQUEsTUFBTSxHQUFLLEBQUEsQFBQSxFQUFBLEVBQzdCLEtBQUsVUFBQSxDQUFBLEdBQMsRFBSSxFQUFTLEtBQUEsRUFBQSxNQUVmLEdBQUUsSFBYSxFQUVaLENBQsSFBQSxHQUNBLEBSGEsRUFBSyxJQUFJLEVBQUUsSFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBUzVCLEVBQUUsUUFBVSxVQUFBLENBQUEsRFBQSxHQUFBLEVBQUEsSFDTCxFQUFXLEtBQUssSFBQSxFQUFBLEBQUEsRFBQSxDQUFBLEdBRXBCLElBQWlCLFVBQUEsQFBQSxNQUFNLEdBQUssUUFBQSxDQUFBLEVBQUEsRUFDNIsSFBTSxVQUFBLENBQUEsRFDQyxHQUFJLEVBQVMsSFBQSxFQUFBLEdBRWYsRUFBRSxLQUFNLEBQUsRFBQSxHQUNiLEdBQVEsRUFBSyxJQUFJLEVBQUUsSFBQSxFQUFBLEBQxCLENBQsSFBQSxHQUNBLEBQUsQFBQyxFQUFFLEBQUsQFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBTXJCLEVBQUUsSUFBaIsVUFBQSxDQUFBLEBQosTUFBSyxRQUFBLENBQUEsRUFHTixDQUFBLEVBbkpVLEVBataLEVBQVksVUFBQSxDQUFBLFdBRksRUFBZIsRUFBQSxDQUFBLEBQUEsTUFDdkMsSUFBZSxDQUNuQixFQUFBLEVBQEsRUFBUyxFQUNULEVBQVEsRUFBUyxFQUFPLEVBQVMsRFBQSxFQUNqQyxFQUFBLEdBQEsRUFBQSxHQUNBLEVBQUEsTFDQSxFQUFPLEVBQAsRUFBUSxLQUNSLEVBQVMsRFBSSxLQUNiLEVBQUEsRFDQSxFQUFBLEVBQVcsRUFFTCxJQUFBLENBaEJSLEVBQVUsRUERIsRFBQSxFQUFBLEdBNUZJLEdBQUksRUFBUyxVQUFBLEBRWCLFFBQUsZUFBZSxFQUFHLEBQVEsQFDaEMsSUFBSyxVQUFBLENBQUEsTUFDRyxJQUFPLEtBQUssRFBQSxFQUFjLElBQUEsQFBQSxDQUFBLEVBSDLEVBQUUsSUFBTSxTQUFTLEVBQUEsQFBQSxHQUNWLEdBQWtCLEtBQUssSUFBQSxNQUMQixHQUFnQixDQUFBLEVBRVgsRUFBTSxFQUFBLENBQUEsQFHUCxFQUFNLEVBQUsSUFBSSxDQUFBLEdBQUEsQFBQSxFQUNoQixFQUFNLEVBQVEsSUFBSSxDQUFBLEdBQUEsQFBVSxFQUFNLEVBQUsSUFBSSxFQUFNLEVBQVEsSUFBSSxDQUFBLENBQUEsRFIMUQsRUFBTSxFQUFNLElBQUksQFBQSxDQUFBLEVBUXpCLEVBQUUsSUFBTSxTQUFTLEVBQUEsQFBQSxHQUNWLEdBQWtCLEtBQUssSUFBQSxNQUMQixHQUFnQixDQUFBLEVBQgsSFBSyxJQUFJLENBQUEsRFDYixHQUFlLENBQUEsRUFDZixHQUFZLENBQUEsRUFDWixFQUFNLEVBQUsSUFBSSxDQUFBLEdBRVgsSUFBQSxFQUdSLEVBQUUsTFBUyxTQUFTLEVBQUEsQFBQSxHQUFBLENBQQsSFBSyxJQUFJLENBQUEsRUFBQSxNQUFBLEdBQsRFHRixHQUFrQixLQUFLLElBQUEsTUFDNIsRFBZIsQFBQSxFQUNoQixFQUFlLENBQUEsRUFDZixHQUFZLENBQUEsRUFFWCxFQUFNLEVBQUsTFBTyxDQUFBLEdBQUEsQFBQSxDQUNuQixFQUFNLEVBQVEsSUFBSSxDQUFBLEdBQhCLEVBQUsRUFBTyxPQUFPLEVBQUsRUFBUSxJQUFJLENBQUEsQFBQSxDQUFBLEVBSzNDLEVBQUUsTUFBUSxVQUFBLENBQUEsRFDSCxHQUFrQixLQUFLLElBQzdCLEVBQWdCLENBQUEsRUFDWixHQUFPLENBQUEsRUFBTyxNQUNqQixHQUFlLENBQUEsRUFDZixHQUFZLENBQUEsRUFDWixFQUFNLEVBQUsTUFBQSxFQUFBLEVBSWYsRUFBRSxPQUFTLFVBQUEsQFBQSxHQUNKLEdBQWtCLEtBQUssSUFBQSxNQUMQixHQUFnQixDQUFBLEVBQhCLEVBQWUsQFBQSxFQUNSLEVBQUsRUFBTyxPQUFBLENBQUEsRUFHckIsRUFBRSxRQUFVLFVBQUEsQFBQSxHQUNMLEdBQWtCLEtBQUssSUFBQSxNQUMQixHQUFnQixDQUFBLEVBQhCLEVBQWUsQFBQSxFQUNSLEVBQUsRUFBTyxRQUFBLENBQUEsRUFHckIsRUFBRSxLQUFPLFVBQUEsQFBQSxNQUNELEBQUssTFBQSxDQUFBLEVBRIsRUFBRSxJQUFrQixVQUFBLENBQUEsTUFDWixNQUFLLEBQUEsQFBQSxFQUdiLEVBQUUsUUFBVSxTQUFpQixFQUFTLEVBQUEsQFBQSxPQUMvQixHQUFXLEtBQUssTFBQSxFQUNsQixFQUFTLEVBQVMsSFBQSxFQUFBLENBQQsRUFBTyxNQUNkLEVBQUcsSFBSyxFQUFTLEVBQUsTUFBTyxFQUFPLEBQUsSUFBQSxFQUMQyxFQUFTLEVBQVMsSFBQSxDQUFBLEVBSWIsQFBQSxFQTlHVSxFQTBJbEIsRFBVyxTQUFVLENBQUMsRUFBQSxTQXRKZSxFQUFXLEVBQUEsQFBQSxNQUVQyxJQUFJLEdBQVMsRUFBUSxDQUFBLENBQUEsRUFvSkksRUFBQSxTQXpCSSxFQUFXLEVBQUEsQFBQSxNQUVQyxJQUFJLEdBQVMsRUFBUSxDQUFBLENBQUEsQFBQSxDQUFBLENBQUEsQVTnRCLEdBQUEsSVRuRkosRVwQkUsRFDYSxBQUFBLEBQVgsUUFBVyxLQUFzQyxBQUFBLEBQWhCLFFBQUsRFBQSxHQUFTLFNBQzVDLEdBQXdCLEFBQUEsTUFBUixLQUFRLElBQhCLEdBQXdCLEFBQUEsTUFBUixLQUFRLElBQhCLEdBQssQUFBQSxNQUFWLEBQVUsSFBVixBQUNBLEBQUsWUFETixRQUVZLEFBQUEsTUFBWixTQUFZLElBSAsRFBbUIsRFDNIsTFBTyxJQUFJLGVBQUEsRUFBQSxLQUFBLENBQUEsRFDUixpQkFBQSxHQUFrQixJQVVYLEdBQTJCLEdBQJDLEBQUsSUFBSSxpQkFBQSxFQUNWLHFCQUVTLEdBQTZCLEdBQZDLEBQUsSUFBSSxhQUFBLEVBQYsaUJBRMsRFDTSxBQUFBLEBQVYsUUFBVSxLQUFlLEBQUsVUFBYyxhRHFFLMsRhRUYsSUFBbUIsRFBQSxPQUFPLFVBQVUsWUEQjdCLEdBQsQUFBQSxNQUFaLFNBQVksSFBZSxRQUFRLFFBQZDLFFBQVEsUUFBQSxBQUNELEBQUsdJBREsTFFUixTQUFBLEVBQUEsQFBQSxNQUNBLFFBQUsbJBQWCLENBQUEsRUFBSyxPQUMvQixPQUFPLHNCQUFzQixDQUFBLENBQUEsQFBQSxFQUVILEBQUsbJBRXpCLEdBQosTFBTywyQkFDUCxTQUFtQyxFQUFBLENBQUEsRFFNUIsRFBVyxDQUFBLEVBQUEsTUFDakIsSUFBUSxDQUFBLEVBQVEsUUFBUSxTQUFBLEVBQUEsQFDdkIsRUFBSSxHQUFPLEBQUseUJBQXlCLEVBQVEsQFBQSxDQUFBLENBQUEsRUFFNMsQFBQSxFQFSCxHQTRCRixDQUFBLEVHeURTLEdBQXdDLENBQBELElBQUEsUFBSSxFQUFPLEVBQUEsQFBQSxHQUNOLElBQVMsRFBYSxNQUFPLEdBQUEsRFFMIsRFBUyxHQUFPLENBQUEsRUFBQSxHQUFBLENBQpCLEdBQUksRUFBUSxDQUFBLEVBQUEsTUFSWCLFVBQTJCLEVBQWCLEVBQWEsRUFBQSxDQUFBLEdBQUEsRFDcEQsRUFBTyxHQUFQixFQUFRLENBQUEsRUFBQSxNQUNyQyxHQUNKLFNBQVcsRFDVixFQUFLLEBQUEsQUFBQSxHQUdMLEVBQUssTFIQSxNQUdBLEFBQUEsSUFBQSxPQUFBLEBQUwsRUFBVSxLQUFLLEVBQUsQFBQSxFQUFBLEBQRCLEVBOUlQixFQUFPLEVBQVEsQFBQSxFQUFBLEdBRWDLEdBQVEsRUFBTyxHQUFBLEBQpCLEdBQUsRFBQSxDQUFlLEdBQVksQFBQSxFQUMQixFQUlKLElBQVUsRFBSyxFQUFNLEVBQUsQFBQSxFQUMvQixJQUFZLENBQUEsRUFDSixFQUFNLEVBQUsRFBZSxHQUNuQyxFQUFNLEVBQUsRUFDYixFQUNBLENBQUEsRFHSyxDQUFBLEVBRVIsSUFBQSxTQUFJLEVBQUsRUFBQSxDQUFBLEBQgsSFBUSxJQUFPLENBQUEsQFBQSxFQUVQixRQUFBLFNBQVEsRUFBQSxDQUFBLEBQEsUFBUSxRQUFRLEdBQUsQFBQSxDQUFBLENBQUEsRUFFLIsSUFBQSxTQUNDLEVBQEsRUFDQSxFQUFBLENBQUEsRFFTSxHQUFPLEdBQXVCLEdBQUsQFBQSxFQUFRLENBQUEsRUFBQSxHQUMvQyxHQUFNLElBQUEsTUFHVCxHQUFLLElBQUksSFBSyxFQUFNLEVBQVEsQFBQSxFQUFBLEdBQJCLEdBQUEsQFFSCxFQUFNLEVBQVcsQFBQSxHQUdmLEdBQVUsRFBSyxHQUFPLENBQUEsRUFBUSxDQUFBLEVBRTlCLEVBQWlDLElBQVUsSUFBQSxHQUMQyxHQUFnQixFQUFhLElBQVUsRUFBQSxNQUMxQyxHQUFNLEVBQUsRFBUSxFQUNyQixFQUFNLEVBQVUsRFBQSxHQUFRLEdBQpCLEdBRUosRFBRyxFQUFPLENBQUEsRFBQSxDQUFhLElBQWIsUUFBbMsRFBSSxFQUFNLEVBQUsQFBQSxHQUNsRSxNQUFBLEdBQQsRFBWSxDQUFBLEVBQosRFBWSxDQUFBLENBQUEsQFBQSxNQUlaLEdBQUsRUFBTyxLQUFVLEdBRUsQUFBQSxNQUFWLElBQVUsVUFBVixDQUVOLElBRksUUFFaUIsSUFBUSxHQUFNLElBSZDLEdBQUsRUFBTyxHQUFRLEVBQJCLEVBQUsRUFBVSxHQUFBLEdBQVEsRFDakIsRUFFUixlQUFBLFNBQWUsRUFBTyxFQUFBLENBQUEsTUFBQSxBQUVqQixJQUFLLEVBQUsRUFBTyxDQUFBLElBRkQsUUFFdIsSUFBUSxHQUFNLEVBQzFELEdBQUsRUFBVSxHQUFBLEdBQhCLEdBQVksQFBQSxFQUNaLEdBQVksQFBQSxHQUFBLEBRwsRFBTSxFQUFVLEdBRBCLEVBQUsRFBQSxNQUFjLEdBQUsRUFBTSxHQUFBLEVBQzdCLEVBSVIseUJBQUEsUFBeUIsRUFBTyxFQUFBLENBQUEsRFDekIsRFBUSxHQUFPLENBQUEsRUFDZixFQUFPLFFBQVEseUJBQXlCLEVBQUsQFBQSxFQUFBLEBQhELElBQUsQFDTixTQUFBLEdBQEsYUFBQSxBQUFjLEVBQUsSUFBcEIsRFBKQsQUFBVCxJQUFTLFNBQyELFdBQVksRUFBSyxXQUNqQixNQUFPLEVBQUsRUFBQSxDQUxJLEVBUWCLGVBQUEsVUFBQSxDQUNDLEdBQUksRUFBQSxDQUFBLEVBRUwsZUFBQSxTQUFlLEVBQUEsQFBQSxNQUNQLFFBQUsZUFBZSxFQUFNLENBQUEsQFBQSxFQUVwQyxlQUFBLFVBQUEsQFDQyxHQUFJLEVBQUEsQFBQSxDQUFBLEVBUUEsRFBOEMsQFBQSxFQUNwRCxHQUFLLEdBQWEsUFBQyxFQUFLLEVBQUEsQFFdkIsRFBVyxHQUFPLFVBQUEsQFBQSxNQUNqQixXQUFVLEdBQUssVUFBVSxHQUFHLEdBQJCLEVBQUcsTUFBTSxLQUFNLFNBQUEsQFBQSxDQUFBLENBQUEsRUFHeEIsRFBVyxlQUFpQixTQUFTLEVBQUsRUFBQSxDQUFBLEBRBDLElBQVcsSUFBSyxLQUFLLEtBQUsRUFBTyxFQUFBLEBQUsQFBQSxFQUVoRCxHQUFXLElBQUsUFBUyxFQUFPLEVBQUsRUFBQSxDQUFBLEBRSCLElBQVksSUFBSyxLQUFLLEtBQUsRUFBTSxHQUFJLEVBQUsRUFBTyxFQUFNLEVBQUEsQFBQSxFQUFBLEdDcEwRCxJQUFiLFVBQUEsQFBQSxXQUthLEVBQUEsQFBQSxHQUFBLEdBQUEsSFBQSxLQUFBLEVBSlcsRFBQSxLQUFBLEVBQUEsRFFQSxLQUFBLFFBNEJILFNBQUMsRUFBVyxFQUFjLEVBQUEsQFBQSxHQUVQixBQUFBLEBQVQsSUFBUyxZQUFnQyxBQUFBLEBQVgsSUFBVyxXQUFZLENBQUEsRFDekQsRFBYyxFQUNwQixFQUFTLEVBQUEsRFFSCxHQUFPLEVBQUEsTUFDTixVQUVOLEVBQUEsQFBQSxHQUFBLEdBQUEsSFBQSxBQUFBLElBQUEsUUFBQSxHQUFPLEdBQUEsTFBQSxHQUFBLFVBQUEsTFDSixFQUFBLEBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxHQUFBLFVBQUEsRFBQSxNQUVJLEdBQUssUUFBUSxFQUFNLFNBQUMsRUFBQSxDQUFBLEdBQUEsRFBQSxNQUFBLEdBQWCLEdBQUsSFBQSxNQUFBLEVBQUEsQFBSyxFQUFNLENBQUEsRUFBQSxPQUFVLENBQUEsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLENBQUEsRFReEUsRFBQSxHQUprQixBQUFBLEBQVgsSUFBVyxZQUFZLEdBQUksQFBQSxFQUFBLEFBQxDLElBRGtDLFFBQNCLEFBQUEsTUFBbEIsSUFBaIsWUFDMQsRFBSSxDQUFBLEVBSQsRFBWSxDQUFBLEVBQUsQFBQSxHQUNoQixHQUFRLEdBQVcsQFBQSxFQUNuQixFQUFRLEdBQVksRUFBTSxFQUFBLEBQUsRUFDbEMsRUFBQSxHQUFXLEdBQUEsQFFZCxFQUFTLEVBQUsQFBQSxFQUNoQixFQUFBLEVBQVcsUUFBQSxDQUdQLEVBQVUsRFBWSxDQUFBLEVBQJCLEdBQVcsQFBQSxDQUFBLENBQUEsTUFFTSxBQUFBLEBQVosUFBWSxLQUFlLFlBQWtCLFNBQhELEVBQUsSFDYixTQUFBLEVBQUEsQFBQSxNQUNDLElBQWtCLEVBQUsQFBQSxFQUNsQixHQUFjLEVBQVEsQFBQSxDQUFBLEVBRTlCLFNBQUEsRUFBQSxDQUFBLEtBQMsSUFBWSxDQUFBLEVBQsQFBQSxDQUFBLEVBSVQsSUFBaIsRUFBTyxDQUFBLEVBQxCLEdBQWMsRUFBUSxDQUFBLEVBQUEsQFDdkIsRFBQSxDQUFLLEdBQXdCLEFBQUEsTUFBVCxJQUFTLFNBQVUsQFBQSxHQUFBLEFBQzdDLEdBQVMsRUFBTyxDQUFBLEtBRDZCLFFBRWCLEdBQVMsRFDLIsSUFBVyxJQUFTLEdBQUEsUUFDcEIsRUFBSyxHQUFhLEdBQUsRUFBQSxFQUFRLEVBQpDLEVBQWUsQFBQSxHQUNaLEdBQWEsQFBQSxFQUNiLEVBQWMsQFBQSxFQUNwQixHQUFVLFNBQUEsRUFBVyxFQUEQixFQUFNLEVBQVEsRUFBRyxDQUFBLEVBQxFLEVBQWMsRUFBRyxDQUFBLENBQUEsQFBQSxNQUVYLEVBQUEsQFDRCxHQUFJLEdBQUksQFBQSxDQUFBLEVBQUEsSFBQSxtQkFHMEIsUFDekMsRUFDQSxFQUFBLENBQUEsRFHbIsQUFBQSxNQUFULElBQVMsVFBVCxNQUNILFVBQUMsRUFBQSxDQUFBLEBQUEsRFBQSxVQUFBLEBQWUsRUFBQSxNQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsQFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLEVBQUEsRFBQSxVQUFBLEdBQUEsTUFDdEIsRFBSyxtQkFBbUIsRUFBTyxTQUFDLEVBQUEsQFBQSxNQUFlLEdBQUEsTUFBQSxPQUFBLENBQUssQFBQSxFQUFBLEBQVUsQFBQSxDQUFBLENBQUEsQFBQSxDQUFBLEVBQUEsRFHNUQsRFBaIsRUFDaEIsRUFBUyxFQUFLLFFBQVEsRUFBTSxFQUFNLFNBQUMsRUFBWSxFQUFBLENBQBELEVBQVUsRUFDVixFQUFpQixDQUFBLENBQUEsRUFBQSxNQUdLLEFBQUEsTFBWixTQUFZLEtBQWUsWUFBaIsUFDaEQsRUFBTyxLQUFLLFNBQUEsRUFBQSxDQUFBLEBQWEsQFBQyxFQUFXLEVBQVUsQFBQSxDQUFBLENBQUEsRUFFaEQsQFBQyxFQUFRLEVBQVUsQFBQSxDQUFBLEVBNUdRLEFBQUEsTUFBdkIsSUFBUSxZQUFlLFdBQpDLEtBQUssYFBYyxFQUFRLFVBQUEsRUFDTSxBQUFBLEBQXZCLElBQVEsWUFBZSxXQUNqQyxLQUFLLGNBQWMsRUFBUSxVQUFBLENBQUEsQFBQSxHQUFBLEdBQUEsRUFBQSxVQUFBLEBQUEsRERzdCLFlBQUEsUFBaUMsRUFBQSxDQUMzQixHQUFZLENBQUEsRFBTyxHQUFJLENBQUEsRUFDeEIsRFBUSxDQUFBLEdBQUsRFBTyxHQUFRLENBQUEsRFBQSxHQUMQixHQUFRLEdBQVcsSUFBQSxFQUNuQixFQUFRLEdBQVksSFBTSxFQUFBLEBQUsRUFBQSxNQUNQyxHQUFNLElBQWEsRUFBQSxHQUNuQixHQUFXLENBQUEsRUFDSixDQUFBLEVBQUEsRUFHUixZQUFBLFNBQMsRUFDQSxFQUFBLENBQUEsRFFTSxHQUFvQixHQUFVLEVBQWMsSUFLbkMsRUFBUyxFQUFqQixFQUFBLEBQAsSUFBaIsRUFBTyxDQUFBLEVBQxCLEdBQUEsTFBeUIsQFBQSxDQUFBLEVBQUEsRUFRakMsYFBQSxTQUFjLEVBQUEsQFBQSxLQUNSLEVBQWMsQFBQSxFQUFBLEVBUBCLGNBQUEsUFBYyxFQUFBLENBQQsRFBQSxDQUFVLElBQIsRFBSSxFQUFBLEVBQUEsSFFQSxFQUFjLENBQUEsRUFBQSxFQUdwQixhQUFBLFNBQWtDLEVBQVMsRUFBQSxDQUFBLEdBRRDLEdBQUEsSUFDQyxFQUFJLEVBQVEsTFBUyxFQUFHLEdBQUssRUFBRyxJQUFLLENBQUEsRFDbkMsRFBUSxFQUFRLEdBQUEsRFDSSxBQUFQixFQUFNLEtBQUssUFBVyxHQUFrQixBQUFiLEVBQUsSFBTyxVQUFXLENBQRELEVBQUsRUFBTSxNQUFBLEtBQUEsQFBQSxDQUYLEVBQUEsSUFDSCxHQUFVLEVBQVEsTUFBTSxFQUFJLENBQUEsRFBQSxHQUdQixHQUFtQixHQUFVLFNBQUEsRUFBVyxFQUFBLEBQzFDLElBQVEsQFBQSxFQUVKLEVBQWlCLEVBQUsQFBQSxFQUdQixLQUFLLFFBQVEsRUFBTSxTQUFDLEVBQUEsQFBQSxNQUMxQixHQUFpQixFQUFPLENBQUEsQFBQSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBMwzQixFTVpNLEdBQVEsRFBSSxJQXFCTCxHQUFvQixHQUFNLFFBTzFCLEdBQTBDLEdBQUsbUJBQWCLEtBQyFLEVBQUEsRUFRWSxHQUFnQixHQUFNLGNBQWMsSFBSyxFQUFBLEVBUXpDLEdBQWdCLEdBQUsYFBYyxLQUFLLEVBQUEsRUFPekMsRFBZSxHQUFNLGFBQWEsSFBSyxFQUFBLEVBTXZDLEdBQWMsRFBTSxZQUFZLEtBQUssRUFBQSxFQVVyQyxHQUFjLEdBQUsWUFBWSxLQUFLLEVBQUEsRUFBQSxHQUFBLEdFdkZsRCxPQUErQixnQNTTixFQUFBLENBQUEsRFBQSxHQUNJLEdBQVMsVUFBQSxDQUFBLEBQxDLElBQzBCLEFBQUEsTUFBakIsSUFBaUIsVFBYSxFQUFBLEVBQWlCLEVBQUEsRUFDdEQsQFBQSxDQUFBLEVBSFEsRUFBQSxFQUFBLEdBTVosTUFBTyxDQUFBLEVBQUEsRFFTCxHQUFZLFNBQUMsRUFBQSxDQUNQixFQUFaLEFBQUEsTUFBWixJQUFZLFdBQXdCLEdBQVEsQFBQSxFQUNQyxHQUFPLENBQUEsQFBQSxDQUFBLEVBQZCLENBQUEsQFBQSxDQUFBLENBQUEsQNQlAsTFBZIsVFDaEIsRFBdUIsbJBaJQixHQUFNLElBQWMsQFBQyxDQUFFLFdBQVUsYUFBZMsQFDLQsRFBTSxDQUFFLFFBQUsUFBVSxHQUFXLEVBQUsRUFDekMsQFBRSxRQUFPLFNBQVEsTFBTSxhQUFjLEVBRWpDLENBQUMsRUFBTyxHQUFZLEdBQVMsRUFBUyxLQUFLLFFBQVEsUUFBUyxHQUFHLENBQUMsRUFDcEUsQFBQyxFQUFXLEdBQWdCLEdBQVMsRUFBSyxFQUVQyxFQUFVLEdBQUcsRUFBUyxRQUFRLEdBQWEsQFBSyxJQUNwRCxFQUFlLElBQVksRUFBUyxJQUFNLENBQUMsRUFBTSxRQUFRLENBQUsRUFHNUQsRUFBVSxHQUNkLElBQUsRUFBTSxRQUFRLEVBQVMsRFBSSxFQUFJLEVBRXJDLENBQUMsRUFBUyxHQUFJLENBQUsQFDdkIsRUFDTSxFQUFhLEFBQUsRFBcUIsMEJBQzdDLEdBQUsRFBVSxLQUFNLEdBQUsTFBTyxFQUFTLEdBQUksQFBUSxFQUNRCxBQUFLLEVBRgsSUFBSSxXQUFPLDBCQUEwQixHQUFTLEVBQzlDLEVBQWEsRUFBSyxHQUhsQixHQUFJLFdBQUsdUJBQXVCLDBCQUEQixDQUtwRSxHQUVBLEBQUsaUJBQUMsTFBSSxVQUFVLFFBQIsZJBQUMsTFBSSxVQUFVLFFBQIsZJBQUMsTFBSSxVQUFVLFdBQVcsSUFBSyxVQUFXLEBQVcsQFDdkQsRUFDQSxnQkFBQyxPQUFJLFVBQVUsUUFDWixFQUNDLGdCQUFDLElBQMsVUFBVyxlQUFJLENBQUUsUUFBUyxDQUFDLENBQWEsQFBQyxFQUNQyxTQUFVLEFBQUMsRFBUSxFQUFTLEVBQUksTFBTyxLQUFLLEVBQzVDLEBQUsRUFDVCxFQUVBLGdCQUFDLFlBQUsQFBTSxDQUVqQixFQUNBLGdCQUFDLEBQUksVUFBVSxXQUNiLGdCQUFDLElBQMsUUFBUSxNQUNSLEtBQUsRUFDTixRQUFTLElBQVksMEJBQCLEdBQUksRFDSixBQUFLLEdBQVUsSFBTSxHQUFNLEtBQUssRUFBUyxFQUFFLElBQpDLEdBQUksVFBTyxHQUFHLEVBQVMsYUFBYSxHQUFTLENBRWpELEdBQYsRUFDQSxnQkFBQyxJQUNDLFFBQVEsTUFDUixLQUFNLEVBQVksRUFBWSxFQUMQixRQUFTLElBQVksMEJBQCLEFBQUksRUFDRixBQUFJLEVBQYsQUFBSSxJQUFZLEVBQVMsRFDdkIsSFBTSxHQUFXLENBQUsRUFFeEIsRUFBYSxFQUFLLEVBRBCLEdBQUksVFBTyxQkFBdUIscUJBQXlCLEVBRzdELEVBQWEsRUFBSSxDQUVyQixHQUNGLEVBQEsZJBQUMsSUFDQyxRQUFRLFVBQIsSFBTSxFQUNOLFFBQVMsSUFBWSwwQkFDbkIsQUFBSSxNQUFNLEdBQUsTFBTyxFQUFTLEVBQUUsSUFDaEMsRFBSSxXQUFPLEdBQUcsRUFBUywQkFBNkIsQFFeEQsRFDRixDQUNGLENBQYsQFFSixFQUVPLEdBQVEsRFFVCxHQUFXLEFBQYsRFLRyxDQUNILEdBQWDLEtBQTNCLFdBQVMsUUFBaIsRUFBVCxLQUFTLEVBQVQsQFBbEIsVUFBUyxTQUNqQixNQUNFLGlCQUFDLGtCQUNLLEdBREwsQFFQyxVQUFXLGVBQUksQFBRSxDQUFDLEBQVMsRFBVSxDQUFDLENBQUMsQFBUSxDQUFDLEVBQhELHdCQUFQixDQUFFLEBQVEsQFBSyxHQUMxQyxDQUVKLEVBRUsRFBTyxBQUNYLEdBSUcsZJBQUMsZUFBUyxXQUFXLFFBQVEsSFBTSxHQUFPLEVBQUsRUZoSHRELEdBQWEsRUFHYixHQUFNLElBQVcsSUFBYSxDQUMQixHQUFNLEdBQVMsVUFBVSxFQUNQixFQUEwQixDQUFDLEVBQzdCLEBQVcsSFBUSxDQUFDLFFBQVMsUFBVSxPQUFRLFdBQVcsRUFDeEQsRUFBTyxNQUFNLEVBQIsZUFBUSxFQUFRLEVBQUsRUFBRSxFQUNQixFQUFRLEdBQVEsRUFBTyxVQUVQixNQUFPLEVBQQsRUFFYSxHQUFVLEdBQJCLElBQYsRUFFTSxHQUFpQixRQUVGLEdBQXJCLGFBQXlDLFNBQUsQFDNMsWUFBbUIsRUFBdUIsRUFBYyxDQUNRCxNQUFNLEVBQUsRFBRyxFQURDLGNBQXVCLFlBRXhDLEtBQUssUUFBUSxRQUFRLEdBQUcsUFBWSxFQUNwQyxLQUFLLFFBQVEsVFBVyxDQUFDLGCQUFvQixxQkFBcUIsQFBQyxDQUNyRSxDQUVBLEFBQUsUUFBUyxnQFDYixLQUFLLFVBQVUsTUFBTSxFQUNyQixFQUFTLEBQAsZJBQUMsRFBUSxTQUFSLENBQMsTUFBTyxDQUFFLEBQUsSFBSyxPQUFPLFlBQWEsTUFBTyxHQUFTLENBQUUsRFFMQsZJBQUMsSUFBTSxLQUFNLEtBQUssSFBTSxDQUMxQixFQUNBLEtBQUssUFDUCxDQUNGLEdBQEsUFBVSxDQUNSLEVBQVMsdUJBQXVCLEtBQUssUFBUyxDQUNoRCxDQUNGLEVBQsRFBZIsQFBQyxFQUFhLElBQxDLEVBQUUsSFBSyxjQUFjLEVBQUUsSUFBSSxFQUNQixHQUFRLENBQUMsQFBRSxVQUEQixDQUMQyxHQUFJLElBQVMsUUFBUyxLQUFNLElBQUksVFBVSxxQkFBcUIsRUFFLQsRFBTSxDQUFFLFNBQVUsRFBVyxFQUFPLEVBQzlCLENBQUMsRUFBUSxHQUFhLEdBQVMsRUFBRSxFQUNqQyxDQUFDLEVBQVUsRFBZSxHQUFTLEdBQUksSUFBcUIsRUFDNUQsRUFBTSxHQUNWLElBQUsQFDSixHQUFJLEdBQUsRUFDUCxPQUFPLEVBQVMsRUFBTyxLQUFLLEVBQUUsTUFBTSxHQUFHLEVBQUksQFBQyxFQUFHLENBQUMsQFBSSxFQUFHLEdBQVEsRUFFLQsSUFBSSxDQUFDLENBQUUsVUFBVyxDQUFvQixFQUNQyxNQUFLLElBQVEsRUFBSSxLQUFLLEVBQWEsRUFDNUIsQFDVCxFQUVBLENBQUMsRUFBUSxFQUFNLENBQVEsQFDekIsRUFDQSxVQUFVLElBQUsQFDZCxHQUFNLEdBQVcsRUFBTSxHQUFHLFVBQVcsQFBQyxFQUFNLElBQzFDLEVBQVksQUFBQyxHQUFVLENBQJCLEFBQUksRUFDRixFQUFTLFFBQVEsQUFBQyxHQUNoQixFQUFNLElBQUksRUFBSyxHQUFNLElBQUksQFBRSxHQUFLLEdBQUssQFBQyxDQUNQyxFQUNHLEVBQUsSUFBSSxHQUFpQixHQUFNLElBQUksRUFBYyxHQUFLLEdBQUssQFBQyxDQUNyRSxDQUFDLENBQgsRUFDQSxNQUFPLElBQUsRUFBTSxPQUFPLENBQVEsQFFcEMsRUFBRyxDQUFDLENBQUssQFBQyxFQUdSLGdDQUNFLGdCQUFDLEBQUksVUFBVSxVQUNiLGdCQUFDLFNBQMsSFBSyxPQUNMLFlBQVksUFDWixNQUFPLEVBQAsUFBVSxBQUFDLEdBQVEsRUFBVSxFQUFJLEBQUsSFBSyxFQUMvQyxDQUNGLEVBQEsZJBQUMsTFBSSxVQUFVLFNBQosRUFBSSxJQUFJLEFBQUMsRFBUyxDQTFHMIsUUEyRUsRFBTSxHQUNILEBQVMsSUFBSSxFQUFLLEVBQUUsSUFBcEIsTFBeUIsRFBTSxNQUFTLElBQUksRUFBYyxJQUEzQixPQUFnQyxHQUNsRSxNQUNFLGlCQUFDLElBQMsUFBVSxFQUNWLFFBQVMsRUFDVCxJQUFLLEVBQUssRFBSyxFQUNqQixDQUVKLENBQUMsQFDSCxDQUNGLENBRUosRTlDMZPLEdBQUsSUFBbUMsQFDOUMsVFBWSxHQUNaLFVBQVcsRFDWCxjQUFlLEdBQUksSFBSSxDQUFDLEtBQUssQFBQyxFQUMQixQkFBMEIsRFDMUIsYUFBYyxHQUNkLFdBQVksRUFDZCxFQUVhLEdBQUsYUFBKIsbJBQWlCLENBRJELFlBQVksRUFBVSxFQUFnQixDQUNwQyxNQUFNLEVBQUssQFBTSxFQUNqQixLQUFLLEBQVMsQFDaEIsQFFQSxTQUFnQixDQUNkLEdBQUsQFBRSxlQUFnQixLQUVQixLQUFLLFlBQVksTUFBTSxFQUVQixHQUFJLFlBQVEsQFBVyxFQUFFLFdBQVcsRUFBRSxRQUFRLGdCQUFnQixFQUMRCxHQUFJLFlBQVEsQFBVyxFQUNwQixRQUNDLDRKQUNGLEVBQMsVUFBVSxBQUFDLEdBQUsQFDakIsRUFBRyxTQUFTLEtBQUssTFBTyxTQUFTLFNBQVMsRUFBRSxTQUFTLEFBQUsRFBVSxQkFDcEUsSFBSyxPQUFPLFNBQVMsVUFBWSxFQUNqQyxLQUFNLEBQUssTFBTyxhQUFhLENBQpDLEVBQUMsQFDSCxDQUFDLEVBQgsRFBSSxZQUFRLENBQVcsRUFDcEIsUUFBUSwQFBOEMsRUFDdEQsUUFDQyxTEFFRixFQUNDLFVBQVUsQUFBQyxHQUFPLENBQpCLEVBQUcsUFBUyxLQUFLLEBQUsUFBUyxVQUFVLEVBQUUsUFBUyxBQUFPLEdBQVUsdJBQJFLEtBQUssTFBTyxTQUFTLFdBQWEsRUFDbEMsSFBTSxNQUFLLEBQUsYUFBYSxDQUNqQyxFQUFDLENBQgsQFBQyxFQUNILEdBQUksWUFBUSxDQUFXLEVBQBCLFFBQVEsNkJBQTZCLEVBQJDLFFBQMscVBQYsRUFDQyxVQUFVLEFBQUMsRFBTyxDQUNqQixFQUFHLFNBQVMsSFBSyxPQUFPLFNBQVMsdJBQXdCLEVBQUUsUFDekQsQUFBTyxHQUFVLHdCQUNmLEtBQUssTFBTyxTQUFTLHlCQUEyQixFQUNoRCxLQUFNLEBQUssTFBTyxhQUFhLENBQpDLEVBQYsQFDRixDQUFDLEVBQgsRFBSSxZQUFRLENBQVcsRUFDcEIsUUFBUSxvQFBbMsRUFDNUMsVUFBVSxBQUFDLEdBQUsQFDakIsRUFBRyxTQUFTLEtBQUssTFBTyxTQUFTLFlBQVksRUFBRSxTQUMQyxBQUFPLEdBQVUsdJBQYsSFBSyxPQUFPLFNBQVMsYUFBZSxFQUNwQyxLQUFNLEBQUssTFBTyxhQUFhLENBQpDLEVBQYsQFDRixDQUFDLEVBRUgsSFBSyxhQUFhLEVBQxCLEdBQUksWUFBUSxDQUFXLEVBQBCLFFBQVEsWUFBWSxFQUNwQixRQUFRLGdDQUFnQyxFQUNQyxVQUFVLEFBQUMsRFDVixFQUNHLGNBQWMsUFBUyxFQUNQixRQUFRLElBQUsRFBSSxJQUFhLEtBQUssTUFBTSxFQUFFLEtBQUssQFBQyxDQUNRCxFQUdGLEdBQUsRFBbUIsVUFBVSxDQUNqQyxJQUFLLENBQUMsMkJBQTRCLDZCQUEQixDQUNqRSxDQUFDLEVBQQsRFBSSxZQUFRLEtBQUssVFBVyxFQUNQixXQUFXLEVBQgsUUFBUSxjQUFjLEVBQRCLGVBQWUsQUFBQyxHQUNmLEVBQcsUUFBUSxlQUFlLEVBQZCLFdBQVcsYFBYyxFQUNQixRQUFRLElBQUsSFBSyxPQUFPLFlBQVksWUFBWSxDQUFDLENBQhELEVBQMsZUFBZSxBQUFDLEdBQYsRUFDRyxRQUFRLGCQUFvQixFQUMQixXQUFXLGdCQUFnQixFQUMzQixRQUFRLElBQVksdJBQCLEtBQUssTFBTyxZQUFZLHdCQUNQixLQUFNLElBQVcsQFBRSxTQUFVLEdBQUsTFBUSxNQUFPLENBQUMsRUFDbkQsRUFDRixFQUNBLEtBQUsTUFBSyxPQUFPLFlBQVksVUFBVSxFQUNQyxLQUFLLGtCQUFrQixDQUFnQixDQUNQyxFQUFDLENBQwsRUFDQyxlQUFlLEFBQUMsRFDZixFQUNHLFFBQVEsUUFBUSxFQUNoQixXQUFXLHFCQUFxQixFQUNoQyxRQUFRLElBQVksdJBQCLEtBQUsTUFBSyxPQUFPLFlBQVksVUFBVSxFQUNQyxLQUFLLGtCQUFrQixDQUFnQixFQUNQyxHQUFJLFdBQUsdUJBQXVCLENBQBDLEVBQUMsQFDTCxFQUNDLEtBQMsQUFBQyxHQUNDLFlBQVMsYFDVCxFQUFFLGVBQWUsQUFBQyxHQUNoQixFQUNHLFFBQVEsUUFBUSxFQUNoQixXQUFXLGCQUFtQixFQUMQixRQUFRLElBQAsSFBSyxJQUFJLGCQUNQLEtBQUssTFBTyxZQUFZLGNBQzFCLENBQYsQFDSixDQUNKLEVBQYsSFBSyxZQUFZLFlBQVksQFBZIsRUFDNMsSFBSyxrQkFBaIsQFBZIsQFDekMsQFFQSxBQUFRLGlCQUFpQixFQUFnQixFQUFrQixDQUNRCxNQUFPLEdBQVEsVUFBVSxBQUFDLEdBQUsQFDLIsRUFBRyxTQUFTLENBQUMsSFBSyxPQUFPLFNBQVMsYFBYyxJQUFJLENBQUsQFBQyxFQUFFLFNBQzNELEFBQUsRFBVSxQkFDZixBQUFJLEVBQYsSFBSyxPQUFPLFNBQVMsYFBYyxPQUFPLENBQUsRUFFaEQsSFBSyxPQUFPLFNBQVMsYFBYyxJQUFJLENBQUsRUFFLMsSFBTSxNQUFLLEBQUsYUFBYSxDQUNqQyxFQUNGLEVBQEsRUFBRyxTQUFTLFFBQVEsYUFBYyxrQkFBaIsYUFBaIsQFDeEUsQFBQyxDQUNILENBQEsYFBcUIsQFDbkIsRFBTSxDQUFFLGVBQWdCLEtBRWxCLEVBQWEsQFDakIsRUFDQSxFQUNBLElBRUEsSFBSyxpQkFDSCxFQUNBLEdBQUksWUFBUSxDQUFXLEVBQUUsUUFBUSxDQUFJLEVBQUUsUUFBUSxlQUFlLENBQUsQFBQyxDQUNRSxFQUVGLEdBQUksWUFBUSxLQUFLLFdBQVcsRUFBRSxXQUFXLEVBQUUsUUFBUSxZQUFZLEVBRSELEVBQVcsTUFBTyxTQUFVLEFBQUMsRFDMIsRUFBRyxTQUFTLElBQUssQFDZixLQUFNLHFCQUNOLEtBQUsaJBQIsQFBQyxDQUNILEVBQEsRUFBVyxNQUFPLDRCQUEQixBQUFDLEdBQzlDLEVBQUcsVFDRCwrREFDRixDQUNGLENBQYsQFFQSxrQkFBaIsRUFBZMsQFDaEQsQUFBSSxFQUFZLGNBQWMsRFBRyxFQUFZLEBQUsRUFFbkQsRFBTSxHQUFvQixBQUFDLEdBQpCLENBQUMsaUJBQWlCLEtBQUssQFBSSxHQUMzQixLQUFLLEBQUsWUFBWSxpQkFBaUIsQFBSSxFQUMvQyxHQUFJLFlBQVEsQFBVyxFQUNwQixRQUFRLGCQUFtQixFQUMzQixRQUFRLGCQUFxQixHQUFxQixLQUFLLElBQUksQFBQyxFQUMRCxLQUFLLEFBQUMsRFBTSxDQUNYLEdBQUksRFBaUMsSFDbkMsRUFBOEIsSFDaEMsRUFBRSxRQUFRLEFBQUMsRFBUSxDQUNqQixFQUNHLGVBQWUsWUFBWSxFQUMzQixTQUFTLEFBQUMsRFBUyxDQUNsQixHQUFNLEdBQVksRUFBaIsQFBSSxFQUNQyxFQUFJLFFBQVEsWUFBWSxVQUFXLENBQUMsQFBQyxHQUFRLENBQVMsRUFDdEQsVFBUSxZQUFZLEVBQRCLENBQUMsRUFDQSxLQUFLLEFBQUMsRFBUSxFQUFJLFFBQVEsUFBUyxvQkFBbIsQFBQyxFQUNRCxFQUFRLENBQIsQFBQyxFQUFFLFVBQQsQUFBQyxHQUNDLEdBQcsTFBTyxFQUNQLFFBQVEsaJBQWtCLEVBQzFCLFFBQVEsSUFBTSxDQUNiLEdBQUsRFBVyxpQkFBTyxXQUNQixHQUFJLEVBQUMsRUFDTCxJQUFJLEVBQWtCLENBQVEsRUFBRyxDQUMvQixHQUFJLFdBQUsdUJBQXVCLEVBQxDLEBQYsQFDQSxLQUFLLHNCQUNILEVBQEsQFDRixFQUFFLFVBQVUsZUFBZSxFQUMzQixXQUFPLFNBQVMsSUFDbEIsQFBQyxFQUNGLEVBQVMsRUFFZCxDQUNGLENBQUMsRUFFSCxLQUFLLEBQUsWUFBWSxnQkFBZIsUUFBUSxBQUFDLEdBQyDLEtBQUsscJBQXNCLEVBQUsQFBVyxDQUMQyxDQUNGLENBQEscJBQXNCLEVBQWMsRUFBMEIsQFDNUQsRFBTSxHQUFVLEdBQUksWUFBUSxDQUFXLEVBQBDLFFBQVEsQFBSSxFQUNaLFFBQMsZUFBZSxBQUFDLEdBQUsQFDckIsRUFBRyxXQUFXLHNDQUFzQyxFQUNwRCxFQUFHLFNBQVMsSUFBSSxFQUNoQixFQUFHLFdBQVcsbJBQWCLEVBQxDLEdBQWlCLFFBQVEsQFBQyxFQUFLLEVBQUsSUFBUSxDQUMQyxFQUFHLFNBQVMsTFBUSxDQUFFLEtBQUsQFBSSxDQUFDLEVBQzdCLEVBQUksTFBUyxJQUFNLEdBQUsRUFBRyxXQUFXLElBQUksQFDbEQsQFBQyxDQUNILENBQUMsQFDSCxFQUNDLFVBQVUsQUFBQyxHQUNWLEVBQcsUUFBUSxlQUFlLEVBQZCLFdBQVcsYFBYyxFQUNQixRQUFRLElBQUsSFBSyxPQUFPLFlBQVksWUFBWSxDQUFJLENBQUMsQFDNUQsRUFDQyxVQUFVLEFBQUMsRFDVixFQUNHLFFBQVEsWUFBWSxFQUNwQixXQUFXLHdCQUFQixFQUNuQyxRQUFRLElBQVMsdJBQhCLFlBQUssTFBTyxZQUFZLGFBQRCLEVBQEsSFBTSxJQUFXLENBQYsUFBVSxHQUNWLEBQVEsRUFDVixDQUFDLENBQgsRFDRixDQUNKLEVBQMsVUFBVSxBQUFDLEdBQYsRUFDRyxRQUFRLEBQUsRUFDZixXQUFXLFFBQVEsRUFDbkIsVFBVyxFQUNYLFFBQVEsSUFBTSxDQUNiLEtBQUssTFBTyxZQUFZLEBQUsQFBQyxFQUFHLElBQUsRUFBRSxPQUFTLENBQUksRUFDeEQsRUFBWSxZQUFZLEVBQVEsUFBUyxDQUMzQyxDQUFDLENBQwsRUFDQyxVQUFVLEFBQUMsRFDVixFQUNHLFFBQVEsWUFBWSxFQUNwQixXQUFXLGNBQWMsRUFDekIsTFBTyxFQUNQLFFBQVEsSUFBTSxHQUFJLElBQVksSFBSyxPQUFRLENBQUksRUFBRSxLQUFLLENBQUMsQFDNUQsRUFDQyxLQUFLLEFBQUMsRFDTCxHQUFTLEVBQUUsVUFBVyxBQUFPLEdBQVEsdJBQDLEdBQUksQFBQyxFQUFJLGFBQWMsQFDckIsRFBSSxXQUFPLDZCQUEQixFQUNQyxNQUNGLENBQEsSFBSyxPQUFPLFlBQVksYUFBYSxFQUFNLEVBQUksYUFBYSxLQUFLLENBQFLEVBQUMsQFDSCxFQUNGLFlBQUssaUJBQWlCLEVBQUsQFBTyxFQUMQixDQUNULENBQYsRUFFTSxHQUFXLENBQUMsRUFBaUIsSUFBNEMsQFDNUsRFBTSxHQUFnQixXQUNQixFQUFHLGlCQUFpQixXQUFZLEFBQUMsRFBUSxDQUNQyxFQUFJLGVBQWUsRUFDbEIsRUFBSSxjQUEQixTQUFTLENBQWEsQFDMQsQFBQyxFQUNELEVBQUcsaUJBQWlCLEBQVEsQUFBQyxHQUFRLENBQDLEVBQUksZUFBZSxFQUNsQixFQUFJLGNBQThCLFlBQVksQFBYSxFQUMRCxFQUFlLENBQUcsQFDcEIsQFBQyxFQUNELEVBQUcsaUJBQWlCLFlBQWEsQUFBQyxHQUFRLENBQhDLEVBQUksZUFBZSxFQUNsQixFQUFJLGNBQThCLFlBQVksQFBYSxDQUMRCxDQUFDLENBQgsRTdCLRBLEdBQUsSUFDSixjQUVtQixHQUFyQixhQUFvQyxVQUFPLENBQTNDLGtDQUNFLGNBQTJCLEdBRTNCLGlCQUFjLEdBQUksSUFBWSxJQUFJLEVBRWxDLGCQUFpQixHQUFxQixJQUFJLEVBQzFDLGtCQUFlLEdBQWCLElBQUksRUFFdEMsdUJBQXVDLEdBQXFCLElBQUksRUFpQmhFLFNBQUsRFBTyxLQUFLLFlBQWEsSUFBSSxFQUNuQyxtQkFBZIsRFBSSxJQUFjLElBQUksRUFkdEMsYFDRSxFQUNBLEVBQUsQFDZixHQUFJLEBQUsSUFBVSxVQUFZLEVBQyCLEBQUsTUFBSyxhQUFhLEVBQUsQFBUSxFQUNuQyxHQUFJLFlBQWlCLGFBQzFCLEBQUsTUFBSyxlQUFlLENBQUssRUFFaEMsSFBTSxJQUFJLFdBQVUscUNBQXFDLENBRTdELENBSEsQUFBTSxRQUFTLGdDQUNiLFFBQVEsSUFBSSxQkFBeUIsRUFFckMsSFBTSxNQUFLLGFBQWEsRUFDeEIsSFBTSxJQUFlLElBQUksRUFDekIsSFBTSxNQUFLLFlBQVksVUFBVSxFQUVoQyxRQUFPLElBQVksSFBSyxNQUNQixLQUFLLFNBQVMsSUFBTyxPQUFPLElBQVksTUFBVSxFQUVwRCxLQUFLLHNCQUFzQixHQUFJLElBQWUsSUFBSSxDQUFDLEVBQELEdBQWCLElBQUksRUFDeEIsRFBZIsSUFBSSxFQUVwQixLQUFLLGNBQWMsRFBSSxJQUFpQixLQUFLLElBQUssSUFBSSxDQUFDLENBQpELEdBTUEsQUFBTSxjQUFlLGdDQUNuQixHQUFJLEdBQVUsSFBTSxNQUFLLFNBQVMsRUFDbEMsQUFBSSxHQUNHLEdBQWUsVUFDbEIsTUFBUSxHQUFlLFNBRXpCLEtBQUssUFBVyxZQUNYLEtBQUssVUFDTCxHQUZXLENBRQsYFBZSxFQUFPLGNBQxCLEdBQUksSFBSSxFQUFPLGFBQWEsRUFDNUIsSFBSyxTQUFTLGFBQBCLEdBRUosRFFQSxBQUFNLGNBQWUsZNBQCLEtBQUsTUFBSyxTQUFTLFNBQYsSFBSyxVQURVLENBRWxCLGNBQWUsQFBQyxHQUFHLEtBQUssUFBUyxhQUFhLENBQhELEVBQUMsQFDSCxHQUNGIiwKICAibmFtZXMiOiBbXQpCg==
